// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2020.1 (lin64) Build 2902540 Wed May 27 19:54:35 MDT 2020
// Date        : Fri Sep 22 17:11:20 2023
// Host        : endcap-tf2 running 64-bit Ubuntu 18.04.6 LTS
// Command     : write_verilog -force -mode funcsim -rename_top c2c_gth_in_system_ibert_0 -prefix
//               c2c_gth_in_system_ibert_0_ c2c_gth_in_system_ibert_0_sim_netlist.v
// Design      : c2c_gth_in_system_ibert_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xcku15p-ffva1760-2-e
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* CHECK_LICENSE_TYPE = "c2c_gth_in_system_ibert_0,in_system_ibert,{}" *) (* X_CORE_INFO = "in_system_ibert,Vivado 2020.1" *) (* dont_touch = "true" *) 
(* NotValidForBitStream *)
module c2c_gth_in_system_ibert_0
   (drpclk_o,
    gt0_drpen_o,
    gt0_drpwe_o,
    gt0_drpaddr_o,
    gt0_drpdi_o,
    gt0_drprdy_i,
    gt0_drpdo_i,
    gt1_drpen_o,
    gt1_drpwe_o,
    gt1_drpaddr_o,
    gt1_drpdi_o,
    gt1_drprdy_i,
    gt1_drpdo_i,
    eyescanreset_o,
    rxrate_o,
    txdiffctrl_o,
    txprecursor_o,
    txpostcursor_o,
    rxlpmen_o,
    rxrate_i,
    txdiffctrl_i,
    txprecursor_i,
    txpostcursor_i,
    rxlpmen_i,
    drpclk_i,
    rxoutclk_i,
    clk);
  output [1:0]drpclk_o;
  output [0:0]gt0_drpen_o;
  output [0:0]gt0_drpwe_o;
  output [9:0]gt0_drpaddr_o;
  output [15:0]gt0_drpdi_o;
  input [0:0]gt0_drprdy_i;
  input [15:0]gt0_drpdo_i;
  output [0:0]gt1_drpen_o;
  output [0:0]gt1_drpwe_o;
  output [9:0]gt1_drpaddr_o;
  output [15:0]gt1_drpdi_o;
  input [0:0]gt1_drprdy_i;
  input [15:0]gt1_drpdo_i;
  output [1:0]eyescanreset_o;
  output [5:0]rxrate_o;
  output [9:0]txdiffctrl_o;
  output [9:0]txprecursor_o;
  output [9:0]txpostcursor_o;
  output [1:0]rxlpmen_o;
  input [5:0]rxrate_i;
  input [9:0]txdiffctrl_i;
  input [9:0]txprecursor_i;
  input [9:0]txpostcursor_i;
  input [1:0]rxlpmen_i;
  input [1:0]drpclk_i;
  input [1:0]rxoutclk_i;
  input clk;

  wire clk;
  wire [1:0]drpclk_i;
  wire [1:0]drpclk_o;
  wire [1:0]eyescanreset_o;
  wire [9:0]gt0_drpaddr_o;
  wire [15:0]gt0_drpdi_o;
  wire [15:0]gt0_drpdo_i;
  wire [0:0]gt0_drpen_o;
  wire [0:0]gt0_drprdy_i;
  wire [0:0]gt0_drpwe_o;
  wire [9:0]gt1_drpaddr_o;
  wire [15:0]gt1_drpdi_o;
  wire [15:0]gt1_drpdo_i;
  wire [0:0]gt1_drpen_o;
  wire [0:0]gt1_drprdy_i;
  wire [0:0]gt1_drpwe_o;
  wire [1:0]rxlpmen_i;
  wire [1:0]rxlpmen_o;
  wire [1:0]rxoutclk_i;
  wire [5:0]rxrate_i;
  wire [5:0]rxrate_o;
  wire [9:0]txdiffctrl_i;
  wire [9:0]txdiffctrl_o;
  wire [9:0]txpostcursor_i;
  wire [9:0]txpostcursor_o;
  wire [9:0]txprecursor_i;
  wire [9:0]txprecursor_o;
  wire NLW_inst_gt100_drpen_o_UNCONNECTED;
  wire NLW_inst_gt100_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt101_drpen_o_UNCONNECTED;
  wire NLW_inst_gt101_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt102_drpen_o_UNCONNECTED;
  wire NLW_inst_gt102_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt103_drpen_o_UNCONNECTED;
  wire NLW_inst_gt103_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt104_drpen_o_UNCONNECTED;
  wire NLW_inst_gt104_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt105_drpen_o_UNCONNECTED;
  wire NLW_inst_gt105_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt106_drpen_o_UNCONNECTED;
  wire NLW_inst_gt106_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt107_drpen_o_UNCONNECTED;
  wire NLW_inst_gt107_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt108_drpen_o_UNCONNECTED;
  wire NLW_inst_gt108_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt109_drpen_o_UNCONNECTED;
  wire NLW_inst_gt109_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt10_drpen_o_UNCONNECTED;
  wire NLW_inst_gt10_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt110_drpen_o_UNCONNECTED;
  wire NLW_inst_gt110_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt111_drpen_o_UNCONNECTED;
  wire NLW_inst_gt111_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt112_drpen_o_UNCONNECTED;
  wire NLW_inst_gt112_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt113_drpen_o_UNCONNECTED;
  wire NLW_inst_gt113_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt114_drpen_o_UNCONNECTED;
  wire NLW_inst_gt114_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt115_drpen_o_UNCONNECTED;
  wire NLW_inst_gt115_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt116_drpen_o_UNCONNECTED;
  wire NLW_inst_gt116_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt117_drpen_o_UNCONNECTED;
  wire NLW_inst_gt117_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt118_drpen_o_UNCONNECTED;
  wire NLW_inst_gt118_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt119_drpen_o_UNCONNECTED;
  wire NLW_inst_gt119_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt11_drpen_o_UNCONNECTED;
  wire NLW_inst_gt11_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt120_drpen_o_UNCONNECTED;
  wire NLW_inst_gt120_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt121_drpen_o_UNCONNECTED;
  wire NLW_inst_gt121_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt122_drpen_o_UNCONNECTED;
  wire NLW_inst_gt122_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt123_drpen_o_UNCONNECTED;
  wire NLW_inst_gt123_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt124_drpen_o_UNCONNECTED;
  wire NLW_inst_gt124_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt125_drpen_o_UNCONNECTED;
  wire NLW_inst_gt125_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt126_drpen_o_UNCONNECTED;
  wire NLW_inst_gt126_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt127_drpen_o_UNCONNECTED;
  wire NLW_inst_gt127_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt128_drpen_o_UNCONNECTED;
  wire NLW_inst_gt128_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt129_drpen_o_UNCONNECTED;
  wire NLW_inst_gt129_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt12_drpen_o_UNCONNECTED;
  wire NLW_inst_gt12_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt130_drpen_o_UNCONNECTED;
  wire NLW_inst_gt130_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt131_drpen_o_UNCONNECTED;
  wire NLW_inst_gt131_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt13_drpen_o_UNCONNECTED;
  wire NLW_inst_gt13_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt14_drpen_o_UNCONNECTED;
  wire NLW_inst_gt14_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt15_drpen_o_UNCONNECTED;
  wire NLW_inst_gt15_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt16_drpen_o_UNCONNECTED;
  wire NLW_inst_gt16_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt17_drpen_o_UNCONNECTED;
  wire NLW_inst_gt17_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt18_drpen_o_UNCONNECTED;
  wire NLW_inst_gt18_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt19_drpen_o_UNCONNECTED;
  wire NLW_inst_gt19_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt20_drpen_o_UNCONNECTED;
  wire NLW_inst_gt20_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt21_drpen_o_UNCONNECTED;
  wire NLW_inst_gt21_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt22_drpen_o_UNCONNECTED;
  wire NLW_inst_gt22_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt23_drpen_o_UNCONNECTED;
  wire NLW_inst_gt23_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt24_drpen_o_UNCONNECTED;
  wire NLW_inst_gt24_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt25_drpen_o_UNCONNECTED;
  wire NLW_inst_gt25_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt26_drpen_o_UNCONNECTED;
  wire NLW_inst_gt26_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt27_drpen_o_UNCONNECTED;
  wire NLW_inst_gt27_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt28_drpen_o_UNCONNECTED;
  wire NLW_inst_gt28_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt29_drpen_o_UNCONNECTED;
  wire NLW_inst_gt29_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt2_drpen_o_UNCONNECTED;
  wire NLW_inst_gt2_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt30_drpen_o_UNCONNECTED;
  wire NLW_inst_gt30_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt31_drpen_o_UNCONNECTED;
  wire NLW_inst_gt31_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt32_drpen_o_UNCONNECTED;
  wire NLW_inst_gt32_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt33_drpen_o_UNCONNECTED;
  wire NLW_inst_gt33_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt34_drpen_o_UNCONNECTED;
  wire NLW_inst_gt34_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt35_drpen_o_UNCONNECTED;
  wire NLW_inst_gt35_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt36_drpen_o_UNCONNECTED;
  wire NLW_inst_gt36_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt37_drpen_o_UNCONNECTED;
  wire NLW_inst_gt37_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt38_drpen_o_UNCONNECTED;
  wire NLW_inst_gt38_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt39_drpen_o_UNCONNECTED;
  wire NLW_inst_gt39_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt3_drpen_o_UNCONNECTED;
  wire NLW_inst_gt3_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt40_drpen_o_UNCONNECTED;
  wire NLW_inst_gt40_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt41_drpen_o_UNCONNECTED;
  wire NLW_inst_gt41_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt42_drpen_o_UNCONNECTED;
  wire NLW_inst_gt42_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt43_drpen_o_UNCONNECTED;
  wire NLW_inst_gt43_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt44_drpen_o_UNCONNECTED;
  wire NLW_inst_gt44_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt45_drpen_o_UNCONNECTED;
  wire NLW_inst_gt45_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt46_drpen_o_UNCONNECTED;
  wire NLW_inst_gt46_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt47_drpen_o_UNCONNECTED;
  wire NLW_inst_gt47_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt48_drpen_o_UNCONNECTED;
  wire NLW_inst_gt48_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt49_drpen_o_UNCONNECTED;
  wire NLW_inst_gt49_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt4_drpen_o_UNCONNECTED;
  wire NLW_inst_gt4_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt50_drpen_o_UNCONNECTED;
  wire NLW_inst_gt50_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt51_drpen_o_UNCONNECTED;
  wire NLW_inst_gt51_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt52_drpen_o_UNCONNECTED;
  wire NLW_inst_gt52_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt53_drpen_o_UNCONNECTED;
  wire NLW_inst_gt53_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt54_drpen_o_UNCONNECTED;
  wire NLW_inst_gt54_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt55_drpen_o_UNCONNECTED;
  wire NLW_inst_gt55_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt56_drpen_o_UNCONNECTED;
  wire NLW_inst_gt56_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt57_drpen_o_UNCONNECTED;
  wire NLW_inst_gt57_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt58_drpen_o_UNCONNECTED;
  wire NLW_inst_gt58_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt59_drpen_o_UNCONNECTED;
  wire NLW_inst_gt59_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt5_drpen_o_UNCONNECTED;
  wire NLW_inst_gt5_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt60_drpen_o_UNCONNECTED;
  wire NLW_inst_gt60_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt61_drpen_o_UNCONNECTED;
  wire NLW_inst_gt61_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt62_drpen_o_UNCONNECTED;
  wire NLW_inst_gt62_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt63_drpen_o_UNCONNECTED;
  wire NLW_inst_gt63_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt64_drpen_o_UNCONNECTED;
  wire NLW_inst_gt64_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt65_drpen_o_UNCONNECTED;
  wire NLW_inst_gt65_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt66_drpen_o_UNCONNECTED;
  wire NLW_inst_gt66_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt67_drpen_o_UNCONNECTED;
  wire NLW_inst_gt67_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt68_drpen_o_UNCONNECTED;
  wire NLW_inst_gt68_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt69_drpen_o_UNCONNECTED;
  wire NLW_inst_gt69_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt6_drpen_o_UNCONNECTED;
  wire NLW_inst_gt6_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt70_drpen_o_UNCONNECTED;
  wire NLW_inst_gt70_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt71_drpen_o_UNCONNECTED;
  wire NLW_inst_gt71_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt72_drpen_o_UNCONNECTED;
  wire NLW_inst_gt72_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt73_drpen_o_UNCONNECTED;
  wire NLW_inst_gt73_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt74_drpen_o_UNCONNECTED;
  wire NLW_inst_gt74_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt75_drpen_o_UNCONNECTED;
  wire NLW_inst_gt75_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt76_drpen_o_UNCONNECTED;
  wire NLW_inst_gt76_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt77_drpen_o_UNCONNECTED;
  wire NLW_inst_gt77_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt78_drpen_o_UNCONNECTED;
  wire NLW_inst_gt78_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt79_drpen_o_UNCONNECTED;
  wire NLW_inst_gt79_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt7_drpen_o_UNCONNECTED;
  wire NLW_inst_gt7_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt80_drpen_o_UNCONNECTED;
  wire NLW_inst_gt80_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt81_drpen_o_UNCONNECTED;
  wire NLW_inst_gt81_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt82_drpen_o_UNCONNECTED;
  wire NLW_inst_gt82_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt83_drpen_o_UNCONNECTED;
  wire NLW_inst_gt83_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt84_drpen_o_UNCONNECTED;
  wire NLW_inst_gt84_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt85_drpen_o_UNCONNECTED;
  wire NLW_inst_gt85_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt86_drpen_o_UNCONNECTED;
  wire NLW_inst_gt86_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt87_drpen_o_UNCONNECTED;
  wire NLW_inst_gt87_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt88_drpen_o_UNCONNECTED;
  wire NLW_inst_gt88_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt89_drpen_o_UNCONNECTED;
  wire NLW_inst_gt89_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt8_drpen_o_UNCONNECTED;
  wire NLW_inst_gt8_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt90_drpen_o_UNCONNECTED;
  wire NLW_inst_gt90_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt91_drpen_o_UNCONNECTED;
  wire NLW_inst_gt91_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt92_drpen_o_UNCONNECTED;
  wire NLW_inst_gt92_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt93_drpen_o_UNCONNECTED;
  wire NLW_inst_gt93_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt94_drpen_o_UNCONNECTED;
  wire NLW_inst_gt94_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt95_drpen_o_UNCONNECTED;
  wire NLW_inst_gt95_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt96_drpen_o_UNCONNECTED;
  wire NLW_inst_gt96_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt97_drpen_o_UNCONNECTED;
  wire NLW_inst_gt97_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt98_drpen_o_UNCONNECTED;
  wire NLW_inst_gt98_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt99_drpen_o_UNCONNECTED;
  wire NLW_inst_gt99_drpwe_o_UNCONNECTED;
  wire NLW_inst_gt9_drpen_o_UNCONNECTED;
  wire NLW_inst_gt9_drpwe_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt100_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt100_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt101_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt101_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt102_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt102_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt103_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt103_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt104_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt104_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt105_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt105_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt106_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt106_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt107_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt107_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt108_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt108_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt109_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt109_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt10_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt10_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt110_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt110_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt111_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt111_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt112_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt112_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt113_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt113_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt114_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt114_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt115_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt115_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt116_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt116_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt117_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt117_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt118_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt118_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt119_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt119_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt11_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt11_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt120_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt120_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt121_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt121_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt122_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt122_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt123_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt123_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt124_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt124_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt125_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt125_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt126_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt126_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt127_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt127_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt128_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt128_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt129_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt129_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt12_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt12_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt130_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt130_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt131_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt131_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt13_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt13_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt14_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt14_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt15_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt15_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt16_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt16_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt17_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt17_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt18_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt18_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt19_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt19_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt20_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt20_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt21_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt21_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt22_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt22_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt23_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt23_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt24_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt24_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt25_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt25_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt26_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt26_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt27_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt27_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt28_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt28_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt29_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt29_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt2_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt2_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt30_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt30_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt31_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt31_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt32_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt32_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt33_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt33_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt34_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt34_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt35_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt35_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt36_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt36_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt37_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt37_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt38_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt38_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt39_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt39_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt3_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt3_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt40_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt40_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt41_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt41_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt42_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt42_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt43_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt43_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt44_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt44_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt45_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt45_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt46_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt46_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt47_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt47_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt48_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt48_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt49_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt49_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt4_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt4_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt50_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt50_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt51_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt51_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt52_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt52_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt53_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt53_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt54_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt54_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt55_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt55_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt56_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt56_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt57_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt57_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt58_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt58_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt59_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt59_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt5_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt5_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt60_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt60_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt61_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt61_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt62_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt62_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt63_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt63_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt64_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt64_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt65_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt65_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt66_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt66_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt67_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt67_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt68_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt68_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt69_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt69_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt6_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt6_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt70_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt70_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt71_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt71_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt72_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt72_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt73_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt73_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt74_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt74_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt75_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt75_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt76_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt76_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt77_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt77_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt78_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt78_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt79_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt79_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt7_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt7_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt80_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt80_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt81_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt81_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt82_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt82_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt83_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt83_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt84_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt84_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt85_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt85_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt86_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt86_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt87_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt87_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt88_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt88_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt89_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt89_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt8_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt8_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt90_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt90_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt91_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt91_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt92_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt92_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt93_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt93_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt94_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt94_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt95_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt95_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt96_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt96_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt97_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt97_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt98_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt98_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt99_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt99_drpdi_o_UNCONNECTED;
  wire [9:0]NLW_inst_gt9_drpaddr_o_UNCONNECTED;
  wire [15:0]NLW_inst_gt9_drpdi_o_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport0_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport1_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport10_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport100_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport101_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport102_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport103_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport104_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport105_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport106_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport107_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport108_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport109_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport11_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport110_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport111_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport112_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport113_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport114_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport115_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport116_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport117_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport118_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport119_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport12_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport120_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport121_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport122_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport123_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport124_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport125_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport126_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport127_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport128_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport129_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport13_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport130_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport131_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport14_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport15_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport16_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport17_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport18_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport19_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport2_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport20_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport21_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport22_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport23_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport24_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport25_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport26_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport27_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport28_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport29_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport3_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport30_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport31_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport32_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport33_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport34_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport35_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport36_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport37_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport38_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport39_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport4_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport40_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport41_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport42_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport43_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport44_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport45_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport46_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport47_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport48_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport49_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport5_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport50_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport51_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport52_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport53_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport54_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport55_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport56_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport57_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport58_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport59_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport6_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport60_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport61_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport62_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport63_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport64_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport65_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport66_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport67_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport68_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport69_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport7_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport70_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport71_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport72_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport73_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport74_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport75_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport76_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport77_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport78_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport79_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport8_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport80_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport81_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport82_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport83_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport84_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport85_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport86_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport87_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport88_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport89_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport9_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport90_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport91_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport92_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport93_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport94_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport95_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport96_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport97_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport98_UNCONNECTED;
  wire [16:0]NLW_inst_sl_oport99_UNCONNECTED;

  (* C_BUILD_REVISION = "0" *) 
  (* C_COMPONENT_NAME = "c2c_gth_in_system_ibert_0" *) 
  (* C_CORE_MAJOR_VER = "3" *) 
  (* C_CORE_MINOR_VER = "0" *) 
  (* C_DRPADDR_WIDTH = "10" *) 
  (* C_ENABLE_INPUT_PORTS = "1" *) 
  (* C_GTS_USED = "X0Y0" *) 
  (* C_GT_COORDINATE = "2112'b
  (* C_GT_COORDINATE_0 = "16'b0000000000011000" *) 
  (* C_GT_COORDINATE_1 = "16'b0000000000011001" *) 
  (* C_GT_COORDINATE_10 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_100 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_101 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_102 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_103 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_104 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_105 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_106 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_107 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_108 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_109 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_11 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_110 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_111 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_112 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_113 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_114 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_115 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_116 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_117 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_118 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_119 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_12 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_120 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_121 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_122 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_123 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_124 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_125 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_126 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_127 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_128 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_129 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_13 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_130 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_131 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_14 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_15 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_16 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_17 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_18 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_19 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_2 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_20 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_21 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_22 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_23 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_24 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_25 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_26 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_27 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_28 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_29 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_3 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_30 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_31 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_32 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_33 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_34 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_35 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_36 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_37 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_38 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_39 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_4 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_40 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_41 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_42 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_43 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_44 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_45 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_46 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_47 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_48 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_49 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_5 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_50 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_51 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_52 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_53 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_54 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_55 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_56 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_57 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_58 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_59 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_6 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_60 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_61 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_62 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_63 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_64 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_65 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_66 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_67 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_68 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_69 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_7 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_70 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_71 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_72 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_73 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_74 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_75 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_76 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_77 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_78 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_79 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_8 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_80 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_81 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_82 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_83 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_84 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_85 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_86 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_87 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_88 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_89 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_9 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_90 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_91 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_92 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_93 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_94 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_95 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_96 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_97 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_98 = "16'b0000000000000000" *) 
  (* C_GT_COORDINATE_99 = "16'b0000000000000000" *) 
  (* C_GT_TYPE = "GTHE4" *) 
  (* C_NUM_GT = "2" *) 
  (* C_QUAD_NUMBER = "2112'b
  (* C_QUAD_NUMBER_0 = "16'b0000000011100110" *) 
  (* C_QUAD_NUMBER_1 = "16'b0000000011100110" *) 
  (* C_QUAD_NUMBER_10 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_100 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_101 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_102 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_103 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_104 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_105 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_106 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_107 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_108 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_109 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_11 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_110 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_111 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_112 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_113 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_114 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_115 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_116 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_117 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_118 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_119 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_12 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_120 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_121 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_122 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_123 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_124 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_125 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_126 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_127 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_128 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_129 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_13 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_130 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_131 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_14 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_15 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_16 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_17 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_18 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_19 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_2 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_20 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_21 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_22 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_23 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_24 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_25 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_26 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_27 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_28 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_29 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_3 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_30 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_31 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_32 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_33 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_34 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_35 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_36 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_37 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_38 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_39 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_4 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_40 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_41 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_42 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_43 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_44 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_45 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_46 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_47 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_48 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_49 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_5 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_50 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_51 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_52 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_53 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_54 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_55 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_56 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_57 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_58 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_59 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_6 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_60 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_61 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_62 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_63 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_64 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_65 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_66 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_67 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_68 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_69 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_7 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_70 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_71 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_72 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_73 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_74 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_75 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_76 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_77 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_78 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_79 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_8 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_80 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_81 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_82 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_83 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_84 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_85 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_86 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_87 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_88 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_89 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_9 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_90 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_91 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_92 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_93 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_94 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_95 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_96 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_97 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_98 = "16'b0000000000000000" *) 
  (* C_QUAD_NUMBER_99 = "16'b0000000000000000" *) 
  (* C_TXDIFFCTRL_WIDTH = "5" *) 
  (* C_USE_MDM = "0" *) 
  (* C_XDEVICEFAMILY = "kintexuplus" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* syn_noprune = "1" *) 
  c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_in_system_ibert inst
       (.clk(clk),
        .drpclk_i(drpclk_i),
        .drpclk_o(drpclk_o),
        .eyescanreset_o(eyescanreset_o),
        .gt0_drpaddr_o(gt0_drpaddr_o),
        .gt0_drpdi_o(gt0_drpdi_o),
        .gt0_drpdo_i(gt0_drpdo_i),
        .gt0_drpen_o(gt0_drpen_o),
        .gt0_drprdy_i(gt0_drprdy_i),
        .gt0_drpwe_o(gt0_drpwe_o),
        .gt100_drpaddr_o(NLW_inst_gt100_drpaddr_o_UNCONNECTED[9:0]),
        .gt100_drpdi_o(NLW_inst_gt100_drpdi_o_UNCONNECTED[15:0]),
        .gt100_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt100_drpen_o(NLW_inst_gt100_drpen_o_UNCONNECTED),
        .gt100_drprdy_i(1'b0),
        .gt100_drpwe_o(NLW_inst_gt100_drpwe_o_UNCONNECTED),
        .gt101_drpaddr_o(NLW_inst_gt101_drpaddr_o_UNCONNECTED[9:0]),
        .gt101_drpdi_o(NLW_inst_gt101_drpdi_o_UNCONNECTED[15:0]),
        .gt101_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt101_drpen_o(NLW_inst_gt101_drpen_o_UNCONNECTED),
        .gt101_drprdy_i(1'b0),
        .gt101_drpwe_o(NLW_inst_gt101_drpwe_o_UNCONNECTED),
        .gt102_drpaddr_o(NLW_inst_gt102_drpaddr_o_UNCONNECTED[9:0]),
        .gt102_drpdi_o(NLW_inst_gt102_drpdi_o_UNCONNECTED[15:0]),
        .gt102_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt102_drpen_o(NLW_inst_gt102_drpen_o_UNCONNECTED),
        .gt102_drprdy_i(1'b0),
        .gt102_drpwe_o(NLW_inst_gt102_drpwe_o_UNCONNECTED),
        .gt103_drpaddr_o(NLW_inst_gt103_drpaddr_o_UNCONNECTED[9:0]),
        .gt103_drpdi_o(NLW_inst_gt103_drpdi_o_UNCONNECTED[15:0]),
        .gt103_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt103_drpen_o(NLW_inst_gt103_drpen_o_UNCONNECTED),
        .gt103_drprdy_i(1'b0),
        .gt103_drpwe_o(NLW_inst_gt103_drpwe_o_UNCONNECTED),
        .gt104_drpaddr_o(NLW_inst_gt104_drpaddr_o_UNCONNECTED[9:0]),
        .gt104_drpdi_o(NLW_inst_gt104_drpdi_o_UNCONNECTED[15:0]),
        .gt104_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt104_drpen_o(NLW_inst_gt104_drpen_o_UNCONNECTED),
        .gt104_drprdy_i(1'b0),
        .gt104_drpwe_o(NLW_inst_gt104_drpwe_o_UNCONNECTED),
        .gt105_drpaddr_o(NLW_inst_gt105_drpaddr_o_UNCONNECTED[9:0]),
        .gt105_drpdi_o(NLW_inst_gt105_drpdi_o_UNCONNECTED[15:0]),
        .gt105_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt105_drpen_o(NLW_inst_gt105_drpen_o_UNCONNECTED),
        .gt105_drprdy_i(1'b0),
        .gt105_drpwe_o(NLW_inst_gt105_drpwe_o_UNCONNECTED),
        .gt106_drpaddr_o(NLW_inst_gt106_drpaddr_o_UNCONNECTED[9:0]),
        .gt106_drpdi_o(NLW_inst_gt106_drpdi_o_UNCONNECTED[15:0]),
        .gt106_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt106_drpen_o(NLW_inst_gt106_drpen_o_UNCONNECTED),
        .gt106_drprdy_i(1'b0),
        .gt106_drpwe_o(NLW_inst_gt106_drpwe_o_UNCONNECTED),
        .gt107_drpaddr_o(NLW_inst_gt107_drpaddr_o_UNCONNECTED[9:0]),
        .gt107_drpdi_o(NLW_inst_gt107_drpdi_o_UNCONNECTED[15:0]),
        .gt107_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt107_drpen_o(NLW_inst_gt107_drpen_o_UNCONNECTED),
        .gt107_drprdy_i(1'b0),
        .gt107_drpwe_o(NLW_inst_gt107_drpwe_o_UNCONNECTED),
        .gt108_drpaddr_o(NLW_inst_gt108_drpaddr_o_UNCONNECTED[9:0]),
        .gt108_drpdi_o(NLW_inst_gt108_drpdi_o_UNCONNECTED[15:0]),
        .gt108_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt108_drpen_o(NLW_inst_gt108_drpen_o_UNCONNECTED),
        .gt108_drprdy_i(1'b0),
        .gt108_drpwe_o(NLW_inst_gt108_drpwe_o_UNCONNECTED),
        .gt109_drpaddr_o(NLW_inst_gt109_drpaddr_o_UNCONNECTED[9:0]),
        .gt109_drpdi_o(NLW_inst_gt109_drpdi_o_UNCONNECTED[15:0]),
        .gt109_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt109_drpen_o(NLW_inst_gt109_drpen_o_UNCONNECTED),
        .gt109_drprdy_i(1'b0),
        .gt109_drpwe_o(NLW_inst_gt109_drpwe_o_UNCONNECTED),
        .gt10_drpaddr_o(NLW_inst_gt10_drpaddr_o_UNCONNECTED[9:0]),
        .gt10_drpdi_o(NLW_inst_gt10_drpdi_o_UNCONNECTED[15:0]),
        .gt10_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt10_drpen_o(NLW_inst_gt10_drpen_o_UNCONNECTED),
        .gt10_drprdy_i(1'b0),
        .gt10_drpwe_o(NLW_inst_gt10_drpwe_o_UNCONNECTED),
        .gt110_drpaddr_o(NLW_inst_gt110_drpaddr_o_UNCONNECTED[9:0]),
        .gt110_drpdi_o(NLW_inst_gt110_drpdi_o_UNCONNECTED[15:0]),
        .gt110_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt110_drpen_o(NLW_inst_gt110_drpen_o_UNCONNECTED),
        .gt110_drprdy_i(1'b0),
        .gt110_drpwe_o(NLW_inst_gt110_drpwe_o_UNCONNECTED),
        .gt111_drpaddr_o(NLW_inst_gt111_drpaddr_o_UNCONNECTED[9:0]),
        .gt111_drpdi_o(NLW_inst_gt111_drpdi_o_UNCONNECTED[15:0]),
        .gt111_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt111_drpen_o(NLW_inst_gt111_drpen_o_UNCONNECTED),
        .gt111_drprdy_i(1'b0),
        .gt111_drpwe_o(NLW_inst_gt111_drpwe_o_UNCONNECTED),
        .gt112_drpaddr_o(NLW_inst_gt112_drpaddr_o_UNCONNECTED[9:0]),
        .gt112_drpdi_o(NLW_inst_gt112_drpdi_o_UNCONNECTED[15:0]),
        .gt112_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt112_drpen_o(NLW_inst_gt112_drpen_o_UNCONNECTED),
        .gt112_drprdy_i(1'b0),
        .gt112_drpwe_o(NLW_inst_gt112_drpwe_o_UNCONNECTED),
        .gt113_drpaddr_o(NLW_inst_gt113_drpaddr_o_UNCONNECTED[9:0]),
        .gt113_drpdi_o(NLW_inst_gt113_drpdi_o_UNCONNECTED[15:0]),
        .gt113_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt113_drpen_o(NLW_inst_gt113_drpen_o_UNCONNECTED),
        .gt113_drprdy_i(1'b0),
        .gt113_drpwe_o(NLW_inst_gt113_drpwe_o_UNCONNECTED),
        .gt114_drpaddr_o(NLW_inst_gt114_drpaddr_o_UNCONNECTED[9:0]),
        .gt114_drpdi_o(NLW_inst_gt114_drpdi_o_UNCONNECTED[15:0]),
        .gt114_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt114_drpen_o(NLW_inst_gt114_drpen_o_UNCONNECTED),
        .gt114_drprdy_i(1'b0),
        .gt114_drpwe_o(NLW_inst_gt114_drpwe_o_UNCONNECTED),
        .gt115_drpaddr_o(NLW_inst_gt115_drpaddr_o_UNCONNECTED[9:0]),
        .gt115_drpdi_o(NLW_inst_gt115_drpdi_o_UNCONNECTED[15:0]),
        .gt115_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt115_drpen_o(NLW_inst_gt115_drpen_o_UNCONNECTED),
        .gt115_drprdy_i(1'b0),
        .gt115_drpwe_o(NLW_inst_gt115_drpwe_o_UNCONNECTED),
        .gt116_drpaddr_o(NLW_inst_gt116_drpaddr_o_UNCONNECTED[9:0]),
        .gt116_drpdi_o(NLW_inst_gt116_drpdi_o_UNCONNECTED[15:0]),
        .gt116_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt116_drpen_o(NLW_inst_gt116_drpen_o_UNCONNECTED),
        .gt116_drprdy_i(1'b0),
        .gt116_drpwe_o(NLW_inst_gt116_drpwe_o_UNCONNECTED),
        .gt117_drpaddr_o(NLW_inst_gt117_drpaddr_o_UNCONNECTED[9:0]),
        .gt117_drpdi_o(NLW_inst_gt117_drpdi_o_UNCONNECTED[15:0]),
        .gt117_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt117_drpen_o(NLW_inst_gt117_drpen_o_UNCONNECTED),
        .gt117_drprdy_i(1'b0),
        .gt117_drpwe_o(NLW_inst_gt117_drpwe_o_UNCONNECTED),
        .gt118_drpaddr_o(NLW_inst_gt118_drpaddr_o_UNCONNECTED[9:0]),
        .gt118_drpdi_o(NLW_inst_gt118_drpdi_o_UNCONNECTED[15:0]),
        .gt118_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt118_drpen_o(NLW_inst_gt118_drpen_o_UNCONNECTED),
        .gt118_drprdy_i(1'b0),
        .gt118_drpwe_o(NLW_inst_gt118_drpwe_o_UNCONNECTED),
        .gt119_drpaddr_o(NLW_inst_gt119_drpaddr_o_UNCONNECTED[9:0]),
        .gt119_drpdi_o(NLW_inst_gt119_drpdi_o_UNCONNECTED[15:0]),
        .gt119_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt119_drpen_o(NLW_inst_gt119_drpen_o_UNCONNECTED),
        .gt119_drprdy_i(1'b0),
        .gt119_drpwe_o(NLW_inst_gt119_drpwe_o_UNCONNECTED),
        .gt11_drpaddr_o(NLW_inst_gt11_drpaddr_o_UNCONNECTED[9:0]),
        .gt11_drpdi_o(NLW_inst_gt11_drpdi_o_UNCONNECTED[15:0]),
        .gt11_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt11_drpen_o(NLW_inst_gt11_drpen_o_UNCONNECTED),
        .gt11_drprdy_i(1'b0),
        .gt11_drpwe_o(NLW_inst_gt11_drpwe_o_UNCONNECTED),
        .gt120_drpaddr_o(NLW_inst_gt120_drpaddr_o_UNCONNECTED[9:0]),
        .gt120_drpdi_o(NLW_inst_gt120_drpdi_o_UNCONNECTED[15:0]),
        .gt120_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt120_drpen_o(NLW_inst_gt120_drpen_o_UNCONNECTED),
        .gt120_drprdy_i(1'b0),
        .gt120_drpwe_o(NLW_inst_gt120_drpwe_o_UNCONNECTED),
        .gt121_drpaddr_o(NLW_inst_gt121_drpaddr_o_UNCONNECTED[9:0]),
        .gt121_drpdi_o(NLW_inst_gt121_drpdi_o_UNCONNECTED[15:0]),
        .gt121_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt121_drpen_o(NLW_inst_gt121_drpen_o_UNCONNECTED),
        .gt121_drprdy_i(1'b0),
        .gt121_drpwe_o(NLW_inst_gt121_drpwe_o_UNCONNECTED),
        .gt122_drpaddr_o(NLW_inst_gt122_drpaddr_o_UNCONNECTED[9:0]),
        .gt122_drpdi_o(NLW_inst_gt122_drpdi_o_UNCONNECTED[15:0]),
        .gt122_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt122_drpen_o(NLW_inst_gt122_drpen_o_UNCONNECTED),
        .gt122_drprdy_i(1'b0),
        .gt122_drpwe_o(NLW_inst_gt122_drpwe_o_UNCONNECTED),
        .gt123_drpaddr_o(NLW_inst_gt123_drpaddr_o_UNCONNECTED[9:0]),
        .gt123_drpdi_o(NLW_inst_gt123_drpdi_o_UNCONNECTED[15:0]),
        .gt123_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt123_drpen_o(NLW_inst_gt123_drpen_o_UNCONNECTED),
        .gt123_drprdy_i(1'b0),
        .gt123_drpwe_o(NLW_inst_gt123_drpwe_o_UNCONNECTED),
        .gt124_drpaddr_o(NLW_inst_gt124_drpaddr_o_UNCONNECTED[9:0]),
        .gt124_drpdi_o(NLW_inst_gt124_drpdi_o_UNCONNECTED[15:0]),
        .gt124_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt124_drpen_o(NLW_inst_gt124_drpen_o_UNCONNECTED),
        .gt124_drprdy_i(1'b0),
        .gt124_drpwe_o(NLW_inst_gt124_drpwe_o_UNCONNECTED),
        .gt125_drpaddr_o(NLW_inst_gt125_drpaddr_o_UNCONNECTED[9:0]),
        .gt125_drpdi_o(NLW_inst_gt125_drpdi_o_UNCONNECTED[15:0]),
        .gt125_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt125_drpen_o(NLW_inst_gt125_drpen_o_UNCONNECTED),
        .gt125_drprdy_i(1'b0),
        .gt125_drpwe_o(NLW_inst_gt125_drpwe_o_UNCONNECTED),
        .gt126_drpaddr_o(NLW_inst_gt126_drpaddr_o_UNCONNECTED[9:0]),
        .gt126_drpdi_o(NLW_inst_gt126_drpdi_o_UNCONNECTED[15:0]),
        .gt126_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt126_drpen_o(NLW_inst_gt126_drpen_o_UNCONNECTED),
        .gt126_drprdy_i(1'b0),
        .gt126_drpwe_o(NLW_inst_gt126_drpwe_o_UNCONNECTED),
        .gt127_drpaddr_o(NLW_inst_gt127_drpaddr_o_UNCONNECTED[9:0]),
        .gt127_drpdi_o(NLW_inst_gt127_drpdi_o_UNCONNECTED[15:0]),
        .gt127_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt127_drpen_o(NLW_inst_gt127_drpen_o_UNCONNECTED),
        .gt127_drprdy_i(1'b0),
        .gt127_drpwe_o(NLW_inst_gt127_drpwe_o_UNCONNECTED),
        .gt128_drpaddr_o(NLW_inst_gt128_drpaddr_o_UNCONNECTED[9:0]),
        .gt128_drpdi_o(NLW_inst_gt128_drpdi_o_UNCONNECTED[15:0]),
        .gt128_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt128_drpen_o(NLW_inst_gt128_drpen_o_UNCONNECTED),
        .gt128_drprdy_i(1'b0),
        .gt128_drpwe_o(NLW_inst_gt128_drpwe_o_UNCONNECTED),
        .gt129_drpaddr_o(NLW_inst_gt129_drpaddr_o_UNCONNECTED[9:0]),
        .gt129_drpdi_o(NLW_inst_gt129_drpdi_o_UNCONNECTED[15:0]),
        .gt129_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt129_drpen_o(NLW_inst_gt129_drpen_o_UNCONNECTED),
        .gt129_drprdy_i(1'b0),
        .gt129_drpwe_o(NLW_inst_gt129_drpwe_o_UNCONNECTED),
        .gt12_drpaddr_o(NLW_inst_gt12_drpaddr_o_UNCONNECTED[9:0]),
        .gt12_drpdi_o(NLW_inst_gt12_drpdi_o_UNCONNECTED[15:0]),
        .gt12_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt12_drpen_o(NLW_inst_gt12_drpen_o_UNCONNECTED),
        .gt12_drprdy_i(1'b0),
        .gt12_drpwe_o(NLW_inst_gt12_drpwe_o_UNCONNECTED),
        .gt130_drpaddr_o(NLW_inst_gt130_drpaddr_o_UNCONNECTED[9:0]),
        .gt130_drpdi_o(NLW_inst_gt130_drpdi_o_UNCONNECTED[15:0]),
        .gt130_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt130_drpen_o(NLW_inst_gt130_drpen_o_UNCONNECTED),
        .gt130_drprdy_i(1'b0),
        .gt130_drpwe_o(NLW_inst_gt130_drpwe_o_UNCONNECTED),
        .gt131_drpaddr_o(NLW_inst_gt131_drpaddr_o_UNCONNECTED[9:0]),
        .gt131_drpdi_o(NLW_inst_gt131_drpdi_o_UNCONNECTED[15:0]),
        .gt131_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt131_drpen_o(NLW_inst_gt131_drpen_o_UNCONNECTED),
        .gt131_drprdy_i(1'b0),
        .gt131_drpwe_o(NLW_inst_gt131_drpwe_o_UNCONNECTED),
        .gt13_drpaddr_o(NLW_inst_gt13_drpaddr_o_UNCONNECTED[9:0]),
        .gt13_drpdi_o(NLW_inst_gt13_drpdi_o_UNCONNECTED[15:0]),
        .gt13_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt13_drpen_o(NLW_inst_gt13_drpen_o_UNCONNECTED),
        .gt13_drprdy_i(1'b0),
        .gt13_drpwe_o(NLW_inst_gt13_drpwe_o_UNCONNECTED),
        .gt14_drpaddr_o(NLW_inst_gt14_drpaddr_o_UNCONNECTED[9:0]),
        .gt14_drpdi_o(NLW_inst_gt14_drpdi_o_UNCONNECTED[15:0]),
        .gt14_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt14_drpen_o(NLW_inst_gt14_drpen_o_UNCONNECTED),
        .gt14_drprdy_i(1'b0),
        .gt14_drpwe_o(NLW_inst_gt14_drpwe_o_UNCONNECTED),
        .gt15_drpaddr_o(NLW_inst_gt15_drpaddr_o_UNCONNECTED[9:0]),
        .gt15_drpdi_o(NLW_inst_gt15_drpdi_o_UNCONNECTED[15:0]),
        .gt15_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt15_drpen_o(NLW_inst_gt15_drpen_o_UNCONNECTED),
        .gt15_drprdy_i(1'b0),
        .gt15_drpwe_o(NLW_inst_gt15_drpwe_o_UNCONNECTED),
        .gt16_drpaddr_o(NLW_inst_gt16_drpaddr_o_UNCONNECTED[9:0]),
        .gt16_drpdi_o(NLW_inst_gt16_drpdi_o_UNCONNECTED[15:0]),
        .gt16_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt16_drpen_o(NLW_inst_gt16_drpen_o_UNCONNECTED),
        .gt16_drprdy_i(1'b0),
        .gt16_drpwe_o(NLW_inst_gt16_drpwe_o_UNCONNECTED),
        .gt17_drpaddr_o(NLW_inst_gt17_drpaddr_o_UNCONNECTED[9:0]),
        .gt17_drpdi_o(NLW_inst_gt17_drpdi_o_UNCONNECTED[15:0]),
        .gt17_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt17_drpen_o(NLW_inst_gt17_drpen_o_UNCONNECTED),
        .gt17_drprdy_i(1'b0),
        .gt17_drpwe_o(NLW_inst_gt17_drpwe_o_UNCONNECTED),
        .gt18_drpaddr_o(NLW_inst_gt18_drpaddr_o_UNCONNECTED[9:0]),
        .gt18_drpdi_o(NLW_inst_gt18_drpdi_o_UNCONNECTED[15:0]),
        .gt18_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt18_drpen_o(NLW_inst_gt18_drpen_o_UNCONNECTED),
        .gt18_drprdy_i(1'b0),
        .gt18_drpwe_o(NLW_inst_gt18_drpwe_o_UNCONNECTED),
        .gt19_drpaddr_o(NLW_inst_gt19_drpaddr_o_UNCONNECTED[9:0]),
        .gt19_drpdi_o(NLW_inst_gt19_drpdi_o_UNCONNECTED[15:0]),
        .gt19_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt19_drpen_o(NLW_inst_gt19_drpen_o_UNCONNECTED),
        .gt19_drprdy_i(1'b0),
        .gt19_drpwe_o(NLW_inst_gt19_drpwe_o_UNCONNECTED),
        .gt1_drpaddr_o(gt1_drpaddr_o),
        .gt1_drpdi_o(gt1_drpdi_o),
        .gt1_drpdo_i(gt1_drpdo_i),
        .gt1_drpen_o(gt1_drpen_o),
        .gt1_drprdy_i(gt1_drprdy_i),
        .gt1_drpwe_o(gt1_drpwe_o),
        .gt20_drpaddr_o(NLW_inst_gt20_drpaddr_o_UNCONNECTED[9:0]),
        .gt20_drpdi_o(NLW_inst_gt20_drpdi_o_UNCONNECTED[15:0]),
        .gt20_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt20_drpen_o(NLW_inst_gt20_drpen_o_UNCONNECTED),
        .gt20_drprdy_i(1'b0),
        .gt20_drpwe_o(NLW_inst_gt20_drpwe_o_UNCONNECTED),
        .gt21_drpaddr_o(NLW_inst_gt21_drpaddr_o_UNCONNECTED[9:0]),
        .gt21_drpdi_o(NLW_inst_gt21_drpdi_o_UNCONNECTED[15:0]),
        .gt21_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt21_drpen_o(NLW_inst_gt21_drpen_o_UNCONNECTED),
        .gt21_drprdy_i(1'b0),
        .gt21_drpwe_o(NLW_inst_gt21_drpwe_o_UNCONNECTED),
        .gt22_drpaddr_o(NLW_inst_gt22_drpaddr_o_UNCONNECTED[9:0]),
        .gt22_drpdi_o(NLW_inst_gt22_drpdi_o_UNCONNECTED[15:0]),
        .gt22_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt22_drpen_o(NLW_inst_gt22_drpen_o_UNCONNECTED),
        .gt22_drprdy_i(1'b0),
        .gt22_drpwe_o(NLW_inst_gt22_drpwe_o_UNCONNECTED),
        .gt23_drpaddr_o(NLW_inst_gt23_drpaddr_o_UNCONNECTED[9:0]),
        .gt23_drpdi_o(NLW_inst_gt23_drpdi_o_UNCONNECTED[15:0]),
        .gt23_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt23_drpen_o(NLW_inst_gt23_drpen_o_UNCONNECTED),
        .gt23_drprdy_i(1'b0),
        .gt23_drpwe_o(NLW_inst_gt23_drpwe_o_UNCONNECTED),
        .gt24_drpaddr_o(NLW_inst_gt24_drpaddr_o_UNCONNECTED[9:0]),
        .gt24_drpdi_o(NLW_inst_gt24_drpdi_o_UNCONNECTED[15:0]),
        .gt24_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt24_drpen_o(NLW_inst_gt24_drpen_o_UNCONNECTED),
        .gt24_drprdy_i(1'b0),
        .gt24_drpwe_o(NLW_inst_gt24_drpwe_o_UNCONNECTED),
        .gt25_drpaddr_o(NLW_inst_gt25_drpaddr_o_UNCONNECTED[9:0]),
        .gt25_drpdi_o(NLW_inst_gt25_drpdi_o_UNCONNECTED[15:0]),
        .gt25_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt25_drpen_o(NLW_inst_gt25_drpen_o_UNCONNECTED),
        .gt25_drprdy_i(1'b0),
        .gt25_drpwe_o(NLW_inst_gt25_drpwe_o_UNCONNECTED),
        .gt26_drpaddr_o(NLW_inst_gt26_drpaddr_o_UNCONNECTED[9:0]),
        .gt26_drpdi_o(NLW_inst_gt26_drpdi_o_UNCONNECTED[15:0]),
        .gt26_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt26_drpen_o(NLW_inst_gt26_drpen_o_UNCONNECTED),
        .gt26_drprdy_i(1'b0),
        .gt26_drpwe_o(NLW_inst_gt26_drpwe_o_UNCONNECTED),
        .gt27_drpaddr_o(NLW_inst_gt27_drpaddr_o_UNCONNECTED[9:0]),
        .gt27_drpdi_o(NLW_inst_gt27_drpdi_o_UNCONNECTED[15:0]),
        .gt27_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt27_drpen_o(NLW_inst_gt27_drpen_o_UNCONNECTED),
        .gt27_drprdy_i(1'b0),
        .gt27_drpwe_o(NLW_inst_gt27_drpwe_o_UNCONNECTED),
        .gt28_drpaddr_o(NLW_inst_gt28_drpaddr_o_UNCONNECTED[9:0]),
        .gt28_drpdi_o(NLW_inst_gt28_drpdi_o_UNCONNECTED[15:0]),
        .gt28_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt28_drpen_o(NLW_inst_gt28_drpen_o_UNCONNECTED),
        .gt28_drprdy_i(1'b0),
        .gt28_drpwe_o(NLW_inst_gt28_drpwe_o_UNCONNECTED),
        .gt29_drpaddr_o(NLW_inst_gt29_drpaddr_o_UNCONNECTED[9:0]),
        .gt29_drpdi_o(NLW_inst_gt29_drpdi_o_UNCONNECTED[15:0]),
        .gt29_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt29_drpen_o(NLW_inst_gt29_drpen_o_UNCONNECTED),
        .gt29_drprdy_i(1'b0),
        .gt29_drpwe_o(NLW_inst_gt29_drpwe_o_UNCONNECTED),
        .gt2_drpaddr_o(NLW_inst_gt2_drpaddr_o_UNCONNECTED[9:0]),
        .gt2_drpdi_o(NLW_inst_gt2_drpdi_o_UNCONNECTED[15:0]),
        .gt2_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt2_drpen_o(NLW_inst_gt2_drpen_o_UNCONNECTED),
        .gt2_drprdy_i(1'b0),
        .gt2_drpwe_o(NLW_inst_gt2_drpwe_o_UNCONNECTED),
        .gt30_drpaddr_o(NLW_inst_gt30_drpaddr_o_UNCONNECTED[9:0]),
        .gt30_drpdi_o(NLW_inst_gt30_drpdi_o_UNCONNECTED[15:0]),
        .gt30_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt30_drpen_o(NLW_inst_gt30_drpen_o_UNCONNECTED),
        .gt30_drprdy_i(1'b0),
        .gt30_drpwe_o(NLW_inst_gt30_drpwe_o_UNCONNECTED),
        .gt31_drpaddr_o(NLW_inst_gt31_drpaddr_o_UNCONNECTED[9:0]),
        .gt31_drpdi_o(NLW_inst_gt31_drpdi_o_UNCONNECTED[15:0]),
        .gt31_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt31_drpen_o(NLW_inst_gt31_drpen_o_UNCONNECTED),
        .gt31_drprdy_i(1'b0),
        .gt31_drpwe_o(NLW_inst_gt31_drpwe_o_UNCONNECTED),
        .gt32_drpaddr_o(NLW_inst_gt32_drpaddr_o_UNCONNECTED[9:0]),
        .gt32_drpdi_o(NLW_inst_gt32_drpdi_o_UNCONNECTED[15:0]),
        .gt32_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt32_drpen_o(NLW_inst_gt32_drpen_o_UNCONNECTED),
        .gt32_drprdy_i(1'b0),
        .gt32_drpwe_o(NLW_inst_gt32_drpwe_o_UNCONNECTED),
        .gt33_drpaddr_o(NLW_inst_gt33_drpaddr_o_UNCONNECTED[9:0]),
        .gt33_drpdi_o(NLW_inst_gt33_drpdi_o_UNCONNECTED[15:0]),
        .gt33_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt33_drpen_o(NLW_inst_gt33_drpen_o_UNCONNECTED),
        .gt33_drprdy_i(1'b0),
        .gt33_drpwe_o(NLW_inst_gt33_drpwe_o_UNCONNECTED),
        .gt34_drpaddr_o(NLW_inst_gt34_drpaddr_o_UNCONNECTED[9:0]),
        .gt34_drpdi_o(NLW_inst_gt34_drpdi_o_UNCONNECTED[15:0]),
        .gt34_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt34_drpen_o(NLW_inst_gt34_drpen_o_UNCONNECTED),
        .gt34_drprdy_i(1'b0),
        .gt34_drpwe_o(NLW_inst_gt34_drpwe_o_UNCONNECTED),
        .gt35_drpaddr_o(NLW_inst_gt35_drpaddr_o_UNCONNECTED[9:0]),
        .gt35_drpdi_o(NLW_inst_gt35_drpdi_o_UNCONNECTED[15:0]),
        .gt35_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt35_drpen_o(NLW_inst_gt35_drpen_o_UNCONNECTED),
        .gt35_drprdy_i(1'b0),
        .gt35_drpwe_o(NLW_inst_gt35_drpwe_o_UNCONNECTED),
        .gt36_drpaddr_o(NLW_inst_gt36_drpaddr_o_UNCONNECTED[9:0]),
        .gt36_drpdi_o(NLW_inst_gt36_drpdi_o_UNCONNECTED[15:0]),
        .gt36_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt36_drpen_o(NLW_inst_gt36_drpen_o_UNCONNECTED),
        .gt36_drprdy_i(1'b0),
        .gt36_drpwe_o(NLW_inst_gt36_drpwe_o_UNCONNECTED),
        .gt37_drpaddr_o(NLW_inst_gt37_drpaddr_o_UNCONNECTED[9:0]),
        .gt37_drpdi_o(NLW_inst_gt37_drpdi_o_UNCONNECTED[15:0]),
        .gt37_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt37_drpen_o(NLW_inst_gt37_drpen_o_UNCONNECTED),
        .gt37_drprdy_i(1'b0),
        .gt37_drpwe_o(NLW_inst_gt37_drpwe_o_UNCONNECTED),
        .gt38_drpaddr_o(NLW_inst_gt38_drpaddr_o_UNCONNECTED[9:0]),
        .gt38_drpdi_o(NLW_inst_gt38_drpdi_o_UNCONNECTED[15:0]),
        .gt38_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt38_drpen_o(NLW_inst_gt38_drpen_o_UNCONNECTED),
        .gt38_drprdy_i(1'b0),
        .gt38_drpwe_o(NLW_inst_gt38_drpwe_o_UNCONNECTED),
        .gt39_drpaddr_o(NLW_inst_gt39_drpaddr_o_UNCONNECTED[9:0]),
        .gt39_drpdi_o(NLW_inst_gt39_drpdi_o_UNCONNECTED[15:0]),
        .gt39_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt39_drpen_o(NLW_inst_gt39_drpen_o_UNCONNECTED),
        .gt39_drprdy_i(1'b0),
        .gt39_drpwe_o(NLW_inst_gt39_drpwe_o_UNCONNECTED),
        .gt3_drpaddr_o(NLW_inst_gt3_drpaddr_o_UNCONNECTED[9:0]),
        .gt3_drpdi_o(NLW_inst_gt3_drpdi_o_UNCONNECTED[15:0]),
        .gt3_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt3_drpen_o(NLW_inst_gt3_drpen_o_UNCONNECTED),
        .gt3_drprdy_i(1'b0),
        .gt3_drpwe_o(NLW_inst_gt3_drpwe_o_UNCONNECTED),
        .gt40_drpaddr_o(NLW_inst_gt40_drpaddr_o_UNCONNECTED[9:0]),
        .gt40_drpdi_o(NLW_inst_gt40_drpdi_o_UNCONNECTED[15:0]),
        .gt40_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt40_drpen_o(NLW_inst_gt40_drpen_o_UNCONNECTED),
        .gt40_drprdy_i(1'b0),
        .gt40_drpwe_o(NLW_inst_gt40_drpwe_o_UNCONNECTED),
        .gt41_drpaddr_o(NLW_inst_gt41_drpaddr_o_UNCONNECTED[9:0]),
        .gt41_drpdi_o(NLW_inst_gt41_drpdi_o_UNCONNECTED[15:0]),
        .gt41_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt41_drpen_o(NLW_inst_gt41_drpen_o_UNCONNECTED),
        .gt41_drprdy_i(1'b0),
        .gt41_drpwe_o(NLW_inst_gt41_drpwe_o_UNCONNECTED),
        .gt42_drpaddr_o(NLW_inst_gt42_drpaddr_o_UNCONNECTED[9:0]),
        .gt42_drpdi_o(NLW_inst_gt42_drpdi_o_UNCONNECTED[15:0]),
        .gt42_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt42_drpen_o(NLW_inst_gt42_drpen_o_UNCONNECTED),
        .gt42_drprdy_i(1'b0),
        .gt42_drpwe_o(NLW_inst_gt42_drpwe_o_UNCONNECTED),
        .gt43_drpaddr_o(NLW_inst_gt43_drpaddr_o_UNCONNECTED[9:0]),
        .gt43_drpdi_o(NLW_inst_gt43_drpdi_o_UNCONNECTED[15:0]),
        .gt43_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt43_drpen_o(NLW_inst_gt43_drpen_o_UNCONNECTED),
        .gt43_drprdy_i(1'b0),
        .gt43_drpwe_o(NLW_inst_gt43_drpwe_o_UNCONNECTED),
        .gt44_drpaddr_o(NLW_inst_gt44_drpaddr_o_UNCONNECTED[9:0]),
        .gt44_drpdi_o(NLW_inst_gt44_drpdi_o_UNCONNECTED[15:0]),
        .gt44_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt44_drpen_o(NLW_inst_gt44_drpen_o_UNCONNECTED),
        .gt44_drprdy_i(1'b0),
        .gt44_drpwe_o(NLW_inst_gt44_drpwe_o_UNCONNECTED),
        .gt45_drpaddr_o(NLW_inst_gt45_drpaddr_o_UNCONNECTED[9:0]),
        .gt45_drpdi_o(NLW_inst_gt45_drpdi_o_UNCONNECTED[15:0]),
        .gt45_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt45_drpen_o(NLW_inst_gt45_drpen_o_UNCONNECTED),
        .gt45_drprdy_i(1'b0),
        .gt45_drpwe_o(NLW_inst_gt45_drpwe_o_UNCONNECTED),
        .gt46_drpaddr_o(NLW_inst_gt46_drpaddr_o_UNCONNECTED[9:0]),
        .gt46_drpdi_o(NLW_inst_gt46_drpdi_o_UNCONNECTED[15:0]),
        .gt46_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt46_drpen_o(NLW_inst_gt46_drpen_o_UNCONNECTED),
        .gt46_drprdy_i(1'b0),
        .gt46_drpwe_o(NLW_inst_gt46_drpwe_o_UNCONNECTED),
        .gt47_drpaddr_o(NLW_inst_gt47_drpaddr_o_UNCONNECTED[9:0]),
        .gt47_drpdi_o(NLW_inst_gt47_drpdi_o_UNCONNECTED[15:0]),
        .gt47_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt47_drpen_o(NLW_inst_gt47_drpen_o_UNCONNECTED),
        .gt47_drprdy_i(1'b0),
        .gt47_drpwe_o(NLW_inst_gt47_drpwe_o_UNCONNECTED),
        .gt48_drpaddr_o(NLW_inst_gt48_drpaddr_o_UNCONNECTED[9:0]),
        .gt48_drpdi_o(NLW_inst_gt48_drpdi_o_UNCONNECTED[15:0]),
        .gt48_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt48_drpen_o(NLW_inst_gt48_drpen_o_UNCONNECTED),
        .gt48_drprdy_i(1'b0),
        .gt48_drpwe_o(NLW_inst_gt48_drpwe_o_UNCONNECTED),
        .gt49_drpaddr_o(NLW_inst_gt49_drpaddr_o_UNCONNECTED[9:0]),
        .gt49_drpdi_o(NLW_inst_gt49_drpdi_o_UNCONNECTED[15:0]),
        .gt49_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt49_drpen_o(NLW_inst_gt49_drpen_o_UNCONNECTED),
        .gt49_drprdy_i(1'b0),
        .gt49_drpwe_o(NLW_inst_gt49_drpwe_o_UNCONNECTED),
        .gt4_drpaddr_o(NLW_inst_gt4_drpaddr_o_UNCONNECTED[9:0]),
        .gt4_drpdi_o(NLW_inst_gt4_drpdi_o_UNCONNECTED[15:0]),
        .gt4_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt4_drpen_o(NLW_inst_gt4_drpen_o_UNCONNECTED),
        .gt4_drprdy_i(1'b0),
        .gt4_drpwe_o(NLW_inst_gt4_drpwe_o_UNCONNECTED),
        .gt50_drpaddr_o(NLW_inst_gt50_drpaddr_o_UNCONNECTED[9:0]),
        .gt50_drpdi_o(NLW_inst_gt50_drpdi_o_UNCONNECTED[15:0]),
        .gt50_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt50_drpen_o(NLW_inst_gt50_drpen_o_UNCONNECTED),
        .gt50_drprdy_i(1'b0),
        .gt50_drpwe_o(NLW_inst_gt50_drpwe_o_UNCONNECTED),
        .gt51_drpaddr_o(NLW_inst_gt51_drpaddr_o_UNCONNECTED[9:0]),
        .gt51_drpdi_o(NLW_inst_gt51_drpdi_o_UNCONNECTED[15:0]),
        .gt51_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt51_drpen_o(NLW_inst_gt51_drpen_o_UNCONNECTED),
        .gt51_drprdy_i(1'b0),
        .gt51_drpwe_o(NLW_inst_gt51_drpwe_o_UNCONNECTED),
        .gt52_drpaddr_o(NLW_inst_gt52_drpaddr_o_UNCONNECTED[9:0]),
        .gt52_drpdi_o(NLW_inst_gt52_drpdi_o_UNCONNECTED[15:0]),
        .gt52_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt52_drpen_o(NLW_inst_gt52_drpen_o_UNCONNECTED),
        .gt52_drprdy_i(1'b0),
        .gt52_drpwe_o(NLW_inst_gt52_drpwe_o_UNCONNECTED),
        .gt53_drpaddr_o(NLW_inst_gt53_drpaddr_o_UNCONNECTED[9:0]),
        .gt53_drpdi_o(NLW_inst_gt53_drpdi_o_UNCONNECTED[15:0]),
        .gt53_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt53_drpen_o(NLW_inst_gt53_drpen_o_UNCONNECTED),
        .gt53_drprdy_i(1'b0),
        .gt53_drpwe_o(NLW_inst_gt53_drpwe_o_UNCONNECTED),
        .gt54_drpaddr_o(NLW_inst_gt54_drpaddr_o_UNCONNECTED[9:0]),
        .gt54_drpdi_o(NLW_inst_gt54_drpdi_o_UNCONNECTED[15:0]),
        .gt54_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt54_drpen_o(NLW_inst_gt54_drpen_o_UNCONNECTED),
        .gt54_drprdy_i(1'b0),
        .gt54_drpwe_o(NLW_inst_gt54_drpwe_o_UNCONNECTED),
        .gt55_drpaddr_o(NLW_inst_gt55_drpaddr_o_UNCONNECTED[9:0]),
        .gt55_drpdi_o(NLW_inst_gt55_drpdi_o_UNCONNECTED[15:0]),
        .gt55_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt55_drpen_o(NLW_inst_gt55_drpen_o_UNCONNECTED),
        .gt55_drprdy_i(1'b0),
        .gt55_drpwe_o(NLW_inst_gt55_drpwe_o_UNCONNECTED),
        .gt56_drpaddr_o(NLW_inst_gt56_drpaddr_o_UNCONNECTED[9:0]),
        .gt56_drpdi_o(NLW_inst_gt56_drpdi_o_UNCONNECTED[15:0]),
        .gt56_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt56_drpen_o(NLW_inst_gt56_drpen_o_UNCONNECTED),
        .gt56_drprdy_i(1'b0),
        .gt56_drpwe_o(NLW_inst_gt56_drpwe_o_UNCONNECTED),
        .gt57_drpaddr_o(NLW_inst_gt57_drpaddr_o_UNCONNECTED[9:0]),
        .gt57_drpdi_o(NLW_inst_gt57_drpdi_o_UNCONNECTED[15:0]),
        .gt57_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt57_drpen_o(NLW_inst_gt57_drpen_o_UNCONNECTED),
        .gt57_drprdy_i(1'b0),
        .gt57_drpwe_o(NLW_inst_gt57_drpwe_o_UNCONNECTED),
        .gt58_drpaddr_o(NLW_inst_gt58_drpaddr_o_UNCONNECTED[9:0]),
        .gt58_drpdi_o(NLW_inst_gt58_drpdi_o_UNCONNECTED[15:0]),
        .gt58_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt58_drpen_o(NLW_inst_gt58_drpen_o_UNCONNECTED),
        .gt58_drprdy_i(1'b0),
        .gt58_drpwe_o(NLW_inst_gt58_drpwe_o_UNCONNECTED),
        .gt59_drpaddr_o(NLW_inst_gt59_drpaddr_o_UNCONNECTED[9:0]),
        .gt59_drpdi_o(NLW_inst_gt59_drpdi_o_UNCONNECTED[15:0]),
        .gt59_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt59_drpen_o(NLW_inst_gt59_drpen_o_UNCONNECTED),
        .gt59_drprdy_i(1'b0),
        .gt59_drpwe_o(NLW_inst_gt59_drpwe_o_UNCONNECTED),
        .gt5_drpaddr_o(NLW_inst_gt5_drpaddr_o_UNCONNECTED[9:0]),
        .gt5_drpdi_o(NLW_inst_gt5_drpdi_o_UNCONNECTED[15:0]),
        .gt5_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt5_drpen_o(NLW_inst_gt5_drpen_o_UNCONNECTED),
        .gt5_drprdy_i(1'b0),
        .gt5_drpwe_o(NLW_inst_gt5_drpwe_o_UNCONNECTED),
        .gt60_drpaddr_o(NLW_inst_gt60_drpaddr_o_UNCONNECTED[9:0]),
        .gt60_drpdi_o(NLW_inst_gt60_drpdi_o_UNCONNECTED[15:0]),
        .gt60_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt60_drpen_o(NLW_inst_gt60_drpen_o_UNCONNECTED),
        .gt60_drprdy_i(1'b0),
        .gt60_drpwe_o(NLW_inst_gt60_drpwe_o_UNCONNECTED),
        .gt61_drpaddr_o(NLW_inst_gt61_drpaddr_o_UNCONNECTED[9:0]),
        .gt61_drpdi_o(NLW_inst_gt61_drpdi_o_UNCONNECTED[15:0]),
        .gt61_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt61_drpen_o(NLW_inst_gt61_drpen_o_UNCONNECTED),
        .gt61_drprdy_i(1'b0),
        .gt61_drpwe_o(NLW_inst_gt61_drpwe_o_UNCONNECTED),
        .gt62_drpaddr_o(NLW_inst_gt62_drpaddr_o_UNCONNECTED[9:0]),
        .gt62_drpdi_o(NLW_inst_gt62_drpdi_o_UNCONNECTED[15:0]),
        .gt62_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt62_drpen_o(NLW_inst_gt62_drpen_o_UNCONNECTED),
        .gt62_drprdy_i(1'b0),
        .gt62_drpwe_o(NLW_inst_gt62_drpwe_o_UNCONNECTED),
        .gt63_drpaddr_o(NLW_inst_gt63_drpaddr_o_UNCONNECTED[9:0]),
        .gt63_drpdi_o(NLW_inst_gt63_drpdi_o_UNCONNECTED[15:0]),
        .gt63_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt63_drpen_o(NLW_inst_gt63_drpen_o_UNCONNECTED),
        .gt63_drprdy_i(1'b0),
        .gt63_drpwe_o(NLW_inst_gt63_drpwe_o_UNCONNECTED),
        .gt64_drpaddr_o(NLW_inst_gt64_drpaddr_o_UNCONNECTED[9:0]),
        .gt64_drpdi_o(NLW_inst_gt64_drpdi_o_UNCONNECTED[15:0]),
        .gt64_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt64_drpen_o(NLW_inst_gt64_drpen_o_UNCONNECTED),
        .gt64_drprdy_i(1'b0),
        .gt64_drpwe_o(NLW_inst_gt64_drpwe_o_UNCONNECTED),
        .gt65_drpaddr_o(NLW_inst_gt65_drpaddr_o_UNCONNECTED[9:0]),
        .gt65_drpdi_o(NLW_inst_gt65_drpdi_o_UNCONNECTED[15:0]),
        .gt65_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt65_drpen_o(NLW_inst_gt65_drpen_o_UNCONNECTED),
        .gt65_drprdy_i(1'b0),
        .gt65_drpwe_o(NLW_inst_gt65_drpwe_o_UNCONNECTED),
        .gt66_drpaddr_o(NLW_inst_gt66_drpaddr_o_UNCONNECTED[9:0]),
        .gt66_drpdi_o(NLW_inst_gt66_drpdi_o_UNCONNECTED[15:0]),
        .gt66_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt66_drpen_o(NLW_inst_gt66_drpen_o_UNCONNECTED),
        .gt66_drprdy_i(1'b0),
        .gt66_drpwe_o(NLW_inst_gt66_drpwe_o_UNCONNECTED),
        .gt67_drpaddr_o(NLW_inst_gt67_drpaddr_o_UNCONNECTED[9:0]),
        .gt67_drpdi_o(NLW_inst_gt67_drpdi_o_UNCONNECTED[15:0]),
        .gt67_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt67_drpen_o(NLW_inst_gt67_drpen_o_UNCONNECTED),
        .gt67_drprdy_i(1'b0),
        .gt67_drpwe_o(NLW_inst_gt67_drpwe_o_UNCONNECTED),
        .gt68_drpaddr_o(NLW_inst_gt68_drpaddr_o_UNCONNECTED[9:0]),
        .gt68_drpdi_o(NLW_inst_gt68_drpdi_o_UNCONNECTED[15:0]),
        .gt68_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt68_drpen_o(NLW_inst_gt68_drpen_o_UNCONNECTED),
        .gt68_drprdy_i(1'b0),
        .gt68_drpwe_o(NLW_inst_gt68_drpwe_o_UNCONNECTED),
        .gt69_drpaddr_o(NLW_inst_gt69_drpaddr_o_UNCONNECTED[9:0]),
        .gt69_drpdi_o(NLW_inst_gt69_drpdi_o_UNCONNECTED[15:0]),
        .gt69_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt69_drpen_o(NLW_inst_gt69_drpen_o_UNCONNECTED),
        .gt69_drprdy_i(1'b0),
        .gt69_drpwe_o(NLW_inst_gt69_drpwe_o_UNCONNECTED),
        .gt6_drpaddr_o(NLW_inst_gt6_drpaddr_o_UNCONNECTED[9:0]),
        .gt6_drpdi_o(NLW_inst_gt6_drpdi_o_UNCONNECTED[15:0]),
        .gt6_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt6_drpen_o(NLW_inst_gt6_drpen_o_UNCONNECTED),
        .gt6_drprdy_i(1'b0),
        .gt6_drpwe_o(NLW_inst_gt6_drpwe_o_UNCONNECTED),
        .gt70_drpaddr_o(NLW_inst_gt70_drpaddr_o_UNCONNECTED[9:0]),
        .gt70_drpdi_o(NLW_inst_gt70_drpdi_o_UNCONNECTED[15:0]),
        .gt70_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt70_drpen_o(NLW_inst_gt70_drpen_o_UNCONNECTED),
        .gt70_drprdy_i(1'b0),
        .gt70_drpwe_o(NLW_inst_gt70_drpwe_o_UNCONNECTED),
        .gt71_drpaddr_o(NLW_inst_gt71_drpaddr_o_UNCONNECTED[9:0]),
        .gt71_drpdi_o(NLW_inst_gt71_drpdi_o_UNCONNECTED[15:0]),
        .gt71_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt71_drpen_o(NLW_inst_gt71_drpen_o_UNCONNECTED),
        .gt71_drprdy_i(1'b0),
        .gt71_drpwe_o(NLW_inst_gt71_drpwe_o_UNCONNECTED),
        .gt72_drpaddr_o(NLW_inst_gt72_drpaddr_o_UNCONNECTED[9:0]),
        .gt72_drpdi_o(NLW_inst_gt72_drpdi_o_UNCONNECTED[15:0]),
        .gt72_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt72_drpen_o(NLW_inst_gt72_drpen_o_UNCONNECTED),
        .gt72_drprdy_i(1'b0),
        .gt72_drpwe_o(NLW_inst_gt72_drpwe_o_UNCONNECTED),
        .gt73_drpaddr_o(NLW_inst_gt73_drpaddr_o_UNCONNECTED[9:0]),
        .gt73_drpdi_o(NLW_inst_gt73_drpdi_o_UNCONNECTED[15:0]),
        .gt73_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt73_drpen_o(NLW_inst_gt73_drpen_o_UNCONNECTED),
        .gt73_drprdy_i(1'b0),
        .gt73_drpwe_o(NLW_inst_gt73_drpwe_o_UNCONNECTED),
        .gt74_drpaddr_o(NLW_inst_gt74_drpaddr_o_UNCONNECTED[9:0]),
        .gt74_drpdi_o(NLW_inst_gt74_drpdi_o_UNCONNECTED[15:0]),
        .gt74_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt74_drpen_o(NLW_inst_gt74_drpen_o_UNCONNECTED),
        .gt74_drprdy_i(1'b0),
        .gt74_drpwe_o(NLW_inst_gt74_drpwe_o_UNCONNECTED),
        .gt75_drpaddr_o(NLW_inst_gt75_drpaddr_o_UNCONNECTED[9:0]),
        .gt75_drpdi_o(NLW_inst_gt75_drpdi_o_UNCONNECTED[15:0]),
        .gt75_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt75_drpen_o(NLW_inst_gt75_drpen_o_UNCONNECTED),
        .gt75_drprdy_i(1'b0),
        .gt75_drpwe_o(NLW_inst_gt75_drpwe_o_UNCONNECTED),
        .gt76_drpaddr_o(NLW_inst_gt76_drpaddr_o_UNCONNECTED[9:0]),
        .gt76_drpdi_o(NLW_inst_gt76_drpdi_o_UNCONNECTED[15:0]),
        .gt76_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt76_drpen_o(NLW_inst_gt76_drpen_o_UNCONNECTED),
        .gt76_drprdy_i(1'b0),
        .gt76_drpwe_o(NLW_inst_gt76_drpwe_o_UNCONNECTED),
        .gt77_drpaddr_o(NLW_inst_gt77_drpaddr_o_UNCONNECTED[9:0]),
        .gt77_drpdi_o(NLW_inst_gt77_drpdi_o_UNCONNECTED[15:0]),
        .gt77_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt77_drpen_o(NLW_inst_gt77_drpen_o_UNCONNECTED),
        .gt77_drprdy_i(1'b0),
        .gt77_drpwe_o(NLW_inst_gt77_drpwe_o_UNCONNECTED),
        .gt78_drpaddr_o(NLW_inst_gt78_drpaddr_o_UNCONNECTED[9:0]),
        .gt78_drpdi_o(NLW_inst_gt78_drpdi_o_UNCONNECTED[15:0]),
        .gt78_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt78_drpen_o(NLW_inst_gt78_drpen_o_UNCONNECTED),
        .gt78_drprdy_i(1'b0),
        .gt78_drpwe_o(NLW_inst_gt78_drpwe_o_UNCONNECTED),
        .gt79_drpaddr_o(NLW_inst_gt79_drpaddr_o_UNCONNECTED[9:0]),
        .gt79_drpdi_o(NLW_inst_gt79_drpdi_o_UNCONNECTED[15:0]),
        .gt79_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt79_drpen_o(NLW_inst_gt79_drpen_o_UNCONNECTED),
        .gt79_drprdy_i(1'b0),
        .gt79_drpwe_o(NLW_inst_gt79_drpwe_o_UNCONNECTED),
        .gt7_drpaddr_o(NLW_inst_gt7_drpaddr_o_UNCONNECTED[9:0]),
        .gt7_drpdi_o(NLW_inst_gt7_drpdi_o_UNCONNECTED[15:0]),
        .gt7_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt7_drpen_o(NLW_inst_gt7_drpen_o_UNCONNECTED),
        .gt7_drprdy_i(1'b0),
        .gt7_drpwe_o(NLW_inst_gt7_drpwe_o_UNCONNECTED),
        .gt80_drpaddr_o(NLW_inst_gt80_drpaddr_o_UNCONNECTED[9:0]),
        .gt80_drpdi_o(NLW_inst_gt80_drpdi_o_UNCONNECTED[15:0]),
        .gt80_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt80_drpen_o(NLW_inst_gt80_drpen_o_UNCONNECTED),
        .gt80_drprdy_i(1'b0),
        .gt80_drpwe_o(NLW_inst_gt80_drpwe_o_UNCONNECTED),
        .gt81_drpaddr_o(NLW_inst_gt81_drpaddr_o_UNCONNECTED[9:0]),
        .gt81_drpdi_o(NLW_inst_gt81_drpdi_o_UNCONNECTED[15:0]),
        .gt81_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt81_drpen_o(NLW_inst_gt81_drpen_o_UNCONNECTED),
        .gt81_drprdy_i(1'b0),
        .gt81_drpwe_o(NLW_inst_gt81_drpwe_o_UNCONNECTED),
        .gt82_drpaddr_o(NLW_inst_gt82_drpaddr_o_UNCONNECTED[9:0]),
        .gt82_drpdi_o(NLW_inst_gt82_drpdi_o_UNCONNECTED[15:0]),
        .gt82_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt82_drpen_o(NLW_inst_gt82_drpen_o_UNCONNECTED),
        .gt82_drprdy_i(1'b0),
        .gt82_drpwe_o(NLW_inst_gt82_drpwe_o_UNCONNECTED),
        .gt83_drpaddr_o(NLW_inst_gt83_drpaddr_o_UNCONNECTED[9:0]),
        .gt83_drpdi_o(NLW_inst_gt83_drpdi_o_UNCONNECTED[15:0]),
        .gt83_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt83_drpen_o(NLW_inst_gt83_drpen_o_UNCONNECTED),
        .gt83_drprdy_i(1'b0),
        .gt83_drpwe_o(NLW_inst_gt83_drpwe_o_UNCONNECTED),
        .gt84_drpaddr_o(NLW_inst_gt84_drpaddr_o_UNCONNECTED[9:0]),
        .gt84_drpdi_o(NLW_inst_gt84_drpdi_o_UNCONNECTED[15:0]),
        .gt84_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt84_drpen_o(NLW_inst_gt84_drpen_o_UNCONNECTED),
        .gt84_drprdy_i(1'b0),
        .gt84_drpwe_o(NLW_inst_gt84_drpwe_o_UNCONNECTED),
        .gt85_drpaddr_o(NLW_inst_gt85_drpaddr_o_UNCONNECTED[9:0]),
        .gt85_drpdi_o(NLW_inst_gt85_drpdi_o_UNCONNECTED[15:0]),
        .gt85_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt85_drpen_o(NLW_inst_gt85_drpen_o_UNCONNECTED),
        .gt85_drprdy_i(1'b0),
        .gt85_drpwe_o(NLW_inst_gt85_drpwe_o_UNCONNECTED),
        .gt86_drpaddr_o(NLW_inst_gt86_drpaddr_o_UNCONNECTED[9:0]),
        .gt86_drpdi_o(NLW_inst_gt86_drpdi_o_UNCONNECTED[15:0]),
        .gt86_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt86_drpen_o(NLW_inst_gt86_drpen_o_UNCONNECTED),
        .gt86_drprdy_i(1'b0),
        .gt86_drpwe_o(NLW_inst_gt86_drpwe_o_UNCONNECTED),
        .gt87_drpaddr_o(NLW_inst_gt87_drpaddr_o_UNCONNECTED[9:0]),
        .gt87_drpdi_o(NLW_inst_gt87_drpdi_o_UNCONNECTED[15:0]),
        .gt87_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt87_drpen_o(NLW_inst_gt87_drpen_o_UNCONNECTED),
        .gt87_drprdy_i(1'b0),
        .gt87_drpwe_o(NLW_inst_gt87_drpwe_o_UNCONNECTED),
        .gt88_drpaddr_o(NLW_inst_gt88_drpaddr_o_UNCONNECTED[9:0]),
        .gt88_drpdi_o(NLW_inst_gt88_drpdi_o_UNCONNECTED[15:0]),
        .gt88_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt88_drpen_o(NLW_inst_gt88_drpen_o_UNCONNECTED),
        .gt88_drprdy_i(1'b0),
        .gt88_drpwe_o(NLW_inst_gt88_drpwe_o_UNCONNECTED),
        .gt89_drpaddr_o(NLW_inst_gt89_drpaddr_o_UNCONNECTED[9:0]),
        .gt89_drpdi_o(NLW_inst_gt89_drpdi_o_UNCONNECTED[15:0]),
        .gt89_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt89_drpen_o(NLW_inst_gt89_drpen_o_UNCONNECTED),
        .gt89_drprdy_i(1'b0),
        .gt89_drpwe_o(NLW_inst_gt89_drpwe_o_UNCONNECTED),
        .gt8_drpaddr_o(NLW_inst_gt8_drpaddr_o_UNCONNECTED[9:0]),
        .gt8_drpdi_o(NLW_inst_gt8_drpdi_o_UNCONNECTED[15:0]),
        .gt8_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt8_drpen_o(NLW_inst_gt8_drpen_o_UNCONNECTED),
        .gt8_drprdy_i(1'b0),
        .gt8_drpwe_o(NLW_inst_gt8_drpwe_o_UNCONNECTED),
        .gt90_drpaddr_o(NLW_inst_gt90_drpaddr_o_UNCONNECTED[9:0]),
        .gt90_drpdi_o(NLW_inst_gt90_drpdi_o_UNCONNECTED[15:0]),
        .gt90_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt90_drpen_o(NLW_inst_gt90_drpen_o_UNCONNECTED),
        .gt90_drprdy_i(1'b0),
        .gt90_drpwe_o(NLW_inst_gt90_drpwe_o_UNCONNECTED),
        .gt91_drpaddr_o(NLW_inst_gt91_drpaddr_o_UNCONNECTED[9:0]),
        .gt91_drpdi_o(NLW_inst_gt91_drpdi_o_UNCONNECTED[15:0]),
        .gt91_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt91_drpen_o(NLW_inst_gt91_drpen_o_UNCONNECTED),
        .gt91_drprdy_i(1'b0),
        .gt91_drpwe_o(NLW_inst_gt91_drpwe_o_UNCONNECTED),
        .gt92_drpaddr_o(NLW_inst_gt92_drpaddr_o_UNCONNECTED[9:0]),
        .gt92_drpdi_o(NLW_inst_gt92_drpdi_o_UNCONNECTED[15:0]),
        .gt92_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt92_drpen_o(NLW_inst_gt92_drpen_o_UNCONNECTED),
        .gt92_drprdy_i(1'b0),
        .gt92_drpwe_o(NLW_inst_gt92_drpwe_o_UNCONNECTED),
        .gt93_drpaddr_o(NLW_inst_gt93_drpaddr_o_UNCONNECTED[9:0]),
        .gt93_drpdi_o(NLW_inst_gt93_drpdi_o_UNCONNECTED[15:0]),
        .gt93_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt93_drpen_o(NLW_inst_gt93_drpen_o_UNCONNECTED),
        .gt93_drprdy_i(1'b0),
        .gt93_drpwe_o(NLW_inst_gt93_drpwe_o_UNCONNECTED),
        .gt94_drpaddr_o(NLW_inst_gt94_drpaddr_o_UNCONNECTED[9:0]),
        .gt94_drpdi_o(NLW_inst_gt94_drpdi_o_UNCONNECTED[15:0]),
        .gt94_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt94_drpen_o(NLW_inst_gt94_drpen_o_UNCONNECTED),
        .gt94_drprdy_i(1'b0),
        .gt94_drpwe_o(NLW_inst_gt94_drpwe_o_UNCONNECTED),
        .gt95_drpaddr_o(NLW_inst_gt95_drpaddr_o_UNCONNECTED[9:0]),
        .gt95_drpdi_o(NLW_inst_gt95_drpdi_o_UNCONNECTED[15:0]),
        .gt95_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt95_drpen_o(NLW_inst_gt95_drpen_o_UNCONNECTED),
        .gt95_drprdy_i(1'b0),
        .gt95_drpwe_o(NLW_inst_gt95_drpwe_o_UNCONNECTED),
        .gt96_drpaddr_o(NLW_inst_gt96_drpaddr_o_UNCONNECTED[9:0]),
        .gt96_drpdi_o(NLW_inst_gt96_drpdi_o_UNCONNECTED[15:0]),
        .gt96_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt96_drpen_o(NLW_inst_gt96_drpen_o_UNCONNECTED),
        .gt96_drprdy_i(1'b0),
        .gt96_drpwe_o(NLW_inst_gt96_drpwe_o_UNCONNECTED),
        .gt97_drpaddr_o(NLW_inst_gt97_drpaddr_o_UNCONNECTED[9:0]),
        .gt97_drpdi_o(NLW_inst_gt97_drpdi_o_UNCONNECTED[15:0]),
        .gt97_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt97_drpen_o(NLW_inst_gt97_drpen_o_UNCONNECTED),
        .gt97_drprdy_i(1'b0),
        .gt97_drpwe_o(NLW_inst_gt97_drpwe_o_UNCONNECTED),
        .gt98_drpaddr_o(NLW_inst_gt98_drpaddr_o_UNCONNECTED[9:0]),
        .gt98_drpdi_o(NLW_inst_gt98_drpdi_o_UNCONNECTED[15:0]),
        .gt98_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt98_drpen_o(NLW_inst_gt98_drpen_o_UNCONNECTED),
        .gt98_drprdy_i(1'b0),
        .gt98_drpwe_o(NLW_inst_gt98_drpwe_o_UNCONNECTED),
        .gt99_drpaddr_o(NLW_inst_gt99_drpaddr_o_UNCONNECTED[9:0]),
        .gt99_drpdi_o(NLW_inst_gt99_drpdi_o_UNCONNECTED[15:0]),
        .gt99_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt99_drpen_o(NLW_inst_gt99_drpen_o_UNCONNECTED),
        .gt99_drprdy_i(1'b0),
        .gt99_drpwe_o(NLW_inst_gt99_drpwe_o_UNCONNECTED),
        .gt9_drpaddr_o(NLW_inst_gt9_drpaddr_o_UNCONNECTED[9:0]),
        .gt9_drpdi_o(NLW_inst_gt9_drpdi_o_UNCONNECTED[15:0]),
        .gt9_drpdo_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt9_drpen_o(NLW_inst_gt9_drpen_o_UNCONNECTED),
        .gt9_drprdy_i(1'b0),
        .gt9_drpwe_o(NLW_inst_gt9_drpwe_o_UNCONNECTED),
        .rxlpmen_i(rxlpmen_i),
        .rxlpmen_o(rxlpmen_o),
        .rxoutclk_i(rxoutclk_i),
        .rxrate_i(rxrate_i),
        .rxrate_o(rxrate_o),
        .sl_iport0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport10({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport100({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport101({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport102({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport103({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport104({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport105({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport106({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport107({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport108({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport109({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport11({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport110({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport111({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport112({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport113({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport114({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport115({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport116({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport117({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport118({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport119({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport12({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport120({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport121({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport122({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport123({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport124({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport125({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport126({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport127({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport128({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport129({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport13({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport130({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport131({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport14({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport15({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport16({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport17({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport18({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport19({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport2({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport20({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport21({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport22({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport23({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport24({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport25({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport26({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport27({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport28({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport29({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport3({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport30({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport31({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport32({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport33({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport34({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport35({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport36({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport37({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport38({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport39({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport4({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport40({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport41({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport42({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport43({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport44({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport45({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport46({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport47({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport48({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport49({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport5({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport50({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport51({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport52({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport53({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport54({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport55({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport56({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport57({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport58({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport59({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport6({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport60({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport61({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport62({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport63({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport64({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport65({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport66({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport67({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport68({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport69({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport7({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport70({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport71({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport72({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport73({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport74({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport75({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport76({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport77({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport78({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport79({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport8({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport80({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport81({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport82({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport83({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport84({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport85({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport86({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport87({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport88({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport89({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport9({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport90({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport91({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport92({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport93({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport94({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport95({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport96({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport97({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport98({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_iport99({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sl_oport0(NLW_inst_sl_oport0_UNCONNECTED[16:0]),
        .sl_oport1(NLW_inst_sl_oport1_UNCONNECTED[16:0]),
        .sl_oport10(NLW_inst_sl_oport10_UNCONNECTED[16:0]),
        .sl_oport100(NLW_inst_sl_oport100_UNCONNECTED[16:0]),
        .sl_oport101(NLW_inst_sl_oport101_UNCONNECTED[16:0]),
        .sl_oport102(NLW_inst_sl_oport102_UNCONNECTED[16:0]),
        .sl_oport103(NLW_inst_sl_oport103_UNCONNECTED[16:0]),
        .sl_oport104(NLW_inst_sl_oport104_UNCONNECTED[16:0]),
        .sl_oport105(NLW_inst_sl_oport105_UNCONNECTED[16:0]),
        .sl_oport106(NLW_inst_sl_oport106_UNCONNECTED[16:0]),
        .sl_oport107(NLW_inst_sl_oport107_UNCONNECTED[16:0]),
        .sl_oport108(NLW_inst_sl_oport108_UNCONNECTED[16:0]),
        .sl_oport109(NLW_inst_sl_oport109_UNCONNECTED[16:0]),
        .sl_oport11(NLW_inst_sl_oport11_UNCONNECTED[16:0]),
        .sl_oport110(NLW_inst_sl_oport110_UNCONNECTED[16:0]),
        .sl_oport111(NLW_inst_sl_oport111_UNCONNECTED[16:0]),
        .sl_oport112(NLW_inst_sl_oport112_UNCONNECTED[16:0]),
        .sl_oport113(NLW_inst_sl_oport113_UNCONNECTED[16:0]),
        .sl_oport114(NLW_inst_sl_oport114_UNCONNECTED[16:0]),
        .sl_oport115(NLW_inst_sl_oport115_UNCONNECTED[16:0]),
        .sl_oport116(NLW_inst_sl_oport116_UNCONNECTED[16:0]),
        .sl_oport117(NLW_inst_sl_oport117_UNCONNECTED[16:0]),
        .sl_oport118(NLW_inst_sl_oport118_UNCONNECTED[16:0]),
        .sl_oport119(NLW_inst_sl_oport119_UNCONNECTED[16:0]),
        .sl_oport12(NLW_inst_sl_oport12_UNCONNECTED[16:0]),
        .sl_oport120(NLW_inst_sl_oport120_UNCONNECTED[16:0]),
        .sl_oport121(NLW_inst_sl_oport121_UNCONNECTED[16:0]),
        .sl_oport122(NLW_inst_sl_oport122_UNCONNECTED[16:0]),
        .sl_oport123(NLW_inst_sl_oport123_UNCONNECTED[16:0]),
        .sl_oport124(NLW_inst_sl_oport124_UNCONNECTED[16:0]),
        .sl_oport125(NLW_inst_sl_oport125_UNCONNECTED[16:0]),
        .sl_oport126(NLW_inst_sl_oport126_UNCONNECTED[16:0]),
        .sl_oport127(NLW_inst_sl_oport127_UNCONNECTED[16:0]),
        .sl_oport128(NLW_inst_sl_oport128_UNCONNECTED[16:0]),
        .sl_oport129(NLW_inst_sl_oport129_UNCONNECTED[16:0]),
        .sl_oport13(NLW_inst_sl_oport13_UNCONNECTED[16:0]),
        .sl_oport130(NLW_inst_sl_oport130_UNCONNECTED[16:0]),
        .sl_oport131(NLW_inst_sl_oport131_UNCONNECTED[16:0]),
        .sl_oport14(NLW_inst_sl_oport14_UNCONNECTED[16:0]),
        .sl_oport15(NLW_inst_sl_oport15_UNCONNECTED[16:0]),
        .sl_oport16(NLW_inst_sl_oport16_UNCONNECTED[16:0]),
        .sl_oport17(NLW_inst_sl_oport17_UNCONNECTED[16:0]),
        .sl_oport18(NLW_inst_sl_oport18_UNCONNECTED[16:0]),
        .sl_oport19(NLW_inst_sl_oport19_UNCONNECTED[16:0]),
        .sl_oport2(NLW_inst_sl_oport2_UNCONNECTED[16:0]),
        .sl_oport20(NLW_inst_sl_oport20_UNCONNECTED[16:0]),
        .sl_oport21(NLW_inst_sl_oport21_UNCONNECTED[16:0]),
        .sl_oport22(NLW_inst_sl_oport22_UNCONNECTED[16:0]),
        .sl_oport23(NLW_inst_sl_oport23_UNCONNECTED[16:0]),
        .sl_oport24(NLW_inst_sl_oport24_UNCONNECTED[16:0]),
        .sl_oport25(NLW_inst_sl_oport25_UNCONNECTED[16:0]),
        .sl_oport26(NLW_inst_sl_oport26_UNCONNECTED[16:0]),
        .sl_oport27(NLW_inst_sl_oport27_UNCONNECTED[16:0]),
        .sl_oport28(NLW_inst_sl_oport28_UNCONNECTED[16:0]),
        .sl_oport29(NLW_inst_sl_oport29_UNCONNECTED[16:0]),
        .sl_oport3(NLW_inst_sl_oport3_UNCONNECTED[16:0]),
        .sl_oport30(NLW_inst_sl_oport30_UNCONNECTED[16:0]),
        .sl_oport31(NLW_inst_sl_oport31_UNCONNECTED[16:0]),
        .sl_oport32(NLW_inst_sl_oport32_UNCONNECTED[16:0]),
        .sl_oport33(NLW_inst_sl_oport33_UNCONNECTED[16:0]),
        .sl_oport34(NLW_inst_sl_oport34_UNCONNECTED[16:0]),
        .sl_oport35(NLW_inst_sl_oport35_UNCONNECTED[16:0]),
        .sl_oport36(NLW_inst_sl_oport36_UNCONNECTED[16:0]),
        .sl_oport37(NLW_inst_sl_oport37_UNCONNECTED[16:0]),
        .sl_oport38(NLW_inst_sl_oport38_UNCONNECTED[16:0]),
        .sl_oport39(NLW_inst_sl_oport39_UNCONNECTED[16:0]),
        .sl_oport4(NLW_inst_sl_oport4_UNCONNECTED[16:0]),
        .sl_oport40(NLW_inst_sl_oport40_UNCONNECTED[16:0]),
        .sl_oport41(NLW_inst_sl_oport41_UNCONNECTED[16:0]),
        .sl_oport42(NLW_inst_sl_oport42_UNCONNECTED[16:0]),
        .sl_oport43(NLW_inst_sl_oport43_UNCONNECTED[16:0]),
        .sl_oport44(NLW_inst_sl_oport44_UNCONNECTED[16:0]),
        .sl_oport45(NLW_inst_sl_oport45_UNCONNECTED[16:0]),
        .sl_oport46(NLW_inst_sl_oport46_UNCONNECTED[16:0]),
        .sl_oport47(NLW_inst_sl_oport47_UNCONNECTED[16:0]),
        .sl_oport48(NLW_inst_sl_oport48_UNCONNECTED[16:0]),
        .sl_oport49(NLW_inst_sl_oport49_UNCONNECTED[16:0]),
        .sl_oport5(NLW_inst_sl_oport5_UNCONNECTED[16:0]),
        .sl_oport50(NLW_inst_sl_oport50_UNCONNECTED[16:0]),
        .sl_oport51(NLW_inst_sl_oport51_UNCONNECTED[16:0]),
        .sl_oport52(NLW_inst_sl_oport52_UNCONNECTED[16:0]),
        .sl_oport53(NLW_inst_sl_oport53_UNCONNECTED[16:0]),
        .sl_oport54(NLW_inst_sl_oport54_UNCONNECTED[16:0]),
        .sl_oport55(NLW_inst_sl_oport55_UNCONNECTED[16:0]),
        .sl_oport56(NLW_inst_sl_oport56_UNCONNECTED[16:0]),
        .sl_oport57(NLW_inst_sl_oport57_UNCONNECTED[16:0]),
        .sl_oport58(NLW_inst_sl_oport58_UNCONNECTED[16:0]),
        .sl_oport59(NLW_inst_sl_oport59_UNCONNECTED[16:0]),
        .sl_oport6(NLW_inst_sl_oport6_UNCONNECTED[16:0]),
        .sl_oport60(NLW_inst_sl_oport60_UNCONNECTED[16:0]),
        .sl_oport61(NLW_inst_sl_oport61_UNCONNECTED[16:0]),
        .sl_oport62(NLW_inst_sl_oport62_UNCONNECTED[16:0]),
        .sl_oport63(NLW_inst_sl_oport63_UNCONNECTED[16:0]),
        .sl_oport64(NLW_inst_sl_oport64_UNCONNECTED[16:0]),
        .sl_oport65(NLW_inst_sl_oport65_UNCONNECTED[16:0]),
        .sl_oport66(NLW_inst_sl_oport66_UNCONNECTED[16:0]),
        .sl_oport67(NLW_inst_sl_oport67_UNCONNECTED[16:0]),
        .sl_oport68(NLW_inst_sl_oport68_UNCONNECTED[16:0]),
        .sl_oport69(NLW_inst_sl_oport69_UNCONNECTED[16:0]),
        .sl_oport7(NLW_inst_sl_oport7_UNCONNECTED[16:0]),
        .sl_oport70(NLW_inst_sl_oport70_UNCONNECTED[16:0]),
        .sl_oport71(NLW_inst_sl_oport71_UNCONNECTED[16:0]),
        .sl_oport72(NLW_inst_sl_oport72_UNCONNECTED[16:0]),
        .sl_oport73(NLW_inst_sl_oport73_UNCONNECTED[16:0]),
        .sl_oport74(NLW_inst_sl_oport74_UNCONNECTED[16:0]),
        .sl_oport75(NLW_inst_sl_oport75_UNCONNECTED[16:0]),
        .sl_oport76(NLW_inst_sl_oport76_UNCONNECTED[16:0]),
        .sl_oport77(NLW_inst_sl_oport77_UNCONNECTED[16:0]),
        .sl_oport78(NLW_inst_sl_oport78_UNCONNECTED[16:0]),
        .sl_oport79(NLW_inst_sl_oport79_UNCONNECTED[16:0]),
        .sl_oport8(NLW_inst_sl_oport8_UNCONNECTED[16:0]),
        .sl_oport80(NLW_inst_sl_oport80_UNCONNECTED[16:0]),
        .sl_oport81(NLW_inst_sl_oport81_UNCONNECTED[16:0]),
        .sl_oport82(NLW_inst_sl_oport82_UNCONNECTED[16:0]),
        .sl_oport83(NLW_inst_sl_oport83_UNCONNECTED[16:0]),
        .sl_oport84(NLW_inst_sl_oport84_UNCONNECTED[16:0]),
        .sl_oport85(NLW_inst_sl_oport85_UNCONNECTED[16:0]),
        .sl_oport86(NLW_inst_sl_oport86_UNCONNECTED[16:0]),
        .sl_oport87(NLW_inst_sl_oport87_UNCONNECTED[16:0]),
        .sl_oport88(NLW_inst_sl_oport88_UNCONNECTED[16:0]),
        .sl_oport89(NLW_inst_sl_oport89_UNCONNECTED[16:0]),
        .sl_oport9(NLW_inst_sl_oport9_UNCONNECTED[16:0]),
        .sl_oport90(NLW_inst_sl_oport90_UNCONNECTED[16:0]),
        .sl_oport91(NLW_inst_sl_oport91_UNCONNECTED[16:0]),
        .sl_oport92(NLW_inst_sl_oport92_UNCONNECTED[16:0]),
        .sl_oport93(NLW_inst_sl_oport93_UNCONNECTED[16:0]),
        .sl_oport94(NLW_inst_sl_oport94_UNCONNECTED[16:0]),
        .sl_oport95(NLW_inst_sl_oport95_UNCONNECTED[16:0]),
        .sl_oport96(NLW_inst_sl_oport96_UNCONNECTED[16:0]),
        .sl_oport97(NLW_inst_sl_oport97_UNCONNECTED[16:0]),
        .sl_oport98(NLW_inst_sl_oport98_UNCONNECTED[16:0]),
        .sl_oport99(NLW_inst_sl_oport99_UNCONNECTED[16:0]),
        .txdiffctrl_i(txdiffctrl_i),
        .txdiffctrl_o(txdiffctrl_o),
        .txpostcursor_i(txpostcursor_i),
        .txpostcursor_o(txpostcursor_o),
        .txprecursor_i(txprecursor_i),
        .txprecursor_o(txprecursor_o));
endmodule

module c2c_gth_in_system_ibert_0_iomodule
   (mb_den_i,
    mb_rden_i,
    mb_wren_i,
    extend_Data_Read,
    dlmb_LMB_ReadDBus,
    lmb_reg_read_Q_reg_0,
    dlmb_LMB_Ready,
    \Using_IO_Bus.io_ready_Q_reg_0 ,
    Q,
    \Using_IO_Bus.IO_Write_Data_reg[31]_0 ,
    SR,
    IO_Addr_Strobe0,
    out,
    IO_Read_Strobe,
    IO_Write_Strobe,
    io_read_keep,
    lmb_reg_read0,
    lmb_reg_write0,
    mb_rdy_o,
    \Using_FPGA.Native ,
    O,
    Sl_Rdy,
    lmb_as,
    DATA_OUTB,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus,
    D,
    mb_do_o);
  output mb_den_i;
  output mb_rden_i;
  output mb_wren_i;
  output [15:0]extend_Data_Read;
  output [15:0]dlmb_LMB_ReadDBus;
  output lmb_reg_read_Q_reg_0;
  output dlmb_LMB_Ready;
  output \Using_IO_Bus.io_ready_Q_reg_0 ;
  output [31:0]Q;
  output [31:0]\Using_IO_Bus.IO_Write_Data_reg[31]_0 ;
  input [0:0]SR;
  input IO_Addr_Strobe0;
  input out;
  input IO_Read_Strobe;
  input IO_Write_Strobe;
  input io_read_keep;
  input lmb_reg_read0;
  input lmb_reg_write0;
  input mb_rdy_o;
  input \Using_FPGA.Native ;
  input O;
  input Sl_Rdy;
  input lmb_as;
  input [0:31]DATA_OUTB;
  input \Using_FPGA.Native_0 ;
  input [0:31]dlmb_M_ABus;
  input [31:0]D;
  input [31:0]mb_do_o;

  wire [31:0]D;
  wire [0:31]DATA_OUTB;
  wire IO_Addr_Strobe0;
  wire IO_Read_Strobe;
  wire IO_Write_Strobe;
  wire O;
  wire [31:0]Q;
  wire [0:0]SR;
  wire Sl_Rdy;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_i_2__10_n_0 ;
  wire \Using_FPGA.Native_i_2__11_n_0 ;
  wire \Using_FPGA.Native_i_2__12_n_0 ;
  wire \Using_FPGA.Native_i_2__13_n_0 ;
  wire \Using_FPGA.Native_i_2__6_n_0 ;
  wire \Using_FPGA.Native_i_2__7_n_0 ;
  wire \Using_FPGA.Native_i_2__8_n_0 ;
  wire \Using_FPGA.Native_i_2__9_n_0 ;
  wire \Using_FPGA.Native_i_3__0_n_0 ;
  wire \Using_FPGA.Native_i_3__1_n_0 ;
  wire \Using_FPGA.Native_i_3__2_n_0 ;
  wire \Using_FPGA.Native_i_3__3_n_0 ;
  wire \Using_FPGA.Native_i_3__4_n_0 ;
  wire \Using_FPGA.Native_i_3__5_n_0 ;
  wire \Using_FPGA.Native_i_3__6_n_0 ;
  wire \Using_FPGA.Native_i_3__7_n_0 ;
  wire [31:0]\Using_IO_Bus.IO_Write_Data_reg[31]_0 ;
  wire \Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ;
  wire \Using_IO_Bus.io_read_keep_reg_n_0 ;
  wire \Using_IO_Bus.io_ready_Q_reg_0 ;
  wire [15:0]dlmb_LMB_ReadDBus;
  wire dlmb_LMB_Ready;
  wire [0:31]dlmb_M_ABus;
  wire [15:0]extend_Data_Read;
  wire [31:0]io_bus_read_data;
  wire io_read_keep;
  wire io_ready_Q;
  wire io_ready_Q0;
  wire \lmb_abus_Q_reg_n_0_[1] ;
  wire \lmb_abus_Q_reg_n_0_[2] ;
  wire \lmb_abus_Q_reg_n_0_[3] ;
  wire \lmb_abus_Q_reg_n_0_[4] ;
  wire \lmb_abus_Q_reg_n_0_[5] ;
  wire lmb_as;
  wire lmb_io_select_keep;
  wire lmb_reg_read;
  wire lmb_reg_read0;
  wire lmb_reg_read_Q;
  wire lmb_reg_read_Q_reg_0;
  wire lmb_reg_write;
  wire lmb_reg_write0;
  wire mb_den_i;
  wire [31:0]mb_do_o;
  wire mb_rden_i;
  wire mb_rdy_o;
  wire mb_wren_i;
  wire out;
  wire p_0_in20_in;
  (* RTL_KEEP = "soft" *) wire uart_tx_write;
  wire uart_tx_write_inferred_i_2_n_0;
  (* RTL_KEEP = "soft" *) wire [31:0]write_data;

  LUT6 #(
    .INIT(64'h55CCF0FF55CCF000)) 
    \Using_FPGA.Native_i_1__56 
       (.I0(\Using_FPGA.Native_i_2__6_n_0 ),
        .I1(\Using_FPGA.Native_i_3__0_n_0 ),
        .I2(dlmb_LMB_ReadDBus[0]),
        .I3(\Using_FPGA.Native ),
        .I4(O),
        .I5(dlmb_LMB_ReadDBus[8]),
        .O(extend_Data_Read[0]));
  LUT6 #(
    .INIT(64'h55CCF0FF55CCF000)) 
    \Using_FPGA.Native_i_1__57 
       (.I0(\Using_FPGA.Native_i_2__7_n_0 ),
        .I1(\Using_FPGA.Native_i_3__1_n_0 ),
        .I2(dlmb_LMB_ReadDBus[1]),
        .I3(\Using_FPGA.Native ),
        .I4(O),
        .I5(dlmb_LMB_ReadDBus[9]),
        .O(extend_Data_Read[1]));
  LUT6 #(
    .INIT(64'h55CCF0FF55CCF000)) 
    \Using_FPGA.Native_i_1__58 
       (.I0(\Using_FPGA.Native_i_2__8_n_0 ),
        .I1(\Using_FPGA.Native_i_3__2_n_0 ),
        .I2(dlmb_LMB_ReadDBus[2]),
        .I3(\Using_FPGA.Native ),
        .I4(O),
        .I5(dlmb_LMB_ReadDBus[10]),
        .O(extend_Data_Read[2]));
  LUT6 #(
    .INIT(64'h55CCF0FF55CCF000)) 
    \Using_FPGA.Native_i_1__59 
       (.I0(\Using_FPGA.Native_i_2__9_n_0 ),
        .I1(\Using_FPGA.Native_i_3__3_n_0 ),
        .I2(dlmb_LMB_ReadDBus[3]),
        .I3(\Using_FPGA.Native ),
        .I4(O),
        .I5(dlmb_LMB_ReadDBus[11]),
        .O(extend_Data_Read[3]));
  LUT6 #(
    .INIT(64'h55CCF0FF55CCF000)) 
    \Using_FPGA.Native_i_1__60 
       (.I0(\Using_FPGA.Native_i_2__10_n_0 ),
        .I1(\Using_FPGA.Native_i_3__4_n_0 ),
        .I2(dlmb_LMB_ReadDBus[4]),
        .I3(\Using_FPGA.Native ),
        .I4(O),
        .I5(dlmb_LMB_ReadDBus[12]),
        .O(extend_Data_Read[4]));
  LUT6 #(
    .INIT(64'h55CCF0FF55CCF000)) 
    \Using_FPGA.Native_i_1__61 
       (.I0(\Using_FPGA.Native_i_2__11_n_0 ),
        .I1(\Using_FPGA.Native_i_3__5_n_0 ),
        .I2(dlmb_LMB_ReadDBus[5]),
        .I3(\Using_FPGA.Native ),
        .I4(O),
        .I5(dlmb_LMB_ReadDBus[13]),
        .O(extend_Data_Read[5]));
  LUT6 #(
    .INIT(64'h55CCF0FF55CCF000)) 
    \Using_FPGA.Native_i_1__62 
       (.I0(\Using_FPGA.Native_i_2__12_n_0 ),
        .I1(\Using_FPGA.Native_i_3__6_n_0 ),
        .I2(dlmb_LMB_ReadDBus[6]),
        .I3(\Using_FPGA.Native ),
        .I4(O),
        .I5(dlmb_LMB_ReadDBus[14]),
        .O(extend_Data_Read[6]));
  LUT6 #(
    .INIT(64'h55CCF0FF55CCF000)) 
    \Using_FPGA.Native_i_1__63 
       (.I0(\Using_FPGA.Native_i_2__13_n_0 ),
        .I1(\Using_FPGA.Native_i_3__7_n_0 ),
        .I2(dlmb_LMB_ReadDBus[7]),
        .I3(\Using_FPGA.Native ),
        .I4(O),
        .I5(dlmb_LMB_ReadDBus[15]),
        .O(extend_Data_Read[7]));
  LUT6 #(
    .INIT(64'h4F44FFFF4F440000)) 
    \Using_FPGA.Native_i_1__64 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[9]),
        .I2(\Using_FPGA.Native_0 ),
        .I3(DATA_OUTB[22]),
        .I4(O),
        .I5(dlmb_LMB_ReadDBus[9]),
        .O(extend_Data_Read[9]));
  LUT6 #(
    .INIT(64'h4F44FFFF4F440000)) 
    \Using_FPGA.Native_i_1__65 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[10]),
        .I2(\Using_FPGA.Native_0 ),
        .I3(DATA_OUTB[21]),
        .I4(O),
        .I5(dlmb_LMB_ReadDBus[10]),
        .O(extend_Data_Read[10]));
  LUT6 #(
    .INIT(64'h4F44FFFF4F440000)) 
    \Using_FPGA.Native_i_1__66 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[11]),
        .I2(\Using_FPGA.Native_0 ),
        .I3(DATA_OUTB[20]),
        .I4(O),
        .I5(dlmb_LMB_ReadDBus[11]),
        .O(extend_Data_Read[11]));
  LUT6 #(
    .INIT(64'h4F44FFFF4F440000)) 
    \Using_FPGA.Native_i_1__67 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[12]),
        .I2(\Using_FPGA.Native_0 ),
        .I3(DATA_OUTB[19]),
        .I4(O),
        .I5(dlmb_LMB_ReadDBus[12]),
        .O(extend_Data_Read[12]));
  LUT6 #(
    .INIT(64'h4F44FFFF4F440000)) 
    \Using_FPGA.Native_i_1__68 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[13]),
        .I2(\Using_FPGA.Native_0 ),
        .I3(DATA_OUTB[18]),
        .I4(O),
        .I5(dlmb_LMB_ReadDBus[13]),
        .O(extend_Data_Read[13]));
  LUT6 #(
    .INIT(64'h4F44FFFF4F440000)) 
    \Using_FPGA.Native_i_1__69 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[14]),
        .I2(\Using_FPGA.Native_0 ),
        .I3(DATA_OUTB[17]),
        .I4(O),
        .I5(dlmb_LMB_ReadDBus[14]),
        .O(extend_Data_Read[14]));
  LUT6 #(
    .INIT(64'h4F44FFFF4F440000)) 
    \Using_FPGA.Native_i_1__70 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[15]),
        .I2(\Using_FPGA.Native_0 ),
        .I3(DATA_OUTB[16]),
        .I4(O),
        .I5(dlmb_LMB_ReadDBus[15]),
        .O(extend_Data_Read[15]));
  LUT5 #(
    .INIT(32'hF4444444)) 
    \Using_FPGA.Native_i_1__71 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[16]),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[15]),
        .O(dlmb_LMB_ReadDBus[0]));
  LUT5 #(
    .INIT(32'hF4444444)) 
    \Using_FPGA.Native_i_1__72 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[17]),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[14]),
        .O(dlmb_LMB_ReadDBus[1]));
  LUT5 #(
    .INIT(32'hF4444444)) 
    \Using_FPGA.Native_i_1__73 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[18]),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[13]),
        .O(dlmb_LMB_ReadDBus[2]));
  LUT5 #(
    .INIT(32'hF4444444)) 
    \Using_FPGA.Native_i_1__74 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[19]),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[12]),
        .O(dlmb_LMB_ReadDBus[3]));
  LUT5 #(
    .INIT(32'hF4444444)) 
    \Using_FPGA.Native_i_1__75 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[20]),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[11]),
        .O(dlmb_LMB_ReadDBus[4]));
  LUT5 #(
    .INIT(32'hF4444444)) 
    \Using_FPGA.Native_i_1__76 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[21]),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[10]),
        .O(dlmb_LMB_ReadDBus[5]));
  LUT5 #(
    .INIT(32'hF4444444)) 
    \Using_FPGA.Native_i_1__77 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[22]),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[9]),
        .O(dlmb_LMB_ReadDBus[6]));
  LUT5 #(
    .INIT(32'hF4444444)) 
    \Using_FPGA.Native_i_1__78 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[23]),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[8]),
        .O(dlmb_LMB_ReadDBus[7]));
  LUT5 #(
    .INIT(32'hF4444444)) 
    \Using_FPGA.Native_i_1__79 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[24]),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[7]),
        .O(dlmb_LMB_ReadDBus[8]));
  LUT5 #(
    .INIT(32'hF4444444)) 
    \Using_FPGA.Native_i_1__80 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[25]),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[6]),
        .O(dlmb_LMB_ReadDBus[9]));
  LUT5 #(
    .INIT(32'hF4444444)) 
    \Using_FPGA.Native_i_1__81 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[26]),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[5]),
        .O(dlmb_LMB_ReadDBus[10]));
  LUT5 #(
    .INIT(32'hF4444444)) 
    \Using_FPGA.Native_i_1__82 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[27]),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[4]),
        .O(dlmb_LMB_ReadDBus[11]));
  LUT5 #(
    .INIT(32'hF4444444)) 
    \Using_FPGA.Native_i_1__83 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[28]),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[3]),
        .O(dlmb_LMB_ReadDBus[12]));
  LUT5 #(
    .INIT(32'hF4444444)) 
    \Using_FPGA.Native_i_1__84 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[29]),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[2]),
        .O(dlmb_LMB_ReadDBus[13]));
  LUT5 #(
    .INIT(32'hF4444444)) 
    \Using_FPGA.Native_i_1__85 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[30]),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[1]),
        .O(dlmb_LMB_ReadDBus[14]));
  LUT5 #(
    .INIT(32'hF4444444)) 
    \Using_FPGA.Native_i_1__86 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[31]),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[0]),
        .O(dlmb_LMB_ReadDBus[15]));
  LUT5 #(
    .INIT(32'hFFFFFFF8)) 
    \Using_FPGA.Native_i_1__88 
       (.I0(Sl_Rdy),
        .I1(lmb_as),
        .I2(lmb_reg_read_Q),
        .I3(lmb_reg_write),
        .I4(io_ready_Q),
        .O(dlmb_LMB_Ready));
  LUT5 #(
    .INIT(32'h0DDDDDDD)) 
    \Using_FPGA.Native_i_2__10 
       (.I0(io_bus_read_data[4]),
        .I1(lmb_reg_read_Q_reg_0),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[27]),
        .O(\Using_FPGA.Native_i_2__10_n_0 ));
  LUT5 #(
    .INIT(32'h0DDDDDDD)) 
    \Using_FPGA.Native_i_2__11 
       (.I0(io_bus_read_data[5]),
        .I1(lmb_reg_read_Q_reg_0),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[26]),
        .O(\Using_FPGA.Native_i_2__11_n_0 ));
  LUT5 #(
    .INIT(32'h0DDDDDDD)) 
    \Using_FPGA.Native_i_2__12 
       (.I0(io_bus_read_data[6]),
        .I1(lmb_reg_read_Q_reg_0),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[25]),
        .O(\Using_FPGA.Native_i_2__12_n_0 ));
  LUT5 #(
    .INIT(32'h0DDDDDDD)) 
    \Using_FPGA.Native_i_2__13 
       (.I0(io_bus_read_data[7]),
        .I1(lmb_reg_read_Q_reg_0),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[24]),
        .O(\Using_FPGA.Native_i_2__13_n_0 ));
  LUT6 #(
    .INIT(64'h4F44FFFF4F440000)) 
    \Using_FPGA.Native_i_2__14 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[8]),
        .I2(\Using_FPGA.Native_0 ),
        .I3(DATA_OUTB[23]),
        .I4(O),
        .I5(dlmb_LMB_ReadDBus[8]),
        .O(extend_Data_Read[8]));
  LUT5 #(
    .INIT(32'h00010101)) 
    \Using_FPGA.Native_i_2__15 
       (.I0(io_ready_Q),
        .I1(lmb_reg_write),
        .I2(lmb_reg_read_Q),
        .I3(lmb_as),
        .I4(Sl_Rdy),
        .O(\Using_IO_Bus.io_ready_Q_reg_0 ));
  LUT5 #(
    .INIT(32'h0DDDDDDD)) 
    \Using_FPGA.Native_i_2__6 
       (.I0(io_bus_read_data[0]),
        .I1(lmb_reg_read_Q_reg_0),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[31]),
        .O(\Using_FPGA.Native_i_2__6_n_0 ));
  LUT5 #(
    .INIT(32'h0DDDDDDD)) 
    \Using_FPGA.Native_i_2__7 
       (.I0(io_bus_read_data[1]),
        .I1(lmb_reg_read_Q_reg_0),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[30]),
        .O(\Using_FPGA.Native_i_2__7_n_0 ));
  LUT5 #(
    .INIT(32'h0DDDDDDD)) 
    \Using_FPGA.Native_i_2__8 
       (.I0(io_bus_read_data[2]),
        .I1(lmb_reg_read_Q_reg_0),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[29]),
        .O(\Using_FPGA.Native_i_2__8_n_0 ));
  LUT5 #(
    .INIT(32'h0DDDDDDD)) 
    \Using_FPGA.Native_i_2__9 
       (.I0(io_bus_read_data[3]),
        .I1(lmb_reg_read_Q_reg_0),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[28]),
        .O(\Using_FPGA.Native_i_2__9_n_0 ));
  LUT5 #(
    .INIT(32'hF4444444)) 
    \Using_FPGA.Native_i_3__0 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[8]),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[23]),
        .O(\Using_FPGA.Native_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'hF4444444)) 
    \Using_FPGA.Native_i_3__1 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[9]),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[22]),
        .O(\Using_FPGA.Native_i_3__1_n_0 ));
  LUT5 #(
    .INIT(32'hF4444444)) 
    \Using_FPGA.Native_i_3__2 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[10]),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[21]),
        .O(\Using_FPGA.Native_i_3__2_n_0 ));
  LUT5 #(
    .INIT(32'hF4444444)) 
    \Using_FPGA.Native_i_3__3 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[11]),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[20]),
        .O(\Using_FPGA.Native_i_3__3_n_0 ));
  LUT5 #(
    .INIT(32'hF4444444)) 
    \Using_FPGA.Native_i_3__4 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[12]),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[19]),
        .O(\Using_FPGA.Native_i_3__4_n_0 ));
  LUT5 #(
    .INIT(32'hF4444444)) 
    \Using_FPGA.Native_i_3__5 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[13]),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[18]),
        .O(\Using_FPGA.Native_i_3__5_n_0 ));
  LUT5 #(
    .INIT(32'hF4444444)) 
    \Using_FPGA.Native_i_3__6 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[14]),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[17]),
        .O(\Using_FPGA.Native_i_3__6_n_0 ));
  LUT5 #(
    .INIT(32'hF4444444)) 
    \Using_FPGA.Native_i_3__7 
       (.I0(lmb_reg_read_Q_reg_0),
        .I1(io_bus_read_data[15]),
        .I2(Sl_Rdy),
        .I3(lmb_as),
        .I4(DATA_OUTB[16]),
        .O(\Using_FPGA.Native_i_3__7_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \Using_FPGA.Native_i_3__8 
       (.I0(lmb_reg_read_Q),
        .I1(lmb_reg_write),
        .I2(io_ready_Q),
        .O(lmb_reg_read_Q_reg_0));
  FDRE \Using_IO_Bus.IO_Addr_Strobe_reg 
       (.C(out),
        .CE(1'b1),
        .D(IO_Addr_Strobe0),
        .Q(mb_den_i),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[0] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[31]),
        .Q(Q[0]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[10] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[21]),
        .Q(Q[10]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[11] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[20]),
        .Q(Q[11]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[12] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[19]),
        .Q(Q[12]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[13] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[18]),
        .Q(Q[13]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[14] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[17]),
        .Q(Q[14]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[15] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[16]),
        .Q(Q[15]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[16] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[15]),
        .Q(Q[16]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[17] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[14]),
        .Q(Q[17]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[18] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[13]),
        .Q(Q[18]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[19] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[12]),
        .Q(Q[19]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[1] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[30]),
        .Q(Q[1]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[20] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[11]),
        .Q(Q[20]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[21] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[10]),
        .Q(Q[21]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[22] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[9]),
        .Q(Q[22]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[23] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[8]),
        .Q(Q[23]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[24] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[7]),
        .Q(Q[24]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[25] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[6]),
        .Q(Q[25]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[26] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[5]),
        .Q(Q[26]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[27] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[4]),
        .Q(Q[27]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[28] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[3]),
        .Q(Q[28]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[29] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[2]),
        .Q(Q[29]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[2] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[29]),
        .Q(Q[2]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[30] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[1]),
        .Q(Q[30]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[31] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[0]),
        .Q(Q[31]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[3] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[28]),
        .Q(Q[3]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[4] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[27]),
        .Q(Q[4]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[5] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[26]),
        .Q(Q[5]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[6] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[25]),
        .Q(Q[6]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[7] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[24]),
        .Q(Q[7]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[8] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[23]),
        .Q(Q[8]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Address_reg[9] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(dlmb_M_ABus[22]),
        .Q(Q[9]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Read_Strobe_reg 
       (.C(out),
        .CE(1'b1),
        .D(IO_Read_Strobe),
        .Q(mb_rden_i),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[0] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[0]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [0]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[10] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[10]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [10]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[11] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[11]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [11]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[12] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[12]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [12]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[13] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[13]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [13]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[14] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[14]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [14]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[15] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[15]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [15]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[16] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[16]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [16]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[17] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[17]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [17]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[18] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[18]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [18]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[19] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[19]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [19]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[1] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[1]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [1]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[20] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[20]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [20]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[21] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[21]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [21]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[22] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[22]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [22]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[23] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[23]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [23]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[24] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[24]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [24]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[25] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[25]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [25]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[26] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[26]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [26]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[27] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[27]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [27]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[28] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[28]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [28]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[29] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[29]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [29]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[2] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[2]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [2]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[30] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[30]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [30]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[31] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[31]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [31]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[3] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[3]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [3]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[4] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[4]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [4]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[5] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[5]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [5]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[6] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[6]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [6]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[7] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[7]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [7]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[8] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[8]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [8]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Data_reg[9] 
       (.C(out),
        .CE(IO_Addr_Strobe0),
        .D(D[9]),
        .Q(\Using_IO_Bus.IO_Write_Data_reg[31]_0 [9]),
        .R(SR));
  FDRE \Using_IO_Bus.IO_Write_Strobe_reg 
       (.C(out),
        .CE(1'b1),
        .D(IO_Write_Strobe),
        .Q(mb_wren_i),
        .R(SR));
  LUT2 #(
    .INIT(4'h7)) 
    \Using_IO_Bus.io_bus_read_data[31]_i_1 
       (.I0(mb_rdy_o),
        .I1(\Using_IO_Bus.io_read_keep_reg_n_0 ),
        .O(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[0] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[0]),
        .Q(io_bus_read_data[0]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[10] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[10]),
        .Q(io_bus_read_data[10]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[11] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[11]),
        .Q(io_bus_read_data[11]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[12] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[12]),
        .Q(io_bus_read_data[12]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[13] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[13]),
        .Q(io_bus_read_data[13]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[14] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[14]),
        .Q(io_bus_read_data[14]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[15] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[15]),
        .Q(io_bus_read_data[15]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[16] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[16]),
        .Q(io_bus_read_data[16]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[17] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[17]),
        .Q(io_bus_read_data[17]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[18] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[18]),
        .Q(io_bus_read_data[18]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[19] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[19]),
        .Q(io_bus_read_data[19]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[1] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[1]),
        .Q(io_bus_read_data[1]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[20] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[20]),
        .Q(io_bus_read_data[20]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[21] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[21]),
        .Q(io_bus_read_data[21]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[22] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[22]),
        .Q(io_bus_read_data[22]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[23] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[23]),
        .Q(io_bus_read_data[23]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[24] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[24]),
        .Q(io_bus_read_data[24]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[25] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[25]),
        .Q(io_bus_read_data[25]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[26] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[26]),
        .Q(io_bus_read_data[26]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[27] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[27]),
        .Q(io_bus_read_data[27]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[28] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[28]),
        .Q(io_bus_read_data[28]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[29] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[29]),
        .Q(io_bus_read_data[29]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[2] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[2]),
        .Q(io_bus_read_data[2]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[30] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[30]),
        .Q(io_bus_read_data[30]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[31] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[31]),
        .Q(io_bus_read_data[31]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[3] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[3]),
        .Q(io_bus_read_data[3]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[4] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[4]),
        .Q(io_bus_read_data[4]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[5] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[5]),
        .Q(io_bus_read_data[5]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[6] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[6]),
        .Q(io_bus_read_data[6]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[7] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[7]),
        .Q(io_bus_read_data[7]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[8] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[8]),
        .Q(io_bus_read_data[8]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_bus_read_data_reg[9] 
       (.C(out),
        .CE(1'b1),
        .D(mb_do_o[9]),
        .Q(io_bus_read_data[9]),
        .R(\Using_IO_Bus.io_bus_read_data[31]_i_1_n_0 ));
  FDRE \Using_IO_Bus.io_read_keep_reg 
       (.C(out),
        .CE(io_read_keep),
        .D(IO_Read_Strobe),
        .Q(\Using_IO_Bus.io_read_keep_reg_n_0 ),
        .R(SR));
  LUT2 #(
    .INIT(4'h8)) 
    \Using_IO_Bus.io_ready_Q_i_1 
       (.I0(mb_rdy_o),
        .I1(lmb_io_select_keep),
        .O(io_ready_Q0));
  FDRE \Using_IO_Bus.io_ready_Q_reg 
       (.C(out),
        .CE(1'b1),
        .D(io_ready_Q0),
        .Q(io_ready_Q),
        .R(1'b0));
  FDRE \Using_IO_Bus.lmb_io_select_keep_reg 
       (.C(out),
        .CE(io_read_keep),
        .D(IO_Addr_Strobe0),
        .Q(lmb_io_select_keep),
        .R(SR));
  FDRE \lmb_abus_Q_reg[0] 
       (.C(out),
        .CE(1'b1),
        .D(dlmb_M_ABus[24]),
        .Q(p_0_in20_in),
        .R(1'b0));
  FDRE \lmb_abus_Q_reg[1] 
       (.C(out),
        .CE(1'b1),
        .D(dlmb_M_ABus[25]),
        .Q(\lmb_abus_Q_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \lmb_abus_Q_reg[2] 
       (.C(out),
        .CE(1'b1),
        .D(dlmb_M_ABus[26]),
        .Q(\lmb_abus_Q_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \lmb_abus_Q_reg[3] 
       (.C(out),
        .CE(1'b1),
        .D(dlmb_M_ABus[27]),
        .Q(\lmb_abus_Q_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \lmb_abus_Q_reg[4] 
       (.C(out),
        .CE(1'b1),
        .D(dlmb_M_ABus[28]),
        .Q(\lmb_abus_Q_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \lmb_abus_Q_reg[5] 
       (.C(out),
        .CE(1'b1),
        .D(dlmb_M_ABus[29]),
        .Q(\lmb_abus_Q_reg_n_0_[5] ),
        .R(1'b0));
  FDRE lmb_reg_read_Q_reg
       (.C(out),
        .CE(1'b1),
        .D(lmb_reg_read),
        .Q(lmb_reg_read_Q),
        .R(1'b0));
  FDRE lmb_reg_read_reg
       (.C(out),
        .CE(1'b1),
        .D(lmb_reg_read0),
        .Q(lmb_reg_read),
        .R(1'b0));
  FDRE lmb_reg_write_reg
       (.C(out),
        .CE(1'b1),
        .D(lmb_reg_write0),
        .Q(lmb_reg_write),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h0001)) 
    uart_tx_write_inferred_i_1
       (.I0(p_0_in20_in),
        .I1(\lmb_abus_Q_reg_n_0_[1] ),
        .I2(\lmb_abus_Q_reg_n_0_[3] ),
        .I3(uart_tx_write_inferred_i_2_n_0),
        .O(uart_tx_write));
  LUT4 #(
    .INIT(16'hFFDF)) 
    uart_tx_write_inferred_i_2
       (.I0(lmb_reg_write),
        .I1(\lmb_abus_Q_reg_n_0_[4] ),
        .I2(\lmb_abus_Q_reg_n_0_[5] ),
        .I3(\lmb_abus_Q_reg_n_0_[2] ),
        .O(uart_tx_write_inferred_i_2_n_0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[0] 
       (.C(out),
        .CE(1'b1),
        .D(D[0]),
        .Q(write_data[0]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[10] 
       (.C(out),
        .CE(1'b1),
        .D(D[10]),
        .Q(write_data[10]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[11] 
       (.C(out),
        .CE(1'b1),
        .D(D[11]),
        .Q(write_data[11]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[12] 
       (.C(out),
        .CE(1'b1),
        .D(D[12]),
        .Q(write_data[12]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[13] 
       (.C(out),
        .CE(1'b1),
        .D(D[13]),
        .Q(write_data[13]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[14] 
       (.C(out),
        .CE(1'b1),
        .D(D[14]),
        .Q(write_data[14]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[15] 
       (.C(out),
        .CE(1'b1),
        .D(D[15]),
        .Q(write_data[15]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[16] 
       (.C(out),
        .CE(1'b1),
        .D(D[16]),
        .Q(write_data[16]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[17] 
       (.C(out),
        .CE(1'b1),
        .D(D[17]),
        .Q(write_data[17]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[18] 
       (.C(out),
        .CE(1'b1),
        .D(D[18]),
        .Q(write_data[18]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[19] 
       (.C(out),
        .CE(1'b1),
        .D(D[19]),
        .Q(write_data[19]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[1] 
       (.C(out),
        .CE(1'b1),
        .D(D[1]),
        .Q(write_data[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[20] 
       (.C(out),
        .CE(1'b1),
        .D(D[20]),
        .Q(write_data[20]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[21] 
       (.C(out),
        .CE(1'b1),
        .D(D[21]),
        .Q(write_data[21]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[22] 
       (.C(out),
        .CE(1'b1),
        .D(D[22]),
        .Q(write_data[22]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[23] 
       (.C(out),
        .CE(1'b1),
        .D(D[23]),
        .Q(write_data[23]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[24] 
       (.C(out),
        .CE(1'b1),
        .D(D[24]),
        .Q(write_data[24]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[25] 
       (.C(out),
        .CE(1'b1),
        .D(D[25]),
        .Q(write_data[25]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[26] 
       (.C(out),
        .CE(1'b1),
        .D(D[26]),
        .Q(write_data[26]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[27] 
       (.C(out),
        .CE(1'b1),
        .D(D[27]),
        .Q(write_data[27]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[28] 
       (.C(out),
        .CE(1'b1),
        .D(D[28]),
        .Q(write_data[28]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[29] 
       (.C(out),
        .CE(1'b1),
        .D(D[29]),
        .Q(write_data[29]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[2] 
       (.C(out),
        .CE(1'b1),
        .D(D[2]),
        .Q(write_data[2]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[30] 
       (.C(out),
        .CE(1'b1),
        .D(D[30]),
        .Q(write_data[30]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[31] 
       (.C(out),
        .CE(1'b1),
        .D(D[31]),
        .Q(write_data[31]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[3] 
       (.C(out),
        .CE(1'b1),
        .D(D[3]),
        .Q(write_data[3]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[4] 
       (.C(out),
        .CE(1'b1),
        .D(D[4]),
        .Q(write_data[4]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[5] 
       (.C(out),
        .CE(1'b1),
        .D(D[5]),
        .Q(write_data[5]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[6] 
       (.C(out),
        .CE(1'b1),
        .D(D[6]),
        .Q(write_data[6]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[7] 
       (.C(out),
        .CE(1'b1),
        .D(D[7]),
        .Q(write_data[7]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[8] 
       (.C(out),
        .CE(1'b1),
        .D(D[8]),
        .Q(write_data[8]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \write_data_reg[9] 
       (.C(out),
        .CE(1'b1),
        .D(D[9]),
        .Q(write_data[9]),
        .R(1'b0));
endmodule

module c2c_gth_in_system_ibert_0_lmb_bram_if_cntlr
   (Sl_Rdy,
    lmb_as,
    \No_ECC.Sl_Rdy_reg_0 ,
    dlmb_LMB_Rst,
    lmb_select,
    out,
    dlmb_M_AddrStrobe);
  output Sl_Rdy;
  output lmb_as;
  output \No_ECC.Sl_Rdy_reg_0 ;
  input dlmb_LMB_Rst;
  input lmb_select;
  input out;
  input dlmb_M_AddrStrobe;

  wire \No_ECC.Sl_Rdy_reg_0 ;
  wire Sl_Rdy;
  wire dlmb_LMB_Rst;
  wire dlmb_M_AddrStrobe;
  wire lmb_as;
  wire lmb_select;
  wire out;

  FDRE \No_ECC.Sl_Rdy_reg 
       (.C(out),
        .CE(1'b1),
        .D(lmb_select),
        .Q(Sl_Rdy),
        .R(dlmb_LMB_Rst));
  FDRE \No_ECC.lmb_as_reg 
       (.C(out),
        .CE(1'b1),
        .D(dlmb_M_AddrStrobe),
        .Q(lmb_as),
        .R(dlmb_LMB_Rst));
  LUT2 #(
    .INIT(4'h7)) 
    \Using_FPGA.Native_i_4 
       (.I0(Sl_Rdy),
        .I1(lmb_as),
        .O(\No_ECC.Sl_Rdy_reg_0 ));
endmodule

(* ORIG_REF_NAME = "lmb_bram_if_cntlr" *) 
module c2c_gth_in_system_ibert_0_lmb_bram_if_cntlr__parameterized1
   (Sl_Rdy,
    lmb_as,
    \No_ECC.Sl_Rdy_reg_0 ,
    ilmb_Sl_Ready,
    ilmb_LMB_Rst,
    out,
    ilmb_M_AddrStrobe,
    inHibit_EX_reg,
    inHibit_EX_reg_0);
  output Sl_Rdy;
  output lmb_as;
  output \No_ECC.Sl_Rdy_reg_0 ;
  output ilmb_Sl_Ready;
  input ilmb_LMB_Rst;
  input out;
  input ilmb_M_AddrStrobe;
  input inHibit_EX_reg;
  input inHibit_EX_reg_0;

  wire \No_ECC.Sl_Rdy_reg_0 ;
  wire Sl_Rdy;
  wire ilmb_LMB_Rst;
  wire ilmb_M_AddrStrobe;
  wire ilmb_Sl_Ready;
  wire inHibit_EX_reg;
  wire inHibit_EX_reg_0;
  wire lmb_as;
  wire out;

  FDRE \No_ECC.Sl_Rdy_reg 
       (.C(out),
        .CE(1'b1),
        .D(1'b1),
        .Q(Sl_Rdy),
        .R(ilmb_LMB_Rst));
  FDRE \No_ECC.lmb_as_reg 
       (.C(out),
        .CE(1'b1),
        .D(ilmb_M_AddrStrobe),
        .Q(lmb_as),
        .R(ilmb_LMB_Rst));
  LUT2 #(
    .INIT(4'h8)) 
    \Using_FPGA.Native_i_1__54 
       (.I0(Sl_Rdy),
        .I1(lmb_as),
        .O(ilmb_Sl_Ready));
  LUT4 #(
    .INIT(16'h00F7)) 
    inHibit_EX_i_1
       (.I0(Sl_Rdy),
        .I1(lmb_as),
        .I2(inHibit_EX_reg),
        .I3(inHibit_EX_reg_0),
        .O(\No_ECC.Sl_Rdy_reg_0 ));
endmodule

module c2c_gth_in_system_ibert_0_lmb_v10
   (ilmb_LMB_Rst,
    SR,
    out);
  output ilmb_LMB_Rst;
  input [0:0]SR;
  input out;

  wire [0:0]SR;
  wire ilmb_LMB_Rst;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDS" *) 
  (* box_type = "PRIMITIVE" *) 
  FDSE #(
    .INIT(1'b1)) 
    POR_FF_I
       (.C(out),
        .CE(1'b1),
        .D(1'b0),
        .Q(ilmb_LMB_Rst),
        .S(SR));
endmodule

(* ORIG_REF_NAME = "lmb_v10" *) 
module c2c_gth_in_system_ibert_0_lmb_v10__parameterized1
   (dlmb_LMB_Rst,
    SR,
    out);
  output dlmb_LMB_Rst;
  input [0:0]SR;
  input out;

  wire [0:0]SR;
  wire dlmb_LMB_Rst;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDS" *) 
  (* box_type = "PRIMITIVE" *) 
  FDSE #(
    .INIT(1'b1)) 
    POR_FF_I
       (.C(out),
        .CE(1'b1),
        .D(1'b0),
        .Q(dlmb_LMB_Rst),
        .S(SR));
endmodule

module c2c_gth_in_system_ibert_0_ALU
   (lmb_select,
    O,
    LO,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus,
    carry_In,
    Unsigned_Op,
    op2_C,
    alu_Op,
    Op1_Logic,
    compare_Instr,
    EX_Op2,
    EX_Op1,
    \Using_FPGA.Native_I2 ,
    \Using_FPGA.Native_I2_0 ,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1_1 ,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1_2 ,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1_3 ,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1_4 ,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1_5 ,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1_6 ,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1_7 ,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1_8 ,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1_9 ,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1_10 ,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1_11 ,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1_12 ,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1_13 ,
    Op1_Shift,
    \Using_IO_Bus.IO_Address_reg[16] ,
    \Using_IO_Bus.IO_Address_reg[17] ,
    \Using_IO_Bus.IO_Address_reg[18] ,
    \Using_IO_Bus.IO_Address_reg[19] ,
    \Using_IO_Bus.IO_Address_reg[20] ,
    \Using_IO_Bus.IO_Address_reg[21] ,
    \Using_IO_Bus.IO_Address_reg[22] ,
    \Using_IO_Bus.IO_Address_reg[23] ,
    \Using_IO_Bus.IO_Address_reg[24] ,
    \Using_IO_Bus.IO_Address_reg[25] ,
    \Using_IO_Bus.IO_Address_reg[26] ,
    \Using_IO_Bus.IO_Address_reg[27] ,
    \Using_IO_Bus.IO_Address_reg[28] ,
    \Using_IO_Bus.IO_Address_reg[29] ,
    \Using_IO_Bus.IO_Address_reg[30] ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output lmb_select;
  output O;
  output LO;
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [28:0]dlmb_M_ABus;
  input carry_In;
  input Unsigned_Op;
  input [27:0]op2_C;
  input [0:1]alu_Op;
  input Op1_Logic;
  input compare_Instr;
  input EX_Op2;
  input EX_Op1;
  input \Using_FPGA.Native_I2 ;
  input \Using_FPGA.Native_I2_0 ;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1_1 ;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1_2 ;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1_3 ;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1_4 ;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1_5 ;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1_6 ;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1_7 ;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1_8 ;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1_9 ;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1_10 ;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1_11 ;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1_12 ;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1_13 ;
  input Op1_Shift;
  input \Using_IO_Bus.IO_Address_reg[16] ;
  input \Using_IO_Bus.IO_Address_reg[17] ;
  input \Using_IO_Bus.IO_Address_reg[18] ;
  input \Using_IO_Bus.IO_Address_reg[19] ;
  input \Using_IO_Bus.IO_Address_reg[20] ;
  input \Using_IO_Bus.IO_Address_reg[21] ;
  input \Using_IO_Bus.IO_Address_reg[22] ;
  input \Using_IO_Bus.IO_Address_reg[23] ;
  input \Using_IO_Bus.IO_Address_reg[24] ;
  input \Using_IO_Bus.IO_Address_reg[25] ;
  input \Using_IO_Bus.IO_Address_reg[26] ;
  input \Using_IO_Bus.IO_Address_reg[27] ;
  input \Using_IO_Bus.IO_Address_reg[28] ;
  input \Using_IO_Bus.IO_Address_reg[29] ;
  input \Using_IO_Bus.IO_Address_reg[30] ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  output lopt_7;
  input lopt_8;
  input lopt_9;
  input lopt_10;
  input lopt_11;

  wire EX_Op1;
  wire EX_Op2;
  wire LO;
  wire O;
  wire Op1_Logic;
  wire Op1_Shift;
  wire Unsigned_Op;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1_1 ;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1_10 ;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1_11 ;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1_12 ;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1_13 ;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1_2 ;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1_3 ;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1_4 ;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1_5 ;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1_6 ;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1_7 ;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1_8 ;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1_9 ;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_I2 ;
  wire \Using_FPGA.Native_I2_0 ;
  wire \Using_IO_Bus.IO_Address_reg[16] ;
  wire \Using_IO_Bus.IO_Address_reg[17] ;
  wire \Using_IO_Bus.IO_Address_reg[18] ;
  wire \Using_IO_Bus.IO_Address_reg[19] ;
  wire \Using_IO_Bus.IO_Address_reg[20] ;
  wire \Using_IO_Bus.IO_Address_reg[21] ;
  wire \Using_IO_Bus.IO_Address_reg[22] ;
  wire \Using_IO_Bus.IO_Address_reg[23] ;
  wire \Using_IO_Bus.IO_Address_reg[24] ;
  wire \Using_IO_Bus.IO_Address_reg[25] ;
  wire \Using_IO_Bus.IO_Address_reg[26] ;
  wire \Using_IO_Bus.IO_Address_reg[27] ;
  wire \Using_IO_Bus.IO_Address_reg[28] ;
  wire \Using_IO_Bus.IO_Address_reg[29] ;
  wire \Using_IO_Bus.IO_Address_reg[30] ;
  wire [0:1]alu_Op;
  wire alu_carry_0;
  wire alu_carry_1;
  wire alu_carry_10;
  wire alu_carry_11;
  wire alu_carry_12;
  wire alu_carry_13;
  wire alu_carry_14;
  wire alu_carry_15;
  wire alu_carry_16;
  wire alu_carry_17;
  wire alu_carry_18;
  wire alu_carry_19;
  wire alu_carry_2;
  wire alu_carry_20;
  wire alu_carry_21;
  wire alu_carry_22;
  wire alu_carry_23;
  wire alu_carry_24;
  wire alu_carry_25;
  wire alu_carry_26;
  wire alu_carry_27;
  wire alu_carry_28;
  wire alu_carry_29;
  wire alu_carry_3;
  wire alu_carry_30;
  wire alu_carry_31;
  wire alu_carry_4;
  wire alu_carry_5;
  wire alu_carry_6;
  wire alu_carry_7;
  wire alu_carry_8;
  wire alu_carry_9;
  wire carry_In;
  wire compare_Instr;
  wire control_carry;
  wire [28:0]dlmb_M_ABus;
  wire lmb_select;
  wire \^lopt ;
  wire \^lopt_1 ;
  wire \^lopt_10 ;
  wire lopt_100;
  wire lopt_101;
  wire lopt_102;
  wire lopt_103;
  wire lopt_104;
  wire lopt_105;
  wire lopt_106;
  wire lopt_107;
  wire lopt_108;
  wire lopt_109;
  wire \^lopt_11 ;
  wire lopt_110;
  wire lopt_111;
  wire lopt_112;
  wire lopt_113;
  wire lopt_114;
  wire lopt_115;
  wire lopt_116;
  wire lopt_117;
  wire lopt_118;
  wire lopt_119;
  wire lopt_12;
  wire lopt_120;
  wire lopt_121;
  wire lopt_122;
  wire lopt_123;
  wire lopt_124;
  wire lopt_125;
  wire lopt_126;
  wire lopt_127;
  wire lopt_128;
  wire lopt_129;
  wire lopt_13;
  wire lopt_130;
  wire lopt_131;
  wire lopt_132;
  wire lopt_133;
  wire lopt_134;
  wire lopt_135;
  wire lopt_136;
  wire lopt_137;
  wire lopt_138;
  wire lopt_139;
  wire lopt_14;
  wire lopt_140;
  wire lopt_141;
  wire lopt_142;
  wire lopt_143;
  wire lopt_144;
  wire lopt_145;
  wire lopt_146;
  wire lopt_147;
  wire lopt_15;
  wire lopt_16;
  wire lopt_17;
  wire lopt_18;
  wire lopt_19;
  wire \^lopt_2 ;
  wire lopt_20;
  wire lopt_21;
  wire lopt_22;
  wire lopt_23;
  wire lopt_24;
  wire lopt_25;
  wire lopt_26;
  wire lopt_27;
  wire lopt_28;
  wire lopt_29;
  wire \^lopt_3 ;
  wire lopt_30;
  wire lopt_31;
  wire lopt_32;
  wire lopt_33;
  wire lopt_34;
  wire lopt_35;
  wire lopt_36;
  wire lopt_37;
  wire lopt_38;
  wire lopt_39;
  wire \^lopt_4 ;
  wire lopt_40;
  wire lopt_41;
  wire lopt_42;
  wire lopt_43;
  wire lopt_44;
  wire lopt_45;
  wire lopt_46;
  wire lopt_47;
  wire lopt_48;
  wire lopt_49;
  wire \^lopt_5 ;
  wire lopt_50;
  wire lopt_51;
  wire lopt_52;
  wire lopt_53;
  wire lopt_54;
  wire lopt_55;
  wire lopt_56;
  wire lopt_57;
  wire lopt_58;
  wire lopt_59;
  wire \^lopt_6 ;
  wire lopt_60;
  wire lopt_61;
  wire lopt_62;
  wire lopt_63;
  wire lopt_64;
  wire lopt_65;
  wire lopt_66;
  wire lopt_67;
  wire lopt_68;
  wire lopt_69;
  wire \^lopt_7 ;
  wire lopt_70;
  wire lopt_71;
  wire lopt_72;
  wire lopt_73;
  wire lopt_74;
  wire lopt_75;
  wire lopt_76;
  wire lopt_77;
  wire lopt_78;
  wire lopt_79;
  wire \^lopt_8 ;
  wire lopt_80;
  wire lopt_81;
  wire lopt_82;
  wire lopt_83;
  wire lopt_84;
  wire lopt_85;
  wire lopt_86;
  wire lopt_87;
  wire lopt_88;
  wire lopt_89;
  wire \^lopt_9 ;
  wire lopt_90;
  wire lopt_91;
  wire lopt_92;
  wire lopt_93;
  wire lopt_94;
  wire lopt_95;
  wire lopt_96;
  wire lopt_97;
  wire lopt_98;
  wire lopt_99;
  wire [27:0]op2_C;

  assign lopt = lopt_96;
  assign lopt_100 = lopt_4;
  assign lopt_101 = lopt_5;
  assign lopt_144 = lopt_8;
  assign lopt_145 = lopt_9;
  assign lopt_146 = lopt_10;
  assign lopt_147 = lopt_11;
  assign lopt_3 = lopt_99;
  assign lopt_6 = lopt_142;
  assign lopt_7 = lopt_143;
  assign lopt_97 = lopt_1;
  assign lopt_98 = lopt_2;
  c2c_gth_in_system_ibert_0_ALU_Bit__parameterized2 \ALL_Bits[0].ALU_Bit_I1 
       (.LO(alu_carry_31),
        .O(O),
        .Op1_Logic(Op1_Logic),
        .Unsigned_Op(Unsigned_Op),
        .\Using_FPGA.Native (LO),
        .alu_Op(alu_Op),
        .compare_Instr(compare_Instr),
        .lmb_select(lmb_select),
        .lopt(lopt_96),
        .lopt_1(lopt_97),
        .lopt_10(lopt_146),
        .lopt_11(lopt_147),
        .lopt_2(lopt_98),
        .lopt_3(lopt_99),
        .lopt_4(lopt_100),
        .lopt_5(lopt_101),
        .lopt_6(lopt_142),
        .lopt_7(lopt_143),
        .lopt_8(lopt_144),
        .lopt_9(lopt_145),
        .op2_C(op2_C[27]));
  c2c_gth_in_system_ibert_0_ALU_Bit \ALL_Bits[10].ALU_Bit_I1 
       (.EX_CarryOut(alu_carry_22),
        .LO(alu_carry_21),
        .\Using_IO_Bus.IO_Address_reg[21] (\Using_IO_Bus.IO_Address_reg[21] ),
        .alu_Op(alu_Op),
        .dlmb_M_ABus(dlmb_M_ABus[19]),
        .lopt(lopt_63),
        .lopt_1(lopt_64),
        .lopt_2(lopt_65),
        .lopt_3(lopt_70),
        .op2_C(op2_C[17]));
  c2c_gth_in_system_ibert_0_ALU_Bit_619 \ALL_Bits[11].ALU_Bit_I1 
       (.EX_CarryOut(alu_carry_21),
        .LO(alu_carry_20),
        .\Using_IO_Bus.IO_Address_reg[20] (\Using_IO_Bus.IO_Address_reg[20] ),
        .alu_Op(alu_Op),
        .dlmb_M_ABus(dlmb_M_ABus[18]),
        .lopt(lopt_60),
        .lopt_1(lopt_61),
        .lopt_2(lopt_62),
        .lopt_3(lopt_69),
        .op2_C(op2_C[16]));
  c2c_gth_in_system_ibert_0_ALU_Bit_620 \ALL_Bits[12].ALU_Bit_I1 
       (.EX_CarryOut(alu_carry_20),
        .LO(alu_carry_19),
        .\Using_IO_Bus.IO_Address_reg[19] (\Using_IO_Bus.IO_Address_reg[19] ),
        .alu_Op(alu_Op),
        .dlmb_M_ABus(dlmb_M_ABus[17]),
        .lopt(lopt_60),
        .lopt_1(lopt_61),
        .lopt_10(lopt_70),
        .lopt_11(lopt_71),
        .lopt_12(lopt_122),
        .lopt_13(lopt_123),
        .lopt_14(lopt_124),
        .lopt_15(lopt_125),
        .lopt_16(lopt_126),
        .lopt_17(lopt_127),
        .lopt_18(lopt_128),
        .lopt_19(lopt_129),
        .lopt_2(lopt_62),
        .lopt_20(lopt_130),
        .lopt_21(lopt_131),
        .lopt_3(lopt_63),
        .lopt_4(lopt_64),
        .lopt_5(lopt_65),
        .lopt_6(lopt_66),
        .lopt_7(lopt_67),
        .lopt_8(lopt_68),
        .lopt_9(lopt_69),
        .op2_C(op2_C[15]));
  c2c_gth_in_system_ibert_0_ALU_Bit_621 \ALL_Bits[13].ALU_Bit_I1 
       (.EX_CarryOut(alu_carry_19),
        .LO(alu_carry_18),
        .\Using_IO_Bus.IO_Address_reg[18] (\Using_IO_Bus.IO_Address_reg[18] ),
        .alu_Op(alu_Op),
        .dlmb_M_ABus(dlmb_M_ABus[16]),
        .lopt(lopt_54),
        .lopt_1(lopt_55),
        .lopt_2(lopt_56),
        .lopt_3(lopt_59),
        .op2_C(op2_C[14]));
  c2c_gth_in_system_ibert_0_ALU_Bit_622 \ALL_Bits[14].ALU_Bit_I1 
       (.EX_CarryOut(alu_carry_18),
        .LO(alu_carry_17),
        .\Using_IO_Bus.IO_Address_reg[17] (\Using_IO_Bus.IO_Address_reg[17] ),
        .alu_Op(alu_Op),
        .dlmb_M_ABus(dlmb_M_ABus[15]),
        .lopt(lopt_51),
        .lopt_1(lopt_52),
        .lopt_2(lopt_53),
        .lopt_3(lopt_58),
        .op2_C(op2_C[13]));
  c2c_gth_in_system_ibert_0_ALU_Bit_623 \ALL_Bits[15].ALU_Bit_I1 
       (.EX_CarryOut(alu_carry_17),
        .LO(alu_carry_16),
        .\Using_IO_Bus.IO_Address_reg[16] (\Using_IO_Bus.IO_Address_reg[16] ),
        .alu_Op(alu_Op),
        .dlmb_M_ABus(dlmb_M_ABus[14]),
        .lopt(lopt_48),
        .lopt_1(lopt_49),
        .lopt_2(lopt_50),
        .lopt_3(lopt_57),
        .op2_C(op2_C[12]));
  c2c_gth_in_system_ibert_0_ALU_Bit_624 \ALL_Bits[16].ALU_Bit_I1 
       (.EX_CarryOut(alu_carry_16),
        .LO(alu_carry_15),
        .Op1_Shift(Op1_Shift),
        .alu_Op(alu_Op),
        .dlmb_M_ABus(dlmb_M_ABus[13]),
        .lopt(lopt_48),
        .lopt_1(lopt_49),
        .lopt_10(lopt_58),
        .lopt_11(lopt_59),
        .lopt_12(lopt_122),
        .lopt_13(lopt_123),
        .lopt_14(lopt_124),
        .lopt_15(lopt_125),
        .lopt_16(lopt_126),
        .lopt_17(lopt_127),
        .lopt_18(lopt_128),
        .lopt_19(lopt_129),
        .lopt_2(lopt_50),
        .lopt_20(lopt_67),
        .lopt_21(lopt_64),
        .lopt_22(lopt_61),
        .lopt_23(lopt_130),
        .lopt_24(lopt_68),
        .lopt_25(lopt_65),
        .lopt_26(lopt_62),
        .lopt_27(lopt_131),
        .lopt_3(lopt_51),
        .lopt_4(lopt_52),
        .lopt_5(lopt_53),
        .lopt_6(lopt_54),
        .lopt_7(lopt_55),
        .lopt_8(lopt_56),
        .lopt_9(lopt_57),
        .op2_C(op2_C[11]));
  c2c_gth_in_system_ibert_0_ALU_Bit_625 \ALL_Bits[17].ALU_Bit_I1 
       (.EX_CarryOut(alu_carry_15),
        .LO(alu_carry_14),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1_13 ),
        .alu_Op(alu_Op),
        .dlmb_M_ABus(dlmb_M_ABus[12]),
        .lopt(lopt_42),
        .lopt_1(lopt_43),
        .lopt_2(lopt_44),
        .lopt_3(lopt_47),
        .op2_C(op2_C[10]));
  c2c_gth_in_system_ibert_0_ALU_Bit_626 \ALL_Bits[18].ALU_Bit_I1 
       (.EX_CarryOut(alu_carry_14),
        .LO(alu_carry_13),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1_12 ),
        .alu_Op(alu_Op),
        .dlmb_M_ABus(dlmb_M_ABus[11]),
        .lopt(lopt_39),
        .lopt_1(lopt_40),
        .lopt_2(lopt_41),
        .lopt_3(lopt_46),
        .op2_C(op2_C[9]));
  c2c_gth_in_system_ibert_0_ALU_Bit_627 \ALL_Bits[19].ALU_Bit_I1 
       (.EX_CarryOut(alu_carry_13),
        .LO(alu_carry_12),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1_11 ),
        .alu_Op(alu_Op),
        .dlmb_M_ABus(dlmb_M_ABus[10]),
        .lopt(lopt_36),
        .lopt_1(lopt_37),
        .lopt_2(lopt_38),
        .lopt_3(lopt_45),
        .op2_C(op2_C[8]));
  c2c_gth_in_system_ibert_0_ALU_Bit_628 \ALL_Bits[1].ALU_Bit_I1 
       (.EX_CarryOut(alu_carry_31),
        .LO(alu_carry_30),
        .\Using_IO_Bus.IO_Address_reg[30] (\Using_IO_Bus.IO_Address_reg[30] ),
        .alu_Op(alu_Op),
        .dlmb_M_ABus(dlmb_M_ABus[28]),
        .lopt(lopt_90),
        .lopt_1(lopt_91),
        .lopt_2(lopt_92),
        .lopt_3(lopt_95),
        .op2_C(op2_C[26]));
  c2c_gth_in_system_ibert_0_ALU_Bit_629 \ALL_Bits[20].ALU_Bit_I1 
       (.EX_CarryOut(alu_carry_12),
        .LO(alu_carry_11),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1_10 ),
        .alu_Op(alu_Op),
        .dlmb_M_ABus(dlmb_M_ABus[9]),
        .lopt(lopt_36),
        .lopt_1(lopt_37),
        .lopt_10(lopt_46),
        .lopt_11(lopt_47),
        .lopt_12(lopt_112),
        .lopt_13(lopt_113),
        .lopt_14(lopt_114),
        .lopt_15(lopt_115),
        .lopt_16(lopt_116),
        .lopt_17(lopt_117),
        .lopt_18(lopt_118),
        .lopt_19(lopt_119),
        .lopt_2(lopt_38),
        .lopt_20(lopt_120),
        .lopt_21(lopt_121),
        .lopt_3(lopt_39),
        .lopt_4(lopt_40),
        .lopt_5(lopt_41),
        .lopt_6(lopt_42),
        .lopt_7(lopt_43),
        .lopt_8(lopt_44),
        .lopt_9(lopt_45),
        .op2_C(op2_C[7]));
  c2c_gth_in_system_ibert_0_ALU_Bit_630 \ALL_Bits[21].ALU_Bit_I1 
       (.EX_CarryOut(alu_carry_11),
        .LO(alu_carry_10),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1_9 ),
        .alu_Op(alu_Op),
        .dlmb_M_ABus(dlmb_M_ABus[8]),
        .lopt(lopt_30),
        .lopt_1(lopt_31),
        .lopt_2(lopt_32),
        .lopt_3(lopt_35),
        .op2_C(op2_C[6]));
  c2c_gth_in_system_ibert_0_ALU_Bit_631 \ALL_Bits[22].ALU_Bit_I1 
       (.EX_CarryOut(alu_carry_10),
        .LO(alu_carry_9),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1_8 ),
        .alu_Op(alu_Op),
        .dlmb_M_ABus(dlmb_M_ABus[7]),
        .lopt(lopt_27),
        .lopt_1(lopt_28),
        .lopt_2(lopt_29),
        .lopt_3(lopt_34),
        .op2_C(op2_C[5]));
  c2c_gth_in_system_ibert_0_ALU_Bit_632 \ALL_Bits[23].ALU_Bit_I1 
       (.EX_CarryOut(alu_carry_9),
        .LO(alu_carry_8),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1_7 ),
        .alu_Op(alu_Op),
        .dlmb_M_ABus(dlmb_M_ABus[6]),
        .lopt(lopt_24),
        .lopt_1(lopt_25),
        .lopt_2(lopt_26),
        .lopt_3(lopt_33),
        .op2_C(op2_C[4]));
  c2c_gth_in_system_ibert_0_ALU_Bit_633 \ALL_Bits[24].ALU_Bit_I1 
       (.EX_CarryOut(alu_carry_8),
        .LO(alu_carry_7),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1_6 ),
        .alu_Op(alu_Op),
        .dlmb_M_ABus(dlmb_M_ABus[5]),
        .lopt(lopt_24),
        .lopt_1(lopt_25),
        .lopt_10(lopt_34),
        .lopt_11(lopt_35),
        .lopt_12(lopt_112),
        .lopt_13(lopt_113),
        .lopt_14(lopt_114),
        .lopt_15(lopt_115),
        .lopt_16(lopt_116),
        .lopt_17(lopt_117),
        .lopt_18(lopt_118),
        .lopt_19(lopt_119),
        .lopt_2(lopt_26),
        .lopt_20(lopt_43),
        .lopt_21(lopt_40),
        .lopt_22(lopt_37),
        .lopt_23(lopt_120),
        .lopt_24(lopt_44),
        .lopt_25(lopt_41),
        .lopt_26(lopt_38),
        .lopt_27(lopt_121),
        .lopt_3(lopt_27),
        .lopt_4(lopt_28),
        .lopt_5(lopt_29),
        .lopt_6(lopt_30),
        .lopt_7(lopt_31),
        .lopt_8(lopt_32),
        .lopt_9(lopt_33),
        .op2_C(op2_C[3]));
  c2c_gth_in_system_ibert_0_ALU_Bit_634 \ALL_Bits[25].ALU_Bit_I1 
       (.EX_CarryOut(alu_carry_7),
        .LO(alu_carry_6),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1_5 ),
        .alu_Op(alu_Op),
        .dlmb_M_ABus(dlmb_M_ABus[4]),
        .lopt(lopt_18),
        .lopt_1(lopt_19),
        .lopt_2(lopt_20),
        .lopt_3(lopt_23),
        .op2_C(op2_C[2]));
  c2c_gth_in_system_ibert_0_ALU_Bit_635 \ALL_Bits[26].ALU_Bit_I1 
       (.EX_CarryOut(alu_carry_6),
        .LO(alu_carry_5),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1_4 ),
        .alu_Op(alu_Op),
        .dlmb_M_ABus(dlmb_M_ABus[3]),
        .lopt(lopt_15),
        .lopt_1(lopt_16),
        .lopt_2(lopt_17),
        .lopt_3(lopt_22),
        .op2_C(op2_C[1]));
  c2c_gth_in_system_ibert_0_ALU_Bit_636 \ALL_Bits[27].ALU_Bit_I1 
       (.EX_CarryOut(alu_carry_5),
        .LO(alu_carry_4),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1_3 ),
        .alu_Op(alu_Op),
        .dlmb_M_ABus(dlmb_M_ABus[2]),
        .lopt(lopt_12),
        .lopt_1(lopt_13),
        .lopt_2(lopt_14),
        .lopt_3(lopt_21),
        .op2_C(op2_C[0]));
  c2c_gth_in_system_ibert_0_ALU_Bit_637 \ALL_Bits[28].ALU_Bit_I1 
       (.EX_CarryOut(alu_carry_4),
        .LO(alu_carry_3),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1_1 ),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1_2 ),
        .alu_Op(alu_Op),
        .dlmb_M_ABus(dlmb_M_ABus[1]),
        .lopt(lopt_12),
        .lopt_1(lopt_13),
        .lopt_10(lopt_22),
        .lopt_11(lopt_23),
        .lopt_12(lopt_102),
        .lopt_13(lopt_103),
        .lopt_14(lopt_104),
        .lopt_15(lopt_105),
        .lopt_16(lopt_106),
        .lopt_17(lopt_107),
        .lopt_18(lopt_108),
        .lopt_19(lopt_109),
        .lopt_2(lopt_14),
        .lopt_20(lopt_110),
        .lopt_21(lopt_111),
        .lopt_3(lopt_15),
        .lopt_4(lopt_16),
        .lopt_5(lopt_17),
        .lopt_6(lopt_18),
        .lopt_7(lopt_19),
        .lopt_8(lopt_20),
        .lopt_9(lopt_21));
  c2c_gth_in_system_ibert_0_ALU_Bit_638 \ALL_Bits[29].ALU_Bit_I1 
       (.EX_CarryOut(alu_carry_3),
        .LO(alu_carry_2),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ),
        .alu_Op(alu_Op),
        .dlmb_M_ABus(dlmb_M_ABus[0]),
        .lopt(\^lopt_6 ),
        .lopt_1(\^lopt_7 ),
        .lopt_2(\^lopt_8 ),
        .lopt_3(\^lopt_11 ));
  c2c_gth_in_system_ibert_0_ALU_Bit_639 \ALL_Bits[2].ALU_Bit_I1 
       (.EX_CarryOut(alu_carry_30),
        .LO(alu_carry_29),
        .\Using_IO_Bus.IO_Address_reg[29] (\Using_IO_Bus.IO_Address_reg[29] ),
        .alu_Op(alu_Op),
        .dlmb_M_ABus(dlmb_M_ABus[27]),
        .lopt(lopt_87),
        .lopt_1(lopt_88),
        .lopt_2(lopt_89),
        .lopt_3(lopt_94),
        .op2_C(op2_C[25]));
  c2c_gth_in_system_ibert_0_ALU_Bit_640 \ALL_Bits[30].ALU_Bit_I1 
       (.EX_CarryOut(alu_carry_2),
        .LO(alu_carry_1),
        .\Using_FPGA.Native (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_I2 (\Using_FPGA.Native_I2 ),
        .\Using_FPGA.Native_I2_0 (\Using_FPGA.Native_I2_0 ),
        .alu_Op(alu_Op),
        .lopt(\^lopt_3 ),
        .lopt_1(\^lopt_4 ),
        .lopt_2(\^lopt_5 ),
        .lopt_3(\^lopt_10 ));
  c2c_gth_in_system_ibert_0_ALU_Bit_641 \ALL_Bits[31].ALU_Bit_I1 
       (.EX_CarryIn(alu_carry_0),
        .EX_CarryOut(alu_carry_1),
        .EX_Op1(EX_Op1),
        .EX_Op2(EX_Op2),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .alu_Op(alu_Op),
        .lopt(\^lopt ),
        .lopt_1(\^lopt_1 ),
        .lopt_2(\^lopt_2 ),
        .lopt_3(\^lopt_9 ));
  c2c_gth_in_system_ibert_0_ALU_Bit_642 \ALL_Bits[3].ALU_Bit_I1 
       (.EX_CarryOut(alu_carry_29),
        .LO(alu_carry_28),
        .\Using_IO_Bus.IO_Address_reg[28] (\Using_IO_Bus.IO_Address_reg[28] ),
        .alu_Op(alu_Op),
        .dlmb_M_ABus(dlmb_M_ABus[26]),
        .lopt(lopt_84),
        .lopt_1(lopt_85),
        .lopt_2(lopt_86),
        .lopt_3(lopt_93),
        .op2_C(op2_C[24]));
  c2c_gth_in_system_ibert_0_ALU_Bit_643 \ALL_Bits[4].ALU_Bit_I1 
       (.EX_CarryOut(alu_carry_28),
        .LO(alu_carry_27),
        .\Using_IO_Bus.IO_Address_reg[27] (\Using_IO_Bus.IO_Address_reg[27] ),
        .alu_Op(alu_Op),
        .dlmb_M_ABus(dlmb_M_ABus[25]),
        .lopt(lopt_84),
        .lopt_1(lopt_85),
        .lopt_10(lopt_94),
        .lopt_11(lopt_95),
        .lopt_12(lopt_132),
        .lopt_13(lopt_133),
        .lopt_14(lopt_134),
        .lopt_15(lopt_135),
        .lopt_16(lopt_136),
        .lopt_17(lopt_137),
        .lopt_18(lopt_138),
        .lopt_19(lopt_139),
        .lopt_2(lopt_86),
        .lopt_20(lopt_140),
        .lopt_21(lopt_141),
        .lopt_3(lopt_87),
        .lopt_4(lopt_88),
        .lopt_5(lopt_89),
        .lopt_6(lopt_90),
        .lopt_7(lopt_91),
        .lopt_8(lopt_92),
        .lopt_9(lopt_93),
        .op2_C(op2_C[23]));
  c2c_gth_in_system_ibert_0_ALU_Bit_644 \ALL_Bits[5].ALU_Bit_I1 
       (.EX_CarryOut(alu_carry_27),
        .LO(alu_carry_26),
        .\Using_IO_Bus.IO_Address_reg[26] (\Using_IO_Bus.IO_Address_reg[26] ),
        .alu_Op(alu_Op),
        .dlmb_M_ABus(dlmb_M_ABus[24]),
        .lopt(lopt_78),
        .lopt_1(lopt_79),
        .lopt_2(lopt_80),
        .lopt_3(lopt_83),
        .op2_C(op2_C[22]));
  c2c_gth_in_system_ibert_0_ALU_Bit_645 \ALL_Bits[6].ALU_Bit_I1 
       (.EX_CarryOut(alu_carry_26),
        .LO(alu_carry_25),
        .\Using_IO_Bus.IO_Address_reg[25] (\Using_IO_Bus.IO_Address_reg[25] ),
        .alu_Op(alu_Op),
        .dlmb_M_ABus(dlmb_M_ABus[23]),
        .lopt(lopt_75),
        .lopt_1(lopt_76),
        .lopt_2(lopt_77),
        .lopt_3(lopt_82),
        .op2_C(op2_C[21]));
  c2c_gth_in_system_ibert_0_ALU_Bit_646 \ALL_Bits[7].ALU_Bit_I1 
       (.EX_CarryOut(alu_carry_25),
        .LO(alu_carry_24),
        .\Using_IO_Bus.IO_Address_reg[24] (\Using_IO_Bus.IO_Address_reg[24] ),
        .alu_Op(alu_Op),
        .dlmb_M_ABus(dlmb_M_ABus[22]),
        .lopt(lopt_72),
        .lopt_1(lopt_73),
        .lopt_2(lopt_74),
        .lopt_3(lopt_81),
        .op2_C(op2_C[20]));
  c2c_gth_in_system_ibert_0_ALU_Bit_647 \ALL_Bits[8].ALU_Bit_I1 
       (.EX_CarryOut(alu_carry_24),
        .LO(alu_carry_23),
        .\Using_IO_Bus.IO_Address_reg[23] (\Using_IO_Bus.IO_Address_reg[23] ),
        .alu_Op(alu_Op),
        .dlmb_M_ABus(dlmb_M_ABus[21]),
        .lopt(lopt_72),
        .lopt_1(lopt_73),
        .lopt_10(lopt_82),
        .lopt_11(lopt_83),
        .lopt_12(lopt_132),
        .lopt_13(lopt_133),
        .lopt_14(lopt_134),
        .lopt_15(lopt_135),
        .lopt_16(lopt_136),
        .lopt_17(lopt_137),
        .lopt_18(lopt_138),
        .lopt_19(lopt_139),
        .lopt_2(lopt_74),
        .lopt_20(lopt_91),
        .lopt_21(lopt_88),
        .lopt_22(lopt_85),
        .lopt_23(lopt_140),
        .lopt_24(lopt_92),
        .lopt_25(lopt_89),
        .lopt_26(lopt_86),
        .lopt_27(lopt_141),
        .lopt_3(lopt_75),
        .lopt_4(lopt_76),
        .lopt_5(lopt_77),
        .lopt_6(lopt_78),
        .lopt_7(lopt_79),
        .lopt_8(lopt_80),
        .lopt_9(lopt_81),
        .op2_C(op2_C[19]));
  c2c_gth_in_system_ibert_0_ALU_Bit_648 \ALL_Bits[9].ALU_Bit_I1 
       (.EX_CarryIn(alu_carry_22),
        .EX_CarryOut(alu_carry_23),
        .\Using_IO_Bus.IO_Address_reg[22] (\Using_IO_Bus.IO_Address_reg[22] ),
        .alu_Op(alu_Op),
        .dlmb_M_ABus(dlmb_M_ABus[20]),
        .lopt(lopt_66),
        .lopt_1(lopt_67),
        .lopt_2(lopt_68),
        .lopt_3(lopt_71),
        .op2_C(op2_C[18]));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_649 \No_Carry_Decoding.CarryIn_MUXCY 
       (.EX_CarryIn(alu_carry_0),
        .carry_In(carry_In),
        .control_carry(control_carry),
        .lopt(\^lopt ),
        .lopt_1(\^lopt_1 ),
        .lopt_10(\^lopt_10 ),
        .lopt_11(\^lopt_11 ),
        .lopt_12(lopt_102),
        .lopt_13(lopt_103),
        .lopt_14(lopt_104),
        .lopt_15(lopt_105),
        .lopt_16(lopt_106),
        .lopt_17(lopt_107),
        .lopt_18(lopt_108),
        .lopt_19(lopt_109),
        .lopt_2(\^lopt_2 ),
        .lopt_20(lopt_19),
        .lopt_21(lopt_16),
        .lopt_22(lopt_13),
        .lopt_23(lopt_110),
        .lopt_24(lopt_20),
        .lopt_25(lopt_17),
        .lopt_26(lopt_14),
        .lopt_27(lopt_111),
        .lopt_3(\^lopt_3 ),
        .lopt_4(\^lopt_4 ),
        .lopt_5(\^lopt_5 ),
        .lopt_6(\^lopt_6 ),
        .lopt_7(\^lopt_7 ),
        .lopt_8(\^lopt_8 ),
        .lopt_9(\^lopt_9 ));
  c2c_gth_in_system_ibert_0_MB_LUT3__parameterized7 \No_Carry_Decoding.alu_carry_select_LUT 
       (.carry_In(carry_In),
        .control_carry(control_carry));
endmodule

module c2c_gth_in_system_ibert_0_ALU_Bit
   (EX_CarryOut,
    dlmb_M_ABus,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[21] ,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[21] ;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_CarryOut;
  wire LO;
  wire \Using_IO_Bus.IO_Address_reg[21] ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire \^lopt_1 ;
  wire [0:0]op2_C;
  wire op2_is_1;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_709 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .S(alu_AddSub),
        .\Using_IO_Bus.IO_Address_reg[21] (\Using_IO_Bus.IO_Address_reg[21] ),
        .alu_Op(alu_Op),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_710 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(EX_CarryOut),
        .LO(LO),
        .S(alu_AddSub),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_619
   (EX_CarryOut,
    dlmb_M_ABus,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[20] ,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[20] ;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_CarryOut;
  wire LO;
  wire \Using_IO_Bus.IO_Address_reg[20] ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire \^lopt_1 ;
  wire [0:0]op2_C;
  wire op2_is_1;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_707 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .S(alu_AddSub),
        .\Using_IO_Bus.IO_Address_reg[20] (\Using_IO_Bus.IO_Address_reg[20] ),
        .alu_Op(alu_Op),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_708 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(EX_CarryOut),
        .LO(LO),
        .S(alu_AddSub),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_620
   (EX_CarryOut,
    dlmb_M_ABus,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[19] ,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11,
    lopt_12,
    lopt_13,
    lopt_14,
    lopt_15,
    lopt_16,
    lopt_17,
    lopt_18,
    lopt_19,
    lopt_20,
    lopt_21);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[19] ;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;
  input lopt_12;
  input lopt_13;
  input lopt_14;
  input lopt_15;
  input lopt_16;
  input lopt_17;
  input lopt_18;
  input lopt_19;
  output lopt_20;
  output lopt_21;

  wire EX_CarryOut;
  wire LO;
  wire \Using_IO_Bus.IO_Address_reg[19] ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_12;
  wire lopt_13;
  wire lopt_14;
  wire lopt_15;
  wire lopt_16;
  wire lopt_17;
  wire lopt_18;
  wire lopt_19;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire [0:0]op2_C;
  wire op2_is_1;

  assign lopt_20 = op2_is_1;
  assign lopt_21 = alu_AddSub;
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_705 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .S(alu_AddSub),
        .\Using_IO_Bus.IO_Address_reg[19] (\Using_IO_Bus.IO_Address_reg[19] ),
        .alu_Op(alu_Op),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_706 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(EX_CarryOut),
        .LO(LO),
        .S(alu_AddSub),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_12(lopt_12),
        .lopt_13(lopt_13),
        .lopt_14(lopt_14),
        .lopt_15(lopt_15),
        .lopt_16(lopt_16),
        .lopt_17(lopt_17),
        .lopt_18(lopt_18),
        .lopt_19(lopt_19),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_621
   (EX_CarryOut,
    dlmb_M_ABus,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[18] ,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[18] ;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_CarryOut;
  wire LO;
  wire \Using_IO_Bus.IO_Address_reg[18] ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire \^lopt_1 ;
  wire [0:0]op2_C;
  wire op2_is_1;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_703 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .S(alu_AddSub),
        .\Using_IO_Bus.IO_Address_reg[18] (\Using_IO_Bus.IO_Address_reg[18] ),
        .alu_Op(alu_Op),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_704 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(EX_CarryOut),
        .LO(LO),
        .S(alu_AddSub),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_622
   (EX_CarryOut,
    dlmb_M_ABus,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[17] ,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[17] ;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_CarryOut;
  wire LO;
  wire \Using_IO_Bus.IO_Address_reg[17] ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire \^lopt_1 ;
  wire [0:0]op2_C;
  wire op2_is_1;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_701 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .S(alu_AddSub),
        .\Using_IO_Bus.IO_Address_reg[17] (\Using_IO_Bus.IO_Address_reg[17] ),
        .alu_Op(alu_Op),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_702 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(EX_CarryOut),
        .LO(LO),
        .S(alu_AddSub),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_623
   (EX_CarryOut,
    dlmb_M_ABus,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[16] ,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[16] ;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_CarryOut;
  wire LO;
  wire \Using_IO_Bus.IO_Address_reg[16] ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire \^lopt_1 ;
  wire [0:0]op2_C;
  wire op2_is_1;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_699 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .S(alu_AddSub),
        .\Using_IO_Bus.IO_Address_reg[16] (\Using_IO_Bus.IO_Address_reg[16] ),
        .alu_Op(alu_Op),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_700 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(EX_CarryOut),
        .LO(LO),
        .S(alu_AddSub),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_624
   (EX_CarryOut,
    dlmb_M_ABus,
    op2_C,
    alu_Op,
    Op1_Shift,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11,
    lopt_12,
    lopt_13,
    lopt_14,
    lopt_15,
    lopt_16,
    lopt_17,
    lopt_18,
    lopt_19,
    lopt_20,
    lopt_21,
    lopt_22,
    lopt_23,
    lopt_24,
    lopt_25,
    lopt_26,
    lopt_27);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input Op1_Shift;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;
  output lopt_12;
  output lopt_13;
  output lopt_14;
  output lopt_15;
  output lopt_16;
  output lopt_17;
  output lopt_18;
  output lopt_19;
  input lopt_20;
  input lopt_21;
  input lopt_22;
  input lopt_23;
  input lopt_24;
  input lopt_25;
  input lopt_26;
  input lopt_27;

  wire EX_CarryOut;
  wire LO;
  wire Op1_Shift;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_12;
  wire lopt_13;
  wire lopt_14;
  wire lopt_15;
  wire lopt_16;
  wire lopt_17;
  wire lopt_18;
  wire lopt_19;
  wire lopt_2;
  wire lopt_20;
  wire lopt_21;
  wire lopt_22;
  wire lopt_23;
  wire lopt_24;
  wire lopt_25;
  wire lopt_26;
  wire lopt_27;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire [0:0]op2_C;
  wire op2_is_1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_697 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .Op1_Shift(Op1_Shift),
        .S(alu_AddSub),
        .alu_Op(alu_Op),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_698 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(EX_CarryOut),
        .LO(LO),
        .S(alu_AddSub),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_12(lopt_12),
        .lopt_13(lopt_13),
        .lopt_14(lopt_14),
        .lopt_15(lopt_15),
        .lopt_16(lopt_16),
        .lopt_17(lopt_17),
        .lopt_18(lopt_18),
        .lopt_19(lopt_19),
        .lopt_2(lopt_2),
        .lopt_20(lopt_20),
        .lopt_21(lopt_21),
        .lopt_22(lopt_22),
        .lopt_23(lopt_23),
        .lopt_24(lopt_24),
        .lopt_25(lopt_25),
        .lopt_26(lopt_26),
        .lopt_27(lopt_27),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_625
   (EX_CarryOut,
    dlmb_M_ABus,
    op2_C,
    alu_Op,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_CarryOut;
  wire LO;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire \^lopt_1 ;
  wire [0:0]op2_C;
  wire op2_is_1;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_695 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .S(alu_AddSub),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .alu_Op(alu_Op),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_696 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(EX_CarryOut),
        .LO(LO),
        .S(alu_AddSub),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_626
   (EX_CarryOut,
    dlmb_M_ABus,
    op2_C,
    alu_Op,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_CarryOut;
  wire LO;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire \^lopt_1 ;
  wire [0:0]op2_C;
  wire op2_is_1;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_693 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .S(alu_AddSub),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .alu_Op(alu_Op),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_694 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(EX_CarryOut),
        .LO(LO),
        .S(alu_AddSub),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_627
   (EX_CarryOut,
    dlmb_M_ABus,
    op2_C,
    alu_Op,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_CarryOut;
  wire LO;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire \^lopt_1 ;
  wire [0:0]op2_C;
  wire op2_is_1;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_691 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .S(alu_AddSub),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .alu_Op(alu_Op),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_692 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(EX_CarryOut),
        .LO(LO),
        .S(alu_AddSub),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_628
   (EX_CarryOut,
    dlmb_M_ABus,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[30] ,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[30] ;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_CarryOut;
  wire LO;
  wire \Using_IO_Bus.IO_Address_reg[30] ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire \^lopt_1 ;
  wire [0:0]op2_C;
  wire op2_is_1;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_689 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .S(alu_AddSub),
        .\Using_IO_Bus.IO_Address_reg[30] (\Using_IO_Bus.IO_Address_reg[30] ),
        .alu_Op(alu_Op),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_690 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(EX_CarryOut),
        .LO(LO),
        .S(alu_AddSub),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_629
   (EX_CarryOut,
    dlmb_M_ABus,
    op2_C,
    alu_Op,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11,
    lopt_12,
    lopt_13,
    lopt_14,
    lopt_15,
    lopt_16,
    lopt_17,
    lopt_18,
    lopt_19,
    lopt_20,
    lopt_21);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;
  input lopt_12;
  input lopt_13;
  input lopt_14;
  input lopt_15;
  input lopt_16;
  input lopt_17;
  input lopt_18;
  input lopt_19;
  output lopt_20;
  output lopt_21;

  wire EX_CarryOut;
  wire LO;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_12;
  wire lopt_13;
  wire lopt_14;
  wire lopt_15;
  wire lopt_16;
  wire lopt_17;
  wire lopt_18;
  wire lopt_19;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire [0:0]op2_C;
  wire op2_is_1;

  assign lopt_20 = op2_is_1;
  assign lopt_21 = alu_AddSub;
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_687 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .S(alu_AddSub),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .alu_Op(alu_Op),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_688 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(EX_CarryOut),
        .LO(LO),
        .S(alu_AddSub),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_12(lopt_12),
        .lopt_13(lopt_13),
        .lopt_14(lopt_14),
        .lopt_15(lopt_15),
        .lopt_16(lopt_16),
        .lopt_17(lopt_17),
        .lopt_18(lopt_18),
        .lopt_19(lopt_19),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_630
   (EX_CarryOut,
    dlmb_M_ABus,
    op2_C,
    alu_Op,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_CarryOut;
  wire LO;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire \^lopt_1 ;
  wire [0:0]op2_C;
  wire op2_is_1;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_685 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .S(alu_AddSub),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .alu_Op(alu_Op),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_686 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(EX_CarryOut),
        .LO(LO),
        .S(alu_AddSub),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_631
   (EX_CarryOut,
    dlmb_M_ABus,
    op2_C,
    alu_Op,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_CarryOut;
  wire LO;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire \^lopt_1 ;
  wire [0:0]op2_C;
  wire op2_is_1;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_683 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .S(alu_AddSub),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .alu_Op(alu_Op),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_684 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(EX_CarryOut),
        .LO(LO),
        .S(alu_AddSub),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_632
   (EX_CarryOut,
    dlmb_M_ABus,
    op2_C,
    alu_Op,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_CarryOut;
  wire LO;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire \^lopt_1 ;
  wire [0:0]op2_C;
  wire op2_is_1;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_681 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .S(alu_AddSub),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .alu_Op(alu_Op),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_682 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(EX_CarryOut),
        .LO(LO),
        .S(alu_AddSub),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_633
   (EX_CarryOut,
    dlmb_M_ABus,
    op2_C,
    alu_Op,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11,
    lopt_12,
    lopt_13,
    lopt_14,
    lopt_15,
    lopt_16,
    lopt_17,
    lopt_18,
    lopt_19,
    lopt_20,
    lopt_21,
    lopt_22,
    lopt_23,
    lopt_24,
    lopt_25,
    lopt_26,
    lopt_27);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;
  output lopt_12;
  output lopt_13;
  output lopt_14;
  output lopt_15;
  output lopt_16;
  output lopt_17;
  output lopt_18;
  output lopt_19;
  input lopt_20;
  input lopt_21;
  input lopt_22;
  input lopt_23;
  input lopt_24;
  input lopt_25;
  input lopt_26;
  input lopt_27;

  wire EX_CarryOut;
  wire LO;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_12;
  wire lopt_13;
  wire lopt_14;
  wire lopt_15;
  wire lopt_16;
  wire lopt_17;
  wire lopt_18;
  wire lopt_19;
  wire lopt_2;
  wire lopt_20;
  wire lopt_21;
  wire lopt_22;
  wire lopt_23;
  wire lopt_24;
  wire lopt_25;
  wire lopt_26;
  wire lopt_27;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire [0:0]op2_C;
  wire op2_is_1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_679 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .S(alu_AddSub),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .alu_Op(alu_Op),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_680 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(EX_CarryOut),
        .LO(LO),
        .S(alu_AddSub),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_12(lopt_12),
        .lopt_13(lopt_13),
        .lopt_14(lopt_14),
        .lopt_15(lopt_15),
        .lopt_16(lopt_16),
        .lopt_17(lopt_17),
        .lopt_18(lopt_18),
        .lopt_19(lopt_19),
        .lopt_2(lopt_2),
        .lopt_20(lopt_20),
        .lopt_21(lopt_21),
        .lopt_22(lopt_22),
        .lopt_23(lopt_23),
        .lopt_24(lopt_24),
        .lopt_25(lopt_25),
        .lopt_26(lopt_26),
        .lopt_27(lopt_27),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_634
   (EX_CarryOut,
    dlmb_M_ABus,
    op2_C,
    alu_Op,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_CarryOut;
  wire LO;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire \^lopt_1 ;
  wire [0:0]op2_C;
  wire op2_is_1;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_677 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .S(alu_AddSub),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .alu_Op(alu_Op),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_678 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(EX_CarryOut),
        .LO(LO),
        .S(alu_AddSub),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_635
   (EX_CarryOut,
    dlmb_M_ABus,
    op2_C,
    alu_Op,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_CarryOut;
  wire LO;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire \^lopt_1 ;
  wire [0:0]op2_C;
  wire op2_is_1;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_675 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .S(alu_AddSub),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .alu_Op(alu_Op),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_676 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(EX_CarryOut),
        .LO(LO),
        .S(alu_AddSub),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_636
   (EX_CarryOut,
    dlmb_M_ABus,
    op2_C,
    alu_Op,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_CarryOut;
  wire LO;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire \^lopt_1 ;
  wire [0:0]op2_C;
  wire op2_is_1;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_673 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .S(alu_AddSub),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .alu_Op(alu_Op),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_674 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(EX_CarryOut),
        .LO(LO),
        .S(alu_AddSub),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_637
   (EX_CarryOut,
    dlmb_M_ABus,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    alu_Op,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11,
    lopt_12,
    lopt_13,
    lopt_14,
    lopt_15,
    lopt_16,
    lopt_17,
    lopt_18,
    lopt_19,
    lopt_20,
    lopt_21);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input [0:1]alu_Op;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;
  input lopt_12;
  input lopt_13;
  input lopt_14;
  input lopt_15;
  input lopt_16;
  input lopt_17;
  input lopt_18;
  input lopt_19;
  output lopt_20;
  output lopt_21;

  wire EX_CarryOut;
  wire LO;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_12;
  wire lopt_13;
  wire lopt_14;
  wire lopt_15;
  wire lopt_16;
  wire lopt_17;
  wire lopt_18;
  wire lopt_19;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire op2_is_1;

  assign lopt_20 = op2_is_1;
  assign lopt_21 = alu_AddSub;
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_671 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .S(alu_AddSub),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ),
        .alu_Op(alu_Op));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_672 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(EX_CarryOut),
        .LO(LO),
        .S(alu_AddSub),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_12(lopt_12),
        .lopt_13(lopt_13),
        .lopt_14(lopt_14),
        .lopt_15(lopt_15),
        .lopt_16(lopt_16),
        .lopt_17(lopt_17),
        .lopt_18(lopt_18),
        .lopt_19(lopt_19),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_638
   (EX_CarryOut,
    dlmb_M_ABus,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    alu_Op,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input [0:1]alu_Op;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_CarryOut;
  wire LO;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire \^lopt_1 ;
  wire op2_is_1;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_669 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .S(alu_AddSub),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ),
        .alu_Op(alu_Op));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_670 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(EX_CarryOut),
        .LO(LO),
        .S(alu_AddSub),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_639
   (EX_CarryOut,
    dlmb_M_ABus,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[29] ,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[29] ;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_CarryOut;
  wire LO;
  wire \Using_IO_Bus.IO_Address_reg[29] ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire \^lopt_1 ;
  wire [0:0]op2_C;
  wire op2_is_1;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_667 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .S(alu_AddSub),
        .\Using_IO_Bus.IO_Address_reg[29] (\Using_IO_Bus.IO_Address_reg[29] ),
        .alu_Op(alu_Op),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_668 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(EX_CarryOut),
        .LO(LO),
        .S(alu_AddSub),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_640
   (EX_CarryOut,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_I2 ,
    alu_Op,
    \Using_FPGA.Native_I2_0 ,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output \Using_FPGA.Native ;
  input \Using_FPGA.Native_I2 ;
  input [0:1]alu_Op;
  input \Using_FPGA.Native_I2_0 ;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_CarryOut;
  wire LO;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_I2 ;
  wire \Using_FPGA.Native_I2_0 ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire lopt;
  wire \^lopt_1 ;
  wire op2_is_1;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_665 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .S(alu_AddSub),
        .\Using_FPGA.Native_I2 (\Using_FPGA.Native_I2 ),
        .\Using_FPGA.Native_I2_0 (\Using_FPGA.Native_I2_0 ),
        .alu_Op(alu_Op));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_666 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(EX_CarryOut),
        .LO(LO),
        .S(alu_AddSub),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_641
   (EX_CarryOut,
    \Using_FPGA.Native ,
    EX_Op2,
    alu_Op,
    EX_Op1,
    EX_CarryIn,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output \Using_FPGA.Native ;
  input EX_Op2;
  input [0:1]alu_Op;
  input EX_Op1;
  input EX_CarryIn;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_CarryIn;
  wire EX_CarryOut;
  wire EX_Op1;
  wire EX_Op2;
  wire \Using_FPGA.Native ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire lopt;
  wire \^lopt_1 ;
  wire op2_is_1;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_663 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_Op1(EX_Op1),
        .EX_Op2(EX_Op2),
        .S(alu_AddSub),
        .alu_Op(alu_Op));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_664 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryIn(EX_CarryIn),
        .EX_CarryOut(EX_CarryOut),
        .S(alu_AddSub),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_642
   (EX_CarryOut,
    dlmb_M_ABus,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[28] ,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[28] ;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_CarryOut;
  wire LO;
  wire \Using_IO_Bus.IO_Address_reg[28] ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire \^lopt_1 ;
  wire [0:0]op2_C;
  wire op2_is_1;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_661 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .S(alu_AddSub),
        .\Using_IO_Bus.IO_Address_reg[28] (\Using_IO_Bus.IO_Address_reg[28] ),
        .alu_Op(alu_Op),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_662 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(EX_CarryOut),
        .LO(LO),
        .S(alu_AddSub),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_643
   (EX_CarryOut,
    dlmb_M_ABus,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[27] ,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11,
    lopt_12,
    lopt_13,
    lopt_14,
    lopt_15,
    lopt_16,
    lopt_17,
    lopt_18,
    lopt_19,
    lopt_20,
    lopt_21);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[27] ;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;
  input lopt_12;
  input lopt_13;
  input lopt_14;
  input lopt_15;
  input lopt_16;
  input lopt_17;
  input lopt_18;
  input lopt_19;
  output lopt_20;
  output lopt_21;

  wire EX_CarryOut;
  wire LO;
  wire \Using_IO_Bus.IO_Address_reg[27] ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_12;
  wire lopt_13;
  wire lopt_14;
  wire lopt_15;
  wire lopt_16;
  wire lopt_17;
  wire lopt_18;
  wire lopt_19;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire [0:0]op2_C;
  wire op2_is_1;

  assign lopt_20 = op2_is_1;
  assign lopt_21 = alu_AddSub;
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_659 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .S(alu_AddSub),
        .\Using_IO_Bus.IO_Address_reg[27] (\Using_IO_Bus.IO_Address_reg[27] ),
        .alu_Op(alu_Op),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_660 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(EX_CarryOut),
        .LO(LO),
        .S(alu_AddSub),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_12(lopt_12),
        .lopt_13(lopt_13),
        .lopt_14(lopt_14),
        .lopt_15(lopt_15),
        .lopt_16(lopt_16),
        .lopt_17(lopt_17),
        .lopt_18(lopt_18),
        .lopt_19(lopt_19),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_644
   (EX_CarryOut,
    dlmb_M_ABus,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[26] ,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[26] ;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_CarryOut;
  wire LO;
  wire \Using_IO_Bus.IO_Address_reg[26] ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire \^lopt_1 ;
  wire [0:0]op2_C;
  wire op2_is_1;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_657 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .S(alu_AddSub),
        .\Using_IO_Bus.IO_Address_reg[26] (\Using_IO_Bus.IO_Address_reg[26] ),
        .alu_Op(alu_Op),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_658 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(EX_CarryOut),
        .LO(LO),
        .S(alu_AddSub),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_645
   (EX_CarryOut,
    dlmb_M_ABus,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[25] ,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[25] ;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_CarryOut;
  wire LO;
  wire \Using_IO_Bus.IO_Address_reg[25] ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire \^lopt_1 ;
  wire [0:0]op2_C;
  wire op2_is_1;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_655 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .S(alu_AddSub),
        .\Using_IO_Bus.IO_Address_reg[25] (\Using_IO_Bus.IO_Address_reg[25] ),
        .alu_Op(alu_Op),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_656 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(EX_CarryOut),
        .LO(LO),
        .S(alu_AddSub),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_646
   (EX_CarryOut,
    dlmb_M_ABus,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[24] ,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[24] ;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_CarryOut;
  wire LO;
  wire \Using_IO_Bus.IO_Address_reg[24] ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire \^lopt_1 ;
  wire [0:0]op2_C;
  wire op2_is_1;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_653 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .S(alu_AddSub),
        .\Using_IO_Bus.IO_Address_reg[24] (\Using_IO_Bus.IO_Address_reg[24] ),
        .alu_Op(alu_Op),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_654 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(EX_CarryOut),
        .LO(LO),
        .S(alu_AddSub),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_647
   (EX_CarryOut,
    dlmb_M_ABus,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[23] ,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11,
    lopt_12,
    lopt_13,
    lopt_14,
    lopt_15,
    lopt_16,
    lopt_17,
    lopt_18,
    lopt_19,
    lopt_20,
    lopt_21,
    lopt_22,
    lopt_23,
    lopt_24,
    lopt_25,
    lopt_26,
    lopt_27);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[23] ;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;
  output lopt_12;
  output lopt_13;
  output lopt_14;
  output lopt_15;
  output lopt_16;
  output lopt_17;
  output lopt_18;
  output lopt_19;
  input lopt_20;
  input lopt_21;
  input lopt_22;
  input lopt_23;
  input lopt_24;
  input lopt_25;
  input lopt_26;
  input lopt_27;

  wire EX_CarryOut;
  wire LO;
  wire \Using_IO_Bus.IO_Address_reg[23] ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_12;
  wire lopt_13;
  wire lopt_14;
  wire lopt_15;
  wire lopt_16;
  wire lopt_17;
  wire lopt_18;
  wire lopt_19;
  wire lopt_2;
  wire lopt_20;
  wire lopt_21;
  wire lopt_22;
  wire lopt_23;
  wire lopt_24;
  wire lopt_25;
  wire lopt_26;
  wire lopt_27;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire [0:0]op2_C;
  wire op2_is_1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_651 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .S(alu_AddSub),
        .\Using_IO_Bus.IO_Address_reg[23] (\Using_IO_Bus.IO_Address_reg[23] ),
        .alu_Op(alu_Op),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_652 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(EX_CarryOut),
        .LO(LO),
        .S(alu_AddSub),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_12(lopt_12),
        .lopt_13(lopt_13),
        .lopt_14(lopt_14),
        .lopt_15(lopt_15),
        .lopt_16(lopt_16),
        .lopt_17(lopt_17),
        .lopt_18(lopt_18),
        .lopt_19(lopt_19),
        .lopt_2(lopt_2),
        .lopt_20(lopt_20),
        .lopt_21(lopt_21),
        .lopt_22(lopt_22),
        .lopt_23(lopt_23),
        .lopt_24(lopt_24),
        .lopt_25(lopt_25),
        .lopt_26(lopt_26),
        .lopt_27(lopt_27),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit_648
   (EX_CarryOut,
    dlmb_M_ABus,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[22] ,
    EX_CarryIn,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[22] ;
  input EX_CarryIn;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_CarryIn;
  wire EX_CarryOut;
  wire \Using_IO_Bus.IO_Address_reg[22] ;
  wire alu_AddSub;
  wire [0:1]alu_Op;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire \^lopt_1 ;
  wire [0:0]op2_C;
  wire op2_is_1;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .S(alu_AddSub),
        .\Using_IO_Bus.IO_Address_reg[22] (\Using_IO_Bus.IO_Address_reg[22] ),
        .alu_Op(alu_Op),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_650 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryIn(EX_CarryIn),
        .EX_CarryOut(EX_CarryOut),
        .S(alu_AddSub),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module c2c_gth_in_system_ibert_0_ALU_Bit__parameterized2
   (lmb_select,
    O,
    \Using_FPGA.Native ,
    Unsigned_Op,
    LO,
    op2_C,
    alu_Op,
    Op1_Logic,
    compare_Instr,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output lmb_select;
  output O;
  output \Using_FPGA.Native ;
  input Unsigned_Op;
  input LO;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input Op1_Logic;
  input compare_Instr;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  output lopt_7;
  input lopt_8;
  input lopt_9;
  input lopt_10;
  input lopt_11;

  wire LO;
  wire O;
  wire Op1_Logic;
  wire S;
  wire Unsigned_Op;
  wire \Using_FPGA.Native ;
  wire alu_AddSub;
  wire alu_AddSub_1;
  wire [0:1]alu_Op;
  wire compare_Instr;
  wire invert_result;
  wire lmb_select;
  wire \^lopt ;
  wire \^lopt_1 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire lopt_13;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_4 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire maintain_sign_n_rep_n_0;
  wire [0:0]op2_C;
  wire op2_is_1;

  assign \^lopt_10  = lopt_8;
  assign \^lopt_11  = lopt_9;
  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign lopt = \^lopt_1 ;
  assign lopt_12 = lopt_10;
  assign lopt_13 = lopt_11;
  assign lopt_3 = \^lopt_4 ;
  assign lopt_6 = \^lopt_8 ;
  assign lopt_7 = \^lopt_9 ;
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized17 \Last_Bit.I_ALU_LUT_2 
       (.S(alu_AddSub),
        .\Using_IO_Bus.IO_Address_reg[31] (S),
        .alu_AddSub_1(alu_AddSub_1),
        .alu_Op(alu_Op[0]),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6 \Last_Bit.I_ALU_LUT_V5 
       (.Op1_Logic(Op1_Logic),
        .alu_AddSub_1(alu_AddSub_1),
        .alu_Op(alu_Op),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_MULT_AND_711 \Last_Bit.MULT_AND_I 
       (.DI(op2_is_1),
        .alu_Op(alu_Op[0]),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_712 \Last_Bit.MUXCY_XOR_I 
       (.CI(invert_result),
        .DI(op2_is_1),
        .O(O),
        .S(alu_AddSub),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .lmb_select(lmb_select),
        .lopt(\^lopt ),
        .lopt_1(\^lopt_7 ));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_713 \Last_Bit.Pre_MUXCY_I 
       (.CI(invert_result),
        .LO(LO),
        .Unsigned_Op(Unsigned_Op),
        .\Using_IO_Bus.IO_Address_reg[31] (maintain_sign_n_rep_n_0),
        .lopt(\^lopt ),
        .lopt_1(op2_is_1),
        .lopt_10(\^lopt_8 ),
        .lopt_11(\^lopt_9 ),
        .lopt_12(\^lopt_10 ),
        .lopt_13(\^lopt_11 ),
        .lopt_14(lopt_12),
        .lopt_15(lopt_13),
        .lopt_2(alu_AddSub),
        .lopt_3(\^lopt_1 ),
        .lopt_4(\^lopt_2 ),
        .lopt_5(\^lopt_3 ),
        .lopt_6(\^lopt_4 ),
        .lopt_7(\^lopt_5 ),
        .lopt_8(\^lopt_6 ),
        .lopt_9(\^lopt_7 ));
  LUT3 #(
    .INIT(8'hD7)) 
    maintain_sign_n
       (.I0(compare_Instr),
        .I1(Op1_Logic),
        .I2(op2_C),
        .O(S));
  LUT3 #(
    .INIT(8'hD7)) 
    maintain_sign_n_rep
       (.I0(compare_Instr),
        .I1(Op1_Logic),
        .I2(op2_C),
        .O(maintain_sign_n_rep_n_0));
endmodule

module c2c_gth_in_system_ibert_0_Byte_Doublet_Handle
   (dlmb_M_BE,
    O,
    byte_i_reg,
    DATA_INB,
    dlmb_M_ABus,
    EX_Op2,
    Op1_Low,
    \Using_IO_Bus.IO_Address_reg[0] ,
    isbyte,
    isdoublet,
    D);
  output [0:3]dlmb_M_BE;
  output O;
  output byte_i_reg;
  output [23:0]DATA_INB;
  output [1:0]dlmb_M_ABus;
  input EX_Op2;
  input [0:1]Op1_Low;
  input \Using_IO_Bus.IO_Address_reg[0] ;
  input isbyte;
  input isdoublet;
  input [0:31]D;

  wire [0:31]D;
  wire [23:0]DATA_INB;
  wire EX_Op2;
  wire O;
  wire [0:1]Op1_Low;
  wire \Using_IO_Bus.IO_Address_reg[0] ;
  wire byte_i_reg;
  wire byte_selects_0;
  wire byte_selects_1;
  wire [1:0]dlmb_M_ABus;
  wire [0:3]dlmb_M_BE;
  wire isbyte;
  wire isdoublet;
  wire low_addr_i_0;
  wire low_addr_i_1;
  wire [1:0]sel_Write_Mux_MSB;

  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized8 BYTE_0_1_I
       (.byte_selects_0(byte_selects_0),
        .byte_selects_1(byte_selects_1),
        .dlmb_M_BE({dlmb_M_BE[2],dlmb_M_BE[3]}),
        .isbyte(isbyte),
        .isdoublet(isdoublet));
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized10 BYTE_2_3_I
       (.byte_selects_0(byte_selects_0),
        .byte_selects_1(byte_selects_1),
        .dlmb_M_BE({dlmb_M_BE[0],dlmb_M_BE[1]}),
        .isbyte(isbyte),
        .isdoublet(isdoublet));
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized16 LOW_ADDR_OUT_LUT6
       (.dlmb_M_ABus(dlmb_M_ABus),
        .isbyte(isbyte),
        .isdoublet(isdoublet),
        .low_addr_i_0(low_addr_i_0),
        .low_addr_i_1(low_addr_i_1));
  c2c_gth_in_system_ibert_0_mux4_8 \Use_Dynamic_Bus_Sizing.Not_Using_Reverse_Mem_Instr.EXT_DATA_WRITE_MUX_MSB_I 
       (.D(D),
        .DATA_INB(DATA_INB[23:8]),
        .sel_Write_Mux_MSB(sel_Write_Mux_MSB));
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized14 \Use_Dynamic_Bus_Sizing.Not_Using_Reverse_Mem_Instr.GEN4_LOOP[0].BYTESTEER_LUT6 
       (.D({D[16],D[20],D[24],D[28]}),
        .DATA_INB({DATA_INB[7],DATA_INB[3]}),
        .isbyte(isbyte));
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized14_714 \Use_Dynamic_Bus_Sizing.Not_Using_Reverse_Mem_Instr.GEN4_LOOP[1].BYTESTEER_LUT6 
       (.D({D[17],D[21],D[25],D[29]}),
        .DATA_INB({DATA_INB[6],DATA_INB[2]}),
        .isbyte(isbyte));
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized14_715 \Use_Dynamic_Bus_Sizing.Not_Using_Reverse_Mem_Instr.GEN4_LOOP[2].BYTESTEER_LUT6 
       (.D({D[18],D[22],D[26],D[30]}),
        .DATA_INB({DATA_INB[5],DATA_INB[1]}),
        .isbyte(isbyte));
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized14_716 \Use_Dynamic_Bus_Sizing.Not_Using_Reverse_Mem_Instr.GEN4_LOOP[3].BYTESTEER_LUT6 
       (.D({D[19],D[23],D[27],D[31]}),
        .DATA_INB({DATA_INB[4],DATA_INB[0]}),
        .isbyte(isbyte));
  c2c_gth_in_system_ibert_0_MB_LUT3__parameterized9 \Use_Dynamic_Bus_Sizing.Not_Using_Reverse_Mem_Instr.READ_SEL_LEFT_I 
       (.O(O),
        .byte_selects_1(byte_selects_1),
        .isbyte(isbyte),
        .isdoublet(isdoublet));
  c2c_gth_in_system_ibert_0_MB_LUT2 \Use_Dynamic_Bus_Sizing.Not_Using_Reverse_Mem_Instr.READ_SEL_RIGHT_I 
       (.byte_i_reg(byte_i_reg),
        .byte_selects_0(byte_selects_0),
        .isbyte(isbyte));
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized12 \Use_Dynamic_Bus_Sizing.Not_Using_Reverse_Mem_Instr.WRITE_MSB_SEL_I 
       (.isbyte(isbyte),
        .isdoublet(isdoublet),
        .sel_Write_Mux_MSB(sel_Write_Mux_MSB));
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized6 byte_selects_i_INST
       (.EX_Op2(EX_Op2),
        .Op1_Low(Op1_Low),
        .\Using_FPGA.Native_0 (\Using_IO_Bus.IO_Address_reg[0] ),
        .byte_selects_0(byte_selects_0),
        .byte_selects_1(byte_selects_1));
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized4 low_addr_i_INST
       (.EX_Op2(EX_Op2),
        .Op1_Low(Op1_Low),
        .\Using_IO_Bus.IO_Address_reg[0] (\Using_IO_Bus.IO_Address_reg[0] ),
        .low_addr_i_0(low_addr_i_0),
        .low_addr_i_1(low_addr_i_1));
endmodule

module c2c_gth_in_system_ibert_0_Data_Flow
   (\Result_Sel_reg[1] ,
    Op1_Low,
    EX_Op2,
    \Using_FPGA.Native ,
    Op1_Shift,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    MSR,
    lmb_select,
    O,
    \Using_FPGA.take_Intr_2nd_Phase_reg ,
    Reg2_Data,
    \Using_FPGA.take_Intr_2nd_Phase_reg_0 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg_1 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg_2 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg_3 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg_4 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg_5 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg_6 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg_7 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg_8 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg_9 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg_10 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg_11 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg_12 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg_13 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg_14 ,
    LO,
    dlmb_M_ABus,
    Reg_zero,
    ADDRARDADDR,
    \Size_17to32.imm_Reg_reg[0] ,
    Data_Write,
    res_Forward1,
    opsel1_SPR,
    \Using_FPGA.Native_4 ,
    normal_piperun,
    out,
    D,
    D_0,
    D_1,
    D_2,
    D_3,
    D_4,
    D_5,
    D_6,
    D_7,
    D_8,
    D_9,
    D_10,
    D_11,
    D_12,
    D_13,
    D_14,
    D_15,
    D_16,
    D_17,
    D_18,
    D_19,
    D_20,
    D_21,
    D_22,
    D_23,
    D_24,
    D_25,
    D_26,
    D_27,
    D_28,
    D_29,
    D_30,
    carry_In,
    Unsigned_Op,
    alu_Op,
    MSR_Rst,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 ,
    \Using_FPGA.Native_9 ,
    compare_Instr,
    sext8,
    Sext16,
    quadlet_Read,
    \Using_FPGA.Native_10 ,
    exception_kind,
    res_Forward2,
    Q,
    Shift_Oper,
    Select_Logic,
    Shifted,
    \Using_FPGA.Native_11 ,
    extend_Data_Read,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus,
    Reg_Test_Equal,
    reg_Test_Equal_N,
    Jump,
    PC_Write,
    IReady,
    Buffer_Addr,
    E,
    imm_Value,
    Reg_Write,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    reg1_Addr,
    Increment,
    DI,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11,
    lopt_12,
    lopt_13,
    lopt_14);
  output [15:0]\Result_Sel_reg[1] ;
  output [0:1]Op1_Low;
  output EX_Op2;
  output \Using_FPGA.Native ;
  output Op1_Shift;
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  output \Using_FPGA.Native_2 ;
  output \Using_FPGA.Native_3 ;
  output [2:0]MSR;
  output lmb_select;
  output O;
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  output [15:0]Reg2_Data;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_0 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_1 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_2 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_3 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_4 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_5 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_6 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_7 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_8 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_9 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_10 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_11 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_12 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_13 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_14 ;
  output LO;
  output [28:0]dlmb_M_ABus;
  output Reg_zero;
  output [13:0]ADDRARDADDR;
  output [15:0]\Size_17to32.imm_Reg_reg[0] ;
  output [0:31]Data_Write;
  input res_Forward1;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_4 ;
  input normal_piperun;
  input out;
  input D;
  input D_0;
  input D_1;
  input D_2;
  input D_3;
  input D_4;
  input D_5;
  input D_6;
  input D_7;
  input D_8;
  input D_9;
  input D_10;
  input D_11;
  input D_12;
  input D_13;
  input D_14;
  input D_15;
  input D_16;
  input D_17;
  input D_18;
  input D_19;
  input D_20;
  input D_21;
  input D_22;
  input D_23;
  input D_24;
  input D_25;
  input D_26;
  input D_27;
  input D_28;
  input D_29;
  input D_30;
  input carry_In;
  input Unsigned_Op;
  input [0:1]alu_Op;
  input MSR_Rst;
  input \Using_FPGA.Native_5 ;
  input \Using_FPGA.Native_6 ;
  input \Using_FPGA.Native_7 ;
  input \Using_FPGA.Native_8 ;
  input \Using_FPGA.Native_9 ;
  input compare_Instr;
  input sext8;
  input Sext16;
  input quadlet_Read;
  input \Using_FPGA.Native_10 ;
  input [0:0]exception_kind;
  input res_Forward2;
  input [1:0]Q;
  input Shift_Oper;
  input Select_Logic;
  input Shifted;
  input [1:0]\Using_FPGA.Native_11 ;
  input [15:0]extend_Data_Read;
  input Data_Read_Mask;
  input [15:0]dlmb_LMB_ReadDBus;
  input Reg_Test_Equal;
  input reg_Test_Equal_N;
  input Jump;
  input PC_Write;
  input IReady;
  input [2:0]Buffer_Addr;
  input [0:0]E;
  input [0:15]imm_Value;
  input Reg_Write;
  input [4:0]\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input [0:4]reg1_Addr;
  input Increment;
  input DI;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  input lopt_11;
  input lopt_12;
  input lopt_13;
  input lopt_14;

  wire [13:0]ADDRARDADDR;
  wire ALU_I_n_3;
  wire ALU_I_n_4;
  wire [2:0]Buffer_Addr;
  wire D;
  wire DI;
  wire D_0;
  wire D_1;
  wire D_10;
  wire D_11;
  wire D_12;
  wire D_13;
  wire D_14;
  wire D_15;
  wire D_16;
  wire D_17;
  wire D_18;
  wire D_19;
  wire D_2;
  wire D_20;
  wire D_21;
  wire D_22;
  wire D_23;
  wire D_24;
  wire D_25;
  wire D_26;
  wire D_27;
  wire D_28;
  wire D_29;
  wire D_3;
  wire D_30;
  wire D_4;
  wire D_5;
  wire D_6;
  wire D_7;
  wire D_8;
  wire D_9;
  wire Data_Read_Mask;
  wire [0:31]Data_Write;
  wire [0:0]E;
  wire EX_Op2;
  wire IReady;
  wire Increment;
  wire Jump;
  wire LO;
  wire [2:0]MSR;
  wire MSR_Rst;
  wire O;
  wire [0:1]Op1_Low;
  wire Op1_Shift;
  wire \OpSelect_Bits[0].Operand_Select_Bit_I/I3 ;
  wire \OpSelect_Bits[24].Operand_Select_Bit_I/I3 ;
  wire \OpSelect_Bits[25].Operand_Select_Bit_I/I3 ;
  wire \OpSelect_Bits[26].Operand_Select_Bit_I/I3 ;
  wire \OpSelect_Bits[27].Operand_Select_Bit_I/I3 ;
  wire \OpSelect_Bits[28].Operand_Select_Bit_I/I3 ;
  wire \OpSelect_Bits[29].Operand_Select_Bit_I/I3 ;
  wire \OpSelect_Bits[30].Operand_Select_Bit_I/I3 ;
  wire Operand_Select_I_n_10;
  wire Operand_Select_I_n_11;
  wire Operand_Select_I_n_40;
  wire Operand_Select_I_n_41;
  wire Operand_Select_I_n_42;
  wire Operand_Select_I_n_43;
  wire Operand_Select_I_n_45;
  wire Operand_Select_I_n_46;
  wire Operand_Select_I_n_47;
  wire Operand_Select_I_n_48;
  wire Operand_Select_I_n_49;
  wire Operand_Select_I_n_5;
  wire Operand_Select_I_n_50;
  wire Operand_Select_I_n_51;
  wire Operand_Select_I_n_52;
  wire Operand_Select_I_n_53;
  wire Operand_Select_I_n_54;
  wire Operand_Select_I_n_55;
  wire Operand_Select_I_n_56;
  wire Operand_Select_I_n_57;
  wire Operand_Select_I_n_58;
  wire Operand_Select_I_n_59;
  wire Operand_Select_I_n_6;
  wire Operand_Select_I_n_60;
  wire Operand_Select_I_n_61;
  wire Operand_Select_I_n_62;
  wire Operand_Select_I_n_63;
  wire Operand_Select_I_n_64;
  wire Operand_Select_I_n_65;
  wire Operand_Select_I_n_66;
  wire Operand_Select_I_n_67;
  wire Operand_Select_I_n_68;
  wire Operand_Select_I_n_69;
  wire Operand_Select_I_n_70;
  wire Operand_Select_I_n_71;
  wire Operand_Select_I_n_72;
  wire Operand_Select_I_n_73;
  wire Operand_Select_I_n_74;
  wire Operand_Select_I_n_75;
  wire Operand_Select_I_n_76;
  wire Operand_Select_I_n_77;
  wire Operand_Select_I_n_78;
  wire Operand_Select_I_n_79;
  wire Operand_Select_I_n_8;
  wire Operand_Select_I_n_80;
  wire Operand_Select_I_n_81;
  wire Operand_Select_I_n_82;
  wire Operand_Select_I_n_83;
  wire Operand_Select_I_n_84;
  wire Operand_Select_I_n_85;
  wire Operand_Select_I_n_86;
  wire Operand_Select_I_n_87;
  wire Operand_Select_I_n_88;
  wire Operand_Select_I_n_89;
  wire Operand_Select_I_n_9;
  wire Operand_Select_I_n_90;
  wire Operand_Select_I_n_91;
  wire PC_Module_I_n_18;
  wire PC_Module_I_n_19;
  wire PC_Module_I_n_20;
  wire PC_Module_I_n_21;
  wire PC_Module_I_n_22;
  wire PC_Module_I_n_23;
  wire PC_Module_I_n_24;
  wire PC_Module_I_n_25;
  wire PC_Module_I_n_26;
  wire PC_Module_I_n_27;
  wire PC_Write;
  wire [1:0]Q;
  wire [15:0]Reg2_Data;
  wire Reg_Test_Equal;
  wire Reg_Write;
  wire Reg_zero;
  wire [15:0]\Result_Sel_reg[1] ;
  wire Select_Logic;
  wire Sext16;
  wire Shift_Logic_Module_I_n_1;
  wire Shift_Logic_Module_I_n_10;
  wire Shift_Logic_Module_I_n_11;
  wire Shift_Logic_Module_I_n_12;
  wire Shift_Logic_Module_I_n_13;
  wire Shift_Logic_Module_I_n_14;
  wire Shift_Logic_Module_I_n_15;
  wire Shift_Logic_Module_I_n_16;
  wire Shift_Logic_Module_I_n_17;
  wire Shift_Logic_Module_I_n_18;
  wire Shift_Logic_Module_I_n_19;
  wire Shift_Logic_Module_I_n_2;
  wire Shift_Logic_Module_I_n_20;
  wire Shift_Logic_Module_I_n_21;
  wire Shift_Logic_Module_I_n_22;
  wire Shift_Logic_Module_I_n_23;
  wire Shift_Logic_Module_I_n_24;
  wire Shift_Logic_Module_I_n_25;
  wire Shift_Logic_Module_I_n_26;
  wire Shift_Logic_Module_I_n_27;
  wire Shift_Logic_Module_I_n_28;
  wire Shift_Logic_Module_I_n_29;
  wire Shift_Logic_Module_I_n_3;
  wire Shift_Logic_Module_I_n_30;
  wire Shift_Logic_Module_I_n_31;
  wire Shift_Logic_Module_I_n_4;
  wire Shift_Logic_Module_I_n_5;
  wire Shift_Logic_Module_I_n_6;
  wire Shift_Logic_Module_I_n_7;
  wire Shift_Logic_Module_I_n_8;
  wire Shift_Logic_Module_I_n_9;
  wire Shift_Logic_Res;
  wire Shift_Oper;
  wire Shifted;
  wire [15:0]\Size_17to32.imm_Reg_reg[0] ;
  wire Unsigned_Op;
  wire [4:0]\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire [1:0]\Using_FPGA.Native_11 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire [0:0]\Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \Using_FPGA.Native_9 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_0 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_1 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_10 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_11 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_12 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_13 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_14 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_2 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_3 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_4 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_5 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_6 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_7 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_8 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_9 ;
  wire \Zero_Detecting[0].nibble_Zero_reg ;
  wire [0:1]alu_Op;
  wire carry_In;
  wire compare_Instr;
  wire [15:0]dlmb_LMB_ReadDBus;
  wire [28:0]dlmb_M_ABus;
  wire [0:15]ex_Result;
  wire [0:0]exception_kind;
  wire [15:0]extend_Data_Read;
  wire [0:15]imm_Value;
  wire lmb_select;
  wire lopt;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_12;
  wire lopt_13;
  wire lopt_14;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire normal_piperun;
  wire [0:27]op2_C;
  wire opsel1_SPR;
  wire out;
  wire quadlet_Read;
  wire [0:4]reg1_Addr;
  wire [0:31]reg1_Data;
  wire reg_Test_Equal_N;
  wire res_Forward1;
  wire res_Forward2;
  wire sext8;

  c2c_gth_in_system_ibert_0_ALU ALU_I
       (.EX_Op1(Op1_Low[1]),
        .EX_Op2(EX_Op2),
        .LO(LO),
        .O(O),
        .Op1_Logic(\Using_FPGA.Native_2 ),
        .Op1_Shift(Operand_Select_I_n_60),
        .Unsigned_Op(Unsigned_Op),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (Operand_Select_I_n_6),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 (Op1_Shift),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1_1 (Operand_Select_I_n_9),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1_10 (Operand_Select_I_n_52),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1_11 (Operand_Select_I_n_54),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1_12 (Operand_Select_I_n_56),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1_13 (Operand_Select_I_n_58),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1_2 (\Using_FPGA.Native_0 ),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1_3 (Operand_Select_I_n_10),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1_4 (Operand_Select_I_n_40),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1_5 (Operand_Select_I_n_42),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1_6 (\Using_FPGA.Native_1 ),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1_7 (Operand_Select_I_n_46),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1_8 (Operand_Select_I_n_48),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1_9 (Operand_Select_I_n_50),
        .\Using_FPGA.Native (ALU_I_n_3),
        .\Using_FPGA.Native_0 (ALU_I_n_4),
        .\Using_FPGA.Native_I2 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_I2_0 (Op1_Low[0]),
        .\Using_IO_Bus.IO_Address_reg[16] (Operand_Select_I_n_62),
        .\Using_IO_Bus.IO_Address_reg[17] (Operand_Select_I_n_64),
        .\Using_IO_Bus.IO_Address_reg[18] (Operand_Select_I_n_66),
        .\Using_IO_Bus.IO_Address_reg[19] (Operand_Select_I_n_68),
        .\Using_IO_Bus.IO_Address_reg[20] (Operand_Select_I_n_70),
        .\Using_IO_Bus.IO_Address_reg[21] (Operand_Select_I_n_72),
        .\Using_IO_Bus.IO_Address_reg[22] (Operand_Select_I_n_74),
        .\Using_IO_Bus.IO_Address_reg[23] (Operand_Select_I_n_76),
        .\Using_IO_Bus.IO_Address_reg[24] (Operand_Select_I_n_78),
        .\Using_IO_Bus.IO_Address_reg[25] (Operand_Select_I_n_80),
        .\Using_IO_Bus.IO_Address_reg[26] (Operand_Select_I_n_82),
        .\Using_IO_Bus.IO_Address_reg[27] (Operand_Select_I_n_84),
        .\Using_IO_Bus.IO_Address_reg[28] (Operand_Select_I_n_86),
        .\Using_IO_Bus.IO_Address_reg[29] (Operand_Select_I_n_88),
        .\Using_IO_Bus.IO_Address_reg[30] (Operand_Select_I_n_90),
        .alu_Op(alu_Op),
        .carry_In(carry_In),
        .compare_Instr(compare_Instr),
        .dlmb_M_ABus(dlmb_M_ABus),
        .lmb_select(lmb_select),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_10(lopt_13),
        .lopt_11(lopt_14),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_9),
        .lopt_7(lopt_10),
        .lopt_8(lopt_11),
        .lopt_9(lopt_12),
        .op2_C({op2_C[0],op2_C[1],op2_C[2],op2_C[3],op2_C[4],op2_C[5],op2_C[6],op2_C[7],op2_C[8],op2_C[9],op2_C[10],op2_C[11],op2_C[12],op2_C[13],op2_C[14],op2_C[15],op2_C[16],op2_C[17],op2_C[18],op2_C[19],op2_C[20],op2_C[21],op2_C[22],op2_C[23],op2_C[24],op2_C[25],op2_C[26],op2_C[27]}));
  c2c_gth_in_system_ibert_0_MSR_Reg MSR_Reg_I
       (.I3(\OpSelect_Bits[0].Operand_Select_Bit_I/I3 ),
        .I3_0(\OpSelect_Bits[30].Operand_Select_Bit_I/I3 ),
        .I3_1(\OpSelect_Bits[28].Operand_Select_Bit_I/I3 ),
        .I3_2(\OpSelect_Bits[29].Operand_Select_Bit_I/I3 ),
        .MSR(MSR),
        .MSR_Rst(MSR_Rst),
        .PC_OF(PC_Module_I_n_20),
        .\Using_FPGA.Native (\Using_FPGA.Native_5 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_6 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_7 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_8 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_9 ),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_10 ),
        .\Using_FPGA.Native_5 (PC_Module_I_n_19),
        .out(out));
  c2c_gth_in_system_ibert_0_Operand_Select Operand_Select_I
       (.D(D),
        .D_0(D_0),
        .D_1(D_1),
        .D_10(D_10),
        .D_11(D_11),
        .D_12(D_12),
        .D_13(D_13),
        .D_14(D_14),
        .D_15(D_15),
        .D_16(D_16),
        .D_17(D_17),
        .D_18(D_18),
        .D_19(D_19),
        .D_2(D_2),
        .D_20(D_20),
        .D_21(D_21),
        .D_22(D_22),
        .D_23(D_23),
        .D_24(D_24),
        .D_25(D_25),
        .D_26(D_26),
        .D_27(D_27),
        .D_28(D_28),
        .D_29(D_29),
        .D_3(D_3),
        .D_30(D_30),
        .D_4(D_4),
        .D_5(D_5),
        .D_6(D_6),
        .D_7(D_7),
        .D_8(D_8),
        .D_9(D_9),
        .E(E),
        .EX_Op2(EX_Op2),
        .EX_Result({ex_Result,\Result_Sel_reg[1] [15],\Result_Sel_reg[1] [14],\Result_Sel_reg[1] [13],\Result_Sel_reg[1] [12],\Result_Sel_reg[1] [11],\Result_Sel_reg[1] [10],\Result_Sel_reg[1] [9],\Result_Sel_reg[1] [8],\Result_Sel_reg[1] [7],\Result_Sel_reg[1] [6],\Result_Sel_reg[1] [5],\Result_Sel_reg[1] [4],\Result_Sel_reg[1] [3],\Result_Sel_reg[1] [2],\Result_Sel_reg[1] [1],\Result_Sel_reg[1] [0]}),
        .I3(\OpSelect_Bits[30].Operand_Select_Bit_I/I3 ),
        .I3_0(\OpSelect_Bits[29].Operand_Select_Bit_I/I3 ),
        .I3_1(\OpSelect_Bits[28].Operand_Select_Bit_I/I3 ),
        .I3_2(\OpSelect_Bits[27].Operand_Select_Bit_I/I3 ),
        .I3_3(\OpSelect_Bits[26].Operand_Select_Bit_I/I3 ),
        .I3_4(\OpSelect_Bits[25].Operand_Select_Bit_I/I3 ),
        .I3_5(\OpSelect_Bits[24].Operand_Select_Bit_I/I3 ),
        .I3_6(\OpSelect_Bits[0].Operand_Select_Bit_I/I3 ),
        .Op1_Logic(Op1_Low[1]),
        .Op1_Shift(Operand_Select_I_n_60),
        .Op2(Operand_Select_I_n_6),
        .PC_OF(PC_Module_I_n_21),
        .Reg1_Data(reg1_Data),
        .Shifted(Op1_Shift),
        .\Size_17to32.imm_Reg_reg[0]_0 (\Size_17to32.imm_Reg_reg[0] ),
        .\Using_FPGA.Native (Op1_Low[0]),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (Operand_Select_I_n_5),
        .\Using_FPGA.Native_10 (Operand_Select_I_n_43),
        .\Using_FPGA.Native_11 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_12 (Operand_Select_I_n_45),
        .\Using_FPGA.Native_13 (Operand_Select_I_n_46),
        .\Using_FPGA.Native_14 (Operand_Select_I_n_47),
        .\Using_FPGA.Native_15 (Operand_Select_I_n_48),
        .\Using_FPGA.Native_16 (Operand_Select_I_n_49),
        .\Using_FPGA.Native_17 (Operand_Select_I_n_50),
        .\Using_FPGA.Native_18 (Operand_Select_I_n_51),
        .\Using_FPGA.Native_19 (Operand_Select_I_n_52),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_20 (Operand_Select_I_n_53),
        .\Using_FPGA.Native_21 (Operand_Select_I_n_54),
        .\Using_FPGA.Native_22 (Operand_Select_I_n_55),
        .\Using_FPGA.Native_23 (Operand_Select_I_n_56),
        .\Using_FPGA.Native_24 (Operand_Select_I_n_57),
        .\Using_FPGA.Native_25 (Operand_Select_I_n_58),
        .\Using_FPGA.Native_26 (Operand_Select_I_n_59),
        .\Using_FPGA.Native_27 (Operand_Select_I_n_61),
        .\Using_FPGA.Native_28 (Operand_Select_I_n_62),
        .\Using_FPGA.Native_29 (Operand_Select_I_n_63),
        .\Using_FPGA.Native_3 (Operand_Select_I_n_8),
        .\Using_FPGA.Native_30 (Operand_Select_I_n_64),
        .\Using_FPGA.Native_31 (Operand_Select_I_n_65),
        .\Using_FPGA.Native_32 (Operand_Select_I_n_66),
        .\Using_FPGA.Native_33 (Operand_Select_I_n_67),
        .\Using_FPGA.Native_34 (Operand_Select_I_n_68),
        .\Using_FPGA.Native_35 (Operand_Select_I_n_69),
        .\Using_FPGA.Native_36 (Operand_Select_I_n_70),
        .\Using_FPGA.Native_37 (Operand_Select_I_n_71),
        .\Using_FPGA.Native_38 (Operand_Select_I_n_72),
        .\Using_FPGA.Native_39 (Operand_Select_I_n_73),
        .\Using_FPGA.Native_4 (Operand_Select_I_n_9),
        .\Using_FPGA.Native_40 (Operand_Select_I_n_74),
        .\Using_FPGA.Native_41 (Operand_Select_I_n_75),
        .\Using_FPGA.Native_42 (Operand_Select_I_n_76),
        .\Using_FPGA.Native_43 (Operand_Select_I_n_77),
        .\Using_FPGA.Native_44 (Operand_Select_I_n_78),
        .\Using_FPGA.Native_45 (Operand_Select_I_n_79),
        .\Using_FPGA.Native_46 (Operand_Select_I_n_80),
        .\Using_FPGA.Native_47 (Operand_Select_I_n_81),
        .\Using_FPGA.Native_48 (Operand_Select_I_n_82),
        .\Using_FPGA.Native_49 (Operand_Select_I_n_83),
        .\Using_FPGA.Native_5 (Operand_Select_I_n_10),
        .\Using_FPGA.Native_50 (Operand_Select_I_n_84),
        .\Using_FPGA.Native_51 (Operand_Select_I_n_85),
        .\Using_FPGA.Native_52 (Operand_Select_I_n_86),
        .\Using_FPGA.Native_53 (Operand_Select_I_n_87),
        .\Using_FPGA.Native_54 (Operand_Select_I_n_88),
        .\Using_FPGA.Native_55 (Operand_Select_I_n_89),
        .\Using_FPGA.Native_56 (Operand_Select_I_n_90),
        .\Using_FPGA.Native_57 (Operand_Select_I_n_91),
        .\Using_FPGA.Native_58 (\Using_FPGA.Native_2 ),
        .\Using_FPGA.Native_59 (\Using_FPGA.Native_3 ),
        .\Using_FPGA.Native_6 (Operand_Select_I_n_11),
        .\Using_FPGA.Native_60 (\Using_FPGA.Native_4 ),
        .\Using_FPGA.Native_61 (PC_Module_I_n_22),
        .\Using_FPGA.Native_62 (PC_Module_I_n_23),
        .\Using_FPGA.Native_63 (PC_Module_I_n_24),
        .\Using_FPGA.Native_64 (PC_Module_I_n_25),
        .\Using_FPGA.Native_65 (PC_Module_I_n_26),
        .\Using_FPGA.Native_66 (PC_Module_I_n_27),
        .\Using_FPGA.Native_67 (PC_Module_I_n_18),
        .\Using_FPGA.Native_7 (Operand_Select_I_n_40),
        .\Using_FPGA.Native_8 (Operand_Select_I_n_41),
        .\Using_FPGA.Native_9 (Operand_Select_I_n_42),
        .\Zero_Detecting[0].nibble_Zero_reg (\Zero_Detecting[0].nibble_Zero_reg ),
        .imm_Value(imm_Value),
        .normal_piperun(normal_piperun),
        .op2_C({op2_C[0],op2_C[1],op2_C[2],op2_C[3],op2_C[4],op2_C[5],op2_C[6],op2_C[7],op2_C[8],op2_C[9],op2_C[10],op2_C[11],op2_C[12],op2_C[13],op2_C[14],op2_C[15],op2_C[16],op2_C[17],op2_C[18],op2_C[19],op2_C[20],op2_C[21],op2_C[22],op2_C[23],op2_C[24],op2_C[25],op2_C[26],op2_C[27]}),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_PC_Module PC_Module_I
       (.ADDRARDADDR(ADDRARDADDR),
        .Buffer_Addr(Buffer_Addr),
        .DI(DI),
        .I3(\OpSelect_Bits[24].Operand_Select_Bit_I/I3 ),
        .I3_0(\OpSelect_Bits[25].Operand_Select_Bit_I/I3 ),
        .I3_1(\OpSelect_Bits[26].Operand_Select_Bit_I/I3 ),
        .I3_2(\OpSelect_Bits[27].Operand_Select_Bit_I/I3 ),
        .IReady(IReady),
        .Increment(Increment),
        .Jump(Jump),
        .PC_OF(PC_Module_I_n_18),
        .PC_Write(PC_Write),
        .\Using_FPGA.Native (PC_Module_I_n_19),
        .\Using_FPGA.Native_0 (PC_Module_I_n_20),
        .\Using_FPGA.Native_1 (PC_Module_I_n_21),
        .\Using_FPGA.Native_2 (PC_Module_I_n_22),
        .\Using_FPGA.Native_3 (PC_Module_I_n_23),
        .\Using_FPGA.Native_4 (PC_Module_I_n_24),
        .\Using_FPGA.Native_5 (PC_Module_I_n_25),
        .\Using_FPGA.Native_6 (PC_Module_I_n_26),
        .\Using_FPGA.Native_7 (PC_Module_I_n_27),
        .\Using_FPGA.Native_8 (\Using_FPGA.Native_10 ),
        .\Using_FPGA.Native_9 (\Using_FPGA.Native_4 ),
        .dlmb_M_ABus(dlmb_M_ABus[13:0]),
        .normal_piperun(normal_piperun),
        .out(out));
  c2c_gth_in_system_ibert_0_Register_File Register_File_I
       (.Data_Write(Data_Write),
        .EX_Result({ex_Result,\Result_Sel_reg[1] [15],\Result_Sel_reg[1] [14],\Result_Sel_reg[1] [13],\Result_Sel_reg[1] [12],\Result_Sel_reg[1] [11],\Result_Sel_reg[1] [10],\Result_Sel_reg[1] [9],\Result_Sel_reg[1] [8],\Result_Sel_reg[1] [7],\Result_Sel_reg[1] [6],\Result_Sel_reg[1] [5],\Result_Sel_reg[1] [4],\Result_Sel_reg[1] [3],\Result_Sel_reg[1] [2],\Result_Sel_reg[1] [1],\Result_Sel_reg[1] [0]}),
        .Reg1_Data(reg1_Data),
        .Reg2_Data(Reg2_Data),
        .Reg_Write(Reg_Write),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_0 (\Using_FPGA.take_Intr_2nd_Phase_reg_0 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_1 (\Using_FPGA.take_Intr_2nd_Phase_reg_1 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_10 (\Using_FPGA.take_Intr_2nd_Phase_reg_10 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_11 (\Using_FPGA.take_Intr_2nd_Phase_reg_11 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_12 (\Using_FPGA.take_Intr_2nd_Phase_reg_12 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_13 (\Using_FPGA.take_Intr_2nd_Phase_reg_13 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_14 (\Using_FPGA.take_Intr_2nd_Phase_reg_14 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_2 (\Using_FPGA.take_Intr_2nd_Phase_reg_2 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_3 (\Using_FPGA.take_Intr_2nd_Phase_reg_3 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_4 (\Using_FPGA.take_Intr_2nd_Phase_reg_4 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_5 (\Using_FPGA.take_Intr_2nd_Phase_reg_5 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_6 (\Using_FPGA.take_Intr_2nd_Phase_reg_6 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_7 (\Using_FPGA.take_Intr_2nd_Phase_reg_7 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_8 (\Using_FPGA.take_Intr_2nd_Phase_reg_8 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_9 (\Using_FPGA.take_Intr_2nd_Phase_reg_9 ),
        .exception_kind(exception_kind),
        .imm_Value({imm_Value[0],imm_Value[1],imm_Value[2],imm_Value[3],imm_Value[4]}),
        .out(out),
        .reg1_Addr(reg1_Addr),
        .res_Forward2(res_Forward2));
  c2c_gth_in_system_ibert_0_Result_Mux Result_Mux_I
       (.ALU_Result(ALU_I_n_3),
        .Data_Read_Mask(Data_Read_Mask),
        .EX_Result({ex_Result,\Result_Sel_reg[1] [15],\Result_Sel_reg[1] [14],\Result_Sel_reg[1] [13],\Result_Sel_reg[1] [12],\Result_Sel_reg[1] [11],\Result_Sel_reg[1] [10],\Result_Sel_reg[1] [9],\Result_Sel_reg[1] [8],\Result_Sel_reg[1] [7],\Result_Sel_reg[1] [6],\Result_Sel_reg[1] [5],\Result_Sel_reg[1] [4],\Result_Sel_reg[1] [3],\Result_Sel_reg[1] [2],\Result_Sel_reg[1] [1],\Result_Sel_reg[1] [0]}),
        .O(O),
        .Op1_Logic(\Using_FPGA.Native_1 ),
        .Op1_Shift(Operand_Select_I_n_60),
        .Sext16(Sext16),
        .Shift_Logic_Res(Shift_Logic_Res),
        .\Using_B36_S2.The_BRAMs[12].RAMB36_I1 (Shift_Logic_Module_I_n_6),
        .\Using_B36_S2.The_BRAMs[12].RAMB36_I1_0 (Shift_Logic_Module_I_n_7),
        .\Using_B36_S2.The_BRAMs[13].RAMB36_I1 (Shift_Logic_Module_I_n_4),
        .\Using_B36_S2.The_BRAMs[13].RAMB36_I1_0 (Shift_Logic_Module_I_n_5),
        .\Using_B36_S2.The_BRAMs[14].RAMB36_I1 (Shift_Logic_Module_I_n_2),
        .\Using_B36_S2.The_BRAMs[14].RAMB36_I1_0 (Shift_Logic_Module_I_n_3),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (Shift_Logic_Module_I_n_1),
        .\Using_FPGA.Native (\Using_FPGA.Native_11 ),
        .\Using_FPGA.Native_0 (ALU_I_n_4),
        .\Using_FPGA.Native_1 (Shift_Logic_Module_I_n_8),
        .\Using_FPGA.Native_10 (Shift_Logic_Module_I_n_17),
        .\Using_FPGA.Native_11 (Shift_Logic_Module_I_n_18),
        .\Using_FPGA.Native_12 (Shift_Logic_Module_I_n_19),
        .\Using_FPGA.Native_13 (Shift_Logic_Module_I_n_20),
        .\Using_FPGA.Native_14 (Shift_Logic_Module_I_n_21),
        .\Using_FPGA.Native_15 (Shift_Logic_Module_I_n_22),
        .\Using_FPGA.Native_16 (Shift_Logic_Module_I_n_23),
        .\Using_FPGA.Native_17 (Shift_Logic_Module_I_n_24),
        .\Using_FPGA.Native_18 (Shift_Logic_Module_I_n_25),
        .\Using_FPGA.Native_19 (Shift_Logic_Module_I_n_26),
        .\Using_FPGA.Native_2 (Shift_Logic_Module_I_n_9),
        .\Using_FPGA.Native_20 (Shift_Logic_Module_I_n_27),
        .\Using_FPGA.Native_21 (Shift_Logic_Module_I_n_28),
        .\Using_FPGA.Native_22 (Shift_Logic_Module_I_n_29),
        .\Using_FPGA.Native_23 (Shift_Logic_Module_I_n_30),
        .\Using_FPGA.Native_24 (Shift_Logic_Module_I_n_31),
        .\Using_FPGA.Native_3 (Shift_Logic_Module_I_n_10),
        .\Using_FPGA.Native_4 (Shift_Logic_Module_I_n_11),
        .\Using_FPGA.Native_5 (Shift_Logic_Module_I_n_12),
        .\Using_FPGA.Native_6 (Shift_Logic_Module_I_n_13),
        .\Using_FPGA.Native_7 (Shift_Logic_Module_I_n_14),
        .\Using_FPGA.Native_8 (Shift_Logic_Module_I_n_15),
        .\Using_FPGA.Native_9 (Shift_Logic_Module_I_n_16),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus),
        .dlmb_M_ABus(dlmb_M_ABus),
        .extend_Data_Read(extend_Data_Read),
        .quadlet_Read(quadlet_Read),
        .sext8(sext8));
  c2c_gth_in_system_ibert_0_Shift_Logic_Module Shift_Logic_Module_I
       (.EX_Op2(EX_Op2),
        .Op1_Logic(Op1_Low[1]),
        .Op1_Shift(Operand_Select_I_n_60),
        .Op2(Operand_Select_I_n_6),
        .Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Shift_Logic_Module_I_n_1),
        .Select_Logic_reg_0(Shift_Logic_Module_I_n_2),
        .Select_Logic_reg_1(Shift_Logic_Module_I_n_3),
        .Select_Logic_reg_10(Shift_Logic_Module_I_n_12),
        .Select_Logic_reg_11(Shift_Logic_Module_I_n_13),
        .Select_Logic_reg_12(Shift_Logic_Module_I_n_14),
        .Select_Logic_reg_13(Shift_Logic_Module_I_n_15),
        .Select_Logic_reg_14(Shift_Logic_Module_I_n_16),
        .Select_Logic_reg_15(Shift_Logic_Module_I_n_17),
        .Select_Logic_reg_16(Shift_Logic_Module_I_n_18),
        .Select_Logic_reg_17(Shift_Logic_Module_I_n_19),
        .Select_Logic_reg_18(Shift_Logic_Module_I_n_20),
        .Select_Logic_reg_19(Shift_Logic_Module_I_n_21),
        .Select_Logic_reg_2(Shift_Logic_Module_I_n_4),
        .Select_Logic_reg_20(Shift_Logic_Module_I_n_22),
        .Select_Logic_reg_21(Shift_Logic_Module_I_n_23),
        .Select_Logic_reg_22(Shift_Logic_Module_I_n_24),
        .Select_Logic_reg_23(Shift_Logic_Module_I_n_25),
        .Select_Logic_reg_24(Shift_Logic_Module_I_n_26),
        .Select_Logic_reg_25(Shift_Logic_Module_I_n_27),
        .Select_Logic_reg_26(Shift_Logic_Module_I_n_28),
        .Select_Logic_reg_27(Shift_Logic_Module_I_n_29),
        .Select_Logic_reg_28(Shift_Logic_Module_I_n_30),
        .Select_Logic_reg_29(Shift_Logic_Module_I_n_31),
        .Select_Logic_reg_3(Shift_Logic_Module_I_n_5),
        .Select_Logic_reg_4(Shift_Logic_Module_I_n_6),
        .Select_Logic_reg_5(Shift_Logic_Module_I_n_7),
        .Select_Logic_reg_6(Shift_Logic_Module_I_n_8),
        .Select_Logic_reg_7(Shift_Logic_Module_I_n_9),
        .Select_Logic_reg_8(Shift_Logic_Module_I_n_10),
        .Select_Logic_reg_9(Shift_Logic_Module_I_n_11),
        .Sext16(Sext16),
        .Shift_Logic_Res(Shift_Logic_Res),
        .Shift_Oper(Shift_Oper),
        .Shifted(Op1_Shift),
        .\Using_FPGA.Native (Op1_Low[0]),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_10 (Operand_Select_I_n_52),
        .\Using_FPGA.Native_11 (Operand_Select_I_n_54),
        .\Using_FPGA.Native_12 (Operand_Select_I_n_56),
        .\Using_FPGA.Native_13 (Operand_Select_I_n_58),
        .\Using_FPGA.Native_14 (Operand_Select_I_n_62),
        .\Using_FPGA.Native_15 (Operand_Select_I_n_64),
        .\Using_FPGA.Native_16 (Operand_Select_I_n_66),
        .\Using_FPGA.Native_17 (Operand_Select_I_n_68),
        .\Using_FPGA.Native_18 (Operand_Select_I_n_70),
        .\Using_FPGA.Native_19 (Operand_Select_I_n_72),
        .\Using_FPGA.Native_2 (Operand_Select_I_n_9),
        .\Using_FPGA.Native_20 (Operand_Select_I_n_74),
        .\Using_FPGA.Native_21 (Operand_Select_I_n_76),
        .\Using_FPGA.Native_22 (Operand_Select_I_n_78),
        .\Using_FPGA.Native_23 (Operand_Select_I_n_80),
        .\Using_FPGA.Native_24 (Operand_Select_I_n_82),
        .\Using_FPGA.Native_25 (Operand_Select_I_n_84),
        .\Using_FPGA.Native_26 (Operand_Select_I_n_86),
        .\Using_FPGA.Native_27 (Operand_Select_I_n_88),
        .\Using_FPGA.Native_28 (Operand_Select_I_n_90),
        .\Using_FPGA.Native_29 (\Using_FPGA.Native_2 ),
        .\Using_FPGA.Native_3 (Operand_Select_I_n_10),
        .\Using_FPGA.Native_30 (Shifted),
        .\Using_FPGA.Native_4 (Operand_Select_I_n_40),
        .\Using_FPGA.Native_5 (Operand_Select_I_n_42),
        .\Using_FPGA.Native_6 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_7 (Operand_Select_I_n_46),
        .\Using_FPGA.Native_8 (Operand_Select_I_n_48),
        .\Using_FPGA.Native_9 (Operand_Select_I_n_50),
        .op2_C({op2_C[0],op2_C[1],op2_C[2],op2_C[3],op2_C[4],op2_C[5],op2_C[6],op2_C[7],op2_C[8],op2_C[9],op2_C[10],op2_C[11],op2_C[12],op2_C[13],op2_C[14],op2_C[15],op2_C[16],op2_C[17],op2_C[18],op2_C[19],op2_C[20],op2_C[21],op2_C[22],op2_C[23],op2_C[24],op2_C[25],op2_C[26],op2_C[27]}),
        .sext8(sext8));
  c2c_gth_in_system_ibert_0_Zero_Detect Zero_Detect_I
       (.Reg_Test_Equal(Reg_Test_Equal),
        .Reg_zero(Reg_zero),
        .\Using_FPGA.Native (Operand_Select_I_n_45),
        .\Using_FPGA.Native_0 (Operand_Select_I_n_5),
        .\Using_FPGA.Native_1 (Operand_Select_I_n_11),
        .\Using_FPGA.Native_10 (Operand_Select_I_n_53),
        .\Using_FPGA.Native_11 (Operand_Select_I_n_69),
        .\Using_FPGA.Native_12 (Operand_Select_I_n_59),
        .\Using_FPGA.Native_13 (Operand_Select_I_n_63),
        .\Using_FPGA.Native_14 (Operand_Select_I_n_61),
        .\Using_FPGA.Native_15 (Operand_Select_I_n_67),
        .\Using_FPGA.Native_16 (Operand_Select_I_n_65),
        .\Using_FPGA.Native_17 (Operand_Select_I_n_81),
        .\Using_FPGA.Native_18 (Operand_Select_I_n_71),
        .\Using_FPGA.Native_19 (Operand_Select_I_n_75),
        .\Using_FPGA.Native_2 (Operand_Select_I_n_8),
        .\Using_FPGA.Native_20 (Operand_Select_I_n_73),
        .\Using_FPGA.Native_21 (Operand_Select_I_n_79),
        .\Using_FPGA.Native_22 (Operand_Select_I_n_77),
        .\Using_FPGA.Native_23 (\Using_FPGA.Native_3 ),
        .\Using_FPGA.Native_24 (Operand_Select_I_n_83),
        .\Using_FPGA.Native_25 (Operand_Select_I_n_87),
        .\Using_FPGA.Native_26 (Operand_Select_I_n_85),
        .\Using_FPGA.Native_27 (Operand_Select_I_n_91),
        .\Using_FPGA.Native_28 (Operand_Select_I_n_89),
        .\Using_FPGA.Native_3 (Operand_Select_I_n_43),
        .\Using_FPGA.Native_4 (Operand_Select_I_n_41),
        .\Using_FPGA.Native_5 (Operand_Select_I_n_57),
        .\Using_FPGA.Native_6 (Operand_Select_I_n_47),
        .\Using_FPGA.Native_7 (Operand_Select_I_n_51),
        .\Using_FPGA.Native_8 (Operand_Select_I_n_49),
        .\Using_FPGA.Native_9 (Operand_Select_I_n_55),
        .\Zero_Detecting[0].nibble_Zero_reg (\Zero_Detecting[0].nibble_Zero_reg ),
        .lopt(lopt_6),
        .lopt_1(lopt_7),
        .lopt_2(lopt_8),
        .reg_Test_Equal_N(reg_Test_Equal_N));
endmodule

module c2c_gth_in_system_ibert_0_Decode
   (IReady,
    Buffer_Addr,
    reg1_Addr,
    imm_Value,
    nonvalid_IFetch_n_reg_0,
    Jump,
    normal_piperun,
    Q,
    res_Forward1,
    res_Forward2,
    alu_Op,
    carry_In,
    Reg_Test_Equal,
    reg_Test_Equal_N,
    exception_kind,
    \Using_FPGA.take_Intr_2nd_Phase_reg_0 ,
    opsel1_SPR,
    quadlet_Read,
    isbyte,
    isdoublet,
    compare_Instr,
    Unsigned_Op,
    sext8,
    Select_Logic,
    Sext16,
    iFetch_In_Progress_reg_0,
    \Using_FPGA.set_BIP_I_reg_0 ,
    \Using_FPGA.Native ,
    \Using_FPGA.enable_Interrupts_I_reg_0 ,
    Shifted,
    inHibit_EX_reg_0,
    Increment,
    \Using_B36_S2.The_BRAMs[8].RAMB36_I1 ,
    E,
    D,
    D_0,
    D_1,
    D_2,
    D_3,
    D_4,
    D_5,
    D_6,
    D_7,
    D_8,
    D_9,
    D_10,
    D_11,
    D_12,
    D_13,
    D_14,
    D_15,
    D_16,
    D_17,
    D_18,
    D_19,
    D_20,
    D_21,
    D_22,
    D_23,
    D_24,
    D_25,
    D_26,
    D_27,
    D_28,
    D_29,
    D_30,
    PC_Write,
    Reg_Write,
    dlmb_port_BRAM_WEN,
    lmb_reg_write0,
    IO_Write_Strobe,
    IO_Addr_Strobe0,
    IO_Read_Strobe,
    io_read_keep,
    lmb_reg_read0,
    dlmb_M_AddrStrobe,
    \Synchronize.use_sync_reset.sync_reg[2] ,
    \Synchronize.use_sync_reset.sync_reg[2]_0 ,
    MSR_Rst,
    DI,
    Data_Read_Mask,
    Shift_Oper,
    \Logic_Oper_reg[0]_0 ,
    \Result_Sel_reg[0]_0 ,
    DATA_OUTA,
    out,
    S,
    dlmb_LMB_Ready,
    ilmb_Sl_Ready,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    \Using_FPGA.Native_0 ,
    Op1_Low,
    LO,
    \Using_FPGA.Native_1 ,
    Reg_zero,
    inHibit_EX_reg_1,
    Sl_Rdy,
    lmb_as,
    MSR,
    \Using_FPGA.Native_2 ,
    Op1_Shift,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 ,
    \Using_FPGA.Native_9 ,
    \Using_FPGA.Native_10 ,
    \Using_FPGA.Native_11 ,
    \Using_FPGA.Native_12 ,
    \Using_FPGA.Native_13 ,
    \Using_FPGA.Native_14 ,
    \Using_FPGA.Native_15 ,
    \Using_FPGA.Native_16 ,
    \Using_FPGA.Native_17 ,
    \Using_FPGA.Native_18 ,
    \Using_FPGA.Native_19 ,
    \Using_FPGA.Native_20 ,
    \Using_FPGA.Native_21 ,
    Reg2_Data,
    ex_Valid_reg_0,
    \Using_LWX_SWX_instr.reservation_reg_0 ,
    load_Store_i_reg_0,
    lmb_as_0,
    Sl_Rdy_1,
    load_Store_i_reg_1,
    dlmb_M_BE,
    O,
    dlmb_M_ABus,
    mb_rdy_o,
    \Using_FPGA.Native_22 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11,
    lopt_12,
    lopt_13);
  output IReady;
  output [2:0]Buffer_Addr;
  output [0:4]reg1_Addr;
  output [0:15]imm_Value;
  output nonvalid_IFetch_n_reg_0;
  output Jump;
  output normal_piperun;
  output [4:0]Q;
  output res_Forward1;
  output res_Forward2;
  output [0:1]alu_Op;
  output carry_In;
  output Reg_Test_Equal;
  output reg_Test_Equal_N;
  output [0:0]exception_kind;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_0 ;
  output opsel1_SPR;
  output quadlet_Read;
  output isbyte;
  output isdoublet;
  output compare_Instr;
  output Unsigned_Op;
  output sext8;
  output Select_Logic;
  output Sext16;
  output iFetch_In_Progress_reg_0;
  output \Using_FPGA.set_BIP_I_reg_0 ;
  output \Using_FPGA.Native ;
  output \Using_FPGA.enable_Interrupts_I_reg_0 ;
  output Shifted;
  output inHibit_EX_reg_0;
  output Increment;
  output \Using_B36_S2.The_BRAMs[8].RAMB36_I1 ;
  output [0:0]E;
  output D;
  output D_0;
  output D_1;
  output D_2;
  output D_3;
  output D_4;
  output D_5;
  output D_6;
  output D_7;
  output D_8;
  output D_9;
  output D_10;
  output D_11;
  output D_12;
  output D_13;
  output D_14;
  output D_15;
  output D_16;
  output D_17;
  output D_18;
  output D_19;
  output D_20;
  output D_21;
  output D_22;
  output D_23;
  output D_24;
  output D_25;
  output D_26;
  output D_27;
  output D_28;
  output D_29;
  output D_30;
  output PC_Write;
  output Reg_Write;
  output [0:3]dlmb_port_BRAM_WEN;
  output lmb_reg_write0;
  output IO_Write_Strobe;
  output IO_Addr_Strobe0;
  output IO_Read_Strobe;
  output io_read_keep;
  output lmb_reg_read0;
  output dlmb_M_AddrStrobe;
  output \Synchronize.use_sync_reset.sync_reg[2] ;
  output \Synchronize.use_sync_reset.sync_reg[2]_0 ;
  output MSR_Rst;
  output DI;
  output Data_Read_Mask;
  output Shift_Oper;
  output [1:0]\Logic_Oper_reg[0]_0 ;
  output [1:0]\Result_Sel_reg[0]_0 ;
  input [0:31]DATA_OUTA;
  input out;
  input S;
  input dlmb_LMB_Ready;
  input ilmb_Sl_Ready;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:1]Op1_Low;
  input LO;
  input \Using_FPGA.Native_1 ;
  input Reg_zero;
  input inHibit_EX_reg_1;
  input Sl_Rdy;
  input lmb_as;
  input [2:0]MSR;
  input \Using_FPGA.Native_2 ;
  input Op1_Shift;
  input \Using_FPGA.Native_3 ;
  input [15:0]\Using_FPGA.Native_4 ;
  input \Using_FPGA.Native_5 ;
  input \Using_FPGA.Native_6 ;
  input \Using_FPGA.Native_7 ;
  input \Using_FPGA.Native_8 ;
  input \Using_FPGA.Native_9 ;
  input \Using_FPGA.Native_10 ;
  input \Using_FPGA.Native_11 ;
  input \Using_FPGA.Native_12 ;
  input \Using_FPGA.Native_13 ;
  input \Using_FPGA.Native_14 ;
  input \Using_FPGA.Native_15 ;
  input \Using_FPGA.Native_16 ;
  input \Using_FPGA.Native_17 ;
  input \Using_FPGA.Native_18 ;
  input \Using_FPGA.Native_19 ;
  input \Using_FPGA.Native_20 ;
  input [15:0]\Using_FPGA.Native_21 ;
  input [15:0]Reg2_Data;
  input ex_Valid_reg_0;
  input \Using_LWX_SWX_instr.reservation_reg_0 ;
  input load_Store_i_reg_0;
  input lmb_as_0;
  input Sl_Rdy_1;
  input load_Store_i_reg_1;
  input [0:3]dlmb_M_BE;
  input O;
  input [0:0]dlmb_M_ABus;
  input mb_rdy_o;
  input \Using_FPGA.Native_22 ;
  input lopt;
  output lopt_1;
  input lopt_2;
  output lopt_3;
  output lopt_4;
  input lopt_5;
  output lopt_6;
  output lopt_7;
  input lopt_8;
  input lopt_9;
  output lopt_10;
  output lopt_11;
  output lopt_12;
  output lopt_13;

  wire [2:0]Buffer_Addr;
  wire D;
  wire [0:31]DATA_OUTA;
  wire DI;
  wire D_0;
  wire D_1;
  wire D_10;
  wire D_11;
  wire D_12;
  wire D_13;
  wire D_14;
  wire D_15;
  wire D_16;
  wire D_17;
  wire D_18;
  wire D_19;
  wire D_2;
  wire D_20;
  wire D_21;
  wire D_22;
  wire D_23;
  wire D_24;
  wire D_25;
  wire D_26;
  wire D_27;
  wire D_28;
  wire D_29;
  wire D_3;
  wire D_30;
  wire D_31;
  wire D_4;
  wire D_5;
  wire D_6;
  wire D_7;
  wire D_8;
  wire D_9;
  wire Data_Read_Mask;
  wire [0:0]E;
  wire IO_Addr_Strobe0;
  wire IO_Read_Strobe;
  wire IO_Write_Strobe;
  wire IReady;
  wire Increment;
  wire Jump;
  wire LO;
  wire [1:0]\Logic_Oper_reg[0]_0 ;
  wire [2:0]MSR;
  wire MSR_Rst;
  wire O;
  wire [0:1]Op1_Low;
  wire Op1_Shift;
  wire PC_Write;
  wire PreFetch_Buffer_I_n_104;
  wire PreFetch_Buffer_I_n_105;
  wire PreFetch_Buffer_I_n_106;
  wire PreFetch_Buffer_I_n_109;
  wire PreFetch_Buffer_I_n_112;
  wire PreFetch_Buffer_I_n_113;
  wire PreFetch_Buffer_I_n_114;
  wire PreFetch_Buffer_I_n_32;
  wire PreFetch_Buffer_I_n_33;
  wire PreFetch_Buffer_I_n_34;
  wire PreFetch_Buffer_I_n_35;
  wire PreFetch_Buffer_I_n_36;
  wire PreFetch_Buffer_I_n_37;
  wire PreFetch_Buffer_I_n_38;
  wire PreFetch_Buffer_I_n_39;
  wire PreFetch_Buffer_I_n_40;
  wire PreFetch_Buffer_I_n_41;
  wire PreFetch_Buffer_I_n_42;
  wire PreFetch_Buffer_I_n_43;
  wire PreFetch_Buffer_I_n_45;
  wire PreFetch_Buffer_I_n_46;
  wire PreFetch_Buffer_I_n_52;
  wire PreFetch_Buffer_I_n_53;
  wire PreFetch_Buffer_I_n_54;
  wire PreFetch_Buffer_I_n_56;
  wire PreFetch_Buffer_I_n_58;
  wire PreFetch_Buffer_I_n_66;
  wire PreFetch_Buffer_I_n_67;
  wire PreFetch_Buffer_I_n_68;
  wire [4:0]Q;
  wire R;
  wire [15:0]Reg2_Data;
  wire Reg_Test_Equal;
  wire Reg_Test_Equal_N_i7_out;
  wire Reg_Test_Equal_i;
  wire Reg_Write;
  wire Reg_zero;
  wire [1:0]\Result_Sel_reg[0]_0 ;
  wire S;
  wire S1_out;
  wire S87_out;
  wire Select_Logic;
  wire Select_Logic0;
  wire Sext16;
  wire Sext160;
  wire Sext80;
  wire Shift_Oper;
  wire Shifted;
  wire Sign_Extend_i_1_n_0;
  wire Sl_Rdy;
  wire Sl_Rdy_1;
  wire \Synchronize.use_sync_reset.sync_reg[2] ;
  wire \Synchronize.use_sync_reset.sync_reg[2]_0 ;
  wire Unsigned_Op;
  wire \Using_B36_S2.The_BRAMs[0].RAMB36_I1_i_4_n_0 ;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[8].RAMB36_I1 ;
  wire \Using_FPGA.MUXCY_JUMP_CARRY3_n_1 ;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire \Using_FPGA.Native_11 ;
  wire \Using_FPGA.Native_12 ;
  wire \Using_FPGA.Native_13 ;
  wire \Using_FPGA.Native_14 ;
  wire \Using_FPGA.Native_15 ;
  wire \Using_FPGA.Native_16 ;
  wire \Using_FPGA.Native_17 ;
  wire \Using_FPGA.Native_18 ;
  wire \Using_FPGA.Native_19 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_20 ;
  wire [15:0]\Using_FPGA.Native_21 ;
  wire \Using_FPGA.Native_22 ;
  wire \Using_FPGA.Native_3 ;
  wire [15:0]\Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \Using_FPGA.Native_9 ;
  wire \Using_FPGA.Native_i_3__11_n_0 ;
  wire \Using_FPGA.Native_i_4__0_n_0 ;
  wire \Using_FPGA.enable_Interrupts_I_reg_0 ;
  wire \Using_FPGA.enable_Interrupts_I_reg_n_0 ;
  wire \Using_FPGA.iFetch_MuxCY_2_n_0 ;
  wire \Using_FPGA.iFetch_MuxCY_2_n_2 ;
  wire \Using_FPGA.iFetch_MuxCY_2_n_3 ;
  wire \Using_FPGA.of_PipeRun_MuxCY_1_n_2 ;
  wire \Using_FPGA.of_PipeRun_MuxCY_1_n_3 ;
  wire \Using_FPGA.of_PipeRun_MuxCY_1_n_4 ;
  wire \Using_FPGA.of_PipeRun_MuxCY_1_n_5 ;
  wire \Using_FPGA.of_PipeRun_MuxCY_1_n_6 ;
  wire \Using_FPGA.of_PipeRun_MuxCY_1_n_8 ;
  wire \Using_FPGA.reset_BIP_I_reg_n_0 ;
  wire \Using_FPGA.set_BIP_I_reg_0 ;
  wire \Using_FPGA.set_BIP_I_reg_n_0 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_0 ;
  wire \Using_LWX_SWX_instr.reservation_reg_0 ;
  wire \Using_LWX_SWX_instr.reservation_reg_n_0 ;
  wire [0:1]alu_Op;
  wire buffer_Full;
  wire carry_In;
  wire compare_Instr;
  wire correct_Carry;
  wire correct_Carry_I;
  wire correct_Carry_II;
  wire correct_Carry_Select;
  wire d_AS_I;
  wire dlmb_LMB_Ready;
  wire [0:0]dlmb_M_ABus;
  wire dlmb_M_AddrStrobe;
  wire [0:3]dlmb_M_BE;
  wire [0:3]dlmb_port_BRAM_WEN;
  wire doublet_Read;
  wire doublet_Read_i_i_1_n_0;
  wire doublet_i;
  wire enable_Interrupts_I;
  wire ex_Valid;
  wire ex_Valid_reg_0;
  wire ex_first_cycle;
  wire [0:0]exception_kind;
  wire force1;
  wire force1_i26_out;
  wire force2;
  wire force2_i;
  wire force_DI1;
  wire force_DI2;
  wire force_Val1;
  wire force_Val1_i24_out;
  wire force_Val2_N;
  wire force_jump1;
  wire force_jump2;
  wire iFetch_In_Progress;
  wire iFetch_In_Progress_reg_0;
  wire ifetch_carry1;
  wire ilmb_Sl_Ready;
  wire [0:15]imm_Value;
  wire inHibit_EX;
  wire inHibit_EX1;
  wire inHibit_EX_reg_0;
  wire inHibit_EX_reg_1;
  wire [0:6]instr_OF;
  wire io_read_keep;
  wire is_lwx_I;
  wire is_swx_I;
  wire is_swx_I0;
  wire is_swx_I_reg_n_0;
  wire isbyte;
  wire isdoublet;
  wire jump2_I_reg_n_0;
  wire jump_Carry1;
  wire jump_Carry2;
  wire lmb_as;
  wire lmb_as_0;
  wire lmb_reg_read0;
  wire lmb_reg_read_i_2_n_0;
  wire lmb_reg_write0;
  wire lmb_reg_write_i_2_n_0;
  wire load_Store_i;
  wire load_Store_i051_out;
  wire load_Store_i2;
  wire load_Store_i_reg_0;
  wire load_Store_i_reg_1;
  wire lopt;
  wire \^lopt_1 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire \^lopt_12 ;
  wire \^lopt_13 ;
  wire lopt_14;
  wire lopt_15;
  wire lopt_16;
  wire lopt_17;
  wire lopt_18;
  wire lopt_19;
  wire \^lopt_2 ;
  wire lopt_20;
  wire lopt_21;
  wire lopt_22;
  wire lopt_23;
  wire lopt_24;
  wire lopt_25;
  wire lopt_26;
  wire lopt_27;
  wire lopt_28;
  wire lopt_29;
  wire \^lopt_3 ;
  wire lopt_30;
  wire lopt_31;
  wire \^lopt_4 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire mb_rdy_o;
  wire mbar_decode_I;
  wire mbar_first;
  wire mbar_first_i_3_n_0;
  wire mbar_first_reg_n_0;
  wire mbar_hold_I_reg_n_0;
  wire mbar_is_sleep;
  wire mbar_sleep;
  wire mbar_sleep_i_1_n_0;
  wire missed_IFetch;
  wire mtsmsr_write_i_reg_n_0;
  wire mul_Executing;
  wire new_Carry;
  wire nonvalid_IFetch_n_reg_0;
  wire normal_piperun;
  wire of_PipeRun_Select;
  wire of_PipeRun_without_dready;
  wire of_Valid;
  wire of_mbar_decode;
  wire opsel1_SPR;
  wire opsel1_SPR_Select;
  wire opsel1_SPR_Select_1;
  wire opsel1_SPR_Select_2_1;
  wire opsel1_SPR_Select_2_2;
  wire out;
  wire p_64_in;
  wire quadlet_Read;
  wire [0:4]reg1_Addr;
  wire reg_Test_Equal_N;
  wire res_Forward1;
  wire res_Forward2;
  wire res_forward1_1;
  wire res_forward1_2;
  wire res_forward1_3;
  wire res_forward2_1;
  wire res_forward2_2;
  wire res_forward2_3;
  wire reservation2;
  wire reset_BIP_I8_out;
  wire reset_delay;
  wire select_ALU_Carry;
  wire sext8;
  wire shift_Carry_In;
  wire [0:1]shift_Oper;
  wire sub_Carry;
  wire swx_ready;
  wire take_Intr_Now_I;
  wire take_Intr_Now_II;
  wire use_Imm_Reg;
  wire use_Reg_Neg_DI;
  wire use_Reg_Neg_DI_i23_out;
  wire use_Reg_Neg_S;
  wire use_Reg_Neg_S_i25_out;
  wire using_Imm0;
  wire write_Carry;
  wire write_Carry_I_reg_n_0;
  wire write_Reg_I_S;
  wire write_Reg_reg_n_0;
  wire writing_reg_n_0;

  assign \^lopt_1  = lopt_2;
  assign \^lopt_4  = lopt_5;
  assign lopt_1 = select_ALU_Carry;
  assign lopt_10 = \^lopt_13 ;
  assign lopt_11 = sub_Carry;
  assign lopt_12 = load_Store_i2;
  assign lopt_13 = correct_Carry_Select;
  assign lopt_28 = lopt_8;
  assign lopt_29 = lopt_9;
  assign lopt_3 = \^lopt_2 ;
  assign lopt_4 = \^lopt_3 ;
  assign lopt_6 = force_DI1;
  assign lopt_7 = force_jump1;
  FDRE Compare_Instr_reg
       (.C(out),
        .CE(normal_piperun),
        .D(PreFetch_Buffer_I_n_114),
        .Q(compare_Instr),
        .R(\Using_FPGA.of_PipeRun_MuxCY_1_n_4 ));
  FDRE \Logic_Oper_reg[0] 
       (.C(out),
        .CE(normal_piperun),
        .D(instr_OF[4]),
        .Q(\Logic_Oper_reg[0]_0 [1]),
        .R(\Using_FPGA.Native_0 ));
  FDRE \Logic_Oper_reg[1] 
       (.C(out),
        .CE(normal_piperun),
        .D(instr_OF[5]),
        .Q(\Logic_Oper_reg[0]_0 [0]),
        .R(\Using_FPGA.Native_0 ));
  c2c_gth_in_system_ibert_0_PreFetch_Buffer PreFetch_Buffer_I
       (.CI(IReady),
        .D({PreFetch_Buffer_I_n_38,PreFetch_Buffer_I_n_39,PreFetch_Buffer_I_n_40,PreFetch_Buffer_I_n_41,PreFetch_Buffer_I_n_42}),
        .DATA_OUTA(DATA_OUTA),
        .DI(DI),
        .D_0(D_0),
        .D_1(D_1),
        .D_10(D_10),
        .D_11(D_11),
        .D_12(D_12),
        .D_13(D_13),
        .D_14(D_14),
        .D_15(D_15),
        .D_16(D_16),
        .D_17(D_17),
        .D_18(D_18),
        .D_19(D_19),
        .D_2(D_2),
        .D_20(D_20),
        .D_21(D_21),
        .D_22(D_22),
        .D_23(D_23),
        .D_24(D_24),
        .D_25(D_25),
        .D_26(D_26),
        .D_27(D_27),
        .D_28(D_28),
        .D_29(D_29),
        .D_3(D_3),
        .D_30(D_30),
        .D_31(D_31),
        .D_4(D_4),
        .D_5(D_5),
        .D_6(D_6),
        .D_7(D_7),
        .D_8(D_8),
        .D_9(D_9),
        .E(E),
        .Increment(Increment),
        .Reg2_Data(Reg2_Data),
        .Reg_Test_Equal_N_i7_out(Reg_Test_Equal_N_i7_out),
        .Reg_Test_Equal_i(Reg_Test_Equal_i),
        .S(S),
        .S87_out(S87_out),
        .Sext160(Sext160),
        .Sext16_reg(normal_piperun),
        .Sext16_reg_0(exception_kind),
        .Sext80(Sext80),
        .\Size_17to32.imm_Reg_reg[0] (D),
        .\Size_17to32.imm_Reg_reg[15] (\Using_FPGA.take_Intr_2nd_Phase_reg_0 ),
        .\Synchronize.use_sync_reset.sync_reg[2] (PreFetch_Buffer_I_n_45),
        .\Synchronize.use_sync_reset.sync_reg[2]_0 (PreFetch_Buffer_I_n_67),
        .\Using_B36_S2.The_BRAMs[0].RAMB36_I1 ({instr_OF[0],instr_OF[1],instr_OF[2],instr_OF[3],instr_OF[4],instr_OF[5],instr_OF[6]}),
        .\Using_B36_S2.The_BRAMs[0].RAMB36_I1_0 (PreFetch_Buffer_I_n_37),
        .\Using_B36_S2.The_BRAMs[0].RAMB36_I1_1 (PreFetch_Buffer_I_n_43),
        .\Using_B36_S2.The_BRAMs[0].RAMB36_I1_2 (PreFetch_Buffer_I_n_53),
        .\Using_B36_S2.The_BRAMs[0].RAMB36_I1_3 (PreFetch_Buffer_I_n_68),
        .\Using_B36_S2.The_BRAMs[0].RAMB36_I1_4 (PreFetch_Buffer_I_n_112),
        .\Using_B36_S2.The_BRAMs[14].RAMB36_I1 (PreFetch_Buffer_I_n_56),
        .\Using_B36_S2.The_BRAMs[1].RAMB36_I1 (PreFetch_Buffer_I_n_35),
        .\Using_B36_S2.The_BRAMs[1].RAMB36_I1_0 (PreFetch_Buffer_I_n_58),
        .\Using_B36_S2.The_BRAMs[1].RAMB36_I1_1 (PreFetch_Buffer_I_n_114),
        .\Using_B36_S2.The_BRAMs[2].RAMB36_I1 (PreFetch_Buffer_I_n_34),
        .\Using_B36_S2.The_BRAMs[2].RAMB36_I1_0 (PreFetch_Buffer_I_n_106),
        .\Using_B36_S2.The_BRAMs[2].RAMB36_I1_1 (PreFetch_Buffer_I_n_109),
        .\Using_B36_S2.The_BRAMs[2].RAMB36_I1_2 (PreFetch_Buffer_I_n_113),
        .\Using_B36_S2.The_BRAMs[5].RAMB36_I1 (reg1_Addr[0]),
        .\Using_B36_S2.The_BRAMs[5].RAMB36_I1_0 (PreFetch_Buffer_I_n_66),
        .\Using_B36_S2.The_BRAMs[6].RAMB36_I1 (reg1_Addr[1]),
        .\Using_B36_S2.The_BRAMs[6].RAMB36_I1_0 (reg1_Addr[2]),
        .\Using_B36_S2.The_BRAMs[6].RAMB36_I1_1 (PreFetch_Buffer_I_n_54),
        .\Using_B36_S2.The_BRAMs[7].RAMB36_I1 (reg1_Addr[3]),
        .\Using_B36_S2.The_BRAMs[8].RAMB36_I1 (imm_Value[0]),
        .\Using_B36_S2.The_BRAMs[8].RAMB36_I1_0 (imm_Value[1]),
        .\Using_B36_S2.The_BRAMs[8].RAMB36_I1_1 (\Using_B36_S2.The_BRAMs[8].RAMB36_I1 ),
        .\Using_FPGA.Native (Buffer_Addr[0]),
        .\Using_FPGA.Native_0 (Buffer_Addr[1]),
        .\Using_FPGA.Native_1 (Buffer_Addr[2]),
        .\Using_FPGA.Native_10 (\Using_FPGA.Native_7 ),
        .\Using_FPGA.Native_11 (\Using_FPGA.Native_8 ),
        .\Using_FPGA.Native_12 (\Using_FPGA.Native_9 ),
        .\Using_FPGA.Native_13 (\Using_FPGA.Native_10 ),
        .\Using_FPGA.Native_14 (\Using_FPGA.Native_11 ),
        .\Using_FPGA.Native_15 (\Using_FPGA.Native_12 ),
        .\Using_FPGA.Native_16 (\Using_FPGA.Native_13 ),
        .\Using_FPGA.Native_17 (\Using_FPGA.Native_14 ),
        .\Using_FPGA.Native_18 (\Using_FPGA.Native_15 ),
        .\Using_FPGA.Native_19 (\Using_FPGA.Native_16 ),
        .\Using_FPGA.Native_2 (PreFetch_Buffer_I_n_32),
        .\Using_FPGA.Native_20 (\Using_FPGA.Native_17 ),
        .\Using_FPGA.Native_21 (\Using_FPGA.Native_18 ),
        .\Using_FPGA.Native_22 (\Using_FPGA.Native_19 ),
        .\Using_FPGA.Native_23 (\Using_FPGA.Native_20 ),
        .\Using_FPGA.Native_24 (\Using_FPGA.Native_21 ),
        .\Using_FPGA.Native_25 (res_Forward2),
        .\Using_FPGA.Native_26 (S1_out),
        .\Using_FPGA.Native_3 (PreFetch_Buffer_I_n_33),
        .\Using_FPGA.Native_4 (PreFetch_Buffer_I_n_104),
        .\Using_FPGA.Native_5 (PreFetch_Buffer_I_n_105),
        .\Using_FPGA.Native_6 (mbar_hold_I_reg_n_0),
        .\Using_FPGA.Native_7 (\Using_FPGA.Native_4 ),
        .\Using_FPGA.Native_8 (\Using_FPGA.Native_5 ),
        .\Using_FPGA.Native_9 (\Using_FPGA.Native_6 ),
        .\Using_FPGA.set_BIP_I_reg (\Using_FPGA.set_BIP_I_reg_n_0 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (PreFetch_Buffer_I_n_52),
        .buffer_Full(buffer_Full),
        .doublet_i(doublet_i),
        .enable_Interrupts_I(enable_Interrupts_I),
        .ex_Valid(ex_Valid),
        .ex_Valid_reg(jump2_I_reg_n_0),
        .force1_i26_out(force1_i26_out),
        .force2_i(force2_i),
        .force_Val1_i24_out(force_Val1_i24_out),
        .force_Val2_N(force_Val2_N),
        .ilmb_Sl_Ready(ilmb_Sl_Ready),
        .imm_Value({imm_Value[2],imm_Value[3],imm_Value[4],imm_Value[5],imm_Value[6],imm_Value[7],imm_Value[8],imm_Value[9],imm_Value[10],imm_Value[11],imm_Value[12],imm_Value[13],imm_Value[14],imm_Value[15]}),
        .inHibit_EX(inHibit_EX),
        .inHibit_EX_reg(PreFetch_Buffer_I_n_36),
        .inHibit_EX_reg_0(inHibit_EX_reg_0),
        .is_swx_I0(is_swx_I0),
        .jump2_I_reg(\Using_FPGA.MUXCY_JUMP_CARRY3_n_1 ),
        .jump_Carry2(jump_Carry2),
        .load_Store_i051_out(load_Store_i051_out),
        .lopt(\^lopt_5 ),
        .lopt_1(\^lopt_6 ),
        .lopt_2(\^lopt_7 ),
        .lopt_3(\^lopt_8 ),
        .lopt_4(\^lopt_9 ),
        .lopt_5(\^lopt_10 ),
        .lopt_6(\^lopt_11 ),
        .mbar_first(mbar_first),
        .missed_IFetch(missed_IFetch),
        .mtsmsr_write_i_reg(PreFetch_Buffer_I_n_46),
        .mtsmsr_write_i_reg_0(mtsmsr_write_i_reg_n_0),
        .mul_Executing(mul_Executing),
        .mul_Executing_reg(mbar_first_i_3_n_0),
        .nonvalid_IFetch_n_reg(iFetch_In_Progress_reg_0),
        .nonvalid_IFetch_n_reg_0(Jump),
        .nonvalid_IFetch_n_reg_1(nonvalid_IFetch_n_reg_0),
        .of_Valid(of_Valid),
        .of_mbar_decode(of_mbar_decode),
        .out(out),
        .reg1_Addr(reg1_Addr[4]),
        .reset_BIP_I8_out(reset_BIP_I8_out),
        .take_Intr_Now_II(take_Intr_Now_II),
        .use_Imm_Reg(use_Imm_Reg),
        .use_Reg_Neg_DI_i23_out(use_Reg_Neg_DI_i23_out),
        .use_Reg_Neg_S_i25_out(use_Reg_Neg_S_i25_out),
        .\write_Addr_I_reg[3] (\Using_FPGA.Native_0 ));
  FDRE \Result_Sel_reg[0] 
       (.C(out),
        .CE(normal_piperun),
        .D(instr_OF[0]),
        .Q(\Result_Sel_reg[0]_0 [1]),
        .R(\Using_FPGA.of_PipeRun_MuxCY_1_n_4 ));
  FDRE \Result_Sel_reg[1] 
       (.C(out),
        .CE(normal_piperun),
        .D(instr_OF[1]),
        .Q(\Result_Sel_reg[0]_0 [0]),
        .R(\Using_FPGA.of_PipeRun_MuxCY_1_n_4 ));
  FDRE Select_Logic_reg
       (.C(out),
        .CE(normal_piperun),
        .D(Select_Logic0),
        .Q(Select_Logic),
        .R(\Using_FPGA.Native_0 ));
  FDRE Sext16_reg
       (.C(out),
        .CE(normal_piperun),
        .D(Sext160),
        .Q(Sext16),
        .R(PreFetch_Buffer_I_n_67));
  FDRE Sext8_reg
       (.C(out),
        .CE(normal_piperun),
        .D(Sext80),
        .Q(sext8),
        .R(PreFetch_Buffer_I_n_67));
  FDRE Shift_Carry_In_reg
       (.C(out),
        .CE(normal_piperun),
        .D(correct_Carry),
        .Q(shift_Carry_In),
        .R(\Using_FPGA.Native_0 ));
  FDRE \Shift_Oper_reg[0] 
       (.C(out),
        .CE(normal_piperun),
        .D(imm_Value[9]),
        .Q(shift_Oper[0]),
        .R(\Using_FPGA.Native_0 ));
  FDRE \Shift_Oper_reg[1] 
       (.C(out),
        .CE(normal_piperun),
        .D(imm_Value[10]),
        .Q(shift_Oper[1]),
        .R(\Using_FPGA.Native_0 ));
  LUT6 #(
    .INIT(64'hFF8FFFFFFF8F0000)) 
    Sign_Extend_i_1
       (.I0(imm_Value[9]),
        .I1(imm_Value[10]),
        .I2(PreFetch_Buffer_I_n_34),
        .I3(exception_kind),
        .I4(normal_piperun),
        .I5(Shift_Oper),
        .O(Sign_Extend_i_1_n_0));
  FDRE Sign_Extend_reg
       (.C(out),
        .CE(1'b1),
        .D(Sign_Extend_i_1_n_0),
        .Q(Shift_Oper),
        .R(\Using_FPGA.Native_0 ));
  FDRE Unsigned_Op_reg
       (.C(out),
        .CE(normal_piperun),
        .D(imm_Value[14]),
        .Q(Unsigned_Op),
        .R(\Using_FPGA.of_PipeRun_MuxCY_1_n_8 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \Using_B36_S2.The_BRAMs[0].RAMB36_I1_i_2 
       (.I0(d_AS_I),
        .I1(is_swx_I_reg_n_0),
        .I2(\Using_LWX_SWX_instr.reservation_reg_n_0 ),
        .O(dlmb_M_AddrStrobe));
  LUT6 #(
    .INIT(64'h0000000020000000)) 
    \Using_B36_S2.The_BRAMs[0].RAMB36_I1_i_3 
       (.I0(dlmb_M_BE[0]),
        .I1(\Using_B36_S2.The_BRAMs[0].RAMB36_I1_i_4_n_0 ),
        .I2(writing_reg_n_0),
        .I3(load_Store_i),
        .I4(ex_Valid),
        .I5(O),
        .O(dlmb_port_BRAM_WEN[0]));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Using_B36_S2.The_BRAMs[0].RAMB36_I1_i_4 
       (.I0(is_swx_I_reg_n_0),
        .I1(\Using_LWX_SWX_instr.reservation_reg_n_0 ),
        .O(\Using_B36_S2.The_BRAMs[0].RAMB36_I1_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000020000000)) 
    \Using_B36_S2.The_BRAMs[12].RAMB36_I1_i_1 
       (.I0(dlmb_M_BE[3]),
        .I1(\Using_B36_S2.The_BRAMs[0].RAMB36_I1_i_4_n_0 ),
        .I2(writing_reg_n_0),
        .I3(load_Store_i),
        .I4(ex_Valid),
        .I5(O),
        .O(dlmb_port_BRAM_WEN[3]));
  LUT6 #(
    .INIT(64'h0000000020000000)) 
    \Using_B36_S2.The_BRAMs[4].RAMB36_I1_i_1 
       (.I0(dlmb_M_BE[1]),
        .I1(\Using_B36_S2.The_BRAMs[0].RAMB36_I1_i_4_n_0 ),
        .I2(writing_reg_n_0),
        .I3(load_Store_i),
        .I4(ex_Valid),
        .I5(O),
        .O(dlmb_port_BRAM_WEN[1]));
  LUT6 #(
    .INIT(64'h0000000020000000)) 
    \Using_B36_S2.The_BRAMs[8].RAMB36_I1_i_1 
       (.I0(dlmb_M_BE[2]),
        .I1(\Using_B36_S2.The_BRAMs[0].RAMB36_I1_i_4_n_0 ),
        .I2(writing_reg_n_0),
        .I3(load_Store_i),
        .I4(ex_Valid),
        .I5(O),
        .O(dlmb_port_BRAM_WEN[2]));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE \Using_FPGA.ALU_Carry_FDRE 
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (normal_piperun),
        .carry_In(carry_In),
        .correct_Carry_II(correct_Carry_II),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY \Using_FPGA.ALU_Carry_MUXCY 
       (.correct_Carry(correct_Carry),
        .correct_Carry_I(correct_Carry_I),
        .correct_Carry_Select(correct_Carry_Select),
        .lopt(\^lopt_12 ),
        .lopt_1(\^lopt_13 ),
        .lopt_2(load_Store_i2),
        .lopt_3(lopt_28),
        .lopt_4(lopt_29),
        .sub_Carry(sub_Carry));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_0 \Using_FPGA.ALU_OP0_FDRE 
       (.D_31(D_31),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (normal_piperun),
        .alu_Op(alu_Op[0]),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_1 \Using_FPGA.ALU_OP1_FDRE 
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (normal_piperun),
        .\Using_FPGA.Native_2 (PreFetch_Buffer_I_n_52),
        .alu_Op(alu_Op[1]),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_2 \Using_FPGA.Correct_Carry_MUXCY 
       (.MSR(MSR[1]),
        .Shift_Carry_In_reg(is_swx_I_reg_n_0),
        .Shift_Carry_In_reg_0(\Using_LWX_SWX_instr.reservation_reg_n_0 ),
        .Shift_Carry_In_reg_1(write_Carry_I_reg_n_0),
        .correct_Carry(correct_Carry),
        .ex_Valid(ex_Valid),
        .is_lwx_I(is_lwx_I),
        .load_Store_i(load_Store_i),
        .lopt(\^lopt_1 ),
        .lopt_1(\^lopt_2 ),
        .lopt_2(\^lopt_3 ),
        .new_Carry(new_Carry));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_3 \Using_FPGA.Force1_FDRE 
       (.R(R),
        .\Using_FPGA.Native_0 (normal_piperun),
        .force1(force1),
        .force1_i26_out(force1_i26_out),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_4 \Using_FPGA.Force2_FDRE 
       (.R(R),
        .\Using_FPGA.Native_0 (normal_piperun),
        .force2(force2),
        .force2_i(force2_i),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_5 \Using_FPGA.Force_Val1_FDRE 
       (.R(R),
        .\Using_FPGA.Native_0 (normal_piperun),
        .force_Val1(force_Val1),
        .force_Val1_i24_out(force_Val1_i24_out),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDRSE \Using_FPGA.Force_Val2_FDRSE 
       (.\Using_FPGA.Native_0 (exception_kind),
        .\Using_FPGA.Native_1 (PreFetch_Buffer_I_n_33),
        .force_Val2_N(force_Val2_N),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized13 \Using_FPGA.I_correct_Carry_Select 
       (.\Using_FPGA.Native_0 (PreFetch_Buffer_I_n_54),
        .\Using_FPGA.Native_1 (PreFetch_Buffer_I_n_53),
        .\Using_FPGA.Native_2 (PreFetch_Buffer_I_n_113),
        .correct_Carry_Select(correct_Carry_Select));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_6 \Using_FPGA.Intr_Carry_MUXCY 
       (.correct_Carry_I(correct_Carry_I),
        .correct_Carry_II(correct_Carry_II),
        .load_Store_i2(load_Store_i2),
        .lopt(\^lopt_12 ),
        .lopt_1(\^lopt_13 ));
  c2c_gth_in_system_ibert_0_MB_MULT_AND \Using_FPGA.MULT_AND_I 
       (.\Using_FPGA.Native_0 (PreFetch_Buffer_I_n_54),
        .\Using_FPGA.Native_1 (PreFetch_Buffer_I_n_53),
        .sub_Carry(sub_Carry));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_7 \Using_FPGA.MUXCY_JUMP_CARRY 
       (.Reg_zero(Reg_zero),
        .force_DI1(force_DI1),
        .force_jump1(force_jump1),
        .jump_Carry1(jump_Carry1),
        .lopt(\^lopt_4 ));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_8 \Using_FPGA.MUXCY_JUMP_CARRY2 
       (.force_DI2(force_DI2),
        .force_jump2(force_jump2),
        .jump_Carry1(jump_Carry1),
        .jump_Carry2(jump_Carry2),
        .lopt(lopt_14),
        .lopt_1(lopt_15),
        .lopt_2(PreFetch_Buffer_I_n_105),
        .lopt_3(lopt_16),
        .lopt_4(lopt_17),
        .lopt_5(buffer_Full),
        .lopt_6(lopt_18),
        .lopt_7(lopt_19),
        .lopt_8(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_9 \Using_FPGA.MUXCY_JUMP_CARRY3 
       (.PC_Write(PC_Write),
        .R(R),
        .S87_out(S87_out),
        .\Using_FPGA.Native_0 (Jump),
        .\Using_FPGA.Native_1 (iFetch_In_Progress_reg_0),
        .\Using_FPGA.Native_2 (exception_kind),
        .inHibit_EX(inHibit_EX),
        .inHibit_EX_reg(\Using_FPGA.MUXCY_JUMP_CARRY3_n_1 ),
        .jump2_I_reg(instr_OF[3]),
        .jump_Carry2(jump_Carry2),
        .lopt(lopt_14),
        .lopt_1(lopt_15),
        .using_Imm0(using_Imm0),
        .using_Imm_reg(PreFetch_Buffer_I_n_105),
        .using_Imm_reg_0(PreFetch_Buffer_I_n_58),
        .using_Imm_reg_1(\Using_FPGA.take_Intr_2nd_Phase_reg_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAFFABAAAA)) 
    \Using_FPGA.Native_i_1__87 
       (.I0(reset_delay),
        .I1(ex_Valid_reg_0),
        .I2(writing_reg_n_0),
        .I3(write_Reg_reg_n_0),
        .I4(ex_Valid),
        .I5(\Using_FPGA.Native_i_3__11_n_0 ),
        .O(Reg_Write));
  LUT3 #(
    .INIT(8'hEA)) 
    \Using_FPGA.Native_i_1__94 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.reset_BIP_I_reg_n_0 ),
        .I2(ex_Valid),
        .O(MSR_Rst));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__96 
       (.I0(\Using_FPGA.Native_22 ),
        .I1(sext8),
        .I2(doublet_Read),
        .O(Data_Read_Mask));
  LUT4 #(
    .INIT(16'h00E2)) 
    \Using_FPGA.Native_i_1__98 
       (.I0(\Using_FPGA.Native_3 ),
        .I1(shift_Oper[1]),
        .I2(shift_Carry_In),
        .I3(shift_Oper[0]),
        .O(Shifted));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT5 #(
    .INIT(32'hFECCAECC)) 
    \Using_FPGA.Native_i_2__34 
       (.I0(\Using_FPGA.set_BIP_I_reg_n_0 ),
        .I1(MSR[2]),
        .I2(mtsmsr_write_i_reg_n_0),
        .I3(ex_Valid),
        .I4(\Using_FPGA.Native_2 ),
        .O(\Using_FPGA.set_BIP_I_reg_0 ));
  LUT6 #(
    .INIT(64'hFFEFFAEAAFEFAAEA)) 
    \Using_FPGA.Native_i_2__35 
       (.I0(write_Carry),
        .I1(MSR[1]),
        .I2(\Using_FPGA.Native_i_4__0_n_0 ),
        .I3(p_64_in),
        .I4(\Using_B36_S2.The_BRAMs[0].RAMB36_I1_i_4_n_0 ),
        .I5(Op1_Shift),
        .O(\Using_FPGA.Native ));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT5 #(
    .INIT(32'hFECCAECC)) 
    \Using_FPGA.Native_i_2__36 
       (.I0(\Using_FPGA.enable_Interrupts_I_reg_n_0 ),
        .I1(MSR[0]),
        .I2(mtsmsr_write_i_reg_n_0),
        .I3(ex_Valid),
        .I4(Op1_Low[0]),
        .O(\Using_FPGA.enable_Interrupts_I_reg_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \Using_FPGA.Native_i_3__11 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[2]),
        .O(\Using_FPGA.Native_i_3__11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Using_FPGA.Native_i_3__9 
       (.I0(ex_Valid),
        .I1(write_Carry_I_reg_n_0),
        .O(write_Carry));
  LUT4 #(
    .INIT(16'h1FFF)) 
    \Using_FPGA.Native_i_4__0 
       (.I0(is_lwx_I),
        .I1(is_swx_I_reg_n_0),
        .I2(ex_Valid),
        .I3(load_Store_i),
        .O(\Using_FPGA.Native_i_4__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Using_FPGA.Native_i_5 
       (.I0(ex_Valid),
        .I1(mtsmsr_write_i_reg_n_0),
        .O(p_64_in));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_10 \Using_FPGA.New_Carry_MUXCY 
       (.LO(LO),
        .Op1_Low(Op1_Low[1]),
        .\Synchronize.use_sync_reset.sync_reg[2] (\Synchronize.use_sync_reset.sync_reg[2]_0 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (write_Carry_I_reg_n_0),
        .ex_Valid(ex_Valid),
        .lopt(lopt),
        .new_Carry(new_Carry),
        .select_ALU_Carry(select_ALU_Carry));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized5 \Using_FPGA.OpSel1_SPR_Select_LUT_1 
       (.\Using_FPGA.Native_0 ({instr_OF[0],instr_OF[1],instr_OF[3],instr_OF[4]}),
        .opsel1_SPR_Select_1(opsel1_SPR_Select_1));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized7 \Using_FPGA.OpSel1_SPR_Select_LUT_2 
       (.\Using_FPGA.Native_0 ({instr_OF[0],instr_OF[1],instr_OF[2],instr_OF[3]}),
        .opsel1_SPR_Select_2_1(opsel1_SPR_Select_2_1));
  c2c_gth_in_system_ibert_0_MB_LUT3 \Using_FPGA.OpSel1_SPR_Select_LUT_3 
       (.D({instr_OF[4],instr_OF[5]}),
        .imm_Value(imm_Value[1]),
        .opsel1_SPR_Select_2_2(opsel1_SPR_Select_2_2));
  c2c_gth_in_system_ibert_0_MB_LUT3__parameterized1 \Using_FPGA.OpSel1_SPR_Select_LUT_4 
       (.opsel1_SPR_Select(opsel1_SPR_Select),
        .opsel1_SPR_Select_1(opsel1_SPR_Select_1),
        .opsel1_SPR_Select_2_1(opsel1_SPR_Select_2_1),
        .opsel1_SPR_Select_2_2(opsel1_SPR_Select_2_2));
  c2c_gth_in_system_ibert_0_MB_FDSE \Using_FPGA.Reg_Test_Equal_FDSE 
       (.R(R),
        .Reg_Test_Equal(Reg_Test_Equal),
        .Reg_Test_Equal_i(Reg_Test_Equal_i),
        .\Using_FPGA.Native_0 (normal_piperun),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_11 \Using_FPGA.Reg_Test_Equal_N_FDRE 
       (.R(R),
        .Reg_Test_Equal_N_i7_out(Reg_Test_Equal_N_i7_out),
        .\Using_FPGA.Native_0 (normal_piperun),
        .out(out),
        .reg_Test_Equal_N(reg_Test_Equal_N));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized9 \Using_FPGA.Res_Forward1_LUT1 
       (.Q(Q[4:3]),
        .reg1_Addr({reg1_Addr[0],reg1_Addr[1]}),
        .res_forward1_1(res_forward1_1));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized9_12 \Using_FPGA.Res_Forward1_LUT2 
       (.Q(Q[2:1]),
        .reg1_Addr({reg1_Addr[2],reg1_Addr[3]}),
        .res_forward1_2(res_forward1_2));
  c2c_gth_in_system_ibert_0_MB_LUT3__parameterized3 \Using_FPGA.Res_Forward1_LUT3 
       (.Q(Q[0]),
        .ex_Valid(ex_Valid),
        .reg1_Addr(reg1_Addr[4]),
        .res_forward1_3(res_forward1_3));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized11 \Using_FPGA.Res_Forward1_LUT4 
       (.res_Forward1(res_Forward1),
        .res_forward1_1(res_forward1_1),
        .res_forward1_2(res_forward1_2),
        .res_forward1_3(res_forward1_3),
        .write_Reg_I_S(write_Reg_I_S));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized9_13 \Using_FPGA.Res_Forward2_LUT1 
       (.Q(Q[4:3]),
        .imm_Value({imm_Value[0],imm_Value[1]}),
        .res_forward2_1(res_forward2_1));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized9_14 \Using_FPGA.Res_Forward2_LUT2 
       (.Q(Q[2:1]),
        .imm_Value({imm_Value[2],imm_Value[3]}),
        .res_forward2_2(res_forward2_2));
  c2c_gth_in_system_ibert_0_MB_LUT3__parameterized3_15 \Using_FPGA.Res_Forward2_LUT3 
       (.Q(Q[0]),
        .ex_Valid(ex_Valid),
        .imm_Value(imm_Value[4]),
        .res_forward2_3(res_forward2_3));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized11_16 \Using_FPGA.Res_Forward2_LUT4 
       (.res_Forward2(res_Forward2),
        .res_forward2_1(res_forward2_1),
        .res_forward2_2(res_forward2_2),
        .res_forward2_3(res_forward2_3),
        .write_Reg_I_S(write_Reg_I_S));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_17 \Using_FPGA.Use_Reg_Neg_DI_FDRE 
       (.R(R),
        .\Using_FPGA.Native_0 (normal_piperun),
        .out(out),
        .use_Reg_Neg_DI(use_Reg_Neg_DI),
        .use_Reg_Neg_DI_i23_out(use_Reg_Neg_DI_i23_out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_18 \Using_FPGA.Use_Reg_Neg_S_FDRE 
       (.R(R),
        .\Using_FPGA.Native_0 (normal_piperun),
        .out(out),
        .use_Reg_Neg_S(use_Reg_Neg_S),
        .use_Reg_Neg_S_i25_out(use_Reg_Neg_S_i25_out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_19 \Using_FPGA.Using_Breakable_Pipe.OpSel1_SPR_MUXCY_1 
       (.\Using_FPGA.Native_0 (\Using_FPGA.take_Intr_2nd_Phase_reg_0 ),
        .lopt(lopt_30),
        .lopt_1(lopt_31),
        .opsel1_SPR(opsel1_SPR),
        .opsel1_SPR_Select(opsel1_SPR_Select));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_20 \Using_FPGA.Using_Breakable_Pipe.Take_Intr_MUXCY_1 
       (.\Using_FPGA.Native_0 (normal_piperun),
        .\Using_FPGA.Native_1 (exception_kind),
        .\Using_FPGA.Native_2 (jump2_I_reg_n_0),
        .inHibit_EX(inHibit_EX),
        .lopt(lopt_20),
        .lopt_1(lopt_21),
        .lopt_2(lopt_22),
        .take_Intr_Now_I(take_Intr_Now_I),
        .use_Imm_Reg(use_Imm_Reg));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_21 \Using_FPGA.Using_Breakable_Pipe.Take_Intr_MUXCY_2 
       (.\Using_FPGA.Native_i_2__4 (exception_kind),
        .lopt(lopt_23),
        .lopt_1(lopt_24),
        .take_Intr_Now_I(take_Intr_Now_I),
        .take_Intr_Now_II(take_Intr_Now_II));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_22 \Using_FPGA.Using_Breakable_Pipe.Take_Intr_MUXCY_3 
       (.Select_Logic0(Select_Logic0),
        .Select_Logic_reg(instr_OF[3]),
        .\Synchronize.use_sync_reset.sync_reg[2] (\Synchronize.use_sync_reset.sync_reg[2] ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg_0 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_0 (exception_kind),
        .inHibit_EX1(inHibit_EX1),
        .load_Store_i2(load_Store_i2),
        .lopt(lopt_25),
        .lopt_1(lopt_26),
        .lopt_2(lopt_27),
        .take_Intr_Now_II(take_Intr_Now_II));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_23 \Using_FPGA.clean_iReady_MuxCY 
       (.IReady(IReady),
        .ilmb_Sl_Ready(ilmb_Sl_Ready),
        .lopt(\^lopt_5 ),
        .lopt_1(normal_piperun),
        .lopt_2(S1_out),
        .lopt_3(\^lopt_6 ),
        .lopt_4(\^lopt_7 ),
        .lopt_5(\^lopt_8 ),
        .lopt_6(\^lopt_9 ),
        .lopt_7(\^lopt_10 ),
        .lopt_8(\^lopt_11 ),
        .mbar_is_sleep_reg(nonvalid_IFetch_n_reg_0));
  FDRE \Using_FPGA.enable_Interrupts_I_reg 
       (.C(out),
        .CE(normal_piperun),
        .D(enable_Interrupts_I),
        .Q(\Using_FPGA.enable_Interrupts_I_reg_n_0 ),
        .R(\Using_FPGA.Native_0 ));
  c2c_gth_in_system_ibert_0_MB_LUT3__parameterized5 \Using_FPGA.force_di1_LUT3 
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .force_DI1(force_DI1),
        .force_Val1(force_Val1),
        .use_Reg_Neg_DI(use_Reg_Neg_DI));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized15 \Using_FPGA.force_di2_LUT4 
       (.ex_Valid(ex_Valid),
        .force_DI2(force_DI2),
        .force_Val2_N(force_Val2_N));
  c2c_gth_in_system_ibert_0_MB_LUT3__parameterized5_24 \Using_FPGA.force_jump1_LUT3 
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .force1(force1),
        .force_jump1(force_jump1),
        .use_Reg_Neg_S(use_Reg_Neg_S));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized7_25 \Using_FPGA.force_jump2_LUT4 
       (.ex_Valid(ex_Valid),
        .force2(force2),
        .force_jump2(force_jump2));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_26 \Using_FPGA.iFetch_MuxCY_1 
       (.\Using_FPGA.Native_0 (Jump),
        .buffer_Full(buffer_Full),
        .ifetch_carry1(ifetch_carry1),
        .lopt(lopt_16),
        .lopt_1(lopt_17));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_27 \Using_FPGA.iFetch_MuxCY_2 
       (.\No_ECC.Sl_Rdy_reg (\Using_FPGA.iFetch_MuxCY_2_n_0 ),
        .\No_ECC.Sl_Rdy_reg_0 (\Using_FPGA.iFetch_MuxCY_2_n_2 ),
        .Sl_Rdy(Sl_Rdy),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .ex_Valid(ex_Valid),
        .iFetch_In_Progress(iFetch_In_Progress),
        .iFetch_In_Progress_reg(iFetch_In_Progress_reg_0),
        .ifetch_carry1(ifetch_carry1),
        .ilmb_Sl_Ready(ilmb_Sl_Ready),
        .lmb_as(lmb_as),
        .lopt(lopt_18),
        .lopt_1(lopt_19),
        .mbar_decode_I(mbar_decode_I),
        .mbar_hold_I_reg(\Using_FPGA.iFetch_MuxCY_2_n_3 ),
        .mbar_hold_I_reg_0(normal_piperun),
        .mbar_hold_I_reg_1(mbar_hold_I_reg_n_0),
        .mbar_hold_I_reg_2(\Using_FPGA.Native_0 ),
        .missed_IFetch(missed_IFetch),
        .missed_IFetch_reg(Jump),
        .mul_Executing(mul_Executing),
        .of_mbar_decode(of_mbar_decode));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_28 \Using_FPGA.of_PipeRun_MuxCY_1 
       (.Buffer_Addr(Buffer_Addr[0]),
        .E(\Using_FPGA.of_PipeRun_MuxCY_1_n_5 ),
        .S87_out(S87_out),
        .SR(\Using_FPGA.of_PipeRun_MuxCY_1_n_4 ),
        .Sl_Rdy_1(Sl_Rdy_1),
        .\Synchronize.use_sync_reset.sync_reg[2] (\Using_FPGA.of_PipeRun_MuxCY_1_n_3 ),
        .\Synchronize.use_sync_reset.sync_reg[2]_0 (\Using_FPGA.of_PipeRun_MuxCY_1_n_8 ),
        .Unsigned_Op_reg(exception_kind),
        .\Using_FPGA.Native_0 (S1_out),
        .\Using_LWX_SWX_instr.reservation_reg (\Using_LWX_SWX_instr.reservation_reg_0 ),
        .dlmb_LMB_Ready(dlmb_LMB_Ready),
        .ex_Valid(ex_Valid),
        .ex_Valid_reg(\Using_FPGA.take_Intr_2nd_Phase_reg_0 ),
        .ex_Valid_reg_0(PreFetch_Buffer_I_n_104),
        .ex_Valid_reg_1(ex_Valid_reg_0),
        .is_lwx_I(is_lwx_I),
        .is_swx_I(is_swx_I),
        .is_swx_I_reg(\Using_FPGA.of_PipeRun_MuxCY_1_n_6 ),
        .lmb_as_0(lmb_as_0),
        .load_Store_i(load_Store_i),
        .load_Store_i_reg(\Using_FPGA.of_PipeRun_MuxCY_1_n_2 ),
        .load_Store_i_reg_0(load_Store_i_reg_0),
        .load_Store_i_reg_1(load_Store_i_reg_1),
        .lopt(lopt_20),
        .lopt_1(lopt_21),
        .lopt_10(opsel1_SPR_Select),
        .lopt_2(lopt_22),
        .lopt_3(lopt_23),
        .lopt_4(lopt_24),
        .lopt_5(lopt_25),
        .lopt_6(lopt_26),
        .lopt_7(lopt_27),
        .lopt_8(lopt_30),
        .lopt_9(lopt_31),
        .mul_Executing_reg(normal_piperun),
        .of_PipeRun_Select(of_PipeRun_Select),
        .of_PipeRun_without_dready(of_PipeRun_without_dready),
        .reservation2(reservation2),
        .swx_ready(swx_ready),
        .swx_ready_reg(\Using_FPGA.Native_0 ),
        .swx_ready_reg_0(\Using_LWX_SWX_instr.reservation_reg_n_0 ),
        .swx_ready_reg_1(is_swx_I_reg_n_0));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized1 \Using_FPGA.of_PipeRun_Select_LUT4 
       (.load_Store_i(load_Store_i),
        .mul_Executing(mul_Executing),
        .of_PipeRun_Select(of_PipeRun_Select),
        .of_Valid(of_Valid));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized3 \Using_FPGA.of_PipeRun_without_dready_LUT4 
       (.load_Store_i(load_Store_i),
        .mul_Executing(mul_Executing),
        .of_PipeRun_without_dready(of_PipeRun_without_dready),
        .of_Valid(of_Valid));
  FDRE \Using_FPGA.reset_BIP_I_reg 
       (.C(out),
        .CE(normal_piperun),
        .D(reset_BIP_I8_out),
        .Q(\Using_FPGA.reset_BIP_I_reg_n_0 ),
        .R(\Using_FPGA.Native_0 ));
  FDRE \Using_FPGA.set_BIP_I_reg 
       (.C(out),
        .CE(1'b1),
        .D(PreFetch_Buffer_I_n_45),
        .Q(\Using_FPGA.set_BIP_I_reg_n_0 ),
        .R(1'b0));
  FDRE \Using_FPGA.take_Intr_2nd_Phase_reg 
       (.C(out),
        .CE(normal_piperun),
        .D(inHibit_EX1),
        .Q(exception_kind),
        .R(\Using_FPGA.Native_0 ));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT5 #(
    .INIT(32'h80880000)) 
    \Using_IO_Bus.IO_Addr_Strobe_i_1 
       (.I0(dlmb_M_ABus),
        .I1(O),
        .I2(\Using_LWX_SWX_instr.reservation_reg_n_0 ),
        .I3(is_swx_I_reg_n_0),
        .I4(d_AS_I),
        .O(IO_Addr_Strobe0));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \Using_IO_Bus.IO_Read_Strobe_i_1 
       (.I0(IO_Addr_Strobe0),
        .I1(load_Store_i),
        .I2(ex_Valid),
        .I3(writing_reg_n_0),
        .O(IO_Read_Strobe));
  LUT6 #(
    .INIT(64'h8000800000008000)) 
    \Using_IO_Bus.IO_Write_Strobe_i_1 
       (.I0(IO_Addr_Strobe0),
        .I1(ex_Valid),
        .I2(load_Store_i),
        .I3(writing_reg_n_0),
        .I4(is_swx_I_reg_n_0),
        .I5(\Using_LWX_SWX_instr.reservation_reg_n_0 ),
        .O(IO_Write_Strobe));
  LUT6 #(
    .INIT(64'hEEAEAAAAAAAAAAAA)) 
    \Using_IO_Bus.io_read_keep_i_1 
       (.I0(mb_rdy_o),
        .I1(d_AS_I),
        .I2(is_swx_I_reg_n_0),
        .I3(\Using_LWX_SWX_instr.reservation_reg_n_0 ),
        .I4(O),
        .I5(dlmb_M_ABus),
        .O(io_read_keep));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Using_LWX_SWX_instr.reservation_i_3 
       (.I0(ex_Valid),
        .I1(\Using_FPGA.set_BIP_I_reg_n_0 ),
        .O(reservation2));
  FDRE \Using_LWX_SWX_instr.reservation_reg 
       (.C(out),
        .CE(1'b1),
        .D(\Using_FPGA.of_PipeRun_MuxCY_1_n_6 ),
        .Q(\Using_LWX_SWX_instr.reservation_reg_n_0 ),
        .R(1'b0));
  FDRE byte_i_reg
       (.C(out),
        .CE(normal_piperun),
        .D(PreFetch_Buffer_I_n_106),
        .Q(isbyte),
        .R(doublet_i));
  FDRE d_AS_I_reg
       (.C(out),
        .CE(1'b1),
        .D(PreFetch_Buffer_I_n_36),
        .Q(d_AS_I),
        .R(\Using_FPGA.Native_0 ));
  LUT5 #(
    .INIT(32'hFFFFEFFF)) 
    doublet_Read_i_i_1
       (.I0(instr_OF[4]),
        .I1(instr_OF[5]),
        .I2(instr_OF[0]),
        .I3(instr_OF[1]),
        .I4(\Using_FPGA.take_Intr_2nd_Phase_reg_0 ),
        .O(doublet_Read_i_i_1_n_0));
  FDRE doublet_Read_i_reg
       (.C(out),
        .CE(normal_piperun),
        .D(doublet_Read_i_i_1_n_0),
        .Q(doublet_Read),
        .R(\Using_FPGA.Native_0 ));
  FDRE doublet_i_reg
       (.C(out),
        .CE(normal_piperun),
        .D(PreFetch_Buffer_I_n_109),
        .Q(isdoublet),
        .R(doublet_i));
  FDRE ex_Valid_reg
       (.C(out),
        .CE(1'b1),
        .D(\Using_FPGA.of_PipeRun_MuxCY_1_n_2 ),
        .Q(ex_Valid),
        .R(\Using_FPGA.Native_0 ));
  FDRE ex_first_cycle_reg
       (.C(out),
        .CE(1'b1),
        .D(normal_piperun),
        .Q(ex_first_cycle),
        .R(\Using_FPGA.Native_0 ));
  FDRE iFetch_In_Progress_reg
       (.C(out),
        .CE(1'b1),
        .D(\Using_FPGA.iFetch_MuxCY_2_n_0 ),
        .Q(iFetch_In_Progress),
        .R(\Using_FPGA.Native_0 ));
  FDRE inHibit_EX_reg
       (.C(out),
        .CE(1'b1),
        .D(inHibit_EX_reg_1),
        .Q(inHibit_EX),
        .R(1'b0));
  FDRE is_lwx_I_reg
       (.C(out),
        .CE(normal_piperun),
        .D(PreFetch_Buffer_I_n_35),
        .Q(is_lwx_I),
        .R(is_swx_I));
  FDRE is_swx_I_reg
       (.C(out),
        .CE(normal_piperun),
        .D(is_swx_I0),
        .Q(is_swx_I_reg_n_0),
        .R(is_swx_I));
  FDRE jump2_I_reg
       (.C(out),
        .CE(normal_piperun),
        .D(PreFetch_Buffer_I_n_66),
        .Q(jump2_I_reg_n_0),
        .R(\Using_FPGA.Native_0 ));
  LUT6 #(
    .INIT(64'h0000000000100000)) 
    lmb_reg_read_i_1
       (.I0(lmb_reg_read_i_2_n_0),
        .I1(writing_reg_n_0),
        .I2(d_AS_I),
        .I3(\Using_B36_S2.The_BRAMs[0].RAMB36_I1_i_4_n_0 ),
        .I4(O),
        .I5(dlmb_M_ABus),
        .O(lmb_reg_read0));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT2 #(
    .INIT(4'h7)) 
    lmb_reg_read_i_2
       (.I0(load_Store_i),
        .I1(ex_Valid),
        .O(lmb_reg_read_i_2_n_0));
  LUT6 #(
    .INIT(64'h0000000044040000)) 
    lmb_reg_write_i_1
       (.I0(lmb_reg_write_i_2_n_0),
        .I1(d_AS_I),
        .I2(is_swx_I_reg_n_0),
        .I3(\Using_LWX_SWX_instr.reservation_reg_n_0 ),
        .I4(O),
        .I5(dlmb_M_ABus),
        .O(lmb_reg_write0));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT5 #(
    .INIT(32'h4FFFFFFF)) 
    lmb_reg_write_i_2
       (.I0(\Using_LWX_SWX_instr.reservation_reg_n_0 ),
        .I1(is_swx_I_reg_n_0),
        .I2(writing_reg_n_0),
        .I3(load_Store_i),
        .I4(ex_Valid),
        .O(lmb_reg_write_i_2_n_0));
  FDRE load_Store_i_reg
       (.C(out),
        .CE(normal_piperun),
        .D(load_Store_i051_out),
        .Q(load_Store_i),
        .R(is_swx_I));
  FDRE mbar_decode_I_reg
       (.C(out),
        .CE(normal_piperun),
        .D(of_mbar_decode),
        .Q(mbar_decode_I),
        .R(\Using_FPGA.Native_0 ));
  LUT5 #(
    .INIT(32'hA8AAA8A8)) 
    mbar_first_i_3
       (.I0(mbar_first_reg_n_0),
        .I1(ex_first_cycle),
        .I2(mbar_sleep),
        .I3(Q[0]),
        .I4(iFetch_In_Progress),
        .O(mbar_first_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    mbar_first_reg
       (.C(out),
        .CE(1'b1),
        .D(mbar_first),
        .Q(mbar_first_reg_n_0),
        .R(\Using_FPGA.Native_0 ));
  FDRE mbar_hold_I_reg
       (.C(out),
        .CE(1'b1),
        .D(\Using_FPGA.iFetch_MuxCY_2_n_3 ),
        .Q(mbar_hold_I_reg_n_0),
        .R(1'b0));
  FDRE mbar_is_sleep_reg
       (.C(out),
        .CE(normal_piperun),
        .D(instr_OF[6]),
        .Q(mbar_is_sleep),
        .R(\Using_FPGA.Native_0 ));
  LUT5 #(
    .INIT(32'hFFFF8000)) 
    mbar_sleep_i_1
       (.I0(ex_Valid),
        .I1(mbar_decode_I),
        .I2(mbar_is_sleep),
        .I3(ex_first_cycle),
        .I4(mbar_sleep),
        .O(mbar_sleep_i_1_n_0));
  FDRE mbar_sleep_reg
       (.C(out),
        .CE(1'b1),
        .D(mbar_sleep_i_1_n_0),
        .Q(mbar_sleep),
        .R(\Using_FPGA.Native_0 ));
  FDRE missed_IFetch_reg
       (.C(out),
        .CE(1'b1),
        .D(\Using_FPGA.iFetch_MuxCY_2_n_2 ),
        .Q(missed_IFetch),
        .R(\Using_FPGA.Native_0 ));
  FDRE mtsmsr_write_i_reg
       (.C(out),
        .CE(1'b1),
        .D(PreFetch_Buffer_I_n_46),
        .Q(mtsmsr_write_i_reg_n_0),
        .R(1'b0));
  FDRE mul_Executing_reg
       (.C(out),
        .CE(1'b1),
        .D(mbar_first),
        .Q(mul_Executing),
        .R(\Using_FPGA.Native_0 ));
  FDSE nonvalid_IFetch_n_reg
       (.C(out),
        .CE(1'b1),
        .D(PreFetch_Buffer_I_n_32),
        .Q(nonvalid_IFetch_n_reg_0),
        .S(\Using_FPGA.Native_0 ));
  FDRE quadlet_Read_i_reg
       (.C(out),
        .CE(normal_piperun),
        .D(PreFetch_Buffer_I_n_43),
        .Q(quadlet_Read),
        .R(\Using_FPGA.Native_0 ));
  FDRE #(
    .INIT(1'b0)) 
    reset_delay_reg
       (.C(out),
        .CE(1'b1),
        .D(\Using_FPGA.Native_0 ),
        .Q(reset_delay),
        .R(1'b0));
  FDRE select_ALU_Carry_reg
       (.C(out),
        .CE(normal_piperun),
        .D(PreFetch_Buffer_I_n_112),
        .Q(select_ALU_Carry),
        .R(\Using_FPGA.of_PipeRun_MuxCY_1_n_4 ));
  FDRE swx_ready_reg
       (.C(out),
        .CE(1'b1),
        .D(\Using_FPGA.of_PipeRun_MuxCY_1_n_3 ),
        .Q(swx_ready),
        .R(1'b0));
  FDRE using_Imm_reg
       (.C(out),
        .CE(normal_piperun),
        .D(using_Imm0),
        .Q(use_Imm_Reg),
        .R(\Using_FPGA.Native_0 ));
  FDRE \write_Addr_I_reg[0] 
       (.C(out),
        .CE(\Using_FPGA.of_PipeRun_MuxCY_1_n_5 ),
        .D(PreFetch_Buffer_I_n_38),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \write_Addr_I_reg[1] 
       (.C(out),
        .CE(\Using_FPGA.of_PipeRun_MuxCY_1_n_5 ),
        .D(PreFetch_Buffer_I_n_39),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \write_Addr_I_reg[2] 
       (.C(out),
        .CE(\Using_FPGA.of_PipeRun_MuxCY_1_n_5 ),
        .D(PreFetch_Buffer_I_n_40),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \write_Addr_I_reg[3] 
       (.C(out),
        .CE(\Using_FPGA.of_PipeRun_MuxCY_1_n_5 ),
        .D(PreFetch_Buffer_I_n_41),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \write_Addr_I_reg[4] 
       (.C(out),
        .CE(\Using_FPGA.of_PipeRun_MuxCY_1_n_5 ),
        .D(PreFetch_Buffer_I_n_42),
        .Q(Q[0]),
        .R(1'b0));
  FDRE write_Carry_I_reg
       (.C(out),
        .CE(normal_piperun),
        .D(PreFetch_Buffer_I_n_68),
        .Q(write_Carry_I_reg_n_0),
        .R(\Using_FPGA.of_PipeRun_MuxCY_1_n_4 ));
  c2c_gth_in_system_ibert_0_MB_LUT4 write_Reg_I_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (write_Reg_reg_n_0),
        .\Using_FPGA.Native_1 (writing_reg_n_0),
        .dlmb_LMB_Ready(dlmb_LMB_Ready),
        .write_Reg_I_S(write_Reg_I_S));
  FDRE write_Reg_reg
       (.C(out),
        .CE(normal_piperun),
        .D(PreFetch_Buffer_I_n_56),
        .Q(write_Reg_reg_n_0),
        .R(\Using_FPGA.of_PipeRun_MuxCY_1_n_8 ));
  FDRE writing_reg
       (.C(out),
        .CE(normal_piperun),
        .D(PreFetch_Buffer_I_n_37),
        .Q(writing_reg_n_0),
        .R(\Using_FPGA.Native_0 ));
endmodule

module c2c_gth_in_system_ibert_0_MB_FDE
   (op2_C,
    normal_piperun,
    D_21,
    out);
  output [0:0]op2_C;
  input normal_piperun;
  input D_21;
  input out;

  wire D_21;
  wire normal_piperun;
  wire [0:0]op2_C;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_21),
        .Q(op2_C),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_493
   (op2_C,
    normal_piperun,
    D_22,
    out);
  output [0:0]op2_C;
  input normal_piperun;
  input D_22;
  input out;

  wire D_22;
  wire normal_piperun;
  wire [0:0]op2_C;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_22),
        .Q(op2_C),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_497
   (op2_C,
    normal_piperun,
    D_23,
    out);
  output [0:0]op2_C;
  input normal_piperun;
  input D_23;
  input out;

  wire D_23;
  wire normal_piperun;
  wire [0:0]op2_C;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_23),
        .Q(op2_C),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_501
   (op2_C,
    normal_piperun,
    D_24,
    out);
  output [0:0]op2_C;
  input normal_piperun;
  input D_24;
  input out;

  wire D_24;
  wire normal_piperun;
  wire [0:0]op2_C;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_24),
        .Q(op2_C),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_505
   (op2_C,
    normal_piperun,
    D_25,
    out);
  output [0:0]op2_C;
  input normal_piperun;
  input D_25;
  input out;

  wire D_25;
  wire normal_piperun;
  wire [0:0]op2_C;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_25),
        .Q(op2_C),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_509
   (op2_C,
    normal_piperun,
    D_26,
    out);
  output [0:0]op2_C;
  input normal_piperun;
  input D_26;
  input out;

  wire D_26;
  wire normal_piperun;
  wire [0:0]op2_C;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_26),
        .Q(op2_C),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_513
   (op2_C,
    normal_piperun,
    D_27,
    out);
  output [0:0]op2_C;
  input normal_piperun;
  input D_27;
  input out;

  wire D_27;
  wire normal_piperun;
  wire [0:0]op2_C;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_27),
        .Q(op2_C),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_517
   (EX_Op2,
    normal_piperun,
    D,
    out);
  output EX_Op2;
  input normal_piperun;
  input D;
  input out;

  wire D;
  wire EX_Op2;
  wire normal_piperun;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D),
        .Q(EX_Op2),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_521
   (\Using_FPGA.Native_0 ,
    normal_piperun,
    D_0,
    out);
  output \Using_FPGA.Native_0 ;
  input normal_piperun;
  input D_0;
  input out;

  wire D_0;
  wire \Using_FPGA.Native_0 ;
  wire normal_piperun;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_0),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_525
   (op2_C,
    normal_piperun,
    D_28,
    out);
  output [0:0]op2_C;
  input normal_piperun;
  input D_28;
  input out;

  wire D_28;
  wire normal_piperun;
  wire [0:0]op2_C;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_28),
        .Q(op2_C),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_529
   (Op2,
    normal_piperun,
    D_1,
    out);
  output Op2;
  input normal_piperun;
  input D_1;
  input out;

  wire D_1;
  wire Op2;
  wire normal_piperun;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_1),
        .Q(Op2),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_533
   (\Using_FPGA.Native_0 ,
    normal_piperun,
    D_2,
    out);
  output \Using_FPGA.Native_0 ;
  input normal_piperun;
  input D_2;
  input out;

  wire D_2;
  wire \Using_FPGA.Native_0 ;
  wire normal_piperun;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_2),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_537
   (op2_C,
    normal_piperun,
    D_3,
    out);
  output [0:0]op2_C;
  input normal_piperun;
  input D_3;
  input out;

  wire D_3;
  wire normal_piperun;
  wire [0:0]op2_C;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_3),
        .Q(op2_C),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_541
   (op2_C,
    normal_piperun,
    D_4,
    out);
  output [0:0]op2_C;
  input normal_piperun;
  input D_4;
  input out;

  wire D_4;
  wire normal_piperun;
  wire [0:0]op2_C;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_4),
        .Q(op2_C),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_545
   (op2_C,
    normal_piperun,
    D_5,
    out);
  output [0:0]op2_C;
  input normal_piperun;
  input D_5;
  input out;

  wire D_5;
  wire normal_piperun;
  wire [0:0]op2_C;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_5),
        .Q(op2_C),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_549
   (op2_C,
    normal_piperun,
    D_6,
    out);
  output [0:0]op2_C;
  input normal_piperun;
  input D_6;
  input out;

  wire D_6;
  wire normal_piperun;
  wire [0:0]op2_C;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_6),
        .Q(op2_C),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_553
   (op2_C,
    normal_piperun,
    D_7,
    out);
  output [0:0]op2_C;
  input normal_piperun;
  input D_7;
  input out;

  wire D_7;
  wire normal_piperun;
  wire [0:0]op2_C;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_7),
        .Q(op2_C),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_557
   (op2_C,
    normal_piperun,
    D_8,
    out);
  output [0:0]op2_C;
  input normal_piperun;
  input D_8;
  input out;

  wire D_8;
  wire normal_piperun;
  wire [0:0]op2_C;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_8),
        .Q(op2_C),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_561
   (op2_C,
    normal_piperun,
    D_9,
    out);
  output [0:0]op2_C;
  input normal_piperun;
  input D_9;
  input out;

  wire D_9;
  wire normal_piperun;
  wire [0:0]op2_C;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_9),
        .Q(op2_C),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_565
   (op2_C,
    normal_piperun,
    D_10,
    out);
  output [0:0]op2_C;
  input normal_piperun;
  input D_10;
  input out;

  wire D_10;
  wire normal_piperun;
  wire [0:0]op2_C;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_10),
        .Q(op2_C),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_569
   (op2_C,
    normal_piperun,
    D_29,
    out);
  output [0:0]op2_C;
  input normal_piperun;
  input D_29;
  input out;

  wire D_29;
  wire normal_piperun;
  wire [0:0]op2_C;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_29),
        .Q(op2_C),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_573
   (op2_C,
    normal_piperun,
    D_11,
    out);
  output [0:0]op2_C;
  input normal_piperun;
  input D_11;
  input out;

  wire D_11;
  wire normal_piperun;
  wire [0:0]op2_C;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_11),
        .Q(op2_C),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_577
   (op2_C,
    normal_piperun,
    D_12,
    out);
  output [0:0]op2_C;
  input normal_piperun;
  input D_12;
  input out;

  wire D_12;
  wire normal_piperun;
  wire [0:0]op2_C;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_12),
        .Q(op2_C),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_581
   (op2_C,
    normal_piperun,
    D_13,
    out);
  output [0:0]op2_C;
  input normal_piperun;
  input D_13;
  input out;

  wire D_13;
  wire normal_piperun;
  wire [0:0]op2_C;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_13),
        .Q(op2_C),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_585
   (op2_C,
    normal_piperun,
    D_14,
    out);
  output [0:0]op2_C;
  input normal_piperun;
  input D_14;
  input out;

  wire D_14;
  wire normal_piperun;
  wire [0:0]op2_C;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_14),
        .Q(op2_C),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_589
   (op2_C,
    normal_piperun,
    D_15,
    out);
  output [0:0]op2_C;
  input normal_piperun;
  input D_15;
  input out;

  wire D_15;
  wire normal_piperun;
  wire [0:0]op2_C;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_15),
        .Q(op2_C),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_593
   (op2_C,
    normal_piperun,
    D_16,
    out);
  output [0:0]op2_C;
  input normal_piperun;
  input D_16;
  input out;

  wire D_16;
  wire normal_piperun;
  wire [0:0]op2_C;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_16),
        .Q(op2_C),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_597
   (op2_C,
    normal_piperun,
    D_17,
    out);
  output [0:0]op2_C;
  input normal_piperun;
  input D_17;
  input out;

  wire D_17;
  wire normal_piperun;
  wire [0:0]op2_C;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_17),
        .Q(op2_C),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_601
   (op2_C,
    normal_piperun,
    D_18,
    out);
  output [0:0]op2_C;
  input normal_piperun;
  input D_18;
  input out;

  wire D_18;
  wire normal_piperun;
  wire [0:0]op2_C;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_18),
        .Q(op2_C),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_605
   (op2_C,
    normal_piperun,
    D_19,
    out);
  output [0:0]op2_C;
  input normal_piperun;
  input D_19;
  input out;

  wire D_19;
  wire normal_piperun;
  wire [0:0]op2_C;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_19),
        .Q(op2_C),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_609
   (op2_C,
    normal_piperun,
    D_20,
    out);
  output [0:0]op2_C;
  input normal_piperun;
  input D_20;
  input out;

  wire D_20;
  wire normal_piperun;
  wire [0:0]op2_C;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_20),
        .Q(op2_C),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module c2c_gth_in_system_ibert_0_MB_FDE_613
   (op2_C,
    normal_piperun,
    D_30,
    out);
  output [0:0]op2_C;
  input normal_piperun;
  input D_30;
  input out;

  wire D_30;
  wire normal_piperun;
  wire [0:0]op2_C;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(D_30),
        .Q(op2_C),
        .R(1'b0));
endmodule

module c2c_gth_in_system_ibert_0_MB_FDR
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    buffer_Full,
    E,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    S,
    D_32,
    out,
    inHibit_EX,
    ilmb_Sl_Ready,
    nonvalid_IFetch_n_reg,
    nonvalid_IFetch_n_reg_0,
    nonvalid_IFetch_n_reg_1,
    \Using_FPGA.Native_4 ,
    \Size_17to32.imm_Reg_reg[15] ,
    \Size_17to32.imm_Reg_reg[15]_0 ,
    ex_Valid_reg,
    jump_Carry2,
    mul_Executing,
    ex_Valid_reg_0);
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  output buffer_Full;
  output [0:0]E;
  output \Using_FPGA.Native_2 ;
  output \Using_FPGA.Native_3 ;
  input S;
  input D_32;
  input out;
  input inHibit_EX;
  input ilmb_Sl_Ready;
  input nonvalid_IFetch_n_reg;
  input nonvalid_IFetch_n_reg_0;
  input nonvalid_IFetch_n_reg_1;
  input \Using_FPGA.Native_4 ;
  input \Size_17to32.imm_Reg_reg[15] ;
  input \Size_17to32.imm_Reg_reg[15]_0 ;
  input ex_Valid_reg;
  input jump_Carry2;
  input mul_Executing;
  input ex_Valid_reg_0;

  wire D_32;
  wire [0:0]E;
  wire S;
  wire \Size_17to32.imm_Reg_reg[15] ;
  wire \Size_17to32.imm_Reg_reg[15]_0 ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire buffer_Full;
  wire ex_Valid_reg;
  wire ex_Valid_reg_0;
  wire ilmb_Sl_Ready;
  wire inHibit_EX;
  wire jump_Carry2;
  wire mul_Executing;
  wire nonvalid_IFetch_n_reg;
  wire nonvalid_IFetch_n_reg_0;
  wire nonvalid_IFetch_n_reg_1;
  wire out;

  LUT3 #(
    .INIT(8'h02)) 
    \Size_17to32.imm_Reg[0]_i_1 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Size_17to32.imm_Reg_reg[15] ),
        .I2(\Size_17to32.imm_Reg_reg[15]_0 ),
        .O(E));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(1'b1),
        .D(D_32),
        .Q(\Using_FPGA.Native_0 ),
        .R(S));
  LUT2 #(
    .INIT(4'h8)) 
    \Using_FPGA.Native_i_1__1 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_4 ),
        .O(buffer_Full));
  LUT2 #(
    .INIT(4'hB)) 
    \Using_FPGA.Native_i_1__89 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(ex_Valid_reg),
        .O(\Using_FPGA.Native_3 ));
  LUT5 #(
    .INIT(32'hFFFFFF40)) 
    ex_Valid_i_2
       (.I0(\Using_FPGA.Native_0 ),
        .I1(ex_Valid_reg),
        .I2(jump_Carry2),
        .I3(mul_Executing),
        .I4(ex_Valid_reg_0),
        .O(\Using_FPGA.Native_2 ));
  LUT6 #(
    .INIT(64'hFF11FFFFF0F0F0F0)) 
    nonvalid_IFetch_n_i_1
       (.I0(\Using_FPGA.Native_0 ),
        .I1(inHibit_EX),
        .I2(ilmb_Sl_Ready),
        .I3(nonvalid_IFetch_n_reg),
        .I4(nonvalid_IFetch_n_reg_0),
        .I5(nonvalid_IFetch_n_reg_1),
        .O(\Using_FPGA.Native_1 ));
endmodule

module c2c_gth_in_system_ibert_0_MB_FDRSE
   (force_Val2_N,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    out);
  output force_Val2_N;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire force_Val2_N;
  wire out;

  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(1'b1),
        .D(\Using_FPGA.Native_1 ),
        .Q(force_Val2_N),
        .R(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDRSE" *) 
module c2c_gth_in_system_ibert_0_MB_FDRSE_616
   (MSR,
    I3_0,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    out,
    \Using_FPGA.Native_2 );
  output [0:0]MSR;
  output I3_0;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input out;
  input \Using_FPGA.Native_2 ;

  wire I3_0;
  wire [0:0]MSR;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire out;

  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(1'b1),
        .D(\Using_FPGA.Native_1 ),
        .Q(MSR),
        .R(\Using_FPGA.Native_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \Using_FPGA.Native_i_1__5 
       (.I0(MSR),
        .I1(\Using_FPGA.Native_2 ),
        .O(I3_0));
endmodule

(* ORIG_REF_NAME = "MB_FDRSE" *) 
module c2c_gth_in_system_ibert_0_MB_FDRSE_617
   (MSR,
    I3,
    I3_2,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    out,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 );
  output [0:0]MSR;
  output I3;
  output I3_2;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input out;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;

  wire I3;
  wire I3_2;
  wire [0:0]MSR;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire out;

  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(1'b1),
        .D(\Using_FPGA.Native_1 ),
        .Q(MSR),
        .R(\Using_FPGA.Native_0 ));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__11 
       (.I0(MSR),
        .I1(\Using_FPGA.Native_2 ),
        .I2(\Using_FPGA.Native_3 ),
        .O(I3_2));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Using_FPGA.Native_i_1__4 
       (.I0(MSR),
        .I1(\Using_FPGA.Native_2 ),
        .O(I3));
endmodule

(* ORIG_REF_NAME = "MB_FDRSE" *) 
module c2c_gth_in_system_ibert_0_MB_FDRSE_618
   (MSR,
    I3_1,
    MSR_Rst,
    \Using_FPGA.Native_0 ,
    out,
    \Using_FPGA.Native_1 ,
    PC_OF);
  output [0:0]MSR;
  output I3_1;
  input MSR_Rst;
  input \Using_FPGA.Native_0 ;
  input out;
  input \Using_FPGA.Native_1 ;
  input PC_OF;

  wire I3_1;
  wire [0:0]MSR;
  wire MSR_Rst;
  wire PC_OF;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire out;

  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(1'b1),
        .D(\Using_FPGA.Native_0 ),
        .Q(MSR),
        .R(MSR_Rst));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__10 
       (.I0(MSR),
        .I1(\Using_FPGA.Native_1 ),
        .I2(PC_OF),
        .O(I3_1));
endmodule

module c2c_gth_in_system_ibert_0_MB_FDS
   (\Using_FPGA.Native_0 ,
    Increment,
    \Using_FPGA.Native_1 ,
    DI,
    S,
    buffer_Addr_S_I_2,
    out,
    ex_Valid,
    \Using_FPGA.Native_2 ,
    missed_IFetch,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \Using_FPGA.Native_0 ;
  output Increment;
  output \Using_FPGA.Native_1 ;
  output DI;
  input S;
  input buffer_Addr_S_I_2;
  input out;
  input ex_Valid;
  input \Using_FPGA.Native_2 ;
  input missed_IFetch;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;

  wire DI;
  wire Increment;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire buffer_Addr_S_I_2;
  wire ex_Valid;
  wire missed_IFetch;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDS" *) 
  (* box_type = "PRIMITIVE" *) 
  FDSE #(
    .INIT(1'b1)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(1'b1),
        .D(buffer_Addr_S_I_2),
        .Q(\Using_FPGA.Native_0 ),
        .S(S));
  LUT5 #(
    .INIT(32'h00070707)) 
    \Using_FPGA.Native_I1_i_1__1 
       (.I0(ex_Valid),
        .I1(\Using_FPGA.Native_2 ),
        .I2(missed_IFetch),
        .I3(\Using_FPGA.Native_0 ),
        .I4(\Using_FPGA.Native_3 ),
        .O(DI));
  LUT2 #(
    .INIT(4'h6)) 
    \Using_FPGA.Native_I2_i_1 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_4 ),
        .O(\Using_FPGA.Native_1 ));
  LUT5 #(
    .INIT(32'h00070707)) 
    \Using_FPGA.Native_i_1__0 
       (.I0(ex_Valid),
        .I1(\Using_FPGA.Native_2 ),
        .I2(missed_IFetch),
        .I3(\Using_FPGA.Native_0 ),
        .I4(\Using_FPGA.Native_3 ),
        .O(Increment));
endmodule

module c2c_gth_in_system_ibert_0_MB_FDSE
   (Reg_Test_Equal,
    R,
    \Using_FPGA.Native_0 ,
    Reg_Test_Equal_i,
    out);
  output Reg_Test_Equal;
  input R;
  input \Using_FPGA.Native_0 ;
  input Reg_Test_Equal_i;
  input out;

  wire R;
  wire Reg_Test_Equal;
  wire Reg_Test_Equal_i;
  wire \Using_FPGA.Native_0 ;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDSE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_S_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(\Using_FPGA.Native_0 ),
        .D(Reg_Test_Equal_i),
        .Q(Reg_Test_Equal),
        .S(R));
endmodule

(* ORIG_REF_NAME = "MB_FDSE" *) 
module c2c_gth_in_system_ibert_0_MB_FDSE_397
   (pc_I,
    \Using_FPGA.Native_0 ,
    PC_Write,
    ADDRARDADDR,
    out);
  output pc_I;
  input [0:0]\Using_FPGA.Native_0 ;
  input PC_Write;
  input [0:0]ADDRARDADDR;
  input out;

  wire [0:0]ADDRARDADDR;
  wire PC_Write;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire out;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  FDSE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_S_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(PC_Write),
        .D(ADDRARDADDR),
        .Q(pc_I),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDSE" *) 
module c2c_gth_in_system_ibert_0_MB_FDSE_402
   (pc_I,
    \Using_FPGA.Native_0 ,
    PC_Write,
    ADDRARDADDR,
    out);
  output pc_I;
  input [0:0]\Using_FPGA.Native_0 ;
  input PC_Write;
  input [0:0]ADDRARDADDR;
  input out;

  wire [0:0]ADDRARDADDR;
  wire PC_Write;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire out;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  FDSE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_S_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(PC_Write),
        .D(ADDRARDADDR),
        .Q(pc_I),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDSE" *) 
module c2c_gth_in_system_ibert_0_MB_FDSE_407
   (pc_I,
    \Using_FPGA.Native_0 ,
    PC_Write,
    ADDRARDADDR,
    out);
  output pc_I;
  input [0:0]\Using_FPGA.Native_0 ;
  input PC_Write;
  input [0:0]ADDRARDADDR;
  input out;

  wire [0:0]ADDRARDADDR;
  wire PC_Write;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire out;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  FDSE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_S_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(PC_Write),
        .D(ADDRARDADDR),
        .Q(pc_I),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDSE" *) 
module c2c_gth_in_system_ibert_0_MB_FDSE_412
   (pc_I,
    \Using_FPGA.Native_0 ,
    PC_Write,
    ADDRARDADDR,
    out);
  output pc_I;
  input [0:0]\Using_FPGA.Native_0 ;
  input PC_Write;
  input [0:0]ADDRARDADDR;
  input out;

  wire [0:0]ADDRARDADDR;
  wire PC_Write;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire out;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  FDSE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_S_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(PC_Write),
        .D(ADDRARDADDR),
        .Q(pc_I),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDSE" *) 
module c2c_gth_in_system_ibert_0_MB_FDSE_417
   (pc_I,
    \Using_FPGA.Native_0 ,
    PC_Write,
    ADDRARDADDR,
    out);
  output pc_I;
  input [0:0]\Using_FPGA.Native_0 ;
  input PC_Write;
  input [0:0]ADDRARDADDR;
  input out;

  wire [0:0]ADDRARDADDR;
  wire PC_Write;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire out;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  FDSE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_S_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(PC_Write),
        .D(ADDRARDADDR),
        .Q(pc_I),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDSE" *) 
module c2c_gth_in_system_ibert_0_MB_FDSE_422
   (pc_I,
    \Using_FPGA.Native_0 ,
    PC_Write,
    ADDRARDADDR,
    out);
  output pc_I;
  input [0:0]\Using_FPGA.Native_0 ;
  input PC_Write;
  input [0:0]ADDRARDADDR;
  input out;

  wire [0:0]ADDRARDADDR;
  wire PC_Write;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire out;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  FDSE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_S_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(PC_Write),
        .D(ADDRARDADDR),
        .Q(pc_I),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDSE" *) 
module c2c_gth_in_system_ibert_0_MB_FDSE_427
   (pc_I,
    \Using_FPGA.Native_0 ,
    PC_Write,
    ADDRARDADDR,
    out);
  output pc_I;
  input [0:0]\Using_FPGA.Native_0 ;
  input PC_Write;
  input [0:0]ADDRARDADDR;
  input out;

  wire [0:0]ADDRARDADDR;
  wire PC_Write;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire out;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  FDSE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_S_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(PC_Write),
        .D(ADDRARDADDR),
        .Q(pc_I),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDSE" *) 
module c2c_gth_in_system_ibert_0_MB_FDSE_432
   (pc_I,
    \Using_FPGA.Native_0 ,
    PC_Write,
    ADDRARDADDR,
    out);
  output pc_I;
  input [0:0]\Using_FPGA.Native_0 ;
  input PC_Write;
  input [0:0]ADDRARDADDR;
  input out;

  wire [0:0]ADDRARDADDR;
  wire PC_Write;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire out;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  FDSE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_S_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(PC_Write),
        .D(ADDRARDADDR),
        .Q(pc_I),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDSE" *) 
module c2c_gth_in_system_ibert_0_MB_FDSE_437
   (pc_I,
    \Using_FPGA.Native_0 ,
    PC_Write,
    ADDRARDADDR,
    out);
  output pc_I;
  input [0:0]\Using_FPGA.Native_0 ;
  input PC_Write;
  input [0:0]ADDRARDADDR;
  input out;

  wire [0:0]ADDRARDADDR;
  wire PC_Write;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire out;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  FDSE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_S_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(PC_Write),
        .D(ADDRARDADDR),
        .Q(pc_I),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDSE" *) 
module c2c_gth_in_system_ibert_0_MB_FDSE_442
   (pc_I,
    \Using_FPGA.Native_0 ,
    PC_Write,
    ADDRARDADDR,
    out);
  output pc_I;
  input [0:0]\Using_FPGA.Native_0 ;
  input PC_Write;
  input [0:0]ADDRARDADDR;
  input out;

  wire [0:0]ADDRARDADDR;
  wire PC_Write;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire out;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  FDSE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_S_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(PC_Write),
        .D(ADDRARDADDR),
        .Q(pc_I),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDSE" *) 
module c2c_gth_in_system_ibert_0_MB_FDSE_447
   (pc_I,
    \Using_FPGA.Native_0 ,
    PC_Write,
    ADDRARDADDR,
    out);
  output pc_I;
  input [0:0]\Using_FPGA.Native_0 ;
  input PC_Write;
  input [0:0]ADDRARDADDR;
  input out;

  wire [0:0]ADDRARDADDR;
  wire PC_Write;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire out;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  FDSE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_S_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(PC_Write),
        .D(ADDRARDADDR),
        .Q(pc_I),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDSE" *) 
module c2c_gth_in_system_ibert_0_MB_FDSE_452
   (pc_I,
    \Using_FPGA.Native_0 ,
    PC_Write,
    ADDRARDADDR,
    out);
  output pc_I;
  input [0:0]\Using_FPGA.Native_0 ;
  input PC_Write;
  input [0:0]ADDRARDADDR;
  input out;

  wire [0:0]ADDRARDADDR;
  wire PC_Write;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire out;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  FDSE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_S_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(PC_Write),
        .D(ADDRARDADDR),
        .Q(pc_I),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDSE" *) 
module c2c_gth_in_system_ibert_0_MB_FDSE_457
   (pc_I,
    \Using_FPGA.Native_0 ,
    PC_Write,
    ADDRARDADDR,
    out);
  output pc_I;
  input [0:0]\Using_FPGA.Native_0 ;
  input PC_Write;
  input [0:0]ADDRARDADDR;
  input out;

  wire [0:0]ADDRARDADDR;
  wire PC_Write;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire out;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  FDSE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_S_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(PC_Write),
        .D(ADDRARDADDR),
        .Q(pc_I),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDSE" *) 
module c2c_gth_in_system_ibert_0_MB_FDSE_462
   (pc_I,
    \Using_FPGA.Native_0 ,
    PC_Write,
    ADDRARDADDR,
    out);
  output pc_I;
  input [0:0]\Using_FPGA.Native_0 ;
  input PC_Write;
  input [0:0]ADDRARDADDR;
  input out;

  wire [0:0]ADDRARDADDR;
  wire PC_Write;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire out;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  FDSE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_S_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(PC_Write),
        .D(ADDRARDADDR),
        .Q(pc_I),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDS" *) 
module c2c_gth_in_system_ibert_0_MB_FDS_29
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    S,
    O,
    out,
    \Using_FPGA.Native_2 );
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  input S;
  input O;
  input out;
  input \Using_FPGA.Native_2 ;

  wire O;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDS" *) 
  (* box_type = "PRIMITIVE" *) 
  FDSE #(
    .INIT(1'b1)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(1'b1),
        .D(O),
        .Q(\Using_FPGA.Native_0 ),
        .S(S));
  LUT2 #(
    .INIT(4'h6)) 
    \Using_FPGA.Native_I1_i_1 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_2 ),
        .O(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "MB_FDS" *) 
module c2c_gth_in_system_ibert_0_MB_FDS_31
   (\Using_FPGA.Native_0 ,
    S,
    O,
    out);
  output \Using_FPGA.Native_0 ;
  input S;
  input O;
  input out;

  wire O;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire out;

  (* XILINX_LEGACY_PRIM = "FDS" *) 
  (* box_type = "PRIMITIVE" *) 
  FDSE #(
    .INIT(1'b1)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(1'b1),
        .D(O),
        .Q(\Using_FPGA.Native_0 ),
        .S(S));
endmodule

module c2c_gth_in_system_ibert_0_MB_LUT2
   (byte_i_reg,
    byte_selects_0,
    isbyte);
  output byte_i_reg;
  input byte_selects_0;
  input isbyte;

  wire byte_i_reg;
  wire byte_selects_0;
  wire isbyte;

  (* box_type = "PRIMITIVE" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \Using_FPGA.Native 
       (.I0(byte_selects_0),
        .I1(isbyte),
        .O(byte_i_reg));
endmodule

module c2c_gth_in_system_ibert_0_MB_LUT3
   (opsel1_SPR_Select_2_2,
    D,
    imm_Value);
  output opsel1_SPR_Select_2_2;
  input [1:0]D;
  input [0:0]imm_Value;

  wire [1:0]D;
  wire [0:0]imm_Value;
  wire opsel1_SPR_Select_2_2;

  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \Using_FPGA.Native 
       (.I0(D[1]),
        .I1(D[0]),
        .I2(imm_Value),
        .O(opsel1_SPR_Select_2_2));
endmodule

(* ORIG_REF_NAME = "MB_LUT3" *) 
module c2c_gth_in_system_ibert_0_MB_LUT3__parameterized1
   (opsel1_SPR_Select,
    opsel1_SPR_Select_1,
    opsel1_SPR_Select_2_1,
    opsel1_SPR_Select_2_2);
  output opsel1_SPR_Select;
  input opsel1_SPR_Select_1;
  input opsel1_SPR_Select_2_1;
  input opsel1_SPR_Select_2_2;

  wire opsel1_SPR_Select;
  wire opsel1_SPR_Select_1;
  wire opsel1_SPR_Select_2_1;
  wire opsel1_SPR_Select_2_2;

  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h15)) 
    \Using_FPGA.Native 
       (.I0(opsel1_SPR_Select_1),
        .I1(opsel1_SPR_Select_2_1),
        .I2(opsel1_SPR_Select_2_2),
        .O(opsel1_SPR_Select));
endmodule

(* ORIG_REF_NAME = "MB_LUT3" *) 
module c2c_gth_in_system_ibert_0_MB_LUT3__parameterized3
   (res_forward1_3,
    reg1_Addr,
    Q,
    ex_Valid);
  output res_forward1_3;
  input [0:0]reg1_Addr;
  input [0:0]Q;
  input ex_Valid;

  wire [0:0]Q;
  wire ex_Valid;
  wire [0:0]reg1_Addr;
  wire res_forward1_3;

  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h90)) 
    \Using_FPGA.Native 
       (.I0(reg1_Addr),
        .I1(Q),
        .I2(ex_Valid),
        .O(res_forward1_3));
endmodule

(* ORIG_REF_NAME = "MB_LUT3" *) 
module c2c_gth_in_system_ibert_0_MB_LUT3__parameterized3_15
   (res_forward2_3,
    imm_Value,
    Q,
    ex_Valid);
  output res_forward2_3;
  input [0:0]imm_Value;
  input [0:0]Q;
  input ex_Valid;

  wire [0:0]Q;
  wire ex_Valid;
  wire [0:0]imm_Value;
  wire res_forward2_3;

  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h90)) 
    \Using_FPGA.Native 
       (.I0(imm_Value),
        .I1(Q),
        .I2(ex_Valid),
        .O(res_forward2_3));
endmodule

(* ORIG_REF_NAME = "MB_LUT3" *) 
module c2c_gth_in_system_ibert_0_MB_LUT3__parameterized5
   (force_DI1,
    \Using_FPGA.Native_0 ,
    use_Reg_Neg_DI,
    force_Val1);
  output force_DI1;
  input \Using_FPGA.Native_0 ;
  input use_Reg_Neg_DI;
  input force_Val1;

  wire \Using_FPGA.Native_0 ;
  wire force_DI1;
  wire force_Val1;
  wire use_Reg_Neg_DI;

  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hB4)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(use_Reg_Neg_DI),
        .I2(force_Val1),
        .O(force_DI1));
endmodule

(* ORIG_REF_NAME = "MB_LUT3" *) 
module c2c_gth_in_system_ibert_0_MB_LUT3__parameterized5_24
   (force_jump1,
    \Using_FPGA.Native_0 ,
    use_Reg_Neg_S,
    force1);
  output force_jump1;
  input \Using_FPGA.Native_0 ;
  input use_Reg_Neg_S;
  input force1;

  wire \Using_FPGA.Native_0 ;
  wire force1;
  wire force_jump1;
  wire use_Reg_Neg_S;

  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hB4)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(use_Reg_Neg_S),
        .I2(force1),
        .O(force_jump1));
endmodule

(* ORIG_REF_NAME = "MB_LUT3" *) 
module c2c_gth_in_system_ibert_0_MB_LUT3__parameterized7
   (control_carry,
    carry_In);
  output control_carry;
  input carry_In;

  wire carry_In;
  wire control_carry;

  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h00)) 
    \Using_FPGA.Native 
       (.I0(carry_In),
        .I1(carry_In),
        .I2(1'b1),
        .O(control_carry));
endmodule

(* ORIG_REF_NAME = "MB_LUT3" *) 
module c2c_gth_in_system_ibert_0_MB_LUT3__parameterized9
   (O,
    byte_selects_1,
    isbyte,
    isdoublet);
  output O;
  input byte_selects_1;
  input isbyte;
  input isdoublet;

  wire O;
  wire byte_selects_1;
  wire isbyte;
  wire isdoublet;

  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \Using_FPGA.Native 
       (.I0(byte_selects_1),
        .I1(isbyte),
        .I2(isdoublet),
        .O(O));
endmodule

module c2c_gth_in_system_ibert_0_MB_LUT4
   (write_Reg_I_S,
    dlmb_LMB_Ready,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q);
  output write_Reg_I_S;
  input dlmb_LMB_Ready;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [4:0]Q;

  wire I178_in;
  wire [4:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_i_3__10_n_0 ;
  wire dlmb_LMB_Ready;
  wire write_Reg_I_S;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hF800)) 
    \Using_FPGA.Native 
       (.I0(dlmb_LMB_Ready),
        .I1(I178_in),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\Using_FPGA.Native_i_3__10_n_0 ),
        .O(write_Reg_I_S));
  LUT1 #(
    .INIT(2'h1)) 
    \Using_FPGA.Native_i_2__17 
       (.I0(\Using_FPGA.Native_1 ),
        .O(I178_in));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \Using_FPGA.Native_i_3__10 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\Using_FPGA.Native_i_3__10_n_0 ));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized1
   (of_PipeRun_Select,
    mul_Executing,
    of_Valid,
    load_Store_i);
  output of_PipeRun_Select;
  input mul_Executing;
  input of_Valid;
  input load_Store_i;

  wire load_Store_i;
  wire mul_Executing;
  wire of_PipeRun_Select;
  wire of_Valid;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h0040)) 
    \Using_FPGA.Native 
       (.I0(mul_Executing),
        .I1(of_Valid),
        .I2(load_Store_i),
        .I3(1'b0),
        .O(of_PipeRun_Select));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized11
   (res_Forward1,
    res_forward1_1,
    res_forward1_2,
    res_forward1_3,
    write_Reg_I_S);
  output res_Forward1;
  input res_forward1_1;
  input res_forward1_2;
  input res_forward1_3;
  input write_Reg_I_S;

  wire res_Forward1;
  wire res_forward1_1;
  wire res_forward1_2;
  wire res_forward1_3;
  wire write_Reg_I_S;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \Using_FPGA.Native 
       (.I0(res_forward1_1),
        .I1(res_forward1_2),
        .I2(res_forward1_3),
        .I3(write_Reg_I_S),
        .O(res_Forward1));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized11_16
   (res_Forward2,
    res_forward2_1,
    res_forward2_2,
    res_forward2_3,
    write_Reg_I_S);
  output res_Forward2;
  input res_forward2_1;
  input res_forward2_2;
  input res_forward2_3;
  input write_Reg_I_S;

  wire res_Forward2;
  wire res_forward2_1;
  wire res_forward2_2;
  wire res_forward2_3;
  wire write_Reg_I_S;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \Using_FPGA.Native 
       (.I0(res_forward2_1),
        .I1(res_forward2_2),
        .I2(res_forward2_3),
        .I3(write_Reg_I_S),
        .O(res_Forward2));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized13
   (correct_Carry_Select,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 );
  output correct_Carry_Select;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;

  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire correct_Carry_Select;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h00F0)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_2 ),
        .I3(1'b0),
        .O(correct_Carry_Select));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized15
   (force_DI2,
    force_Val2_N,
    ex_Valid);
  output force_DI2;
  input force_Val2_N;
  input ex_Valid;

  wire ex_Valid;
  wire force_DI2;
  wire force_Val2_N;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hAABA)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(force_Val2_N),
        .I2(ex_Valid),
        .I3(1'b0),
        .O(force_DI2));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized17
   (S,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[31] ,
    alu_AddSub_1);
  output S;
  input [0:0]op2_C;
  input [0:0]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[31] ;
  input alu_AddSub_1;

  wire S;
  wire \Using_IO_Bus.IO_Address_reg[31] ;
  wire alu_AddSub_1;
  wire [0:0]alu_Op;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFA0A)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op),
        .I2(\Using_IO_Bus.IO_Address_reg[31] ),
        .I3(alu_AddSub_1),
        .O(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19
   (logic_Res_i,
    op2_C,
    \Using_FPGA.Native_0 ,
    Q);
  output logic_Res_i;
  input [0:0]op2_C;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_102
   (logic_Res_i,
    op2_C,
    \Using_FPGA.Native_0 ,
    Q);
  output logic_Res_i;
  input [0:0]op2_C;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_105
   (logic_Res_i,
    op2_C,
    \Using_FPGA.Native_0 ,
    Q);
  output logic_Res_i;
  input [0:0]op2_C;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_108
   (logic_Res_i,
    op2_C,
    \Using_FPGA.Native_0 ,
    Q);
  output logic_Res_i;
  input [0:0]op2_C;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_111
   (logic_Res_i,
    op2_C,
    \Using_FPGA.Native_0 ,
    Q);
  output logic_Res_i;
  input [0:0]op2_C;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_114
   (logic_Res_i,
    op2_C,
    \Using_FPGA.Native_0 ,
    Q);
  output logic_Res_i;
  input [0:0]op2_C;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_117
   (logic_Res_i,
    op2_C,
    \Using_FPGA.Native_0 ,
    Q);
  output logic_Res_i;
  input [0:0]op2_C;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_120
   (logic_Res_i,
    EX_Op2,
    Op1_Logic,
    Q);
  output logic_Res_i;
  input EX_Op2;
  input Op1_Logic;
  input [1:0]Q;

  wire EX_Op2;
  wire Op1_Logic;
  wire [1:0]Q;
  wire logic_Res_i;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(EX_Op2),
        .I1(Op1_Logic),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_123
   (logic_Res_i,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q);
  output logic_Res_i;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire logic_Res_i;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_126
   (logic_Res_i,
    op2_C,
    \Using_FPGA.Native_0 ,
    Q);
  output logic_Res_i;
  input [0:0]op2_C;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_129
   (logic_Res_i,
    Op2,
    Shifted,
    Q);
  output logic_Res_i;
  input Op2;
  input Shifted;
  input [1:0]Q;

  wire Op2;
  wire [1:0]Q;
  wire Shifted;
  wire logic_Res_i;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(Op2),
        .I1(Shifted),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_132
   (logic_Res_i,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q);
  output logic_Res_i;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire logic_Res_i;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_135
   (logic_Res_i,
    op2_C,
    \Using_FPGA.Native_0 ,
    Q);
  output logic_Res_i;
  input [0:0]op2_C;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_138
   (logic_Res_i,
    op2_C,
    \Using_FPGA.Native_0 ,
    Q);
  output logic_Res_i;
  input [0:0]op2_C;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_141
   (logic_Res_i,
    op2_C,
    \Using_FPGA.Native_0 ,
    Q);
  output logic_Res_i;
  input [0:0]op2_C;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_144
   (logic_Res_i,
    op2_C,
    \Using_FPGA.Native_0 ,
    Q);
  output logic_Res_i;
  input [0:0]op2_C;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_147
   (logic_Res_i,
    op2_C,
    \Using_FPGA.Native_0 ,
    Q);
  output logic_Res_i;
  input [0:0]op2_C;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_150
   (logic_Res_i,
    op2_C,
    \Using_FPGA.Native_0 ,
    Q);
  output logic_Res_i;
  input [0:0]op2_C;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_153
   (logic_Res_i,
    op2_C,
    \Using_FPGA.Native_0 ,
    Q);
  output logic_Res_i;
  input [0:0]op2_C;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_156
   (logic_Res_i,
    op2_C,
    \Using_FPGA.Native_0 ,
    Q);
  output logic_Res_i;
  input [0:0]op2_C;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_159
   (logic_Res_i,
    op2_C,
    \Using_FPGA.Native_0 ,
    Q);
  output logic_Res_i;
  input [0:0]op2_C;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_162
   (logic_Res_i,
    op2_C,
    \Using_FPGA.Native_0 ,
    Q);
  output logic_Res_i;
  input [0:0]op2_C;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_165
   (logic_Res_i,
    op2_C,
    \Using_FPGA.Native_0 ,
    Q);
  output logic_Res_i;
  input [0:0]op2_C;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_168
   (logic_Res_i,
    op2_C,
    \Using_FPGA.Native_0 ,
    Q);
  output logic_Res_i;
  input [0:0]op2_C;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_171
   (logic_Res_i,
    op2_C,
    Op1_Shift,
    Q);
  output logic_Res_i;
  input [0:0]op2_C;
  input Op1_Shift;
  input [1:0]Q;

  wire Op1_Shift;
  wire [1:0]Q;
  wire logic_Res_i;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(Op1_Shift),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_174
   (logic_Res_i,
    op2_C,
    \Using_FPGA.Native_0 ,
    Q);
  output logic_Res_i;
  input [0:0]op2_C;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_177
   (logic_Res_i,
    op2_C,
    \Using_FPGA.Native_0 ,
    Q);
  output logic_Res_i;
  input [0:0]op2_C;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_180
   (logic_Res_i,
    op2_C,
    \Using_FPGA.Native_0 ,
    Q);
  output logic_Res_i;
  input [0:0]op2_C;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_183
   (logic_Res_i,
    op2_C,
    \Using_FPGA.Native_0 ,
    Q);
  output logic_Res_i;
  input [0:0]op2_C;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_186
   (logic_Res_i,
    op2_C,
    \Using_FPGA.Native_0 ,
    Q);
  output logic_Res_i;
  input [0:0]op2_C;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_189
   (logic_Res_i,
    op2_C,
    \Using_FPGA.Native_0 ,
    Q);
  output logic_Res_i;
  input [0:0]op2_C;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_192
   (logic_Res_i,
    op2_C,
    \Using_FPGA.Native_0 ,
    Q);
  output logic_Res_i;
  input [0:0]op2_C;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h468E)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(logic_Res_i));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21
   (shift_Res,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Sext,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Sext;
  input Shift_Oper;

  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Sext),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_103
   (shift_Res,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Sext,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Sext;
  input Shift_Oper;

  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Sext),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_106
   (shift_Res,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Sext,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Sext;
  input Shift_Oper;

  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Sext),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_109
   (shift_Res,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Sext,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Sext;
  input Shift_Oper;

  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Sext),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_112
   (shift_Res,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Sext,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Sext;
  input Shift_Oper;

  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Sext),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_115
   (shift_Res,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Sext,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Sext;
  input Shift_Oper;

  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Sext),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_118
   (shift_Res,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Sext,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Sext;
  input Shift_Oper;

  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Sext),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_121
   (shift_Res,
    \Using_FPGA.Native_0 ,
    Op1_Logic,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input Op1_Logic;
  input Shift_Oper;

  wire Op1_Logic;
  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(Op1_Logic),
        .I2(1'b0),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_124
   (shift_Res,
    Shifted,
    \Using_FPGA.Native_0 ,
    Shift_Oper);
  output shift_Res;
  input Shifted;
  input \Using_FPGA.Native_0 ;
  input Shift_Oper;

  wire Shift_Oper;
  wire Shifted;
  wire \Using_FPGA.Native_0 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(Shifted),
        .I1(\Using_FPGA.Native_0 ),
        .I2(1'b0),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_127
   (shift_Res,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Sext,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Sext;
  input Shift_Oper;

  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Sext),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_130
   (shift_Res,
    \Using_FPGA.Native_0 ,
    Shifted,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input Shifted;
  input Shift_Oper;

  wire Shift_Oper;
  wire Shifted;
  wire \Using_FPGA.Native_0 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(Shifted),
        .I2(1'b0),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_133
   (shift_Res,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Shift_Oper;

  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(1'b0),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_136
   (shift_Res,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Shift_Oper;

  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(1'b0),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_139
   (shift_Res,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Shift_Oper;

  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(1'b0),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_142
   (shift_Res,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Shift_Oper;

  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(1'b0),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_145
   (shift_Res,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Shift_Oper;

  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(1'b0),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_148
   (shift_Res,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Sext,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Sext;
  input Shift_Oper;

  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Sext),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_151
   (shift_Res,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Sext,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Sext;
  input Shift_Oper;

  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Sext),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_154
   (shift_Res,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Sext,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Sext;
  input Shift_Oper;

  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Sext),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_157
   (shift_Res,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Sext,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Sext;
  input Shift_Oper;

  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Sext),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_160
   (shift_Res,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Sext,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Sext;
  input Shift_Oper;

  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Sext),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_163
   (shift_Res,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Sext,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Sext;
  input Shift_Oper;

  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Sext),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_166
   (shift_Res,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Sext,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Sext;
  input Shift_Oper;

  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Sext),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_169
   (shift_Res,
    Op1_Shift,
    \Using_FPGA.Native_0 ,
    Sext,
    Shift_Oper);
  output shift_Res;
  input Op1_Shift;
  input \Using_FPGA.Native_0 ;
  input Sext;
  input Shift_Oper;

  wire Op1_Shift;
  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(Op1_Shift),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Sext),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_172
   (shift_Res,
    \Using_FPGA.Native_0 ,
    Op1_Shift,
    Sext,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input Op1_Shift;
  input Sext;
  input Shift_Oper;

  wire Op1_Shift;
  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(Op1_Shift),
        .I2(Sext),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_175
   (shift_Res,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Sext,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Sext;
  input Shift_Oper;

  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Sext),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_178
   (shift_Res,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Sext,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Sext;
  input Shift_Oper;

  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Sext),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_181
   (shift_Res,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Sext,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Sext;
  input Shift_Oper;

  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Sext),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_184
   (shift_Res,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Sext,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Sext;
  input Shift_Oper;

  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Sext),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_187
   (shift_Res,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Sext,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Sext;
  input Shift_Oper;

  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Sext),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_190
   (shift_Res,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Sext,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Sext;
  input Shift_Oper;

  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Sext),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_193
   (shift_Res,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Sext,
    Shift_Oper);
  output shift_Res;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Sext;
  input Shift_Oper;

  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hFCAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Sext),
        .I3(Shift_Oper),
        .O(shift_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]dlmb_M_ABus;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(dlmb_M_ABus),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_227
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]dlmb_M_ABus;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(dlmb_M_ABus),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_229
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]dlmb_M_ABus;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(dlmb_M_ABus),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_231
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]dlmb_M_ABus;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(dlmb_M_ABus),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_233
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]dlmb_M_ABus;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(dlmb_M_ABus),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_235
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]dlmb_M_ABus;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(dlmb_M_ABus),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_237
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]dlmb_M_ABus;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(dlmb_M_ABus),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_239
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    ALU_Result);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input ALU_Result;

  wire ALU_Result;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(ALU_Result),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_241
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\Using_FPGA.Native_1 ),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_243
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]dlmb_M_ABus;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(dlmb_M_ABus),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_245
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]dlmb_M_ABus;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(dlmb_M_ABus),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_247
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]dlmb_M_ABus;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(dlmb_M_ABus),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_249
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]dlmb_M_ABus;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(dlmb_M_ABus),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_251
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]dlmb_M_ABus;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(dlmb_M_ABus),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_253
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]dlmb_M_ABus;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(dlmb_M_ABus),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_255
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]dlmb_M_ABus;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(dlmb_M_ABus),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_257
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]dlmb_M_ABus;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(dlmb_M_ABus),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_259
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]dlmb_M_ABus;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(dlmb_M_ABus),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_261
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]dlmb_M_ABus;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(dlmb_M_ABus),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_263
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]dlmb_M_ABus;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(dlmb_M_ABus),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_265
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]dlmb_M_ABus;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(dlmb_M_ABus),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_267
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]dlmb_M_ABus;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(dlmb_M_ABus),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_269
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]dlmb_M_ABus;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(dlmb_M_ABus),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_271
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]dlmb_M_ABus;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(dlmb_M_ABus),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_273
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]dlmb_M_ABus;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(dlmb_M_ABus),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_275
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]dlmb_M_ABus;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(dlmb_M_ABus),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_277
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]dlmb_M_ABus;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(dlmb_M_ABus),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_279
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]dlmb_M_ABus;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(dlmb_M_ABus),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_281
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]dlmb_M_ABus;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(dlmb_M_ABus),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_283
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]dlmb_M_ABus;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(dlmb_M_ABus),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_285
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    dlmb_M_ABus);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]dlmb_M_ABus;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(dlmb_M_ABus),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_287
   (mul_ALU_Res,
    \Using_FPGA.Native_0 ,
    O);
  output mul_ALU_Res;
  input [0:0]\Using_FPGA.Native_0 ;
  input O;

  wire O;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(O),
        .O(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized25
   (S,
    Increment,
    pc_I);
  output S;
  input Increment;
  input pc_I;

  wire Increment;
  wire S;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hF066)) 
    \Using_FPGA.Native 
       (.I0(Increment),
        .I1(pc_I),
        .I2(1'b0),
        .I3(1'b0),
        .O(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized25_401
   (S,
    pc_I);
  output S;
  input pc_I;

  wire S;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hF066)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(pc_I),
        .I2(1'b0),
        .I3(1'b0),
        .O(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized25_406
   (S,
    pc_I);
  output S;
  input pc_I;

  wire S;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hF066)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(pc_I),
        .I2(1'b0),
        .I3(1'b0),
        .O(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized25_411
   (S,
    pc_I);
  output S;
  input pc_I;

  wire S;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hF066)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(pc_I),
        .I2(1'b0),
        .I3(1'b0),
        .O(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized25_416
   (S,
    pc_I);
  output S;
  input pc_I;

  wire S;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hF066)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(pc_I),
        .I2(1'b0),
        .I3(1'b0),
        .O(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized25_421
   (S,
    pc_I);
  output S;
  input pc_I;

  wire S;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hF066)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(pc_I),
        .I2(1'b0),
        .I3(1'b0),
        .O(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized25_426
   (S,
    pc_I);
  output S;
  input pc_I;

  wire S;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hF066)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(pc_I),
        .I2(1'b0),
        .I3(1'b0),
        .O(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized25_431
   (S,
    pc_I);
  output S;
  input pc_I;

  wire S;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hF066)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(pc_I),
        .I2(1'b0),
        .I3(1'b0),
        .O(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized25_436
   (S,
    pc_I);
  output S;
  input pc_I;

  wire S;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hF066)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(pc_I),
        .I2(1'b0),
        .I3(1'b0),
        .O(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized25_441
   (S,
    pc_I);
  output S;
  input pc_I;

  wire S;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hF066)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(pc_I),
        .I2(1'b0),
        .I3(1'b0),
        .O(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized25_446
   (S,
    pc_I);
  output S;
  input pc_I;

  wire S;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hF066)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(pc_I),
        .I2(1'b0),
        .I3(1'b0),
        .O(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized25_451
   (S,
    pc_I);
  output S;
  input pc_I;

  wire S;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hF066)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(pc_I),
        .I2(1'b0),
        .I3(1'b0),
        .O(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized25_456
   (S,
    pc_I);
  output S;
  input pc_I;

  wire S;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hF066)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(pc_I),
        .I2(1'b0),
        .I3(1'b0),
        .O(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized25_461
   (xor_Sum,
    pc_I);
  output xor_Sum;
  input pc_I;

  wire pc_I;
  wire xor_Sum;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hF066)) 
    \Using_FPGA.Native 
       (.I0(1'b0),
        .I1(pc_I),
        .I2(1'b0),
        .I3(1'b0),
        .O(xor_Sum));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized27
   (ADDRARDADDR,
    O,
    dlmb_M_ABus,
    Jump);
  output [0:0]ADDRARDADDR;
  input O;
  input [0:0]dlmb_M_ABus;
  input Jump;

  wire [0:0]ADDRARDADDR;
  wire Jump;
  wire O;
  wire [0:0]dlmb_M_ABus;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hAACA)) 
    \Using_FPGA.Native 
       (.I0(O),
        .I1(dlmb_M_ABus),
        .I2(Jump),
        .I3(1'b0),
        .O(ADDRARDADDR));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized27_399
   (ADDRARDADDR,
    O,
    dlmb_M_ABus,
    Jump);
  output [0:0]ADDRARDADDR;
  input O;
  input [0:0]dlmb_M_ABus;
  input Jump;

  wire [0:0]ADDRARDADDR;
  wire Jump;
  wire O;
  wire [0:0]dlmb_M_ABus;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hAACA)) 
    \Using_FPGA.Native 
       (.I0(O),
        .I1(dlmb_M_ABus),
        .I2(Jump),
        .I3(1'b0),
        .O(ADDRARDADDR));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized27_404
   (ADDRARDADDR,
    O,
    dlmb_M_ABus,
    Jump);
  output [0:0]ADDRARDADDR;
  input O;
  input [0:0]dlmb_M_ABus;
  input Jump;

  wire [0:0]ADDRARDADDR;
  wire Jump;
  wire O;
  wire [0:0]dlmb_M_ABus;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hAACA)) 
    \Using_FPGA.Native 
       (.I0(O),
        .I1(dlmb_M_ABus),
        .I2(Jump),
        .I3(1'b0),
        .O(ADDRARDADDR));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized27_409
   (ADDRARDADDR,
    O,
    dlmb_M_ABus,
    Jump);
  output [0:0]ADDRARDADDR;
  input O;
  input [0:0]dlmb_M_ABus;
  input Jump;

  wire [0:0]ADDRARDADDR;
  wire Jump;
  wire O;
  wire [0:0]dlmb_M_ABus;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hAACA)) 
    \Using_FPGA.Native 
       (.I0(O),
        .I1(dlmb_M_ABus),
        .I2(Jump),
        .I3(1'b0),
        .O(ADDRARDADDR));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized27_414
   (ADDRARDADDR,
    O,
    dlmb_M_ABus,
    Jump);
  output [0:0]ADDRARDADDR;
  input O;
  input [0:0]dlmb_M_ABus;
  input Jump;

  wire [0:0]ADDRARDADDR;
  wire Jump;
  wire O;
  wire [0:0]dlmb_M_ABus;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hAACA)) 
    \Using_FPGA.Native 
       (.I0(O),
        .I1(dlmb_M_ABus),
        .I2(Jump),
        .I3(1'b0),
        .O(ADDRARDADDR));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized27_419
   (ADDRARDADDR,
    O,
    dlmb_M_ABus,
    Jump);
  output [0:0]ADDRARDADDR;
  input O;
  input [0:0]dlmb_M_ABus;
  input Jump;

  wire [0:0]ADDRARDADDR;
  wire Jump;
  wire O;
  wire [0:0]dlmb_M_ABus;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hAACA)) 
    \Using_FPGA.Native 
       (.I0(O),
        .I1(dlmb_M_ABus),
        .I2(Jump),
        .I3(1'b0),
        .O(ADDRARDADDR));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized27_424
   (ADDRARDADDR,
    O,
    dlmb_M_ABus,
    Jump);
  output [0:0]ADDRARDADDR;
  input O;
  input [0:0]dlmb_M_ABus;
  input Jump;

  wire [0:0]ADDRARDADDR;
  wire Jump;
  wire O;
  wire [0:0]dlmb_M_ABus;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hAACA)) 
    \Using_FPGA.Native 
       (.I0(O),
        .I1(dlmb_M_ABus),
        .I2(Jump),
        .I3(1'b0),
        .O(ADDRARDADDR));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized27_429
   (ADDRARDADDR,
    O,
    dlmb_M_ABus,
    Jump);
  output [0:0]ADDRARDADDR;
  input O;
  input [0:0]dlmb_M_ABus;
  input Jump;

  wire [0:0]ADDRARDADDR;
  wire Jump;
  wire O;
  wire [0:0]dlmb_M_ABus;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hAACA)) 
    \Using_FPGA.Native 
       (.I0(O),
        .I1(dlmb_M_ABus),
        .I2(Jump),
        .I3(1'b0),
        .O(ADDRARDADDR));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized27_434
   (ADDRARDADDR,
    O,
    dlmb_M_ABus,
    Jump);
  output [0:0]ADDRARDADDR;
  input O;
  input [0:0]dlmb_M_ABus;
  input Jump;

  wire [0:0]ADDRARDADDR;
  wire Jump;
  wire O;
  wire [0:0]dlmb_M_ABus;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hAACA)) 
    \Using_FPGA.Native 
       (.I0(O),
        .I1(dlmb_M_ABus),
        .I2(Jump),
        .I3(1'b0),
        .O(ADDRARDADDR));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized27_439
   (ADDRARDADDR,
    O,
    dlmb_M_ABus,
    Jump);
  output [0:0]ADDRARDADDR;
  input O;
  input [0:0]dlmb_M_ABus;
  input Jump;

  wire [0:0]ADDRARDADDR;
  wire Jump;
  wire O;
  wire [0:0]dlmb_M_ABus;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hAACA)) 
    \Using_FPGA.Native 
       (.I0(O),
        .I1(dlmb_M_ABus),
        .I2(Jump),
        .I3(1'b0),
        .O(ADDRARDADDR));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized27_444
   (ADDRARDADDR,
    O,
    dlmb_M_ABus,
    Jump);
  output [0:0]ADDRARDADDR;
  input O;
  input [0:0]dlmb_M_ABus;
  input Jump;

  wire [0:0]ADDRARDADDR;
  wire Jump;
  wire O;
  wire [0:0]dlmb_M_ABus;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hAACA)) 
    \Using_FPGA.Native 
       (.I0(O),
        .I1(dlmb_M_ABus),
        .I2(Jump),
        .I3(1'b0),
        .O(ADDRARDADDR));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized27_449
   (ADDRARDADDR,
    O,
    dlmb_M_ABus,
    Jump);
  output [0:0]ADDRARDADDR;
  input O;
  input [0:0]dlmb_M_ABus;
  input Jump;

  wire [0:0]ADDRARDADDR;
  wire Jump;
  wire O;
  wire [0:0]dlmb_M_ABus;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hAACA)) 
    \Using_FPGA.Native 
       (.I0(O),
        .I1(dlmb_M_ABus),
        .I2(Jump),
        .I3(1'b0),
        .O(ADDRARDADDR));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized27_454
   (ADDRARDADDR,
    O,
    dlmb_M_ABus,
    Jump);
  output [0:0]ADDRARDADDR;
  input O;
  input [0:0]dlmb_M_ABus;
  input Jump;

  wire [0:0]ADDRARDADDR;
  wire Jump;
  wire O;
  wire [0:0]dlmb_M_ABus;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hAACA)) 
    \Using_FPGA.Native 
       (.I0(O),
        .I1(dlmb_M_ABus),
        .I2(Jump),
        .I3(1'b0),
        .O(ADDRARDADDR));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized27_459
   (ADDRARDADDR,
    pc_Sum,
    dlmb_M_ABus,
    Jump);
  output [0:0]ADDRARDADDR;
  input pc_Sum;
  input [0:0]dlmb_M_ABus;
  input Jump;

  wire [0:0]ADDRARDADDR;
  wire Jump;
  wire [0:0]dlmb_M_ABus;
  wire pc_Sum;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'hAACA)) 
    \Using_FPGA.Native 
       (.I0(pc_Sum),
        .I1(dlmb_M_ABus),
        .I2(Jump),
        .I3(1'b0),
        .O(ADDRARDADDR));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized3
   (of_PipeRun_without_dready,
    mul_Executing,
    of_Valid,
    load_Store_i);
  output of_PipeRun_without_dready;
  input mul_Executing;
  input of_Valid;
  input load_Store_i;

  wire load_Store_i;
  wire mul_Executing;
  wire of_PipeRun_without_dready;
  wire of_Valid;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    \Using_FPGA.Native 
       (.I0(mul_Executing),
        .I1(of_Valid),
        .I2(load_Store_i),
        .I3(1'b0),
        .O(of_PipeRun_without_dready));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized5
   (opsel1_SPR_Select_1,
    \Using_FPGA.Native_0 );
  output opsel1_SPR_Select_1;
  input [3:0]\Using_FPGA.Native_0 ;

  wire [3:0]\Using_FPGA.Native_0 ;
  wire opsel1_SPR_Select_1;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h2000)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 [3]),
        .I1(\Using_FPGA.Native_0 [2]),
        .I2(\Using_FPGA.Native_0 [1]),
        .I3(\Using_FPGA.Native_0 [0]),
        .O(opsel1_SPR_Select_1));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized7
   (opsel1_SPR_Select_2_1,
    \Using_FPGA.Native_0 );
  output opsel1_SPR_Select_2_1;
  input [3:0]\Using_FPGA.Native_0 ;

  wire [3:0]\Using_FPGA.Native_0 ;
  wire opsel1_SPR_Select_2_1;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h0200)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 [3]),
        .I1(\Using_FPGA.Native_0 [2]),
        .I2(\Using_FPGA.Native_0 [1]),
        .I3(\Using_FPGA.Native_0 [0]),
        .O(opsel1_SPR_Select_2_1));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized7_25
   (force_jump2,
    ex_Valid,
    force2);
  output force_jump2;
  input ex_Valid;
  input force2;

  wire ex_Valid;
  wire force2;
  wire force_jump2;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h0200)) 
    \Using_FPGA.Native 
       (.I0(ex_Valid),
        .I1(1'b0),
        .I2(1'b0),
        .I3(force2),
        .O(force_jump2));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized9
   (res_forward1_1,
    reg1_Addr,
    Q);
  output res_forward1_1;
  input [1:0]reg1_Addr;
  input [1:0]Q;

  wire [1:0]Q;
  wire [1:0]reg1_Addr;
  wire res_forward1_1;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h8421)) 
    \Using_FPGA.Native 
       (.I0(reg1_Addr[1]),
        .I1(reg1_Addr[0]),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(res_forward1_1));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized9_12
   (res_forward1_2,
    reg1_Addr,
    Q);
  output res_forward1_2;
  input [1:0]reg1_Addr;
  input [1:0]Q;

  wire [1:0]Q;
  wire [1:0]reg1_Addr;
  wire res_forward1_2;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h8421)) 
    \Using_FPGA.Native 
       (.I0(reg1_Addr[1]),
        .I1(reg1_Addr[0]),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(res_forward1_2));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized9_13
   (res_forward2_1,
    imm_Value,
    Q);
  output res_forward2_1;
  input [1:0]imm_Value;
  input [1:0]Q;

  wire [1:0]Q;
  wire [1:0]imm_Value;
  wire res_forward2_1;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h8421)) 
    \Using_FPGA.Native 
       (.I0(imm_Value[1]),
        .I1(imm_Value[0]),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(res_forward2_1));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module c2c_gth_in_system_ibert_0_MB_LUT4__parameterized9_14
   (res_forward2_2,
    imm_Value,
    Q);
  output res_forward2_2;
  input [1:0]imm_Value;
  input [1:0]Q;

  wire [1:0]Q;
  wire [1:0]imm_Value;
  wire res_forward2_2;

  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h8421)) 
    \Using_FPGA.Native 
       (.I0(imm_Value[1]),
        .I1(imm_Value[0]),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(res_forward2_2));
endmodule

module c2c_gth_in_system_ibert_0_MB_LUT6_2
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(1'b0),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_490
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(1'b0),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_494
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(1'b0),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_498
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(1'b0),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_502
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(1'b0),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_506
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(1'b0),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_510
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(1'b0),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_514
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(1'b0),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_518
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    I3,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input I3;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire I3;
  wire [0:0]Reg1_Data;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(I3),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_522
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(1'b0),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_526
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    I3_0,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input I3_0;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire I3_0;
  wire [0:0]Reg1_Data;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(I3_0),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_530
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    I3_1,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input I3_1;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire I3_1;
  wire [0:0]Reg1_Data;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(I3_1),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_534
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    I3_2,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input I3_2;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire I3_2;
  wire [0:0]Reg1_Data;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(I3_2),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_538
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    I3_3,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input I3_3;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire I3_3;
  wire [0:0]Reg1_Data;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(I3_3),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_542
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    I3_4,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input I3_4;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire I3_4;
  wire [0:0]Reg1_Data;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(I3_4),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_546
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    I3_5,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input I3_5;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire I3_5;
  wire [0:0]Reg1_Data;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(I3_5),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_550
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    PC_OF,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input PC_OF;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire PC_OF;
  wire [0:0]Reg1_Data;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(PC_OF),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_554
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    \Using_FPGA.Native_0 ,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input \Using_FPGA.Native_0 ;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native_0 ;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(\Using_FPGA.Native_0 ),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_558
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    \Using_FPGA.Native_0 ,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input \Using_FPGA.Native_0 ;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native_0 ;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(\Using_FPGA.Native_0 ),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_562
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    \Using_FPGA.Native_0 ,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input \Using_FPGA.Native_0 ;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native_0 ;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(\Using_FPGA.Native_0 ),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_566
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(1'b0),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_570
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    \Using_FPGA.Native_0 ,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input \Using_FPGA.Native_0 ;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native_0 ;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(\Using_FPGA.Native_0 ),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_574
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    \Using_FPGA.Native_0 ,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input \Using_FPGA.Native_0 ;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native_0 ;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(\Using_FPGA.Native_0 ),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_578
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    \Using_FPGA.Native_0 ,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input \Using_FPGA.Native_0 ;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native_0 ;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(\Using_FPGA.Native_0 ),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_582
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    \Using_FPGA.Native_0 ,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input \Using_FPGA.Native_0 ;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native_0 ;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(\Using_FPGA.Native_0 ),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_586
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(1'b0),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_590
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(1'b0),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_594
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(1'b0),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_598
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(1'b0),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_602
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(1'b0),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_606
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(1'b0),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2_610
   (op1_Reg,
    op1_I,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    I3_6,
    opsel1_SPR);
  output op1_Reg;
  output op1_I;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input I3_6;
  input opsel1_SPR;

  wire [0:0]EX_Result;
  wire I3_6;
  wire [0:0]Reg1_Data;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire res_Forward1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00FF00CACACACA)) 
    \Using_FPGA.Native 
       (.I0(Reg1_Data),
        .I1(EX_Result),
        .I2(res_Forward1),
        .I3(I3_6),
        .I4(1'b0),
        .I5(opsel1_SPR),
        .O5(op1_Reg),
        .O6(op1_I));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized10
   (dlmb_M_BE,
    byte_selects_1,
    byte_selects_0,
    isbyte,
    isdoublet);
  output [1:0]dlmb_M_BE;
  input byte_selects_1;
  input byte_selects_0;
  input isbyte;
  input isdoublet;

  wire byte_selects_0;
  wire byte_selects_1;
  wire [1:0]dlmb_M_BE;
  wire isbyte;
  wire isdoublet;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h151F151F454F454F)) 
    \Using_FPGA.Native 
       (.I0(byte_selects_1),
        .I1(byte_selects_0),
        .I2(isbyte),
        .I3(isdoublet),
        .I4(1'b0),
        .I5(1'b1),
        .O5(dlmb_M_BE[0]),
        .O6(dlmb_M_BE[1]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized12
   (sel_Write_Mux_MSB,
    isbyte,
    isdoublet);
  output [1:0]sel_Write_Mux_MSB;
  input isbyte;
  input isdoublet;

  wire isbyte;
  wire isdoublet;
  wire [1:0]sel_Write_Mux_MSB;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h1111111155555555)) 
    \Using_FPGA.Native 
       (.I0(isbyte),
        .I1(isdoublet),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sel_Write_Mux_MSB[0]),
        .O6(sel_Write_Mux_MSB[1]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized14
   (DATA_INB,
    D,
    isbyte);
  output [1:0]DATA_INB;
  input [3:0]D;
  input isbyte;

  wire [3:0]D;
  wire [1:0]DATA_INB;
  wire isbyte;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    \Using_FPGA.Native 
       (.I0(D[3]),
        .I1(D[1]),
        .I2(D[2]),
        .I3(D[0]),
        .I4(isbyte),
        .I5(1'b1),
        .O5(DATA_INB[1]),
        .O6(DATA_INB[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized14_714
   (DATA_INB,
    D,
    isbyte);
  output [1:0]DATA_INB;
  input [3:0]D;
  input isbyte;

  wire [3:0]D;
  wire [1:0]DATA_INB;
  wire isbyte;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    \Using_FPGA.Native 
       (.I0(D[3]),
        .I1(D[1]),
        .I2(D[2]),
        .I3(D[0]),
        .I4(isbyte),
        .I5(1'b1),
        .O5(DATA_INB[1]),
        .O6(DATA_INB[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized14_715
   (DATA_INB,
    D,
    isbyte);
  output [1:0]DATA_INB;
  input [3:0]D;
  input isbyte;

  wire [3:0]D;
  wire [1:0]DATA_INB;
  wire isbyte;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    \Using_FPGA.Native 
       (.I0(D[3]),
        .I1(D[1]),
        .I2(D[2]),
        .I3(D[0]),
        .I4(isbyte),
        .I5(1'b1),
        .O5(DATA_INB[1]),
        .O6(DATA_INB[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized14_716
   (DATA_INB,
    D,
    isbyte);
  output [1:0]DATA_INB;
  input [3:0]D;
  input isbyte;

  wire [3:0]D;
  wire [1:0]DATA_INB;
  wire isbyte;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    \Using_FPGA.Native 
       (.I0(D[3]),
        .I1(D[1]),
        .I2(D[2]),
        .I3(D[0]),
        .I4(isbyte),
        .I5(1'b1),
        .O5(DATA_INB[1]),
        .O6(DATA_INB[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized14_717
   (DATA_INB,
    D,
    sel_Write_Mux_MSB);
  output [1:0]DATA_INB;
  input [3:0]D;
  input [1:0]sel_Write_Mux_MSB;

  wire [3:0]D;
  wire [1:0]DATA_INB;
  wire [1:0]sel_Write_Mux_MSB;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    \Using_FPGA.Native 
       (.I0(D[0]),
        .I1(D[2]),
        .I2(D[1]),
        .I3(D[3]),
        .I4(sel_Write_Mux_MSB[1]),
        .I5(sel_Write_Mux_MSB[0]),
        .O5(DATA_INB[0]),
        .O6(DATA_INB[1]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized14_718
   (DATA_INB,
    D,
    sel_Write_Mux_MSB);
  output [1:0]DATA_INB;
  input [3:0]D;
  input [1:0]sel_Write_Mux_MSB;

  wire [3:0]D;
  wire [1:0]DATA_INB;
  wire [1:0]sel_Write_Mux_MSB;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    \Using_FPGA.Native 
       (.I0(D[0]),
        .I1(D[2]),
        .I2(D[1]),
        .I3(D[3]),
        .I4(sel_Write_Mux_MSB[1]),
        .I5(sel_Write_Mux_MSB[0]),
        .O5(DATA_INB[0]),
        .O6(DATA_INB[1]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized14_719
   (DATA_INB,
    D,
    sel_Write_Mux_MSB);
  output [1:0]DATA_INB;
  input [3:0]D;
  input [1:0]sel_Write_Mux_MSB;

  wire [3:0]D;
  wire [1:0]DATA_INB;
  wire [1:0]sel_Write_Mux_MSB;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    \Using_FPGA.Native 
       (.I0(D[0]),
        .I1(D[2]),
        .I2(D[1]),
        .I3(D[3]),
        .I4(sel_Write_Mux_MSB[1]),
        .I5(sel_Write_Mux_MSB[0]),
        .O5(DATA_INB[0]),
        .O6(DATA_INB[1]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized14_720
   (DATA_INB,
    D,
    sel_Write_Mux_MSB);
  output [1:0]DATA_INB;
  input [3:0]D;
  input [1:0]sel_Write_Mux_MSB;

  wire [3:0]D;
  wire [1:0]DATA_INB;
  wire [1:0]sel_Write_Mux_MSB;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    \Using_FPGA.Native 
       (.I0(D[0]),
        .I1(D[2]),
        .I2(D[1]),
        .I3(D[3]),
        .I4(sel_Write_Mux_MSB[1]),
        .I5(sel_Write_Mux_MSB[0]),
        .O5(DATA_INB[0]),
        .O6(DATA_INB[1]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized14_721
   (DATA_INB,
    D,
    sel_Write_Mux_MSB);
  output [1:0]DATA_INB;
  input [3:0]D;
  input [1:0]sel_Write_Mux_MSB;

  wire [3:0]D;
  wire [1:0]DATA_INB;
  wire [1:0]sel_Write_Mux_MSB;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    \Using_FPGA.Native 
       (.I0(D[0]),
        .I1(D[2]),
        .I2(D[1]),
        .I3(D[3]),
        .I4(sel_Write_Mux_MSB[1]),
        .I5(sel_Write_Mux_MSB[0]),
        .O5(DATA_INB[0]),
        .O6(DATA_INB[1]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized14_722
   (DATA_INB,
    D,
    sel_Write_Mux_MSB);
  output [1:0]DATA_INB;
  input [3:0]D;
  input [1:0]sel_Write_Mux_MSB;

  wire [3:0]D;
  wire [1:0]DATA_INB;
  wire [1:0]sel_Write_Mux_MSB;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    \Using_FPGA.Native 
       (.I0(D[0]),
        .I1(D[2]),
        .I2(D[1]),
        .I3(D[3]),
        .I4(sel_Write_Mux_MSB[1]),
        .I5(sel_Write_Mux_MSB[0]),
        .O5(DATA_INB[0]),
        .O6(DATA_INB[1]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized14_723
   (DATA_INB,
    D,
    sel_Write_Mux_MSB);
  output [1:0]DATA_INB;
  input [3:0]D;
  input [1:0]sel_Write_Mux_MSB;

  wire [3:0]D;
  wire [1:0]DATA_INB;
  wire [1:0]sel_Write_Mux_MSB;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    \Using_FPGA.Native 
       (.I0(D[0]),
        .I1(D[2]),
        .I2(D[1]),
        .I3(D[3]),
        .I4(sel_Write_Mux_MSB[1]),
        .I5(sel_Write_Mux_MSB[0]),
        .O5(DATA_INB[0]),
        .O6(DATA_INB[1]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized14_724
   (DATA_INB,
    D,
    sel_Write_Mux_MSB);
  output [1:0]DATA_INB;
  input [3:0]D;
  input [1:0]sel_Write_Mux_MSB;

  wire [3:0]D;
  wire [1:0]DATA_INB;
  wire [1:0]sel_Write_Mux_MSB;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    \Using_FPGA.Native 
       (.I0(D[0]),
        .I1(D[2]),
        .I2(D[1]),
        .I3(D[3]),
        .I4(sel_Write_Mux_MSB[1]),
        .I5(sel_Write_Mux_MSB[0]),
        .O5(DATA_INB[0]),
        .O6(DATA_INB[1]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized16
   (dlmb_M_ABus,
    low_addr_i_0,
    low_addr_i_1,
    isbyte,
    isdoublet);
  output [1:0]dlmb_M_ABus;
  input low_addr_i_0;
  input low_addr_i_1;
  input isbyte;
  input isdoublet;

  wire [1:0]dlmb_M_ABus;
  wire isbyte;
  wire isdoublet;
  wire low_addr_i_0;
  wire low_addr_i_1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h0CC00CC000A000A0)) 
    \Using_FPGA.Native 
       (.I0(low_addr_i_0),
        .I1(low_addr_i_1),
        .I2(isbyte),
        .I3(isdoublet),
        .I4(1'b0),
        .I5(1'b1),
        .O5(dlmb_M_ABus[0]),
        .O6(dlmb_M_ABus[1]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2
   (DI,
    S,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[22] );
  output DI;
  output S;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[22] ;

  wire DI;
  wire S;
  wire \Using_IO_Bus.IO_Address_reg[22] ;
  wire [0:1]alu_Op;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op[0]),
        .I2(\Using_IO_Bus.IO_Address_reg[22] ),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_651
   (DI,
    S,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[23] );
  output DI;
  output S;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[23] ;

  wire DI;
  wire S;
  wire \Using_IO_Bus.IO_Address_reg[23] ;
  wire [0:1]alu_Op;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op[0]),
        .I2(\Using_IO_Bus.IO_Address_reg[23] ),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_653
   (DI,
    S,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[24] );
  output DI;
  output S;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[24] ;

  wire DI;
  wire S;
  wire \Using_IO_Bus.IO_Address_reg[24] ;
  wire [0:1]alu_Op;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op[0]),
        .I2(\Using_IO_Bus.IO_Address_reg[24] ),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_655
   (DI,
    S,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[25] );
  output DI;
  output S;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[25] ;

  wire DI;
  wire S;
  wire \Using_IO_Bus.IO_Address_reg[25] ;
  wire [0:1]alu_Op;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op[0]),
        .I2(\Using_IO_Bus.IO_Address_reg[25] ),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_657
   (DI,
    S,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[26] );
  output DI;
  output S;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[26] ;

  wire DI;
  wire S;
  wire \Using_IO_Bus.IO_Address_reg[26] ;
  wire [0:1]alu_Op;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op[0]),
        .I2(\Using_IO_Bus.IO_Address_reg[26] ),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_659
   (DI,
    S,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[27] );
  output DI;
  output S;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[27] ;

  wire DI;
  wire S;
  wire \Using_IO_Bus.IO_Address_reg[27] ;
  wire [0:1]alu_Op;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op[0]),
        .I2(\Using_IO_Bus.IO_Address_reg[27] ),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_661
   (DI,
    S,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[28] );
  output DI;
  output S;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[28] ;

  wire DI;
  wire S;
  wire \Using_IO_Bus.IO_Address_reg[28] ;
  wire [0:1]alu_Op;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op[0]),
        .I2(\Using_IO_Bus.IO_Address_reg[28] ),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_663
   (DI,
    S,
    EX_Op2,
    alu_Op,
    EX_Op1);
  output DI;
  output S;
  input EX_Op2;
  input [0:1]alu_Op;
  input EX_Op1;

  wire DI;
  wire EX_Op1;
  wire EX_Op2;
  wire S;
  wire [0:1]alu_Op;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(EX_Op2),
        .I1(alu_Op[0]),
        .I2(EX_Op1),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_665
   (DI,
    S,
    \Using_FPGA.Native_I2 ,
    alu_Op,
    \Using_FPGA.Native_I2_0 );
  output DI;
  output S;
  input \Using_FPGA.Native_I2 ;
  input [0:1]alu_Op;
  input \Using_FPGA.Native_I2_0 ;

  wire DI;
  wire S;
  wire \Using_FPGA.Native_I2 ;
  wire \Using_FPGA.Native_I2_0 ;
  wire [0:1]alu_Op;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_I2 ),
        .I1(alu_Op[0]),
        .I2(\Using_FPGA.Native_I2_0 ),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_667
   (DI,
    S,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[29] );
  output DI;
  output S;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[29] ;

  wire DI;
  wire S;
  wire \Using_IO_Bus.IO_Address_reg[29] ;
  wire [0:1]alu_Op;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op[0]),
        .I2(\Using_IO_Bus.IO_Address_reg[29] ),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_669
   (DI,
    S,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    alu_Op,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 );
  output DI;
  output S;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input [0:1]alu_Op;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ;

  wire DI;
  wire S;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ;
  wire [0:1]alu_Op;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .I1(alu_Op[0]),
        .I2(\Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_671
   (DI,
    S,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    alu_Op,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 );
  output DI;
  output S;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input [0:1]alu_Op;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ;

  wire DI;
  wire S;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ;
  wire [0:1]alu_Op;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .I1(alu_Op[0]),
        .I2(\Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_673
   (DI,
    S,
    op2_C,
    alu_Op,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 );
  output DI;
  output S;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;

  wire DI;
  wire S;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire [0:1]alu_Op;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op[0]),
        .I2(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_675
   (DI,
    S,
    op2_C,
    alu_Op,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 );
  output DI;
  output S;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;

  wire DI;
  wire S;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire [0:1]alu_Op;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op[0]),
        .I2(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_677
   (DI,
    S,
    op2_C,
    alu_Op,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 );
  output DI;
  output S;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;

  wire DI;
  wire S;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire [0:1]alu_Op;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op[0]),
        .I2(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_679
   (DI,
    S,
    op2_C,
    alu_Op,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 );
  output DI;
  output S;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;

  wire DI;
  wire S;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire [0:1]alu_Op;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op[0]),
        .I2(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_681
   (DI,
    S,
    op2_C,
    alu_Op,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 );
  output DI;
  output S;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;

  wire DI;
  wire S;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire [0:1]alu_Op;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op[0]),
        .I2(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_683
   (DI,
    S,
    op2_C,
    alu_Op,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 );
  output DI;
  output S;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;

  wire DI;
  wire S;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire [0:1]alu_Op;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op[0]),
        .I2(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_685
   (DI,
    S,
    op2_C,
    alu_Op,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 );
  output DI;
  output S;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;

  wire DI;
  wire S;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire [0:1]alu_Op;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op[0]),
        .I2(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_687
   (DI,
    S,
    op2_C,
    alu_Op,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 );
  output DI;
  output S;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;

  wire DI;
  wire S;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire [0:1]alu_Op;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op[0]),
        .I2(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_689
   (DI,
    S,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[30] );
  output DI;
  output S;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[30] ;

  wire DI;
  wire S;
  wire \Using_IO_Bus.IO_Address_reg[30] ;
  wire [0:1]alu_Op;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op[0]),
        .I2(\Using_IO_Bus.IO_Address_reg[30] ),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_691
   (DI,
    S,
    op2_C,
    alu_Op,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 );
  output DI;
  output S;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;

  wire DI;
  wire S;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire [0:1]alu_Op;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op[0]),
        .I2(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_693
   (DI,
    S,
    op2_C,
    alu_Op,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 );
  output DI;
  output S;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;

  wire DI;
  wire S;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire [0:1]alu_Op;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op[0]),
        .I2(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_695
   (DI,
    S,
    op2_C,
    alu_Op,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 );
  output DI;
  output S;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;

  wire DI;
  wire S;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire [0:1]alu_Op;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op[0]),
        .I2(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_697
   (DI,
    S,
    op2_C,
    alu_Op,
    Op1_Shift);
  output DI;
  output S;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input Op1_Shift;

  wire DI;
  wire Op1_Shift;
  wire S;
  wire [0:1]alu_Op;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op[0]),
        .I2(Op1_Shift),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_699
   (DI,
    S,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[16] );
  output DI;
  output S;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[16] ;

  wire DI;
  wire S;
  wire \Using_IO_Bus.IO_Address_reg[16] ;
  wire [0:1]alu_Op;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op[0]),
        .I2(\Using_IO_Bus.IO_Address_reg[16] ),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_701
   (DI,
    S,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[17] );
  output DI;
  output S;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[17] ;

  wire DI;
  wire S;
  wire \Using_IO_Bus.IO_Address_reg[17] ;
  wire [0:1]alu_Op;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op[0]),
        .I2(\Using_IO_Bus.IO_Address_reg[17] ),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_703
   (DI,
    S,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[18] );
  output DI;
  output S;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[18] ;

  wire DI;
  wire S;
  wire \Using_IO_Bus.IO_Address_reg[18] ;
  wire [0:1]alu_Op;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op[0]),
        .I2(\Using_IO_Bus.IO_Address_reg[18] ),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_705
   (DI,
    S,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[19] );
  output DI;
  output S;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[19] ;

  wire DI;
  wire S;
  wire \Using_IO_Bus.IO_Address_reg[19] ;
  wire [0:1]alu_Op;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op[0]),
        .I2(\Using_IO_Bus.IO_Address_reg[19] ),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_707
   (DI,
    S,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[20] );
  output DI;
  output S;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[20] ;

  wire DI;
  wire S;
  wire \Using_IO_Bus.IO_Address_reg[20] ;
  wire [0:1]alu_Op;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op[0]),
        .I2(\Using_IO_Bus.IO_Address_reg[20] ),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized2_709
   (DI,
    S,
    op2_C,
    alu_Op,
    \Using_IO_Bus.IO_Address_reg[21] );
  output DI;
  output S;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input \Using_IO_Bus.IO_Address_reg[21] ;

  wire DI;
  wire S;
  wire \Using_IO_Bus.IO_Address_reg[21] ;
  wire [0:1]alu_Op;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op[0]),
        .I2(\Using_IO_Bus.IO_Address_reg[21] ),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized4
   (low_addr_i_0,
    low_addr_i_1,
    EX_Op2,
    Op1_Low,
    \Using_IO_Bus.IO_Address_reg[0] );
  output low_addr_i_0;
  output low_addr_i_1;
  input EX_Op2;
  input [0:1]Op1_Low;
  input \Using_IO_Bus.IO_Address_reg[0] ;

  wire EX_Op2;
  wire [0:1]Op1_Low;
  wire \Using_IO_Bus.IO_Address_reg[0] ;
  wire low_addr_i_0;
  wire low_addr_i_1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h8778877866666666)) 
    \Using_FPGA.Native 
       (.I0(EX_Op2),
        .I1(Op1_Low[1]),
        .I2(\Using_IO_Bus.IO_Address_reg[0] ),
        .I3(Op1_Low[0]),
        .I4(1'b0),
        .I5(1'b1),
        .O5(low_addr_i_0),
        .O6(low_addr_i_1));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized6
   (byte_selects_0,
    byte_selects_1,
    EX_Op2,
    Op1_Low,
    \Using_FPGA.Native_0 );
  output byte_selects_0;
  output byte_selects_1;
  input EX_Op2;
  input [0:1]Op1_Low;
  input \Using_FPGA.Native_0 ;

  wire EX_Op2;
  wire [0:1]Op1_Low;
  wire \Using_FPGA.Native_0 ;
  wire byte_selects_0;
  wire byte_selects_1;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h7887877899996666)) 
    \Using_FPGA.Native 
       (.I0(EX_Op2),
        .I1(Op1_Low[1]),
        .I2(\Using_FPGA.Native_0 ),
        .I3(Op1_Low[0]),
        .I4(1'b1),
        .I5(1'b1),
        .O5(byte_selects_0),
        .O6(byte_selects_1));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized8
   (dlmb_M_BE,
    byte_selects_1,
    byte_selects_0,
    isbyte,
    isdoublet);
  output [1:0]dlmb_M_BE;
  input byte_selects_1;
  input byte_selects_0;
  input isbyte;
  input isdoublet;

  wire byte_selects_0;
  wire byte_selects_1;
  wire [1:0]dlmb_M_BE;
  wire isbyte;
  wire isdoublet;

  (* box_type = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h2A2F2A2F8A8F8A8F)) 
    \Using_FPGA.Native 
       (.I0(byte_selects_1),
        .I1(byte_selects_0),
        .I2(isbyte),
        .I3(isdoublet),
        .I4(1'b0),
        .I5(1'b1),
        .O5(dlmb_M_BE[0]),
        .O6(dlmb_M_BE[1]));
endmodule

module c2c_gth_in_system_ibert_0_MB_MULT_AND
   (sub_Carry,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output sub_Carry;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire sub_Carry;

  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(sub_Carry));
endmodule

(* ORIG_REF_NAME = "MB_MULT_AND" *) 
module c2c_gth_in_system_ibert_0_MB_MULT_AND_711
   (DI,
    op2_C,
    alu_Op);
  output DI;
  input [0:0]op2_C;
  input [0:0]alu_Op;

  wire DI;
  wire [0:0]alu_Op;
  wire [0:0]op2_C;

  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op),
        .O(DI));
endmodule

module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY
   (buffer_Addr_S_I_2,
    \Using_FPGA.Native ,
    LO,
    lopt);
  output buffer_Addr_S_I_2;
  input \Using_FPGA.Native ;
  input LO;
  input lopt;

  wire LO;
  wire \Using_FPGA.Native ;
  wire buffer_Addr_S_I_2;

  assign buffer_Addr_S_I_2 = lopt;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_30
   (LO,
    O,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output LO;
  output O;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input lopt;
  input lopt_1;

  wire LO;
  wire O;
  wire S;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;

  assign LO = lopt;
  assign O = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_32
   (LO,
    O,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    CI,
    lopt,
    lopt_1);
  output LO;
  output O;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input CI;
  input lopt;
  input lopt_1;

  wire CI;
  wire LO;
  wire O;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;

  assign LO = lopt;
  assign O = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_395
   (Carry_Out,
    O,
    S,
    DI,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11,
    lopt_12,
    lopt_13,
    lopt_14,
    lopt_15,
    lopt_16,
    lopt_17,
    lopt_18,
    lopt_19,
    lopt_20,
    lopt_21,
    lopt_22,
    lopt_23,
    lopt_24,
    lopt_25,
    lopt_26,
    lopt_27);
  output Carry_Out;
  output O;
  input S;
  input DI;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;
  output lopt_12;
  output lopt_13;
  output lopt_14;
  output lopt_15;
  output lopt_16;
  output lopt_17;
  output lopt_18;
  output lopt_19;
  input lopt_20;
  input lopt_21;
  input lopt_22;
  input lopt_23;
  input lopt_24;
  input lopt_25;
  input lopt_26;
  input lopt_27;

  wire Carry_Out;
  wire DI;
  wire O;
  wire S;
  wire \^lopt_1 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire \^lopt_12 ;
  wire \^lopt_13 ;
  wire \^lopt_14 ;
  wire \^lopt_15 ;
  wire \^lopt_16 ;
  wire \^lopt_17 ;
  wire \^lopt_18 ;
  wire \^lopt_19 ;
  wire \^lopt_2 ;
  wire \^lopt_20 ;
  wire \^lopt_21 ;
  wire \^lopt_22 ;
  wire \^lopt_23 ;
  wire \^lopt_24 ;
  wire \^lopt_25 ;
  wire \^lopt_26 ;
  wire \^lopt_27 ;
  wire lopt_28;
  wire \^lopt_3 ;
  wire \^lopt_4 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_21  = lopt_20;
  assign \^lopt_22  = lopt_21;
  assign \^lopt_23  = lopt_22;
  assign \^lopt_24  = lopt_23;
  assign \^lopt_25  = lopt_24;
  assign \^lopt_26  = lopt_25;
  assign \^lopt_27  = lopt_26;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt = \^lopt_1 ;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = \^lopt_12 ;
  assign lopt_12 = \^lopt_13 ;
  assign lopt_13 = \^lopt_14 ;
  assign lopt_14 = \^lopt_15 ;
  assign lopt_15 = \^lopt_16 ;
  assign lopt_16 = \^lopt_17 ;
  assign lopt_17 = \^lopt_18 ;
  assign lopt_18 = \^lopt_19 ;
  assign lopt_19 = \^lopt_20 ;
  assign lopt_28 = lopt_27;
  assign lopt_3 = \^lopt_4 ;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(CARRY4)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY8 \Using_FPGA.Native_I1_CARRY4_CARRY8 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\^lopt_13 ,\^lopt_14 ,\^lopt_15 ,\^lopt_16 ,\^lopt_7 ,\^lopt_4 ,\^lopt_1 ,Carry_Out}),
        .DI({\^lopt_21 ,\^lopt_22 ,\^lopt_23 ,\^lopt_24 ,\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({\^lopt_17 ,\^lopt_18 ,\^lopt_19 ,\^lopt_20 ,\^lopt_12 ,\^lopt_11 ,\^lopt_10 ,O}),
        .S({\^lopt_25 ,\^lopt_26 ,\^lopt_27 ,lopt_28,\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_398
   (Carry_Out,
    O,
    S,
    LO,
    lopt,
    lopt_1,
    lopt_2);
  output Carry_Out;
  output O;
  input S;
  input LO;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire Carry_Out;
  wire LO;
  wire O;
  wire S;

  assign Carry_Out = lopt;
  assign O = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_403
   (Carry_Out,
    O,
    S,
    LO,
    lopt,
    lopt_1,
    lopt_2);
  output Carry_Out;
  output O;
  input S;
  input LO;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire Carry_Out;
  wire LO;
  wire O;
  wire S;

  assign Carry_Out = lopt;
  assign O = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_408
   (Carry_Out,
    O,
    S,
    LO,
    lopt,
    lopt_1,
    lopt_2);
  output Carry_Out;
  output O;
  input S;
  input LO;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire Carry_Out;
  wire LO;
  wire O;
  wire S;

  assign Carry_Out = lopt;
  assign O = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_413
   (Carry_Out,
    O,
    S,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11,
    lopt_12,
    lopt_13,
    lopt_14,
    lopt_15,
    lopt_16,
    lopt_17,
    lopt_18,
    lopt_19,
    lopt_20);
  output Carry_Out;
  output O;
  input S;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;
  input lopt_12;
  input lopt_13;
  input lopt_14;
  input lopt_15;
  input lopt_16;
  input lopt_17;
  input lopt_18;
  input lopt_19;
  output lopt_20;

  wire \<const0> ;
  wire Carry_Out;
  wire LO;
  wire O;
  wire S;
  wire \^lopt_1 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire \^lopt_12 ;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_4 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;

  assign Carry_Out = lopt_15;
  assign O = lopt_19;
  assign \^lopt_1  = lopt_14;
  assign \^lopt_10  = lopt_18;
  assign \^lopt_11  = lopt_17;
  assign \^lopt_12  = lopt_16;
  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_4  = lopt_13;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_7  = lopt_12;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt = \^lopt_1 ;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = \^lopt_12 ;
  assign lopt_20 = \<const0> ;
  assign lopt_3 = \^lopt_4 ;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_418
   (Carry_Out,
    O,
    S,
    LO,
    lopt,
    lopt_1,
    lopt_2);
  output Carry_Out;
  output O;
  input S;
  input LO;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire Carry_Out;
  wire LO;
  wire O;
  wire S;

  assign Carry_Out = lopt;
  assign O = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_423
   (Carry_Out,
    O,
    S,
    LO,
    lopt,
    lopt_1,
    lopt_2);
  output Carry_Out;
  output O;
  input S;
  input LO;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire Carry_Out;
  wire LO;
  wire O;
  wire S;

  assign Carry_Out = lopt;
  assign O = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_428
   (Carry_Out,
    O,
    S,
    LO,
    lopt,
    lopt_1,
    lopt_2);
  output Carry_Out;
  output O;
  input S;
  input LO;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire Carry_Out;
  wire LO;
  wire O;
  wire S;

  assign Carry_Out = lopt;
  assign O = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_433
   (Carry_Out,
    O,
    S,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11,
    lopt_12,
    lopt_13,
    lopt_14,
    lopt_15,
    lopt_16,
    lopt_17);
  output Carry_Out;
  output O;
  input S;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;
  output lopt_12;
  output lopt_13;
  output lopt_14;
  input lopt_15;
  input lopt_16;
  input lopt_17;

  wire Carry_Out;
  wire LO;
  wire O;
  wire S;
  wire \^lopt_1 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire \^lopt_12 ;
  wire \^lopt_13 ;
  wire \^lopt_14 ;
  wire \^lopt_15 ;
  wire \^lopt_16 ;
  wire \^lopt_17 ;
  wire lopt_18;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_4 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [7:5]\NLW_Using_FPGA.Native_I1_CARRY4_CARRY8_CO_UNCONNECTED ;
  wire [7:5]\NLW_Using_FPGA.Native_I1_CARRY4_CARRY8_DI_UNCONNECTED ;
  wire [7:6]\NLW_Using_FPGA.Native_I1_CARRY4_CARRY8_O_UNCONNECTED ;
  wire [7:6]\NLW_Using_FPGA.Native_I1_CARRY4_CARRY8_S_UNCONNECTED ;

  assign \^lopt_16  = lopt_15;
  assign \^lopt_17  = lopt_16;
  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt = \^lopt_1 ;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = \^lopt_12 ;
  assign lopt_12 = \^lopt_13 ;
  assign lopt_13 = \^lopt_14 ;
  assign lopt_14 = \^lopt_15 ;
  assign lopt_18 = lopt_17;
  assign lopt_3 = \^lopt_4 ;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(CARRY4)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY8 \Using_FPGA.Native_I1_CARRY4_CARRY8 
       (.CI(LO),
        .CI_TOP(1'b0),
        .CO({\NLW_Using_FPGA.Native_I1_CARRY4_CARRY8_CO_UNCONNECTED [7:5],\^lopt_13 ,\^lopt_7 ,\^lopt_4 ,\^lopt_1 ,Carry_Out}),
        .DI({\NLW_Using_FPGA.Native_I1_CARRY4_CARRY8_DI_UNCONNECTED [7:5],\^lopt_16 ,\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O({\NLW_Using_FPGA.Native_I1_CARRY4_CARRY8_O_UNCONNECTED [7:6],\^lopt_14 ,\^lopt_15 ,\^lopt_12 ,\^lopt_11 ,\^lopt_10 ,O}),
        .S({\NLW_Using_FPGA.Native_I1_CARRY4_CARRY8_S_UNCONNECTED [7:6],\^lopt_17 ,lopt_18,\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_438
   (Carry_Out,
    O,
    S,
    LO,
    lopt,
    lopt_1,
    lopt_2);
  output Carry_Out;
  output O;
  input S;
  input LO;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire Carry_Out;
  wire LO;
  wire O;
  wire S;

  assign Carry_Out = lopt;
  assign O = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_443
   (Carry_Out,
    O,
    S,
    LO,
    lopt,
    lopt_1,
    lopt_2);
  output Carry_Out;
  output O;
  input S;
  input LO;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire Carry_Out;
  wire LO;
  wire O;
  wire S;

  assign Carry_Out = lopt;
  assign O = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_448
   (Carry_Out,
    O,
    S,
    LO,
    lopt,
    lopt_1,
    lopt_2);
  output Carry_Out;
  output O;
  input S;
  input LO;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire Carry_Out;
  wire LO;
  wire O;
  wire S;

  assign Carry_Out = lopt;
  assign O = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_453
   (Carry_Out,
    O,
    S,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5);
  output Carry_Out;
  output O;
  input S;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  input lopt_3;
  input lopt_4;
  output lopt_5;

  wire \<const0> ;
  wire Carry_Out;
  wire LO;
  wire O;
  wire S;
  wire \^lopt_1 ;
  wire \^lopt_2 ;

  assign Carry_Out = lopt_2;
  assign O = lopt_4;
  assign \^lopt_1  = lopt_3;
  assign \^lopt_2  = lopt_1;
  assign lopt = \^lopt_1 ;
  assign lopt_5 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_458
   (pc_Sum,
    xor_Sum,
    LO,
    lopt);
  output pc_Sum;
  input xor_Sum;
  input LO;
  input lopt;

  wire LO;
  wire pc_Sum;
  wire xor_Sum;

  assign pc_Sum = lopt;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_650
   (EX_CarryOut,
    dlmb_M_ABus,
    S,
    DI,
    EX_CarryIn,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input S;
  input DI;
  input EX_CarryIn;
  input lopt;
  input lopt_1;

  wire DI;
  wire EX_CarryIn;
  wire EX_CarryOut;
  wire S;
  wire [0:0]dlmb_M_ABus;

  assign EX_CarryOut = lopt;
  assign dlmb_M_ABus = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_652
   (EX_CarryOut,
    dlmb_M_ABus,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11,
    lopt_12,
    lopt_13,
    lopt_14,
    lopt_15,
    lopt_16,
    lopt_17,
    lopt_18,
    lopt_19,
    lopt_20,
    lopt_21,
    lopt_22,
    lopt_23,
    lopt_24,
    lopt_25,
    lopt_26,
    lopt_27);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;
  output lopt_12;
  output lopt_13;
  output lopt_14;
  output lopt_15;
  output lopt_16;
  output lopt_17;
  output lopt_18;
  output lopt_19;
  input lopt_20;
  input lopt_21;
  input lopt_22;
  input lopt_23;
  input lopt_24;
  input lopt_25;
  input lopt_26;
  input lopt_27;

  wire DI;
  wire EX_CarryOut;
  wire LO;
  wire S;
  wire [0:0]dlmb_M_ABus;
  wire \^lopt_1 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire \^lopt_12 ;
  wire \^lopt_13 ;
  wire \^lopt_14 ;
  wire \^lopt_15 ;
  wire \^lopt_16 ;
  wire \^lopt_17 ;
  wire \^lopt_18 ;
  wire \^lopt_19 ;
  wire \^lopt_2 ;
  wire \^lopt_20 ;
  wire \^lopt_21 ;
  wire \^lopt_22 ;
  wire \^lopt_23 ;
  wire \^lopt_24 ;
  wire \^lopt_25 ;
  wire \^lopt_26 ;
  wire \^lopt_27 ;
  wire lopt_28;
  wire \^lopt_3 ;
  wire \^lopt_4 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_21  = lopt_20;
  assign \^lopt_22  = lopt_21;
  assign \^lopt_23  = lopt_22;
  assign \^lopt_24  = lopt_23;
  assign \^lopt_25  = lopt_24;
  assign \^lopt_26  = lopt_25;
  assign \^lopt_27  = lopt_26;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt = \^lopt_1 ;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = \^lopt_12 ;
  assign lopt_12 = \^lopt_13 ;
  assign lopt_13 = \^lopt_14 ;
  assign lopt_14 = \^lopt_15 ;
  assign lopt_15 = \^lopt_16 ;
  assign lopt_16 = \^lopt_17 ;
  assign lopt_17 = \^lopt_18 ;
  assign lopt_18 = \^lopt_19 ;
  assign lopt_19 = \^lopt_20 ;
  assign lopt_28 = lopt_27;
  assign lopt_3 = \^lopt_4 ;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(CARRY4)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY8 \Using_FPGA.Native_I1_CARRY4_CARRY8 
       (.CI(LO),
        .CI_TOP(1'b0),
        .CO({\^lopt_13 ,\^lopt_14 ,\^lopt_15 ,\^lopt_16 ,\^lopt_7 ,\^lopt_4 ,\^lopt_1 ,EX_CarryOut}),
        .DI({\^lopt_21 ,\^lopt_22 ,\^lopt_23 ,\^lopt_24 ,\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({\^lopt_17 ,\^lopt_18 ,\^lopt_19 ,\^lopt_20 ,\^lopt_12 ,\^lopt_11 ,\^lopt_10 ,dlmb_M_ABus}),
        .S({\^lopt_25 ,\^lopt_26 ,\^lopt_27 ,lopt_28,\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_654
   (EX_CarryOut,
    dlmb_M_ABus,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire DI;
  wire EX_CarryOut;
  wire LO;
  wire S;
  wire [0:0]dlmb_M_ABus;

  assign EX_CarryOut = lopt;
  assign dlmb_M_ABus = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_656
   (EX_CarryOut,
    dlmb_M_ABus,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire DI;
  wire EX_CarryOut;
  wire LO;
  wire S;
  wire [0:0]dlmb_M_ABus;

  assign EX_CarryOut = lopt;
  assign dlmb_M_ABus = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_658
   (EX_CarryOut,
    dlmb_M_ABus,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire DI;
  wire EX_CarryOut;
  wire LO;
  wire S;
  wire [0:0]dlmb_M_ABus;

  assign EX_CarryOut = lopt;
  assign dlmb_M_ABus = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_660
   (EX_CarryOut,
    dlmb_M_ABus,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11,
    lopt_12,
    lopt_13,
    lopt_14,
    lopt_15,
    lopt_16,
    lopt_17,
    lopt_18,
    lopt_19);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;
  input lopt_12;
  input lopt_13;
  input lopt_14;
  input lopt_15;
  input lopt_16;
  input lopt_17;
  input lopt_18;
  input lopt_19;

  wire DI;
  wire EX_CarryOut;
  wire LO;
  wire S;
  wire [0:0]dlmb_M_ABus;
  wire \^lopt_1 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire \^lopt_12 ;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_4 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;

  assign EX_CarryOut = lopt_15;
  assign \^lopt_1  = lopt_14;
  assign \^lopt_10  = lopt_18;
  assign \^lopt_11  = lopt_17;
  assign \^lopt_12  = lopt_16;
  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_4  = lopt_13;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_7  = lopt_12;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign dlmb_M_ABus = lopt_19;
  assign lopt = \^lopt_1 ;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = \^lopt_12 ;
  assign lopt_3 = \^lopt_4 ;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_662
   (EX_CarryOut,
    dlmb_M_ABus,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire DI;
  wire EX_CarryOut;
  wire LO;
  wire S;
  wire [0:0]dlmb_M_ABus;

  assign EX_CarryOut = lopt;
  assign dlmb_M_ABus = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_664
   (EX_CarryOut,
    \Using_FPGA.Native ,
    S,
    DI,
    EX_CarryIn,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output \Using_FPGA.Native ;
  input S;
  input DI;
  input EX_CarryIn;
  input lopt;
  input lopt_1;

  wire DI;
  wire EX_CarryIn;
  wire EX_CarryOut;
  wire S;
  wire \Using_FPGA.Native ;

  assign EX_CarryOut = lopt;
  assign \Using_FPGA.Native  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_666
   (EX_CarryOut,
    \Using_FPGA.Native ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output \Using_FPGA.Native ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire DI;
  wire EX_CarryOut;
  wire LO;
  wire S;
  wire \Using_FPGA.Native ;

  assign EX_CarryOut = lopt;
  assign \Using_FPGA.Native  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_668
   (EX_CarryOut,
    dlmb_M_ABus,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire DI;
  wire EX_CarryOut;
  wire LO;
  wire S;
  wire [0:0]dlmb_M_ABus;

  assign EX_CarryOut = lopt;
  assign dlmb_M_ABus = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_670
   (EX_CarryOut,
    dlmb_M_ABus,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire DI;
  wire EX_CarryOut;
  wire LO;
  wire S;
  wire [0:0]dlmb_M_ABus;

  assign EX_CarryOut = lopt;
  assign dlmb_M_ABus = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_672
   (EX_CarryOut,
    dlmb_M_ABus,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11,
    lopt_12,
    lopt_13,
    lopt_14,
    lopt_15,
    lopt_16,
    lopt_17,
    lopt_18,
    lopt_19);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;
  input lopt_12;
  input lopt_13;
  input lopt_14;
  input lopt_15;
  input lopt_16;
  input lopt_17;
  input lopt_18;
  input lopt_19;

  wire DI;
  wire EX_CarryOut;
  wire LO;
  wire S;
  wire [0:0]dlmb_M_ABus;
  wire \^lopt_1 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire \^lopt_12 ;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_4 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;

  assign EX_CarryOut = lopt_15;
  assign \^lopt_1  = lopt_14;
  assign \^lopt_10  = lopt_18;
  assign \^lopt_11  = lopt_17;
  assign \^lopt_12  = lopt_16;
  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_4  = lopt_13;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_7  = lopt_12;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign dlmb_M_ABus = lopt_19;
  assign lopt = \^lopt_1 ;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = \^lopt_12 ;
  assign lopt_3 = \^lopt_4 ;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_674
   (EX_CarryOut,
    dlmb_M_ABus,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire DI;
  wire EX_CarryOut;
  wire LO;
  wire S;
  wire [0:0]dlmb_M_ABus;

  assign EX_CarryOut = lopt;
  assign dlmb_M_ABus = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_676
   (EX_CarryOut,
    dlmb_M_ABus,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire DI;
  wire EX_CarryOut;
  wire LO;
  wire S;
  wire [0:0]dlmb_M_ABus;

  assign EX_CarryOut = lopt;
  assign dlmb_M_ABus = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_678
   (EX_CarryOut,
    dlmb_M_ABus,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire DI;
  wire EX_CarryOut;
  wire LO;
  wire S;
  wire [0:0]dlmb_M_ABus;

  assign EX_CarryOut = lopt;
  assign dlmb_M_ABus = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_680
   (EX_CarryOut,
    dlmb_M_ABus,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11,
    lopt_12,
    lopt_13,
    lopt_14,
    lopt_15,
    lopt_16,
    lopt_17,
    lopt_18,
    lopt_19,
    lopt_20,
    lopt_21,
    lopt_22,
    lopt_23,
    lopt_24,
    lopt_25,
    lopt_26,
    lopt_27);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;
  output lopt_12;
  output lopt_13;
  output lopt_14;
  output lopt_15;
  output lopt_16;
  output lopt_17;
  output lopt_18;
  output lopt_19;
  input lopt_20;
  input lopt_21;
  input lopt_22;
  input lopt_23;
  input lopt_24;
  input lopt_25;
  input lopt_26;
  input lopt_27;

  wire DI;
  wire EX_CarryOut;
  wire LO;
  wire S;
  wire [0:0]dlmb_M_ABus;
  wire \^lopt_1 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire \^lopt_12 ;
  wire \^lopt_13 ;
  wire \^lopt_14 ;
  wire \^lopt_15 ;
  wire \^lopt_16 ;
  wire \^lopt_17 ;
  wire \^lopt_18 ;
  wire \^lopt_19 ;
  wire \^lopt_2 ;
  wire \^lopt_20 ;
  wire \^lopt_21 ;
  wire \^lopt_22 ;
  wire \^lopt_23 ;
  wire \^lopt_24 ;
  wire \^lopt_25 ;
  wire \^lopt_26 ;
  wire \^lopt_27 ;
  wire lopt_28;
  wire \^lopt_3 ;
  wire \^lopt_4 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_21  = lopt_20;
  assign \^lopt_22  = lopt_21;
  assign \^lopt_23  = lopt_22;
  assign \^lopt_24  = lopt_23;
  assign \^lopt_25  = lopt_24;
  assign \^lopt_26  = lopt_25;
  assign \^lopt_27  = lopt_26;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt = \^lopt_1 ;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = \^lopt_12 ;
  assign lopt_12 = \^lopt_13 ;
  assign lopt_13 = \^lopt_14 ;
  assign lopt_14 = \^lopt_15 ;
  assign lopt_15 = \^lopt_16 ;
  assign lopt_16 = \^lopt_17 ;
  assign lopt_17 = \^lopt_18 ;
  assign lopt_18 = \^lopt_19 ;
  assign lopt_19 = \^lopt_20 ;
  assign lopt_28 = lopt_27;
  assign lopt_3 = \^lopt_4 ;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(CARRY4)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY8 \Using_FPGA.Native_I1_CARRY4_CARRY8 
       (.CI(LO),
        .CI_TOP(1'b0),
        .CO({\^lopt_13 ,\^lopt_14 ,\^lopt_15 ,\^lopt_16 ,\^lopt_7 ,\^lopt_4 ,\^lopt_1 ,EX_CarryOut}),
        .DI({\^lopt_21 ,\^lopt_22 ,\^lopt_23 ,\^lopt_24 ,\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({\^lopt_17 ,\^lopt_18 ,\^lopt_19 ,\^lopt_20 ,\^lopt_12 ,\^lopt_11 ,\^lopt_10 ,dlmb_M_ABus}),
        .S({\^lopt_25 ,\^lopt_26 ,\^lopt_27 ,lopt_28,\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_682
   (EX_CarryOut,
    dlmb_M_ABus,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire DI;
  wire EX_CarryOut;
  wire LO;
  wire S;
  wire [0:0]dlmb_M_ABus;

  assign EX_CarryOut = lopt;
  assign dlmb_M_ABus = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_684
   (EX_CarryOut,
    dlmb_M_ABus,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire DI;
  wire EX_CarryOut;
  wire LO;
  wire S;
  wire [0:0]dlmb_M_ABus;

  assign EX_CarryOut = lopt;
  assign dlmb_M_ABus = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_686
   (EX_CarryOut,
    dlmb_M_ABus,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire DI;
  wire EX_CarryOut;
  wire LO;
  wire S;
  wire [0:0]dlmb_M_ABus;

  assign EX_CarryOut = lopt;
  assign dlmb_M_ABus = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_688
   (EX_CarryOut,
    dlmb_M_ABus,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11,
    lopt_12,
    lopt_13,
    lopt_14,
    lopt_15,
    lopt_16,
    lopt_17,
    lopt_18,
    lopt_19);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;
  input lopt_12;
  input lopt_13;
  input lopt_14;
  input lopt_15;
  input lopt_16;
  input lopt_17;
  input lopt_18;
  input lopt_19;

  wire DI;
  wire EX_CarryOut;
  wire LO;
  wire S;
  wire [0:0]dlmb_M_ABus;
  wire \^lopt_1 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire \^lopt_12 ;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_4 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;

  assign EX_CarryOut = lopt_15;
  assign \^lopt_1  = lopt_14;
  assign \^lopt_10  = lopt_18;
  assign \^lopt_11  = lopt_17;
  assign \^lopt_12  = lopt_16;
  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_4  = lopt_13;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_7  = lopt_12;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign dlmb_M_ABus = lopt_19;
  assign lopt = \^lopt_1 ;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = \^lopt_12 ;
  assign lopt_3 = \^lopt_4 ;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_690
   (EX_CarryOut,
    dlmb_M_ABus,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire DI;
  wire EX_CarryOut;
  wire LO;
  wire S;
  wire [0:0]dlmb_M_ABus;

  assign EX_CarryOut = lopt;
  assign dlmb_M_ABus = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_692
   (EX_CarryOut,
    dlmb_M_ABus,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire DI;
  wire EX_CarryOut;
  wire LO;
  wire S;
  wire [0:0]dlmb_M_ABus;

  assign EX_CarryOut = lopt;
  assign dlmb_M_ABus = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_694
   (EX_CarryOut,
    dlmb_M_ABus,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire DI;
  wire EX_CarryOut;
  wire LO;
  wire S;
  wire [0:0]dlmb_M_ABus;

  assign EX_CarryOut = lopt;
  assign dlmb_M_ABus = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_696
   (EX_CarryOut,
    dlmb_M_ABus,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire DI;
  wire EX_CarryOut;
  wire LO;
  wire S;
  wire [0:0]dlmb_M_ABus;

  assign EX_CarryOut = lopt;
  assign dlmb_M_ABus = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_698
   (EX_CarryOut,
    dlmb_M_ABus,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11,
    lopt_12,
    lopt_13,
    lopt_14,
    lopt_15,
    lopt_16,
    lopt_17,
    lopt_18,
    lopt_19,
    lopt_20,
    lopt_21,
    lopt_22,
    lopt_23,
    lopt_24,
    lopt_25,
    lopt_26,
    lopt_27);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;
  output lopt_12;
  output lopt_13;
  output lopt_14;
  output lopt_15;
  output lopt_16;
  output lopt_17;
  output lopt_18;
  output lopt_19;
  input lopt_20;
  input lopt_21;
  input lopt_22;
  input lopt_23;
  input lopt_24;
  input lopt_25;
  input lopt_26;
  input lopt_27;

  wire DI;
  wire EX_CarryOut;
  wire LO;
  wire S;
  wire [0:0]dlmb_M_ABus;
  wire \^lopt_1 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire \^lopt_12 ;
  wire \^lopt_13 ;
  wire \^lopt_14 ;
  wire \^lopt_15 ;
  wire \^lopt_16 ;
  wire \^lopt_17 ;
  wire \^lopt_18 ;
  wire \^lopt_19 ;
  wire \^lopt_2 ;
  wire \^lopt_20 ;
  wire \^lopt_21 ;
  wire \^lopt_22 ;
  wire \^lopt_23 ;
  wire \^lopt_24 ;
  wire \^lopt_25 ;
  wire \^lopt_26 ;
  wire \^lopt_27 ;
  wire lopt_28;
  wire \^lopt_3 ;
  wire \^lopt_4 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_21  = lopt_20;
  assign \^lopt_22  = lopt_21;
  assign \^lopt_23  = lopt_22;
  assign \^lopt_24  = lopt_23;
  assign \^lopt_25  = lopt_24;
  assign \^lopt_26  = lopt_25;
  assign \^lopt_27  = lopt_26;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt = \^lopt_1 ;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = \^lopt_12 ;
  assign lopt_12 = \^lopt_13 ;
  assign lopt_13 = \^lopt_14 ;
  assign lopt_14 = \^lopt_15 ;
  assign lopt_15 = \^lopt_16 ;
  assign lopt_16 = \^lopt_17 ;
  assign lopt_17 = \^lopt_18 ;
  assign lopt_18 = \^lopt_19 ;
  assign lopt_19 = \^lopt_20 ;
  assign lopt_28 = lopt_27;
  assign lopt_3 = \^lopt_4 ;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(CARRY4)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY8 \Using_FPGA.Native_I1_CARRY4_CARRY8 
       (.CI(LO),
        .CI_TOP(1'b0),
        .CO({\^lopt_13 ,\^lopt_14 ,\^lopt_15 ,\^lopt_16 ,\^lopt_7 ,\^lopt_4 ,\^lopt_1 ,EX_CarryOut}),
        .DI({\^lopt_21 ,\^lopt_22 ,\^lopt_23 ,\^lopt_24 ,\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({\^lopt_17 ,\^lopt_18 ,\^lopt_19 ,\^lopt_20 ,\^lopt_12 ,\^lopt_11 ,\^lopt_10 ,dlmb_M_ABus}),
        .S({\^lopt_25 ,\^lopt_26 ,\^lopt_27 ,lopt_28,\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_700
   (EX_CarryOut,
    dlmb_M_ABus,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire DI;
  wire EX_CarryOut;
  wire LO;
  wire S;
  wire [0:0]dlmb_M_ABus;

  assign EX_CarryOut = lopt;
  assign dlmb_M_ABus = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_702
   (EX_CarryOut,
    dlmb_M_ABus,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire DI;
  wire EX_CarryOut;
  wire LO;
  wire S;
  wire [0:0]dlmb_M_ABus;

  assign EX_CarryOut = lopt;
  assign dlmb_M_ABus = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_704
   (EX_CarryOut,
    dlmb_M_ABus,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire DI;
  wire EX_CarryOut;
  wire LO;
  wire S;
  wire [0:0]dlmb_M_ABus;

  assign EX_CarryOut = lopt;
  assign dlmb_M_ABus = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_706
   (EX_CarryOut,
    dlmb_M_ABus,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11,
    lopt_12,
    lopt_13,
    lopt_14,
    lopt_15,
    lopt_16,
    lopt_17,
    lopt_18,
    lopt_19);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;
  input lopt_12;
  input lopt_13;
  input lopt_14;
  input lopt_15;
  input lopt_16;
  input lopt_17;
  input lopt_18;
  input lopt_19;

  wire DI;
  wire EX_CarryOut;
  wire LO;
  wire S;
  wire [0:0]dlmb_M_ABus;
  wire \^lopt_1 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire \^lopt_12 ;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_4 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;

  assign EX_CarryOut = lopt_15;
  assign \^lopt_1  = lopt_14;
  assign \^lopt_10  = lopt_18;
  assign \^lopt_11  = lopt_17;
  assign \^lopt_12  = lopt_16;
  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_4  = lopt_13;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_7  = lopt_12;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign dlmb_M_ABus = lopt_19;
  assign lopt = \^lopt_1 ;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = \^lopt_12 ;
  assign lopt_3 = \^lopt_4 ;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_708
   (EX_CarryOut,
    dlmb_M_ABus,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire DI;
  wire EX_CarryOut;
  wire LO;
  wire S;
  wire [0:0]dlmb_M_ABus;

  assign EX_CarryOut = lopt;
  assign dlmb_M_ABus = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_710
   (EX_CarryOut,
    dlmb_M_ABus,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]dlmb_M_ABus;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire DI;
  wire EX_CarryOut;
  wire LO;
  wire S;
  wire [0:0]dlmb_M_ABus;

  assign EX_CarryOut = lopt;
  assign dlmb_M_ABus = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_712
   (lmb_select,
    O,
    \Using_FPGA.Native ,
    S,
    DI,
    CI,
    lopt,
    lopt_1);
  output lmb_select;
  output O;
  output \Using_FPGA.Native ;
  input S;
  input DI;
  input CI;
  input lopt;
  input lopt_1;

  wire CI;
  wire DI;
  wire O;
  wire S;
  wire \Using_FPGA.Native ;
  wire lmb_select;

  assign O = lopt_1;
  assign \Using_FPGA.Native  = lopt;
  LUT1 #(
    .INIT(2'h1)) 
    \No_ECC.Sl_Rdy_i_1 
       (.I0(O),
        .O(lmb_select));
endmodule

module c2c_gth_in_system_ibert_0_MB_RAM32X1D
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_319
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_i_2__27_0 ,
    imm_Value,
    exception_kind,
    res_Forward2);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_i_2__27_0 ;
  input [4:0]imm_Value;
  input [0:0]exception_kind;
  input res_Forward2;

  wire [0:0]EX_Result;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_i_2__27_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [9:9]reg2_Data;
  wire res_Forward2;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_i_2__27_0 [4]),
        .A1(\Using_FPGA.Native_i_2__27_0 [3]),
        .A2(\Using_FPGA.Native_i_2__27_0 [2]),
        .A3(\Using_FPGA.Native_i_2__27_0 [1]),
        .A4(\Using_FPGA.Native_i_2__27_0 [0]),
        .D(EX_Result),
        .DPO(reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
  LUT4 #(
    .INIT(16'h3202)) 
    \Using_FPGA.Native_i_2__27 
       (.I0(reg2_Data),
        .I1(exception_kind),
        .I2(res_Forward2),
        .I3(EX_Result),
        .O(\Using_FPGA.take_Intr_2nd_Phase_reg ));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_320
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_321
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_i_2__26_0 ,
    imm_Value,
    exception_kind,
    res_Forward2);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_i_2__26_0 ;
  input [4:0]imm_Value;
  input [0:0]exception_kind;
  input res_Forward2;

  wire [0:0]EX_Result;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_i_2__26_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [8:8]reg2_Data;
  wire res_Forward2;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_i_2__26_0 [4]),
        .A1(\Using_FPGA.Native_i_2__26_0 [3]),
        .A2(\Using_FPGA.Native_i_2__26_0 [2]),
        .A3(\Using_FPGA.Native_i_2__26_0 [1]),
        .A4(\Using_FPGA.Native_i_2__26_0 [0]),
        .D(EX_Result),
        .DPO(reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
  LUT4 #(
    .INIT(16'h3202)) 
    \Using_FPGA.Native_i_2__26 
       (.I0(reg2_Data),
        .I1(exception_kind),
        .I2(res_Forward2),
        .I3(EX_Result),
        .O(\Using_FPGA.take_Intr_2nd_Phase_reg ));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_322
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_323
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_i_2__25_0 ,
    imm_Value,
    exception_kind,
    res_Forward2);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_i_2__25_0 ;
  input [4:0]imm_Value;
  input [0:0]exception_kind;
  input res_Forward2;

  wire [0:0]EX_Result;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_i_2__25_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [7:7]reg2_Data;
  wire res_Forward2;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_i_2__25_0 [4]),
        .A1(\Using_FPGA.Native_i_2__25_0 [3]),
        .A2(\Using_FPGA.Native_i_2__25_0 [2]),
        .A3(\Using_FPGA.Native_i_2__25_0 [1]),
        .A4(\Using_FPGA.Native_i_2__25_0 [0]),
        .D(EX_Result),
        .DPO(reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
  LUT4 #(
    .INIT(16'h3202)) 
    \Using_FPGA.Native_i_2__25 
       (.I0(reg2_Data),
        .I1(exception_kind),
        .I2(res_Forward2),
        .I3(EX_Result),
        .O(\Using_FPGA.take_Intr_2nd_Phase_reg ));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_324
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_325
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_i_2__24_0 ,
    imm_Value,
    exception_kind,
    res_Forward2);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_i_2__24_0 ;
  input [4:0]imm_Value;
  input [0:0]exception_kind;
  input res_Forward2;

  wire [0:0]EX_Result;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_i_2__24_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [6:6]reg2_Data;
  wire res_Forward2;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_i_2__24_0 [4]),
        .A1(\Using_FPGA.Native_i_2__24_0 [3]),
        .A2(\Using_FPGA.Native_i_2__24_0 [2]),
        .A3(\Using_FPGA.Native_i_2__24_0 [1]),
        .A4(\Using_FPGA.Native_i_2__24_0 [0]),
        .D(EX_Result),
        .DPO(reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
  LUT4 #(
    .INIT(16'h3202)) 
    \Using_FPGA.Native_i_2__24 
       (.I0(reg2_Data),
        .I1(exception_kind),
        .I2(res_Forward2),
        .I3(EX_Result),
        .O(\Using_FPGA.take_Intr_2nd_Phase_reg ));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_326
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_327
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_i_2__23_0 ,
    imm_Value,
    exception_kind,
    res_Forward2);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_i_2__23_0 ;
  input [4:0]imm_Value;
  input [0:0]exception_kind;
  input res_Forward2;

  wire [0:0]EX_Result;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_i_2__23_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [5:5]reg2_Data;
  wire res_Forward2;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_i_2__23_0 [4]),
        .A1(\Using_FPGA.Native_i_2__23_0 [3]),
        .A2(\Using_FPGA.Native_i_2__23_0 [2]),
        .A3(\Using_FPGA.Native_i_2__23_0 [1]),
        .A4(\Using_FPGA.Native_i_2__23_0 [0]),
        .D(EX_Result),
        .DPO(reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
  LUT4 #(
    .INIT(16'h3202)) 
    \Using_FPGA.Native_i_2__23 
       (.I0(reg2_Data),
        .I1(exception_kind),
        .I2(res_Forward2),
        .I3(EX_Result),
        .O(\Using_FPGA.take_Intr_2nd_Phase_reg ));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_328
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_329
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_i_2__22_0 ,
    imm_Value,
    exception_kind,
    res_Forward2);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_i_2__22_0 ;
  input [4:0]imm_Value;
  input [0:0]exception_kind;
  input res_Forward2;

  wire [0:0]EX_Result;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_i_2__22_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [4:4]reg2_Data;
  wire res_Forward2;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_i_2__22_0 [4]),
        .A1(\Using_FPGA.Native_i_2__22_0 [3]),
        .A2(\Using_FPGA.Native_i_2__22_0 [2]),
        .A3(\Using_FPGA.Native_i_2__22_0 [1]),
        .A4(\Using_FPGA.Native_i_2__22_0 [0]),
        .D(EX_Result),
        .DPO(reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
  LUT4 #(
    .INIT(16'h3202)) 
    \Using_FPGA.Native_i_2__22 
       (.I0(reg2_Data),
        .I1(exception_kind),
        .I2(res_Forward2),
        .I3(EX_Result),
        .O(\Using_FPGA.take_Intr_2nd_Phase_reg ));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_330
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_331
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_i_2__21_0 ,
    imm_Value,
    exception_kind,
    res_Forward2);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_i_2__21_0 ;
  input [4:0]imm_Value;
  input [0:0]exception_kind;
  input res_Forward2;

  wire [0:0]EX_Result;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_i_2__21_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [3:3]reg2_Data;
  wire res_Forward2;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_i_2__21_0 [4]),
        .A1(\Using_FPGA.Native_i_2__21_0 [3]),
        .A2(\Using_FPGA.Native_i_2__21_0 [2]),
        .A3(\Using_FPGA.Native_i_2__21_0 [1]),
        .A4(\Using_FPGA.Native_i_2__21_0 [0]),
        .D(EX_Result),
        .DPO(reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
  LUT4 #(
    .INIT(16'h3202)) 
    \Using_FPGA.Native_i_2__21 
       (.I0(reg2_Data),
        .I1(exception_kind),
        .I2(res_Forward2),
        .I3(EX_Result),
        .O(\Using_FPGA.take_Intr_2nd_Phase_reg ));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_332
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 [4]),
        .A1(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 [3]),
        .A2(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 [2]),
        .A3(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 [1]),
        .A4(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_333
   (Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    imm_Value);
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [4:0]imm_Value;

  wire [0:0]EX_Result;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire [4:0]imm_Value;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_334
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 [4]),
        .A1(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 [3]),
        .A2(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 [2]),
        .A3(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 [1]),
        .A4(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_335
   (Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    imm_Value);
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [4:0]imm_Value;

  wire [0:0]EX_Result;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire [4:0]imm_Value;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_336
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_337
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_i_2__20_0 ,
    imm_Value,
    exception_kind,
    res_Forward2);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_i_2__20_0 ;
  input [4:0]imm_Value;
  input [0:0]exception_kind;
  input res_Forward2;

  wire [0:0]EX_Result;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_i_2__20_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [2:2]reg2_Data;
  wire res_Forward2;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_i_2__20_0 [4]),
        .A1(\Using_FPGA.Native_i_2__20_0 [3]),
        .A2(\Using_FPGA.Native_i_2__20_0 [2]),
        .A3(\Using_FPGA.Native_i_2__20_0 [1]),
        .A4(\Using_FPGA.Native_i_2__20_0 [0]),
        .D(EX_Result),
        .DPO(reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
  LUT4 #(
    .INIT(16'h3202)) 
    \Using_FPGA.Native_i_2__20 
       (.I0(reg2_Data),
        .I1(exception_kind),
        .I2(res_Forward2),
        .I3(EX_Result),
        .O(\Using_FPGA.take_Intr_2nd_Phase_reg ));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_338
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_B36_S2.The_BRAMs[14].RAMB36_I1 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_B36_S2.The_BRAMs[14].RAMB36_I1 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_B36_S2.The_BRAMs[14].RAMB36_I1 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_B36_S2.The_BRAMs[14].RAMB36_I1 [4]),
        .A1(\Using_B36_S2.The_BRAMs[14].RAMB36_I1 [3]),
        .A2(\Using_B36_S2.The_BRAMs[14].RAMB36_I1 [2]),
        .A3(\Using_B36_S2.The_BRAMs[14].RAMB36_I1 [1]),
        .A4(\Using_B36_S2.The_BRAMs[14].RAMB36_I1 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_339
   (Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    imm_Value);
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [4:0]imm_Value;

  wire [0:0]EX_Result;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire [4:0]imm_Value;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_340
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_B36_S2.The_BRAMs[14].RAMB36_I1 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_B36_S2.The_BRAMs[14].RAMB36_I1 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_B36_S2.The_BRAMs[14].RAMB36_I1 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_B36_S2.The_BRAMs[14].RAMB36_I1 [4]),
        .A1(\Using_B36_S2.The_BRAMs[14].RAMB36_I1 [3]),
        .A2(\Using_B36_S2.The_BRAMs[14].RAMB36_I1 [2]),
        .A3(\Using_B36_S2.The_BRAMs[14].RAMB36_I1 [1]),
        .A4(\Using_B36_S2.The_BRAMs[14].RAMB36_I1 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_341
   (Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    imm_Value);
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [4:0]imm_Value;

  wire [0:0]EX_Result;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire [4:0]imm_Value;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_342
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_B36_S2.The_BRAMs[13].RAMB36_I1 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_B36_S2.The_BRAMs[13].RAMB36_I1 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_B36_S2.The_BRAMs[13].RAMB36_I1 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_B36_S2.The_BRAMs[13].RAMB36_I1 [4]),
        .A1(\Using_B36_S2.The_BRAMs[13].RAMB36_I1 [3]),
        .A2(\Using_B36_S2.The_BRAMs[13].RAMB36_I1 [2]),
        .A3(\Using_B36_S2.The_BRAMs[13].RAMB36_I1 [1]),
        .A4(\Using_B36_S2.The_BRAMs[13].RAMB36_I1 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_343
   (Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    imm_Value);
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [4:0]imm_Value;

  wire [0:0]EX_Result;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire [4:0]imm_Value;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_344
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_B36_S2.The_BRAMs[13].RAMB36_I1 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_B36_S2.The_BRAMs[13].RAMB36_I1 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_B36_S2.The_BRAMs[13].RAMB36_I1 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_B36_S2.The_BRAMs[13].RAMB36_I1 [4]),
        .A1(\Using_B36_S2.The_BRAMs[13].RAMB36_I1 [3]),
        .A2(\Using_B36_S2.The_BRAMs[13].RAMB36_I1 [2]),
        .A3(\Using_B36_S2.The_BRAMs[13].RAMB36_I1 [1]),
        .A4(\Using_B36_S2.The_BRAMs[13].RAMB36_I1 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_345
   (Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    imm_Value);
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [4:0]imm_Value;

  wire [0:0]EX_Result;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire [4:0]imm_Value;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_346
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_B36_S2.The_BRAMs[12].RAMB36_I1 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_B36_S2.The_BRAMs[12].RAMB36_I1 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_B36_S2.The_BRAMs[12].RAMB36_I1 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_B36_S2.The_BRAMs[12].RAMB36_I1 [4]),
        .A1(\Using_B36_S2.The_BRAMs[12].RAMB36_I1 [3]),
        .A2(\Using_B36_S2.The_BRAMs[12].RAMB36_I1 [2]),
        .A3(\Using_B36_S2.The_BRAMs[12].RAMB36_I1 [1]),
        .A4(\Using_B36_S2.The_BRAMs[12].RAMB36_I1 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_347
   (Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    imm_Value);
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [4:0]imm_Value;

  wire [0:0]EX_Result;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire [4:0]imm_Value;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_348
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_B36_S2.The_BRAMs[12].RAMB36_I1 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_B36_S2.The_BRAMs[12].RAMB36_I1 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_B36_S2.The_BRAMs[12].RAMB36_I1 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_B36_S2.The_BRAMs[12].RAMB36_I1 [4]),
        .A1(\Using_B36_S2.The_BRAMs[12].RAMB36_I1 [3]),
        .A2(\Using_B36_S2.The_BRAMs[12].RAMB36_I1 [2]),
        .A3(\Using_B36_S2.The_BRAMs[12].RAMB36_I1 [1]),
        .A4(\Using_B36_S2.The_BRAMs[12].RAMB36_I1 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_349
   (Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    imm_Value);
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [4:0]imm_Value;

  wire [0:0]EX_Result;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire [4:0]imm_Value;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_350
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_351
   (Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    imm_Value);
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [4:0]imm_Value;

  wire [0:0]EX_Result;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire [4:0]imm_Value;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_352
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_353
   (Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    imm_Value);
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [4:0]imm_Value;

  wire [0:0]EX_Result;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire [4:0]imm_Value;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_354
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_355
   (Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    imm_Value);
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [4:0]imm_Value;

  wire [0:0]EX_Result;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire [4:0]imm_Value;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_356
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_357
   (Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    imm_Value);
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [4:0]imm_Value;

  wire [0:0]EX_Result;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire [4:0]imm_Value;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_358
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_359
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_i_2__19_0 ,
    imm_Value,
    exception_kind,
    res_Forward2);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_i_2__19_0 ;
  input [4:0]imm_Value;
  input [0:0]exception_kind;
  input res_Forward2;

  wire [0:0]EX_Result;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_i_2__19_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [1:1]reg2_Data;
  wire res_Forward2;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_i_2__19_0 [4]),
        .A1(\Using_FPGA.Native_i_2__19_0 [3]),
        .A2(\Using_FPGA.Native_i_2__19_0 [2]),
        .A3(\Using_FPGA.Native_i_2__19_0 [1]),
        .A4(\Using_FPGA.Native_i_2__19_0 [0]),
        .D(EX_Result),
        .DPO(reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
  LUT4 #(
    .INIT(16'h3202)) 
    \Using_FPGA.Native_i_2__19 
       (.I0(reg2_Data),
        .I1(exception_kind),
        .I2(res_Forward2),
        .I3(EX_Result),
        .O(\Using_FPGA.take_Intr_2nd_Phase_reg ));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_360
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_361
   (Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    imm_Value);
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [4:0]imm_Value;

  wire [0:0]EX_Result;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire [4:0]imm_Value;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_362
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_363
   (Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    imm_Value);
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [4:0]imm_Value;

  wire [0:0]EX_Result;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire [4:0]imm_Value;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_364
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_365
   (Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    imm_Value);
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [4:0]imm_Value;

  wire [0:0]EX_Result;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire [4:0]imm_Value;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_366
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_367
   (Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    imm_Value);
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [4:0]imm_Value;

  wire [0:0]EX_Result;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire [4:0]imm_Value;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_368
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_369
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_i_2__33_0 ,
    imm_Value,
    exception_kind,
    res_Forward2);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_i_2__33_0 ;
  input [4:0]imm_Value;
  input [0:0]exception_kind;
  input res_Forward2;

  wire [0:0]EX_Result;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_i_2__33_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [15:15]reg2_Data;
  wire res_Forward2;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_i_2__33_0 [4]),
        .A1(\Using_FPGA.Native_i_2__33_0 [3]),
        .A2(\Using_FPGA.Native_i_2__33_0 [2]),
        .A3(\Using_FPGA.Native_i_2__33_0 [1]),
        .A4(\Using_FPGA.Native_i_2__33_0 [0]),
        .D(EX_Result),
        .DPO(reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
  LUT4 #(
    .INIT(16'h3202)) 
    \Using_FPGA.Native_i_2__33 
       (.I0(reg2_Data),
        .I1(exception_kind),
        .I2(res_Forward2),
        .I3(EX_Result),
        .O(\Using_FPGA.take_Intr_2nd_Phase_reg ));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_370
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_371
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_i_2__32_0 ,
    imm_Value,
    exception_kind,
    res_Forward2);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_i_2__32_0 ;
  input [4:0]imm_Value;
  input [0:0]exception_kind;
  input res_Forward2;

  wire [0:0]EX_Result;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_i_2__32_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [14:14]reg2_Data;
  wire res_Forward2;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_i_2__32_0 [4]),
        .A1(\Using_FPGA.Native_i_2__32_0 [3]),
        .A2(\Using_FPGA.Native_i_2__32_0 [2]),
        .A3(\Using_FPGA.Native_i_2__32_0 [1]),
        .A4(\Using_FPGA.Native_i_2__32_0 [0]),
        .D(EX_Result),
        .DPO(reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
  LUT4 #(
    .INIT(16'h3202)) 
    \Using_FPGA.Native_i_2__32 
       (.I0(reg2_Data),
        .I1(exception_kind),
        .I2(res_Forward2),
        .I3(EX_Result),
        .O(\Using_FPGA.take_Intr_2nd_Phase_reg ));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_372
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_373
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_i_2__31_0 ,
    imm_Value,
    exception_kind,
    res_Forward2);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_i_2__31_0 ;
  input [4:0]imm_Value;
  input [0:0]exception_kind;
  input res_Forward2;

  wire [0:0]EX_Result;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_i_2__31_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [13:13]reg2_Data;
  wire res_Forward2;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_i_2__31_0 [4]),
        .A1(\Using_FPGA.Native_i_2__31_0 [3]),
        .A2(\Using_FPGA.Native_i_2__31_0 [2]),
        .A3(\Using_FPGA.Native_i_2__31_0 [1]),
        .A4(\Using_FPGA.Native_i_2__31_0 [0]),
        .D(EX_Result),
        .DPO(reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
  LUT4 #(
    .INIT(16'h3202)) 
    \Using_FPGA.Native_i_2__31 
       (.I0(reg2_Data),
        .I1(exception_kind),
        .I2(res_Forward2),
        .I3(EX_Result),
        .O(\Using_FPGA.take_Intr_2nd_Phase_reg ));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_374
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_375
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_i_2__30_0 ,
    imm_Value,
    exception_kind,
    res_Forward2);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_i_2__30_0 ;
  input [4:0]imm_Value;
  input [0:0]exception_kind;
  input res_Forward2;

  wire [0:0]EX_Result;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_i_2__30_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [12:12]reg2_Data;
  wire res_Forward2;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_i_2__30_0 [4]),
        .A1(\Using_FPGA.Native_i_2__30_0 [3]),
        .A2(\Using_FPGA.Native_i_2__30_0 [2]),
        .A3(\Using_FPGA.Native_i_2__30_0 [1]),
        .A4(\Using_FPGA.Native_i_2__30_0 [0]),
        .D(EX_Result),
        .DPO(reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
  LUT4 #(
    .INIT(16'h3202)) 
    \Using_FPGA.Native_i_2__30 
       (.I0(reg2_Data),
        .I1(exception_kind),
        .I2(res_Forward2),
        .I3(EX_Result),
        .O(\Using_FPGA.take_Intr_2nd_Phase_reg ));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_376
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_377
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_i_2__29_0 ,
    imm_Value,
    exception_kind,
    res_Forward2);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_i_2__29_0 ;
  input [4:0]imm_Value;
  input [0:0]exception_kind;
  input res_Forward2;

  wire [0:0]EX_Result;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_i_2__29_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [11:11]reg2_Data;
  wire res_Forward2;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_i_2__29_0 [4]),
        .A1(\Using_FPGA.Native_i_2__29_0 [3]),
        .A2(\Using_FPGA.Native_i_2__29_0 [2]),
        .A3(\Using_FPGA.Native_i_2__29_0 [1]),
        .A4(\Using_FPGA.Native_i_2__29_0 [0]),
        .D(EX_Result),
        .DPO(reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
  LUT4 #(
    .INIT(16'h3202)) 
    \Using_FPGA.Native_i_2__29 
       (.I0(reg2_Data),
        .I1(exception_kind),
        .I2(res_Forward2),
        .I3(EX_Result),
        .O(\Using_FPGA.take_Intr_2nd_Phase_reg ));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_378
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_379
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_i_2__28_0 ,
    imm_Value,
    exception_kind,
    res_Forward2);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_i_2__28_0 ;
  input [4:0]imm_Value;
  input [0:0]exception_kind;
  input res_Forward2;

  wire [0:0]EX_Result;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_i_2__28_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [10:10]reg2_Data;
  wire res_Forward2;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_i_2__28_0 [4]),
        .A1(\Using_FPGA.Native_i_2__28_0 [3]),
        .A2(\Using_FPGA.Native_i_2__28_0 [2]),
        .A3(\Using_FPGA.Native_i_2__28_0 [1]),
        .A4(\Using_FPGA.Native_i_2__28_0 [0]),
        .D(EX_Result),
        .DPO(reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
  LUT4 #(
    .INIT(16'h3202)) 
    \Using_FPGA.Native_i_2__28 
       (.I0(reg2_Data),
        .I1(exception_kind),
        .I2(res_Forward2),
        .I3(EX_Result),
        .O(\Using_FPGA.take_Intr_2nd_Phase_reg ));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_380
   (Reg1_Data,
    Data_Write,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_0 ,
    reg1_Addr);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_0 ;
  input [0:4]reg1_Addr;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_0 ;
  wire out;
  wire [0:4]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_0 [4]),
        .A1(\Using_FPGA.Native_0 [3]),
        .A2(\Using_FPGA.Native_0 [2]),
        .A3(\Using_FPGA.Native_0 [1]),
        .A4(\Using_FPGA.Native_0 [0]),
        .D(EX_Result),
        .DPO(Reg1_Data),
        .DPRA0(reg1_Addr[0]),
        .DPRA1(reg1_Addr[1]),
        .DPRA2(reg1_Addr[2]),
        .DPRA3(reg1_Addr[3]),
        .DPRA4(reg1_Addr[4]),
        .SPO(Data_Write),
        .WCLK(out),
        .WE(Reg_Write));
endmodule

(* ORIG_REF_NAME = "MB_RAM32X1D" *) 
module c2c_gth_in_system_ibert_0_MB_RAM32X1D_381
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native_i_2__18_0 ,
    imm_Value,
    exception_kind,
    res_Forward2);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native_i_2__18_0 ;
  input [4:0]imm_Value;
  input [0:0]exception_kind;
  input res_Forward2;

  wire [0:0]EX_Result;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native_i_2__18_0 ;
  wire \Using_FPGA.Native_n_1 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [0:0]reg2_Data;
  wire res_Forward2;

  (* box_type = "PRIMITIVE" *) 
  RAM32X1D #(
    .INIT(32'h00000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.A0(\Using_FPGA.Native_i_2__18_0 [4]),
        .A1(\Using_FPGA.Native_i_2__18_0 [3]),
        .A2(\Using_FPGA.Native_i_2__18_0 [2]),
        .A3(\Using_FPGA.Native_i_2__18_0 [1]),
        .A4(\Using_FPGA.Native_i_2__18_0 [0]),
        .D(EX_Result),
        .DPO(reg2_Data),
        .DPRA0(imm_Value[4]),
        .DPRA1(imm_Value[3]),
        .DPRA2(imm_Value[2]),
        .DPRA3(imm_Value[1]),
        .DPRA4(imm_Value[0]),
        .SPO(\Using_FPGA.Native_n_1 ),
        .WCLK(out),
        .WE(Reg_Write));
  LUT4 #(
    .INIT(16'h3202)) 
    \Using_FPGA.Native_i_2__18 
       (.I0(reg2_Data),
        .I1(exception_kind),
        .I2(res_Forward2),
        .I3(EX_Result),
        .O(\Using_FPGA.take_Intr_2nd_Phase_reg ));
endmodule

module c2c_gth_in_system_ibert_0_MB_SRL16E
   (\Using_B36_S2.The_BRAMs[0].RAMB36_I1 ,
    inHibit_EX_reg,
    \Using_B36_S2.The_BRAMs[0].RAMB36_I1_0 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg ,
    \Using_B36_S2.The_BRAMs[0].RAMB36_I1_1 ,
    use_Reg_Neg_DI_i23_out,
    \Using_B36_S2.The_BRAMs[0].RAMB36_I1_2 ,
    use_Reg_Neg_S_i25_out,
    force1_i26_out,
    \Using_B36_S2.The_BRAMs[0].RAMB36_I1_3 ,
    doublet_i,
    \Using_B36_S2.The_BRAMs[0].RAMB36_I1_4 ,
    CI,
    DATA_OUTA,
    \Result_Sel_reg[0] ,
    \Result_Sel_reg[0]_0 ,
    \Result_Sel_reg[0]_1 ,
    out,
    d_AS_I_reg,
    inHibit_EX,
    quadlet_Read_i_reg,
    quadlet_Read_i_reg_0,
    doublet_i_reg,
    quadlet_Read_i_reg_1,
    quadlet_Read_i_reg_2,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    instr_OF,
    doublet_i_reg_0);
  output \Using_B36_S2.The_BRAMs[0].RAMB36_I1 ;
  output inHibit_EX_reg;
  output \Using_B36_S2.The_BRAMs[0].RAMB36_I1_0 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  output \Using_B36_S2.The_BRAMs[0].RAMB36_I1_1 ;
  output use_Reg_Neg_DI_i23_out;
  output \Using_B36_S2.The_BRAMs[0].RAMB36_I1_2 ;
  output use_Reg_Neg_S_i25_out;
  output force1_i26_out;
  output \Using_B36_S2.The_BRAMs[0].RAMB36_I1_3 ;
  output doublet_i;
  output \Using_B36_S2.The_BRAMs[0].RAMB36_I1_4 ;
  input CI;
  input [0:0]DATA_OUTA;
  input \Result_Sel_reg[0] ;
  input \Result_Sel_reg[0]_0 ;
  input \Result_Sel_reg[0]_1 ;
  input out;
  input d_AS_I_reg;
  input inHibit_EX;
  input quadlet_Read_i_reg;
  input quadlet_Read_i_reg_0;
  input doublet_i_reg;
  input quadlet_Read_i_reg_1;
  input quadlet_Read_i_reg_2;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [2:0]instr_OF;
  input [0:0]doublet_i_reg_0;

  wire CI;
  wire [0:0]DATA_OUTA;
  wire \Result_Sel_reg[0] ;
  wire \Result_Sel_reg[0]_0 ;
  wire \Result_Sel_reg[0]_1 ;
  wire \Using_B36_S2.The_BRAMs[0].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[0].RAMB36_I1_0 ;
  wire \Using_B36_S2.The_BRAMs[0].RAMB36_I1_1 ;
  wire \Using_B36_S2.The_BRAMs[0].RAMB36_I1_2 ;
  wire \Using_B36_S2.The_BRAMs[0].RAMB36_I1_3 ;
  wire \Using_B36_S2.The_BRAMs[0].RAMB36_I1_4 ;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire d_AS_I_reg;
  wire doublet_i;
  wire doublet_i_reg;
  wire [0:0]doublet_i_reg_0;
  wire force1_i26_out;
  wire inHibit_EX;
  wire inHibit_EX_reg;
  wire [2:0]instr_OF;
  wire out;
  wire quadlet_Read_i_reg;
  wire quadlet_Read_i_reg_0;
  wire quadlet_Read_i_reg_1;
  wire quadlet_Read_i_reg_2;
  wire use_Reg_Neg_DI_i23_out;
  wire use_Reg_Neg_S_i25_out;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[0].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(\Result_Sel_reg[0] ),
        .A1(\Result_Sel_reg[0]_0 ),
        .A2(\Result_Sel_reg[0]_1 ),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 ));
  LUT6 #(
    .INIT(64'hAAAAAABABBBBBBBB)) 
    \Using_FPGA.Native_i_1__12 
       (.I0(\Using_FPGA.Native ),
        .I1(quadlet_Read_i_reg_0),
        .I2(quadlet_Read_i_reg_2),
        .I3(quadlet_Read_i_reg),
        .I4(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 ),
        .I5(\Using_B36_S2.The_BRAMs[0].RAMB36_I1_1 ),
        .O(\Using_FPGA.take_Intr_2nd_Phase_reg ));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT4 #(
    .INIT(16'h2008)) 
    \Using_FPGA.Native_i_1__18 
       (.I0(\Using_B36_S2.The_BRAMs[0].RAMB36_I1_2 ),
        .I1(instr_OF[1]),
        .I2(instr_OF[2]),
        .I3(instr_OF[0]),
        .O(use_Reg_Neg_DI_i23_out));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT4 #(
    .INIT(16'h2008)) 
    \Using_FPGA.Native_i_1__19 
       (.I0(\Using_B36_S2.The_BRAMs[0].RAMB36_I1_2 ),
        .I1(instr_OF[2]),
        .I2(instr_OF[1]),
        .I3(instr_OF[0]),
        .O(use_Reg_Neg_S_i25_out));
  LUT6 #(
    .INIT(64'h0000000020000000)) 
    \Using_FPGA.Native_i_1__20 
       (.I0(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 ),
        .I1(quadlet_Read_i_reg),
        .I2(quadlet_Read_i_reg_1),
        .I3(\Using_FPGA.Native_0 ),
        .I4(quadlet_Read_i_reg_2),
        .I5(quadlet_Read_i_reg_0),
        .O(\Using_B36_S2.The_BRAMs[0].RAMB36_I1_2 ));
  LUT6 #(
    .INIT(64'hFFDFFFFFFFFFFFFF)) 
    \Using_FPGA.Native_i_2__0 
       (.I0(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 ),
        .I1(quadlet_Read_i_reg),
        .I2(\Using_FPGA.Native_0 ),
        .I3(quadlet_Read_i_reg_2),
        .I4(quadlet_Read_i_reg_1),
        .I5(\Using_FPGA.Native_1 ),
        .O(\Using_B36_S2.The_BRAMs[0].RAMB36_I1_1 ));
  LUT3 #(
    .INIT(8'h02)) 
    \Using_FPGA.Native_i_2__2 
       (.I0(\Using_B36_S2.The_BRAMs[0].RAMB36_I1_2 ),
        .I1(instr_OF[1]),
        .I2(instr_OF[2]),
        .O(force1_i26_out));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT5 #(
    .INIT(32'hFFBFAAAA)) 
    byte_i_i_1
       (.I0(doublet_i_reg_0),
        .I1(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 ),
        .I2(quadlet_Read_i_reg),
        .I3(quadlet_Read_i_reg_0),
        .I4(doublet_i_reg),
        .O(doublet_i));
  LUT6 #(
    .INIT(64'h0000700000000000)) 
    d_AS_I_i_1
       (.I0(d_AS_I_reg),
        .I1(inHibit_EX),
        .I2(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 ),
        .I3(quadlet_Read_i_reg),
        .I4(quadlet_Read_i_reg_0),
        .I5(doublet_i_reg),
        .O(inHibit_EX_reg));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    inHibit_EX_i_4
       (.I0(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 ),
        .I1(quadlet_Read_i_reg),
        .I2(quadlet_Read_i_reg_1),
        .O(\Using_B36_S2.The_BRAMs[0].RAMB36_I1_3 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT5 #(
    .INIT(32'hF7F7FFF7)) 
    quadlet_Read_i_i_1
       (.I0(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 ),
        .I1(quadlet_Read_i_reg),
        .I2(quadlet_Read_i_reg_0),
        .I3(quadlet_Read_i_reg_1),
        .I4(quadlet_Read_i_reg_2),
        .O(\Using_B36_S2.The_BRAMs[0].RAMB36_I1_0 ));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT1 #(
    .INIT(2'h1)) 
    select_ALU_Carry_i_1
       (.I0(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 ),
        .O(\Using_B36_S2.The_BRAMs[0].RAMB36_I1_4 ));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_33
   (instr_OF,
    Reg_Test_Equal_i,
    enable_Interrupts_I,
    D,
    CI,
    DATA_OUTA,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    out,
    \Using_FPGA.Native_2 ,
    \write_Addr_I_reg[4] ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.enable_Interrupts_I_reg ,
    \write_Addr_I_reg[4]_0 );
  output [0:0]instr_OF;
  output Reg_Test_Equal_i;
  output enable_Interrupts_I;
  output [0:0]D;
  input CI;
  input [0:0]DATA_OUTA;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input out;
  input [1:0]\Using_FPGA.Native_2 ;
  input \write_Addr_I_reg[4] ;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.enable_Interrupts_I_reg ;
  input [0:0]\write_Addr_I_reg[4]_0 ;

  wire CI;
  wire [0:0]D;
  wire [0:0]DATA_OUTA;
  wire Reg_Test_Equal_i;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [1:0]\Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.enable_Interrupts_I_reg ;
  wire enable_Interrupts_I;
  wire [0:0]instr_OF;
  wire out;
  wire \write_Addr_I_reg[4] ;
  wire [0:0]\write_Addr_I_reg[4]_0 ;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[10].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(\Using_FPGA.Native ),
        .A1(\Using_FPGA.Native_0 ),
        .A2(\Using_FPGA.Native_1 ),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(instr_OF));
  LUT5 #(
    .INIT(32'hFFF9FFFF)) 
    \Using_FPGA.Native_i_1__16 
       (.I0(instr_OF),
        .I1(\Using_FPGA.Native_2 [1]),
        .I2(\Using_FPGA.Native_2 [0]),
        .I3(\write_Addr_I_reg[4] ),
        .I4(\Using_FPGA.Native_3 ),
        .O(Reg_Test_Equal_i));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \Using_FPGA.enable_Interrupts_I_i_1 
       (.I0(instr_OF),
        .I1(\Using_FPGA.enable_Interrupts_I_reg ),
        .I2(\write_Addr_I_reg[4] ),
        .O(enable_Interrupts_I));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \write_Addr_I[4]_i_1 
       (.I0(instr_OF),
        .I1(\write_Addr_I_reg[4] ),
        .I2(\write_Addr_I_reg[4]_0 ),
        .O(D));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_34
   (\Using_B36_S2.The_BRAMs[5].RAMB36_I1 ,
    \Using_FPGA.set_BIP_I_reg ,
    CI,
    DATA_OUTA,
    jump2_I_reg,
    jump2_I_reg_0,
    jump2_I_reg_1,
    out,
    \Using_FPGA.set_BIP_I_reg_0 ,
    \Using_FPGA.set_BIP_I_reg_1 ,
    \Using_FPGA.set_BIP_I_reg_2 ,
    \Using_FPGA.set_BIP_I_reg_3 );
  output \Using_B36_S2.The_BRAMs[5].RAMB36_I1 ;
  output \Using_FPGA.set_BIP_I_reg ;
  input CI;
  input [0:0]DATA_OUTA;
  input jump2_I_reg;
  input jump2_I_reg_0;
  input jump2_I_reg_1;
  input out;
  input \Using_FPGA.set_BIP_I_reg_0 ;
  input \Using_FPGA.set_BIP_I_reg_1 ;
  input \Using_FPGA.set_BIP_I_reg_2 ;
  input \Using_FPGA.set_BIP_I_reg_3 ;

  wire CI;
  wire [0:0]DATA_OUTA;
  wire \Using_B36_S2.The_BRAMs[5].RAMB36_I1 ;
  wire \Using_FPGA.set_BIP_I_reg ;
  wire \Using_FPGA.set_BIP_I_reg_0 ;
  wire \Using_FPGA.set_BIP_I_reg_1 ;
  wire \Using_FPGA.set_BIP_I_reg_2 ;
  wire \Using_FPGA.set_BIP_I_reg_3 ;
  wire jump2_I_reg;
  wire jump2_I_reg_0;
  wire jump2_I_reg_1;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[11].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(jump2_I_reg),
        .A1(jump2_I_reg_0),
        .A2(jump2_I_reg_1),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(\Using_B36_S2.The_BRAMs[5].RAMB36_I1 ));
  LUT5 #(
    .INIT(32'h40FF4000)) 
    \Using_FPGA.set_BIP_I_i_2 
       (.I0(\Using_B36_S2.The_BRAMs[5].RAMB36_I1 ),
        .I1(\Using_FPGA.set_BIP_I_reg_0 ),
        .I2(\Using_FPGA.set_BIP_I_reg_1 ),
        .I3(\Using_FPGA.set_BIP_I_reg_2 ),
        .I4(\Using_FPGA.set_BIP_I_reg_3 ),
        .O(\Using_FPGA.set_BIP_I_reg ));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_35
   (\Using_B36_S2.The_BRAMs[6].RAMB36_I1 ,
    \Using_B36_S2.The_BRAMs[6].RAMB36_I1_0 ,
    D_31,
    CI,
    DATA_OUTA,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    out,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 ,
    \Using_FPGA.Native_9 );
  output \Using_B36_S2.The_BRAMs[6].RAMB36_I1 ;
  output \Using_B36_S2.The_BRAMs[6].RAMB36_I1_0 ;
  output D_31;
  input CI;
  input [0:0]DATA_OUTA;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input out;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;
  input \Using_FPGA.Native_5 ;
  input \Using_FPGA.Native_6 ;
  input \Using_FPGA.Native_7 ;
  input \Using_FPGA.Native_8 ;
  input \Using_FPGA.Native_9 ;

  wire CI;
  wire [0:0]DATA_OUTA;
  wire D_31;
  wire \Using_B36_S2.The_BRAMs[6].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[6].RAMB36_I1_0 ;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \Using_FPGA.Native_9 ;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[12].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(\Using_FPGA.Native ),
        .A1(\Using_FPGA.Native_0 ),
        .A2(\Using_FPGA.Native_1 ),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(\Using_B36_S2.The_BRAMs[6].RAMB36_I1 ));
  LUT6 #(
    .INIT(64'h000008000000F0F0)) 
    \Using_FPGA.Native_i_1__13 
       (.I0(\Using_B36_S2.The_BRAMs[6].RAMB36_I1 ),
        .I1(\Using_FPGA.Native_2 ),
        .I2(\Using_FPGA.Native_3 ),
        .I3(\Using_FPGA.Native_4 ),
        .I4(\Using_FPGA.Native_5 ),
        .I5(\Using_FPGA.Native_6 ),
        .O(\Using_B36_S2.The_BRAMs[6].RAMB36_I1_0 ));
  LUT4 #(
    .INIT(16'h000D)) 
    \Using_FPGA.Native_i_1__14 
       (.I0(\Using_B36_S2.The_BRAMs[6].RAMB36_I1 ),
        .I1(\Using_FPGA.Native_7 ),
        .I2(\Using_FPGA.Native_8 ),
        .I3(\Using_FPGA.Native_9 ),
        .O(D_31));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_36
   (\Using_B36_S2.The_BRAMs[6].RAMB36_I1 ,
    CI,
    DATA_OUTA,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1_1 ,
    out);
  output \Using_B36_S2.The_BRAMs[6].RAMB36_I1 ;
  input CI;
  input [0:0]DATA_OUTA;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1_1 ;
  input out;

  wire CI;
  wire [0:0]DATA_OUTA;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1_1 ;
  wire \Using_B36_S2.The_BRAMs[6].RAMB36_I1 ;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[13].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .A1(\Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ),
        .A2(\Using_B36_S2.The_BRAMs[15].RAMB36_I1_1 ),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(\Using_B36_S2.The_BRAMs[6].RAMB36_I1 ));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_37
   (\Using_B36_S2.The_BRAMs[7].RAMB36_I1 ,
    of_mbar_decode,
    CI,
    DATA_OUTA,
    mbar_decode_I_reg,
    mbar_decode_I_reg_0,
    mbar_decode_I_reg_1,
    out,
    mbar_decode_I_reg_2,
    mbar_decode_I_reg_3,
    mbar_decode_I_reg_4);
  output \Using_B36_S2.The_BRAMs[7].RAMB36_I1 ;
  output of_mbar_decode;
  input CI;
  input [0:0]DATA_OUTA;
  input mbar_decode_I_reg;
  input mbar_decode_I_reg_0;
  input mbar_decode_I_reg_1;
  input out;
  input mbar_decode_I_reg_2;
  input mbar_decode_I_reg_3;
  input mbar_decode_I_reg_4;

  wire CI;
  wire [0:0]DATA_OUTA;
  wire \Using_B36_S2.The_BRAMs[7].RAMB36_I1 ;
  wire mbar_decode_I_reg;
  wire mbar_decode_I_reg_0;
  wire mbar_decode_I_reg_1;
  wire mbar_decode_I_reg_2;
  wire mbar_decode_I_reg_3;
  wire mbar_decode_I_reg_4;
  wire of_mbar_decode;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[14].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(mbar_decode_I_reg),
        .A1(mbar_decode_I_reg_0),
        .A2(mbar_decode_I_reg_1),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(\Using_B36_S2.The_BRAMs[7].RAMB36_I1 ));
  LUT4 #(
    .INIT(16'h0008)) 
    mbar_decode_I_i_1
       (.I0(\Using_B36_S2.The_BRAMs[7].RAMB36_I1 ),
        .I1(mbar_decode_I_reg_2),
        .I2(mbar_decode_I_reg_3),
        .I3(mbar_decode_I_reg_4),
        .O(of_mbar_decode));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_38
   (reg1_Addr,
    CI,
    DATA_OUTA,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1_1 ,
    out);
  output [0:0]reg1_Addr;
  input CI;
  input [0:0]DATA_OUTA;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1_1 ;
  input out;

  wire CI;
  wire [0:0]DATA_OUTA;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1_1 ;
  wire out;
  wire [0:0]reg1_Addr;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[15].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .A1(\Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ),
        .A2(\Using_B36_S2.The_BRAMs[15].RAMB36_I1_1 ),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(reg1_Addr));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_39
   (\Using_B36_S2.The_BRAMs[8].RAMB36_I1 ,
    \Size_17to32.imm_Reg_reg[0] ,
    D_0,
    D_1,
    D_2,
    D_3,
    D_4,
    D_5,
    D_6,
    D_7,
    D_8,
    D_9,
    D_10,
    D_11,
    D_12,
    D_13,
    D_14,
    D_15,
    CI,
    DATA_OUTA,
    \Size_17to32.imm_Reg_reg[0]_0 ,
    \Size_17to32.imm_Reg_reg[0]_1 ,
    \Size_17to32.imm_Reg_reg[0]_2 ,
    out,
    \Using_FPGA.Native ,
    use_Imm_Reg,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 ,
    \Using_FPGA.Native_9 ,
    \Using_FPGA.Native_10 ,
    \Using_FPGA.Native_11 ,
    \Using_FPGA.Native_12 ,
    \Using_FPGA.Native_13 ,
    \Using_FPGA.Native_14 ,
    \Using_FPGA.Native_15 ,
    \Using_FPGA.Native_16 ,
    \Using_FPGA.Native_17 ,
    \Using_FPGA.Native_18 ,
    \Using_FPGA.Native_19 ,
    Reg2_Data);
  output \Using_B36_S2.The_BRAMs[8].RAMB36_I1 ;
  output \Size_17to32.imm_Reg_reg[0] ;
  output D_0;
  output D_1;
  output D_2;
  output D_3;
  output D_4;
  output D_5;
  output D_6;
  output D_7;
  output D_8;
  output D_9;
  output D_10;
  output D_11;
  output D_12;
  output D_13;
  output D_14;
  output D_15;
  input CI;
  input [0:0]DATA_OUTA;
  input \Size_17to32.imm_Reg_reg[0]_0 ;
  input \Size_17to32.imm_Reg_reg[0]_1 ;
  input \Size_17to32.imm_Reg_reg[0]_2 ;
  input out;
  input [15:0]\Using_FPGA.Native ;
  input use_Imm_Reg;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;
  input \Using_FPGA.Native_5 ;
  input \Using_FPGA.Native_6 ;
  input \Using_FPGA.Native_7 ;
  input \Using_FPGA.Native_8 ;
  input \Using_FPGA.Native_9 ;
  input \Using_FPGA.Native_10 ;
  input \Using_FPGA.Native_11 ;
  input \Using_FPGA.Native_12 ;
  input \Using_FPGA.Native_13 ;
  input \Using_FPGA.Native_14 ;
  input \Using_FPGA.Native_15 ;
  input \Using_FPGA.Native_16 ;
  input [0:0]\Using_FPGA.Native_17 ;
  input \Using_FPGA.Native_18 ;
  input \Using_FPGA.Native_19 ;
  input [0:0]Reg2_Data;

  wire CI;
  wire [0:0]DATA_OUTA;
  wire D_0;
  wire D_1;
  wire D_10;
  wire D_11;
  wire D_12;
  wire D_13;
  wire D_14;
  wire D_15;
  wire D_2;
  wire D_3;
  wire D_4;
  wire D_5;
  wire D_6;
  wire D_7;
  wire D_8;
  wire D_9;
  wire [0:0]Reg2_Data;
  wire \Size_17to32.imm_Reg_reg[0] ;
  wire \Size_17to32.imm_Reg_reg[0]_0 ;
  wire \Size_17to32.imm_Reg_reg[0]_1 ;
  wire \Size_17to32.imm_Reg_reg[0]_2 ;
  wire \Using_B36_S2.The_BRAMs[8].RAMB36_I1 ;
  wire [15:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire \Using_FPGA.Native_11 ;
  wire \Using_FPGA.Native_12 ;
  wire \Using_FPGA.Native_13 ;
  wire \Using_FPGA.Native_14 ;
  wire \Using_FPGA.Native_15 ;
  wire \Using_FPGA.Native_16 ;
  wire [0:0]\Using_FPGA.Native_17 ;
  wire \Using_FPGA.Native_18 ;
  wire \Using_FPGA.Native_19 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \Using_FPGA.Native_9 ;
  wire out;
  wire use_Imm_Reg;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[16].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(\Size_17to32.imm_Reg_reg[0]_0 ),
        .A1(\Size_17to32.imm_Reg_reg[0]_1 ),
        .A2(\Size_17to32.imm_Reg_reg[0]_2 ),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(\Using_B36_S2.The_BRAMs[8].RAMB36_I1 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_1__21 
       (.I0(\Using_FPGA.Native [15]),
        .I1(use_Imm_Reg),
        .I2(\Using_B36_S2.The_BRAMs[8].RAMB36_I1 ),
        .I3(\Using_FPGA.Native_0 ),
        .I4(\Using_FPGA.Native_1 ),
        .O(\Size_17to32.imm_Reg_reg[0] ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_1__22 
       (.I0(\Using_FPGA.Native [14]),
        .I1(use_Imm_Reg),
        .I2(\Using_B36_S2.The_BRAMs[8].RAMB36_I1 ),
        .I3(\Using_FPGA.Native_0 ),
        .I4(\Using_FPGA.Native_2 ),
        .O(D_0));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_1__23 
       (.I0(\Using_FPGA.Native [13]),
        .I1(use_Imm_Reg),
        .I2(\Using_B36_S2.The_BRAMs[8].RAMB36_I1 ),
        .I3(\Using_FPGA.Native_0 ),
        .I4(\Using_FPGA.Native_3 ),
        .O(D_1));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_1__24 
       (.I0(\Using_FPGA.Native [12]),
        .I1(use_Imm_Reg),
        .I2(\Using_B36_S2.The_BRAMs[8].RAMB36_I1 ),
        .I3(\Using_FPGA.Native_0 ),
        .I4(\Using_FPGA.Native_4 ),
        .O(D_2));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_1__25 
       (.I0(\Using_FPGA.Native [11]),
        .I1(use_Imm_Reg),
        .I2(\Using_B36_S2.The_BRAMs[8].RAMB36_I1 ),
        .I3(\Using_FPGA.Native_0 ),
        .I4(\Using_FPGA.Native_5 ),
        .O(D_3));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_1__26 
       (.I0(\Using_FPGA.Native [10]),
        .I1(use_Imm_Reg),
        .I2(\Using_B36_S2.The_BRAMs[8].RAMB36_I1 ),
        .I3(\Using_FPGA.Native_0 ),
        .I4(\Using_FPGA.Native_6 ),
        .O(D_4));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_1__27 
       (.I0(\Using_FPGA.Native [9]),
        .I1(use_Imm_Reg),
        .I2(\Using_B36_S2.The_BRAMs[8].RAMB36_I1 ),
        .I3(\Using_FPGA.Native_0 ),
        .I4(\Using_FPGA.Native_7 ),
        .O(D_5));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_1__28 
       (.I0(\Using_FPGA.Native [8]),
        .I1(use_Imm_Reg),
        .I2(\Using_B36_S2.The_BRAMs[8].RAMB36_I1 ),
        .I3(\Using_FPGA.Native_0 ),
        .I4(\Using_FPGA.Native_8 ),
        .O(D_6));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_1__29 
       (.I0(\Using_FPGA.Native [7]),
        .I1(use_Imm_Reg),
        .I2(\Using_B36_S2.The_BRAMs[8].RAMB36_I1 ),
        .I3(\Using_FPGA.Native_0 ),
        .I4(\Using_FPGA.Native_9 ),
        .O(D_7));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_1__30 
       (.I0(\Using_FPGA.Native [6]),
        .I1(use_Imm_Reg),
        .I2(\Using_B36_S2.The_BRAMs[8].RAMB36_I1 ),
        .I3(\Using_FPGA.Native_0 ),
        .I4(\Using_FPGA.Native_10 ),
        .O(D_8));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_1__31 
       (.I0(\Using_FPGA.Native [5]),
        .I1(use_Imm_Reg),
        .I2(\Using_B36_S2.The_BRAMs[8].RAMB36_I1 ),
        .I3(\Using_FPGA.Native_0 ),
        .I4(\Using_FPGA.Native_11 ),
        .O(D_9));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_1__32 
       (.I0(\Using_FPGA.Native [4]),
        .I1(use_Imm_Reg),
        .I2(\Using_B36_S2.The_BRAMs[8].RAMB36_I1 ),
        .I3(\Using_FPGA.Native_0 ),
        .I4(\Using_FPGA.Native_12 ),
        .O(D_10));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_1__33 
       (.I0(\Using_FPGA.Native [3]),
        .I1(use_Imm_Reg),
        .I2(\Using_B36_S2.The_BRAMs[8].RAMB36_I1 ),
        .I3(\Using_FPGA.Native_0 ),
        .I4(\Using_FPGA.Native_13 ),
        .O(D_11));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_1__34 
       (.I0(\Using_FPGA.Native [2]),
        .I1(use_Imm_Reg),
        .I2(\Using_B36_S2.The_BRAMs[8].RAMB36_I1 ),
        .I3(\Using_FPGA.Native_0 ),
        .I4(\Using_FPGA.Native_14 ),
        .O(D_12));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_1__35 
       (.I0(\Using_FPGA.Native [1]),
        .I1(use_Imm_Reg),
        .I2(\Using_B36_S2.The_BRAMs[8].RAMB36_I1 ),
        .I3(\Using_FPGA.Native_0 ),
        .I4(\Using_FPGA.Native_15 ),
        .O(D_13));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_1__36 
       (.I0(\Using_FPGA.Native [0]),
        .I1(use_Imm_Reg),
        .I2(\Using_B36_S2.The_BRAMs[8].RAMB36_I1 ),
        .I3(\Using_FPGA.Native_0 ),
        .I4(\Using_FPGA.Native_16 ),
        .O(D_14));
  LUT6 #(
    .INIT(64'h88B888BB88B88888)) 
    \Using_FPGA.Native_i_1__37 
       (.I0(\Using_B36_S2.The_BRAMs[8].RAMB36_I1 ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_17 ),
        .I3(\Using_FPGA.Native_18 ),
        .I4(\Using_FPGA.Native_19 ),
        .I5(Reg2_Data),
        .O(D_15));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_396
   (\Using_FPGA.Native ,
    IReady,
    pc_I,
    Buffer_Addr,
    out);
  output \Using_FPGA.Native ;
  input IReady;
  input pc_I;
  input [2:0]Buffer_Addr;
  input out;

  wire [2:0]Buffer_Addr;
  wire IReady;
  wire \Using_FPGA.Native ;
  wire out;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.PC_GEN " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.PC_GEN[29].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Buffer_Addr[0]),
        .A1(Buffer_Addr[1]),
        .A2(Buffer_Addr[2]),
        .A3(1'b0),
        .CE(IReady),
        .CLK(out),
        .D(pc_I),
        .Q(\Using_FPGA.Native ));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_40
   (\Using_B36_S2.The_BRAMs[8].RAMB36_I1 ,
    D_16,
    \Using_B36_S2.The_BRAMs[8].RAMB36_I1_0 ,
    CI,
    DATA_OUTA,
    \Size_17to32.imm_Reg_reg[1] ,
    \Size_17to32.imm_Reg_reg[1]_0 ,
    \Size_17to32.imm_Reg_reg[1]_1 ,
    out,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Reg2_Data,
    mtsmsr_write_i_reg);
  output \Using_B36_S2.The_BRAMs[8].RAMB36_I1 ;
  output D_16;
  output \Using_B36_S2.The_BRAMs[8].RAMB36_I1_0 ;
  input CI;
  input [0:0]DATA_OUTA;
  input \Size_17to32.imm_Reg_reg[1] ;
  input \Size_17to32.imm_Reg_reg[1]_0 ;
  input \Size_17to32.imm_Reg_reg[1]_1 ;
  input out;
  input \Using_FPGA.Native ;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input [0:0]Reg2_Data;
  input mtsmsr_write_i_reg;

  wire CI;
  wire [0:0]DATA_OUTA;
  wire D_16;
  wire [0:0]Reg2_Data;
  wire \Size_17to32.imm_Reg_reg[1] ;
  wire \Size_17to32.imm_Reg_reg[1]_0 ;
  wire \Size_17to32.imm_Reg_reg[1]_1 ;
  wire \Using_B36_S2.The_BRAMs[8].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[8].RAMB36_I1_0 ;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire mtsmsr_write_i_reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[17].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(\Size_17to32.imm_Reg_reg[1] ),
        .A1(\Size_17to32.imm_Reg_reg[1]_0 ),
        .A2(\Size_17to32.imm_Reg_reg[1]_1 ),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(\Using_B36_S2.The_BRAMs[8].RAMB36_I1 ));
  LUT6 #(
    .INIT(64'h88B888BB88B88888)) 
    \Using_FPGA.Native_i_1__38 
       (.I0(\Using_B36_S2.The_BRAMs[8].RAMB36_I1 ),
        .I1(\Using_FPGA.Native ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\Using_FPGA.Native_2 ),
        .I5(Reg2_Data),
        .O(D_16));
  LUT2 #(
    .INIT(4'h7)) 
    mtsmsr_write_i_i_2
       (.I0(\Using_B36_S2.The_BRAMs[8].RAMB36_I1 ),
        .I1(mtsmsr_write_i_reg),
        .O(\Using_B36_S2.The_BRAMs[8].RAMB36_I1_0 ));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_400
   (\Using_FPGA.Native ,
    IReady,
    pc_I,
    Buffer_Addr,
    out);
  output \Using_FPGA.Native ;
  input IReady;
  input pc_I;
  input [2:0]Buffer_Addr;
  input out;

  wire [2:0]Buffer_Addr;
  wire IReady;
  wire \Using_FPGA.Native ;
  wire out;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.PC_GEN " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.PC_GEN[28].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Buffer_Addr[0]),
        .A1(Buffer_Addr[1]),
        .A2(Buffer_Addr[2]),
        .A3(1'b0),
        .CE(IReady),
        .CLK(out),
        .D(pc_I),
        .Q(\Using_FPGA.Native ));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_405
   (I3_2,
    IReady,
    pc_I,
    Buffer_Addr,
    out,
    \Using_FPGA.Native );
  output I3_2;
  input IReady;
  input pc_I;
  input [2:0]Buffer_Addr;
  input out;
  input \Using_FPGA.Native ;

  wire [2:0]Buffer_Addr;
  wire I3_2;
  wire IReady;
  wire \Use_unisim.MB_SRL16E_I1_n_0 ;
  wire \Using_FPGA.Native ;
  wire out;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.PC_GEN " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.PC_GEN[27].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Buffer_Addr[0]),
        .A1(Buffer_Addr[1]),
        .A2(Buffer_Addr[2]),
        .A3(1'b0),
        .CE(IReady),
        .CLK(out),
        .D(pc_I),
        .Q(\Use_unisim.MB_SRL16E_I1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_1__9 
       (.I0(\Use_unisim.MB_SRL16E_I1_n_0 ),
        .I1(\Using_FPGA.Native ),
        .O(I3_2));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_41
   (imm_Value,
    D_17,
    CI,
    DATA_OUTA,
    \Size_17to32.imm_Reg_reg[2] ,
    \Size_17to32.imm_Reg_reg[2]_0 ,
    \Size_17to32.imm_Reg_reg[2]_1 ,
    out,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Reg2_Data);
  output [0:0]imm_Value;
  output D_17;
  input CI;
  input [0:0]DATA_OUTA;
  input \Size_17to32.imm_Reg_reg[2] ;
  input \Size_17to32.imm_Reg_reg[2]_0 ;
  input \Size_17to32.imm_Reg_reg[2]_1 ;
  input out;
  input \Using_FPGA.Native ;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input [0:0]Reg2_Data;

  wire CI;
  wire [0:0]DATA_OUTA;
  wire D_17;
  wire [0:0]Reg2_Data;
  wire \Size_17to32.imm_Reg_reg[2] ;
  wire \Size_17to32.imm_Reg_reg[2]_0 ;
  wire \Size_17to32.imm_Reg_reg[2]_1 ;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire [0:0]imm_Value;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[18].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(\Size_17to32.imm_Reg_reg[2] ),
        .A1(\Size_17to32.imm_Reg_reg[2]_0 ),
        .A2(\Size_17to32.imm_Reg_reg[2]_1 ),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(imm_Value));
  LUT6 #(
    .INIT(64'h88B888BB88B88888)) 
    \Using_FPGA.Native_i_1__39 
       (.I0(imm_Value),
        .I1(\Using_FPGA.Native ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\Using_FPGA.Native_2 ),
        .I5(Reg2_Data),
        .O(D_17));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_410
   (I3_1,
    IReady,
    pc_I,
    Buffer_Addr,
    out,
    \Using_FPGA.Native );
  output I3_1;
  input IReady;
  input pc_I;
  input [2:0]Buffer_Addr;
  input out;
  input \Using_FPGA.Native ;

  wire [2:0]Buffer_Addr;
  wire I3_1;
  wire IReady;
  wire \Use_unisim.MB_SRL16E_I1_n_0 ;
  wire \Using_FPGA.Native ;
  wire out;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.PC_GEN " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.PC_GEN[26].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Buffer_Addr[0]),
        .A1(Buffer_Addr[1]),
        .A2(Buffer_Addr[2]),
        .A3(1'b0),
        .CE(IReady),
        .CLK(out),
        .D(pc_I),
        .Q(\Use_unisim.MB_SRL16E_I1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_1__8 
       (.I0(\Use_unisim.MB_SRL16E_I1_n_0 ),
        .I1(\Using_FPGA.Native ),
        .O(I3_1));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_415
   (I3_0,
    IReady,
    pc_I,
    Buffer_Addr,
    out,
    \Using_FPGA.Native );
  output I3_0;
  input IReady;
  input pc_I;
  input [2:0]Buffer_Addr;
  input out;
  input \Using_FPGA.Native ;

  wire [2:0]Buffer_Addr;
  wire I3_0;
  wire IReady;
  wire \Use_unisim.MB_SRL16E_I1_n_0 ;
  wire \Using_FPGA.Native ;
  wire out;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.PC_GEN " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.PC_GEN[25].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Buffer_Addr[0]),
        .A1(Buffer_Addr[1]),
        .A2(Buffer_Addr[2]),
        .A3(1'b0),
        .CE(IReady),
        .CLK(out),
        .D(pc_I),
        .Q(\Use_unisim.MB_SRL16E_I1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_1__7 
       (.I0(\Use_unisim.MB_SRL16E_I1_n_0 ),
        .I1(\Using_FPGA.Native ),
        .O(I3_0));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_42
   (imm_Value,
    D_18,
    CI,
    DATA_OUTA,
    \Size_17to32.imm_Reg_reg[3] ,
    \Size_17to32.imm_Reg_reg[3]_0 ,
    \Size_17to32.imm_Reg_reg[3]_1 ,
    out,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Reg2_Data);
  output [0:0]imm_Value;
  output D_18;
  input CI;
  input [0:0]DATA_OUTA;
  input \Size_17to32.imm_Reg_reg[3] ;
  input \Size_17to32.imm_Reg_reg[3]_0 ;
  input \Size_17to32.imm_Reg_reg[3]_1 ;
  input out;
  input \Using_FPGA.Native ;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input [0:0]Reg2_Data;

  wire CI;
  wire [0:0]DATA_OUTA;
  wire D_18;
  wire [0:0]Reg2_Data;
  wire \Size_17to32.imm_Reg_reg[3] ;
  wire \Size_17to32.imm_Reg_reg[3]_0 ;
  wire \Size_17to32.imm_Reg_reg[3]_1 ;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire [0:0]imm_Value;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[19].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(\Size_17to32.imm_Reg_reg[3] ),
        .A1(\Size_17to32.imm_Reg_reg[3]_0 ),
        .A2(\Size_17to32.imm_Reg_reg[3]_1 ),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(imm_Value));
  LUT6 #(
    .INIT(64'h88B888BB88B88888)) 
    \Using_FPGA.Native_i_1__40 
       (.I0(imm_Value),
        .I1(\Using_FPGA.Native ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\Using_FPGA.Native_2 ),
        .I5(Reg2_Data),
        .O(D_18));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_420
   (I3,
    IReady,
    pc_I,
    Buffer_Addr,
    out,
    \Using_FPGA.Native );
  output I3;
  input IReady;
  input pc_I;
  input [2:0]Buffer_Addr;
  input out;
  input \Using_FPGA.Native ;

  wire [2:0]Buffer_Addr;
  wire I3;
  wire IReady;
  wire \Use_unisim.MB_SRL16E_I1_n_0 ;
  wire \Using_FPGA.Native ;
  wire out;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.PC_GEN " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.PC_GEN[24].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Buffer_Addr[0]),
        .A1(Buffer_Addr[1]),
        .A2(Buffer_Addr[2]),
        .A3(1'b0),
        .CE(IReady),
        .CLK(out),
        .D(pc_I),
        .Q(\Use_unisim.MB_SRL16E_I1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_1__6 
       (.I0(\Use_unisim.MB_SRL16E_I1_n_0 ),
        .I1(\Using_FPGA.Native ),
        .O(I3));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_425
   (\Using_FPGA.Native ,
    IReady,
    pc_I,
    Buffer_Addr,
    out);
  output \Using_FPGA.Native ;
  input IReady;
  input pc_I;
  input [2:0]Buffer_Addr;
  input out;

  wire [2:0]Buffer_Addr;
  wire IReady;
  wire \Using_FPGA.Native ;
  wire out;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.PC_GEN " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.PC_GEN[23].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Buffer_Addr[0]),
        .A1(Buffer_Addr[1]),
        .A2(Buffer_Addr[2]),
        .A3(1'b0),
        .CE(IReady),
        .CLK(out),
        .D(pc_I),
        .Q(\Using_FPGA.Native ));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_43
   (\Using_B36_S2.The_BRAMs[0].RAMB36_I1 ,
    \Using_B36_S2.The_BRAMs[0].RAMB36_I1_0 ,
    \Using_B36_S2.The_BRAMs[0].RAMB36_I1_1 ,
    load_Store_i051_out,
    \Using_B36_S2.The_BRAMs[0].RAMB36_I1_2 ,
    CI,
    DATA_OUTA,
    \Result_Sel_reg[1] ,
    \Result_Sel_reg[1]_0 ,
    \Result_Sel_reg[1]_1 ,
    out,
    writing_reg,
    writing_reg_0,
    writing_reg_1,
    write_Carry_I_reg,
    write_Carry_I_reg_0,
    write_Carry_I_reg_1,
    inHibit_EX,
    load_Store_i_reg,
    \Using_FPGA.reset_BIP_I_reg ,
    \Using_FPGA.reset_BIP_I_reg_0 ,
    \Using_FPGA.reset_BIP_I_reg_1 );
  output \Using_B36_S2.The_BRAMs[0].RAMB36_I1 ;
  output \Using_B36_S2.The_BRAMs[0].RAMB36_I1_0 ;
  output \Using_B36_S2.The_BRAMs[0].RAMB36_I1_1 ;
  output load_Store_i051_out;
  output \Using_B36_S2.The_BRAMs[0].RAMB36_I1_2 ;
  input CI;
  input [0:0]DATA_OUTA;
  input \Result_Sel_reg[1] ;
  input \Result_Sel_reg[1]_0 ;
  input \Result_Sel_reg[1]_1 ;
  input out;
  input writing_reg;
  input writing_reg_0;
  input writing_reg_1;
  input write_Carry_I_reg;
  input write_Carry_I_reg_0;
  input write_Carry_I_reg_1;
  input inHibit_EX;
  input load_Store_i_reg;
  input \Using_FPGA.reset_BIP_I_reg ;
  input \Using_FPGA.reset_BIP_I_reg_0 ;
  input \Using_FPGA.reset_BIP_I_reg_1 ;

  wire CI;
  wire [0:0]DATA_OUTA;
  wire \Result_Sel_reg[1] ;
  wire \Result_Sel_reg[1]_0 ;
  wire \Result_Sel_reg[1]_1 ;
  wire \Using_B36_S2.The_BRAMs[0].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[0].RAMB36_I1_0 ;
  wire \Using_B36_S2.The_BRAMs[0].RAMB36_I1_1 ;
  wire \Using_B36_S2.The_BRAMs[0].RAMB36_I1_2 ;
  wire \Using_FPGA.reset_BIP_I_reg ;
  wire \Using_FPGA.reset_BIP_I_reg_0 ;
  wire \Using_FPGA.reset_BIP_I_reg_1 ;
  wire inHibit_EX;
  wire load_Store_i051_out;
  wire load_Store_i_reg;
  wire out;
  wire write_Carry_I_reg;
  wire write_Carry_I_reg_0;
  wire write_Carry_I_reg_1;
  wire writing_reg;
  wire writing_reg_0;
  wire writing_reg_1;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[1].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(\Result_Sel_reg[1] ),
        .A1(\Result_Sel_reg[1]_0 ),
        .A2(\Result_Sel_reg[1]_1 ),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 ));
  LUT6 #(
    .INIT(64'h0000000040000000)) 
    \Using_FPGA.enable_Interrupts_I_i_2 
       (.I0(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 ),
        .I1(\Using_FPGA.reset_BIP_I_reg ),
        .I2(writing_reg_0),
        .I3(writing_reg_1),
        .I4(\Using_FPGA.reset_BIP_I_reg_0 ),
        .I5(\Using_FPGA.reset_BIP_I_reg_1 ),
        .O(\Using_B36_S2.The_BRAMs[0].RAMB36_I1_2 ));
  LUT5 #(
    .INIT(32'h00404040)) 
    load_Store_i_i_1
       (.I0(writing_reg),
        .I1(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 ),
        .I2(writing_reg_0),
        .I3(inHibit_EX),
        .I4(load_Store_i_reg),
        .O(load_Store_i051_out));
  LUT6 #(
    .INIT(64'h01FFFFFF01010101)) 
    write_Carry_I_i_1
       (.I0(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 ),
        .I1(writing_reg_0),
        .I2(writing_reg_1),
        .I3(write_Carry_I_reg),
        .I4(write_Carry_I_reg_0),
        .I5(write_Carry_I_reg_1),
        .O(\Using_B36_S2.The_BRAMs[0].RAMB36_I1_1 ));
  LUT4 #(
    .INIT(16'h4000)) 
    writing_i_1
       (.I0(writing_reg),
        .I1(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 ),
        .I2(writing_reg_0),
        .I3(writing_reg_1),
        .O(\Using_B36_S2.The_BRAMs[0].RAMB36_I1_0 ));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_430
   (\Using_FPGA.Native ,
    IReady,
    pc_I,
    Buffer_Addr,
    out);
  output \Using_FPGA.Native ;
  input IReady;
  input pc_I;
  input [2:0]Buffer_Addr;
  input out;

  wire [2:0]Buffer_Addr;
  wire IReady;
  wire \Using_FPGA.Native ;
  wire out;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.PC_GEN " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.PC_GEN[22].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Buffer_Addr[0]),
        .A1(Buffer_Addr[1]),
        .A2(Buffer_Addr[2]),
        .A3(1'b0),
        .CE(IReady),
        .CLK(out),
        .D(pc_I),
        .Q(\Using_FPGA.Native ));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_435
   (\Using_FPGA.Native ,
    IReady,
    pc_I,
    Buffer_Addr,
    out);
  output \Using_FPGA.Native ;
  input IReady;
  input pc_I;
  input [2:0]Buffer_Addr;
  input out;

  wire [2:0]Buffer_Addr;
  wire IReady;
  wire \Using_FPGA.Native ;
  wire out;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.PC_GEN " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.PC_GEN[21].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Buffer_Addr[0]),
        .A1(Buffer_Addr[1]),
        .A2(Buffer_Addr[2]),
        .A3(1'b0),
        .CE(IReady),
        .CLK(out),
        .D(pc_I),
        .Q(\Using_FPGA.Native ));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_44
   (imm_Value,
    D_19,
    CI,
    DATA_OUTA,
    \Size_17to32.imm_Reg_reg[4] ,
    \Size_17to32.imm_Reg_reg[4]_0 ,
    \Size_17to32.imm_Reg_reg[4]_1 ,
    out,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Reg2_Data);
  output [0:0]imm_Value;
  output D_19;
  input CI;
  input [0:0]DATA_OUTA;
  input \Size_17to32.imm_Reg_reg[4] ;
  input \Size_17to32.imm_Reg_reg[4]_0 ;
  input \Size_17to32.imm_Reg_reg[4]_1 ;
  input out;
  input \Using_FPGA.Native ;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input [0:0]Reg2_Data;

  wire CI;
  wire [0:0]DATA_OUTA;
  wire D_19;
  wire [0:0]Reg2_Data;
  wire \Size_17to32.imm_Reg_reg[4] ;
  wire \Size_17to32.imm_Reg_reg[4]_0 ;
  wire \Size_17to32.imm_Reg_reg[4]_1 ;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire [0:0]imm_Value;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[20].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(\Size_17to32.imm_Reg_reg[4] ),
        .A1(\Size_17to32.imm_Reg_reg[4]_0 ),
        .A2(\Size_17to32.imm_Reg_reg[4]_1 ),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(imm_Value));
  LUT6 #(
    .INIT(64'h88B888BB88B88888)) 
    \Using_FPGA.Native_i_1__41 
       (.I0(imm_Value),
        .I1(\Using_FPGA.Native ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\Using_FPGA.Native_2 ),
        .I5(Reg2_Data),
        .O(D_19));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_440
   (\Using_FPGA.Native ,
    IReady,
    pc_I,
    Buffer_Addr,
    out);
  output \Using_FPGA.Native ;
  input IReady;
  input pc_I;
  input [2:0]Buffer_Addr;
  input out;

  wire [2:0]Buffer_Addr;
  wire IReady;
  wire \Using_FPGA.Native ;
  wire out;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.PC_GEN " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.PC_GEN[20].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Buffer_Addr[0]),
        .A1(Buffer_Addr[1]),
        .A2(Buffer_Addr[2]),
        .A3(1'b0),
        .CE(IReady),
        .CLK(out),
        .D(pc_I),
        .Q(\Using_FPGA.Native ));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_445
   (\Using_FPGA.Native ,
    IReady,
    pc_I,
    Buffer_Addr,
    out);
  output \Using_FPGA.Native ;
  input IReady;
  input pc_I;
  input [2:0]Buffer_Addr;
  input out;

  wire [2:0]Buffer_Addr;
  wire IReady;
  wire \Using_FPGA.Native ;
  wire out;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.PC_GEN " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.PC_GEN[19].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Buffer_Addr[0]),
        .A1(Buffer_Addr[1]),
        .A2(Buffer_Addr[2]),
        .A3(1'b0),
        .CE(IReady),
        .CLK(out),
        .D(pc_I),
        .Q(\Using_FPGA.Native ));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_45
   (\Using_B36_S2.The_BRAMs[10].RAMB36_I1 ,
    D_20,
    CI,
    DATA_OUTA,
    \Size_17to32.imm_Reg_reg[5] ,
    \Size_17to32.imm_Reg_reg[5]_0 ,
    \Size_17to32.imm_Reg_reg[5]_1 ,
    out,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Reg2_Data);
  output \Using_B36_S2.The_BRAMs[10].RAMB36_I1 ;
  output D_20;
  input CI;
  input [0:0]DATA_OUTA;
  input \Size_17to32.imm_Reg_reg[5] ;
  input \Size_17to32.imm_Reg_reg[5]_0 ;
  input \Size_17to32.imm_Reg_reg[5]_1 ;
  input out;
  input \Using_FPGA.Native ;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input [0:0]Reg2_Data;

  wire CI;
  wire [0:0]DATA_OUTA;
  wire D_20;
  wire [0:0]Reg2_Data;
  wire \Size_17to32.imm_Reg_reg[5] ;
  wire \Size_17to32.imm_Reg_reg[5]_0 ;
  wire \Size_17to32.imm_Reg_reg[5]_1 ;
  wire \Using_B36_S2.The_BRAMs[10].RAMB36_I1 ;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[21].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(\Size_17to32.imm_Reg_reg[5] ),
        .A1(\Size_17to32.imm_Reg_reg[5]_0 ),
        .A2(\Size_17to32.imm_Reg_reg[5]_1 ),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(\Using_B36_S2.The_BRAMs[10].RAMB36_I1 ));
  LUT6 #(
    .INIT(64'h88B888BB88B88888)) 
    \Using_FPGA.Native_i_1__42 
       (.I0(\Using_B36_S2.The_BRAMs[10].RAMB36_I1 ),
        .I1(\Using_FPGA.Native ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\Using_FPGA.Native_2 ),
        .I5(Reg2_Data),
        .O(D_20));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_450
   (\Using_FPGA.Native ,
    IReady,
    pc_I,
    Buffer_Addr,
    out);
  output \Using_FPGA.Native ;
  input IReady;
  input pc_I;
  input [2:0]Buffer_Addr;
  input out;

  wire [2:0]Buffer_Addr;
  wire IReady;
  wire \Using_FPGA.Native ;
  wire out;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.PC_GEN " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.PC_GEN[18].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Buffer_Addr[0]),
        .A1(Buffer_Addr[1]),
        .A2(Buffer_Addr[2]),
        .A3(1'b0),
        .CE(IReady),
        .CLK(out),
        .D(pc_I),
        .Q(\Using_FPGA.Native ));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_455
   (\Using_FPGA.Native ,
    IReady,
    pc_I,
    Buffer_Addr,
    out);
  output \Using_FPGA.Native ;
  input IReady;
  input pc_I;
  input [2:0]Buffer_Addr;
  input out;

  wire [2:0]Buffer_Addr;
  wire IReady;
  wire \Using_FPGA.Native ;
  wire out;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.PC_GEN " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.PC_GEN[17].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Buffer_Addr[0]),
        .A1(Buffer_Addr[1]),
        .A2(Buffer_Addr[2]),
        .A3(1'b0),
        .CE(IReady),
        .CLK(out),
        .D(pc_I),
        .Q(\Using_FPGA.Native ));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_46
   (imm_Value,
    D_21,
    CI,
    DATA_OUTA,
    \Size_17to32.imm_Reg_reg[6] ,
    \Size_17to32.imm_Reg_reg[6]_0 ,
    \Size_17to32.imm_Reg_reg[6]_1 ,
    out,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Reg2_Data);
  output [0:0]imm_Value;
  output D_21;
  input CI;
  input [0:0]DATA_OUTA;
  input \Size_17to32.imm_Reg_reg[6] ;
  input \Size_17to32.imm_Reg_reg[6]_0 ;
  input \Size_17to32.imm_Reg_reg[6]_1 ;
  input out;
  input \Using_FPGA.Native ;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input [0:0]Reg2_Data;

  wire CI;
  wire [0:0]DATA_OUTA;
  wire D_21;
  wire [0:0]Reg2_Data;
  wire \Size_17to32.imm_Reg_reg[6] ;
  wire \Size_17to32.imm_Reg_reg[6]_0 ;
  wire \Size_17to32.imm_Reg_reg[6]_1 ;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire [0:0]imm_Value;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[22].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(\Size_17to32.imm_Reg_reg[6] ),
        .A1(\Size_17to32.imm_Reg_reg[6]_0 ),
        .A2(\Size_17to32.imm_Reg_reg[6]_1 ),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(imm_Value));
  LUT6 #(
    .INIT(64'h88B888BB88B88888)) 
    \Using_FPGA.Native_i_1__43 
       (.I0(imm_Value),
        .I1(\Using_FPGA.Native ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\Using_FPGA.Native_2 ),
        .I5(Reg2_Data),
        .O(D_21));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_460
   (PC_OF,
    IReady,
    pc_I,
    Buffer_Addr,
    out);
  output PC_OF;
  input IReady;
  input pc_I;
  input [2:0]Buffer_Addr;
  input out;

  wire [2:0]Buffer_Addr;
  wire IReady;
  wire PC_OF;
  wire out;
  wire pc_I;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.PC_GEN " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/Not_All_Bits.PC_GEN[16].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Buffer_Addr[0]),
        .A1(Buffer_Addr[1]),
        .A2(Buffer_Addr[2]),
        .A3(1'b0),
        .CE(IReady),
        .CLK(out),
        .D(pc_I),
        .Q(PC_OF));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_47
   (imm_Value,
    D_22,
    CI,
    DATA_OUTA,
    \Size_17to32.imm_Reg_reg[7] ,
    \Size_17to32.imm_Reg_reg[7]_0 ,
    \Size_17to32.imm_Reg_reg[7]_1 ,
    out,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Reg2_Data);
  output [0:0]imm_Value;
  output D_22;
  input CI;
  input [0:0]DATA_OUTA;
  input \Size_17to32.imm_Reg_reg[7] ;
  input \Size_17to32.imm_Reg_reg[7]_0 ;
  input \Size_17to32.imm_Reg_reg[7]_1 ;
  input out;
  input \Using_FPGA.Native ;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input [0:0]Reg2_Data;

  wire CI;
  wire [0:0]DATA_OUTA;
  wire D_22;
  wire [0:0]Reg2_Data;
  wire \Size_17to32.imm_Reg_reg[7] ;
  wire \Size_17to32.imm_Reg_reg[7]_0 ;
  wire \Size_17to32.imm_Reg_reg[7]_1 ;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire [0:0]imm_Value;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[23].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(\Size_17to32.imm_Reg_reg[7] ),
        .A1(\Size_17to32.imm_Reg_reg[7]_0 ),
        .A2(\Size_17to32.imm_Reg_reg[7]_1 ),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(imm_Value));
  LUT6 #(
    .INIT(64'h88B888BB88B88888)) 
    \Using_FPGA.Native_i_1__44 
       (.I0(imm_Value),
        .I1(\Using_FPGA.Native ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\Using_FPGA.Native_2 ),
        .I5(Reg2_Data),
        .O(D_22));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_48
   (imm_Value,
    D_23,
    CI,
    DATA_OUTA,
    \Size_17to32.imm_Reg_reg[8] ,
    \Size_17to32.imm_Reg_reg[8]_0 ,
    \Size_17to32.imm_Reg_reg[8]_1 ,
    out,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Reg2_Data);
  output [0:0]imm_Value;
  output D_23;
  input CI;
  input [0:0]DATA_OUTA;
  input \Size_17to32.imm_Reg_reg[8] ;
  input \Size_17to32.imm_Reg_reg[8]_0 ;
  input \Size_17to32.imm_Reg_reg[8]_1 ;
  input out;
  input \Using_FPGA.Native ;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input [0:0]Reg2_Data;

  wire CI;
  wire [0:0]DATA_OUTA;
  wire D_23;
  wire [0:0]Reg2_Data;
  wire \Size_17to32.imm_Reg_reg[8] ;
  wire \Size_17to32.imm_Reg_reg[8]_0 ;
  wire \Size_17to32.imm_Reg_reg[8]_1 ;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire [0:0]imm_Value;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[24].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(\Size_17to32.imm_Reg_reg[8] ),
        .A1(\Size_17to32.imm_Reg_reg[8]_0 ),
        .A2(\Size_17to32.imm_Reg_reg[8]_1 ),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(imm_Value));
  LUT6 #(
    .INIT(64'h88B888BB88B88888)) 
    \Using_FPGA.Native_i_1__45 
       (.I0(imm_Value),
        .I1(\Using_FPGA.Native ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\Using_FPGA.Native_2 ),
        .I5(Reg2_Data),
        .O(D_23));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_49
   (\Using_B36_S2.The_BRAMs[12].RAMB36_I1 ,
    D_24,
    Sext80,
    CI,
    DATA_OUTA,
    \Shift_Oper_reg[0] ,
    \Shift_Oper_reg[0]_0 ,
    \Shift_Oper_reg[0]_1 ,
    out,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Reg2_Data,
    Sext8_reg,
    Sext8_reg_0);
  output \Using_B36_S2.The_BRAMs[12].RAMB36_I1 ;
  output D_24;
  output Sext80;
  input CI;
  input [0:0]DATA_OUTA;
  input \Shift_Oper_reg[0] ;
  input \Shift_Oper_reg[0]_0 ;
  input \Shift_Oper_reg[0]_1 ;
  input out;
  input \Using_FPGA.Native ;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input [0:0]Reg2_Data;
  input Sext8_reg;
  input Sext8_reg_0;

  wire CI;
  wire [0:0]DATA_OUTA;
  wire D_24;
  wire [0:0]Reg2_Data;
  wire Sext80;
  wire Sext8_reg;
  wire Sext8_reg_0;
  wire \Shift_Oper_reg[0] ;
  wire \Shift_Oper_reg[0]_0 ;
  wire \Shift_Oper_reg[0]_1 ;
  wire \Using_B36_S2.The_BRAMs[12].RAMB36_I1 ;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire out;

  LUT3 #(
    .INIT(8'h08)) 
    Sext8_i_2
       (.I0(\Using_B36_S2.The_BRAMs[12].RAMB36_I1 ),
        .I1(Sext8_reg),
        .I2(Sext8_reg_0),
        .O(Sext80));
  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[25].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(\Shift_Oper_reg[0] ),
        .A1(\Shift_Oper_reg[0]_0 ),
        .A2(\Shift_Oper_reg[0]_1 ),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(\Using_B36_S2.The_BRAMs[12].RAMB36_I1 ));
  LUT6 #(
    .INIT(64'h88B888BB88B88888)) 
    \Using_FPGA.Native_i_1__46 
       (.I0(\Using_B36_S2.The_BRAMs[12].RAMB36_I1 ),
        .I1(\Using_FPGA.Native ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\Using_FPGA.Native_2 ),
        .I5(Reg2_Data),
        .O(D_24));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_50
   (\Using_B36_S2.The_BRAMs[13].RAMB36_I1 ,
    D_25,
    CI,
    DATA_OUTA,
    \Shift_Oper_reg[1] ,
    \Shift_Oper_reg[1]_0 ,
    \Shift_Oper_reg[1]_1 ,
    out,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Reg2_Data);
  output \Using_B36_S2.The_BRAMs[13].RAMB36_I1 ;
  output D_25;
  input CI;
  input [0:0]DATA_OUTA;
  input \Shift_Oper_reg[1] ;
  input \Shift_Oper_reg[1]_0 ;
  input \Shift_Oper_reg[1]_1 ;
  input out;
  input \Using_FPGA.Native ;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input [0:0]Reg2_Data;

  wire CI;
  wire [0:0]DATA_OUTA;
  wire D_25;
  wire [0:0]Reg2_Data;
  wire \Shift_Oper_reg[1] ;
  wire \Shift_Oper_reg[1]_0 ;
  wire \Shift_Oper_reg[1]_1 ;
  wire \Using_B36_S2.The_BRAMs[13].RAMB36_I1 ;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[26].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(\Shift_Oper_reg[1] ),
        .A1(\Shift_Oper_reg[1]_0 ),
        .A2(\Shift_Oper_reg[1]_1 ),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(\Using_B36_S2.The_BRAMs[13].RAMB36_I1 ));
  LUT6 #(
    .INIT(64'h88B888BB88B88888)) 
    \Using_FPGA.Native_i_1__47 
       (.I0(\Using_B36_S2.The_BRAMs[13].RAMB36_I1 ),
        .I1(\Using_FPGA.Native ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\Using_FPGA.Native_2 ),
        .I5(Reg2_Data),
        .O(D_25));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_51
   (imm_Value,
    D_26,
    CI,
    DATA_OUTA,
    \Size_17to32.imm_Reg_reg[11] ,
    \Size_17to32.imm_Reg_reg[11]_0 ,
    \Size_17to32.imm_Reg_reg[11]_1 ,
    out,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Reg2_Data);
  output [0:0]imm_Value;
  output D_26;
  input CI;
  input [0:0]DATA_OUTA;
  input \Size_17to32.imm_Reg_reg[11] ;
  input \Size_17to32.imm_Reg_reg[11]_0 ;
  input \Size_17to32.imm_Reg_reg[11]_1 ;
  input out;
  input \Using_FPGA.Native ;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input [0:0]Reg2_Data;

  wire CI;
  wire [0:0]DATA_OUTA;
  wire D_26;
  wire [0:0]Reg2_Data;
  wire \Size_17to32.imm_Reg_reg[11] ;
  wire \Size_17to32.imm_Reg_reg[11]_0 ;
  wire \Size_17to32.imm_Reg_reg[11]_1 ;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire [0:0]imm_Value;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[27].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(\Size_17to32.imm_Reg_reg[11] ),
        .A1(\Size_17to32.imm_Reg_reg[11]_0 ),
        .A2(\Size_17to32.imm_Reg_reg[11]_1 ),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(imm_Value));
  LUT6 #(
    .INIT(64'hBBB8BBBBBBB8BB88)) 
    \Using_FPGA.Native_i_1__48 
       (.I0(imm_Value),
        .I1(\Using_FPGA.Native ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\Using_FPGA.Native_2 ),
        .I5(Reg2_Data),
        .O(D_26));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_52
   (imm_Value,
    D_27,
    CI,
    DATA_OUTA,
    \Size_17to32.imm_Reg_reg[12] ,
    \Size_17to32.imm_Reg_reg[12]_0 ,
    \Size_17to32.imm_Reg_reg[12]_1 ,
    out,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Reg2_Data);
  output [0:0]imm_Value;
  output D_27;
  input CI;
  input [0:0]DATA_OUTA;
  input \Size_17to32.imm_Reg_reg[12] ;
  input \Size_17to32.imm_Reg_reg[12]_0 ;
  input \Size_17to32.imm_Reg_reg[12]_1 ;
  input out;
  input \Using_FPGA.Native ;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input [0:0]Reg2_Data;

  wire CI;
  wire [0:0]DATA_OUTA;
  wire D_27;
  wire [0:0]Reg2_Data;
  wire \Size_17to32.imm_Reg_reg[12] ;
  wire \Size_17to32.imm_Reg_reg[12]_0 ;
  wire \Size_17to32.imm_Reg_reg[12]_1 ;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire [0:0]imm_Value;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[28].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(\Size_17to32.imm_Reg_reg[12] ),
        .A1(\Size_17to32.imm_Reg_reg[12]_0 ),
        .A2(\Size_17to32.imm_Reg_reg[12]_1 ),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(imm_Value));
  LUT6 #(
    .INIT(64'h88B888BB88B88888)) 
    \Using_FPGA.Native_i_1__49 
       (.I0(imm_Value),
        .I1(\Using_FPGA.Native ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\Using_FPGA.Native_2 ),
        .I5(Reg2_Data),
        .O(D_27));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_53
   (imm_Value,
    D_28,
    CI,
    DATA_OUTA,
    \Size_17to32.imm_Reg_reg[13] ,
    \Size_17to32.imm_Reg_reg[13]_0 ,
    \Size_17to32.imm_Reg_reg[13]_1 ,
    out,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Reg2_Data);
  output [0:0]imm_Value;
  output D_28;
  input CI;
  input [0:0]DATA_OUTA;
  input \Size_17to32.imm_Reg_reg[13] ;
  input \Size_17to32.imm_Reg_reg[13]_0 ;
  input \Size_17to32.imm_Reg_reg[13]_1 ;
  input out;
  input \Using_FPGA.Native ;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input [0:0]Reg2_Data;

  wire CI;
  wire [0:0]DATA_OUTA;
  wire D_28;
  wire [0:0]Reg2_Data;
  wire \Size_17to32.imm_Reg_reg[13] ;
  wire \Size_17to32.imm_Reg_reg[13]_0 ;
  wire \Size_17to32.imm_Reg_reg[13]_1 ;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire [0:0]imm_Value;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[29].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(\Size_17to32.imm_Reg_reg[13] ),
        .A1(\Size_17to32.imm_Reg_reg[13]_0 ),
        .A2(\Size_17to32.imm_Reg_reg[13]_1 ),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(imm_Value));
  LUT6 #(
    .INIT(64'h88B888BB88B88888)) 
    \Using_FPGA.Native_i_1__50 
       (.I0(imm_Value),
        .I1(\Using_FPGA.Native ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\Using_FPGA.Native_2 ),
        .I5(Reg2_Data),
        .O(D_28));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_54
   (\Using_B36_S2.The_BRAMs[1].RAMB36_I1 ,
    \Using_B36_S2.The_BRAMs[1].RAMB36_I1_0 ,
    CI,
    DATA_OUTA,
    Compare_Instr_reg,
    Compare_Instr_reg_0,
    Compare_Instr_reg_1,
    out,
    Compare_Instr_reg_2,
    Compare_Instr_reg_3,
    Compare_Instr_reg_4);
  output \Using_B36_S2.The_BRAMs[1].RAMB36_I1 ;
  output \Using_B36_S2.The_BRAMs[1].RAMB36_I1_0 ;
  input CI;
  input [0:0]DATA_OUTA;
  input Compare_Instr_reg;
  input Compare_Instr_reg_0;
  input Compare_Instr_reg_1;
  input out;
  input Compare_Instr_reg_2;
  input Compare_Instr_reg_3;
  input Compare_Instr_reg_4;

  wire CI;
  wire Compare_Instr_reg;
  wire Compare_Instr_reg_0;
  wire Compare_Instr_reg_1;
  wire Compare_Instr_reg_2;
  wire Compare_Instr_reg_3;
  wire Compare_Instr_reg_4;
  wire [0:0]DATA_OUTA;
  wire \Using_B36_S2.The_BRAMs[1].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[1].RAMB36_I1_0 ;
  wire out;

  LUT4 #(
    .INIT(16'h0004)) 
    Compare_Instr_i_2
       (.I0(\Using_B36_S2.The_BRAMs[1].RAMB36_I1 ),
        .I1(Compare_Instr_reg_2),
        .I2(Compare_Instr_reg_3),
        .I3(Compare_Instr_reg_4),
        .O(\Using_B36_S2.The_BRAMs[1].RAMB36_I1_0 ));
  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[2].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Compare_Instr_reg),
        .A1(Compare_Instr_reg_0),
        .A2(Compare_Instr_reg_1),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(\Using_B36_S2.The_BRAMs[1].RAMB36_I1 ));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_55
   (imm_Value,
    D_29,
    CI,
    DATA_OUTA,
    Unsigned_Op_reg,
    Unsigned_Op_reg_0,
    Unsigned_Op_reg_1,
    out,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Reg2_Data);
  output [0:0]imm_Value;
  output D_29;
  input CI;
  input [0:0]DATA_OUTA;
  input Unsigned_Op_reg;
  input Unsigned_Op_reg_0;
  input Unsigned_Op_reg_1;
  input out;
  input \Using_FPGA.Native ;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input [0:0]Reg2_Data;

  wire CI;
  wire [0:0]DATA_OUTA;
  wire D_29;
  wire [0:0]Reg2_Data;
  wire Unsigned_Op_reg;
  wire Unsigned_Op_reg_0;
  wire Unsigned_Op_reg_1;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire [0:0]imm_Value;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[30].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Unsigned_Op_reg),
        .A1(Unsigned_Op_reg_0),
        .A2(Unsigned_Op_reg_1),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(imm_Value));
  LUT6 #(
    .INIT(64'h88B888BB88B88888)) 
    \Using_FPGA.Native_i_1__51 
       (.I0(imm_Value),
        .I1(\Using_FPGA.Native ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\Using_FPGA.Native_2 ),
        .I5(Reg2_Data),
        .O(D_29));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_56
   (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    mtsmsr_write_i_reg,
    D_30,
    Sext160,
    CI,
    DATA_OUTA,
    \Size_17to32.imm_Reg_reg[15] ,
    \Size_17to32.imm_Reg_reg[15]_0 ,
    \Size_17to32.imm_Reg_reg[15]_1 ,
    out,
    mtsmsr_write_i_reg_0,
    mtsmsr_write_i_reg_1,
    mtsmsr_write_i_reg_2,
    mtsmsr_write_i_reg_3,
    mtsmsr_write_i_reg_4,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Reg2_Data,
    imm_Value);
  output \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  output mtsmsr_write_i_reg;
  output D_30;
  output Sext160;
  input CI;
  input [0:0]DATA_OUTA;
  input \Size_17to32.imm_Reg_reg[15] ;
  input \Size_17to32.imm_Reg_reg[15]_0 ;
  input \Size_17to32.imm_Reg_reg[15]_1 ;
  input out;
  input mtsmsr_write_i_reg_0;
  input mtsmsr_write_i_reg_1;
  input mtsmsr_write_i_reg_2;
  input mtsmsr_write_i_reg_3;
  input [0:0]mtsmsr_write_i_reg_4;
  input \Using_FPGA.Native ;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input [0:0]Reg2_Data;
  input [1:0]imm_Value;

  wire CI;
  wire [0:0]DATA_OUTA;
  wire D_30;
  wire [0:0]Reg2_Data;
  wire Sext160;
  wire \Size_17to32.imm_Reg_reg[15] ;
  wire \Size_17to32.imm_Reg_reg[15]_0 ;
  wire \Size_17to32.imm_Reg_reg[15]_1 ;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire [1:0]imm_Value;
  wire mtsmsr_write_i_reg;
  wire mtsmsr_write_i_reg_0;
  wire mtsmsr_write_i_reg_1;
  wire mtsmsr_write_i_reg_2;
  wire mtsmsr_write_i_reg_3;
  wire [0:0]mtsmsr_write_i_reg_4;
  wire out;

  LUT3 #(
    .INIT(8'h80)) 
    Sext16_i_1
       (.I0(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .I1(imm_Value[1]),
        .I2(imm_Value[0]),
        .O(Sext160));
  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[31].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(\Size_17to32.imm_Reg_reg[15] ),
        .A1(\Size_17to32.imm_Reg_reg[15]_0 ),
        .A2(\Size_17to32.imm_Reg_reg[15]_1 ),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ));
  LUT6 #(
    .INIT(64'h88B888BB88B88888)) 
    \Using_FPGA.Native_i_1__52 
       (.I0(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .I1(\Using_FPGA.Native ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\Using_FPGA.Native_2 ),
        .I5(Reg2_Data),
        .O(D_30));
  LUT6 #(
    .INIT(64'h0000000002FF0200)) 
    mtsmsr_write_i_i_1
       (.I0(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .I1(mtsmsr_write_i_reg_0),
        .I2(mtsmsr_write_i_reg_1),
        .I3(mtsmsr_write_i_reg_2),
        .I4(mtsmsr_write_i_reg_3),
        .I5(mtsmsr_write_i_reg_4),
        .O(mtsmsr_write_i_reg));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_57
   (\Using_B36_S2.The_BRAMs[1].RAMB36_I1 ,
    \Using_B36_S2.The_BRAMs[1].RAMB36_I1_0 ,
    inHibit_EX_reg,
    \Using_B36_S2.The_BRAMs[1].RAMB36_I1_1 ,
    \Using_B36_S2.The_BRAMs[1].RAMB36_I1_2 ,
    is_swx_I0,
    CI,
    DATA_OUTA,
    is_swx_I_reg,
    is_swx_I_reg_0,
    is_swx_I_reg_1,
    out,
    is_swx_I_reg_2,
    is_swx_I_reg_3,
    is_swx_I_reg_4,
    imm_Value,
    is_lwx_I_reg,
    inHibit_EX_reg_0,
    inHibit_EX,
    inHibit_EX_reg_1,
    inHibit_EX_reg_2,
    inHibit_EX_reg_3,
    \Size_17to32.imm_Reg_reg[15] ,
    \Size_17to32.imm_Reg_reg[15]_0 ,
    inHibit_EX_i_2_0,
    inHibit_EX_i_2_1,
    inHibit_EX_i_2_2);
  output \Using_B36_S2.The_BRAMs[1].RAMB36_I1 ;
  output \Using_B36_S2.The_BRAMs[1].RAMB36_I1_0 ;
  output inHibit_EX_reg;
  output \Using_B36_S2.The_BRAMs[1].RAMB36_I1_1 ;
  output \Using_B36_S2.The_BRAMs[1].RAMB36_I1_2 ;
  output is_swx_I0;
  input CI;
  input [0:0]DATA_OUTA;
  input is_swx_I_reg;
  input is_swx_I_reg_0;
  input is_swx_I_reg_1;
  input out;
  input is_swx_I_reg_2;
  input is_swx_I_reg_3;
  input is_swx_I_reg_4;
  input [0:0]imm_Value;
  input is_lwx_I_reg;
  input inHibit_EX_reg_0;
  input inHibit_EX;
  input inHibit_EX_reg_1;
  input inHibit_EX_reg_2;
  input inHibit_EX_reg_3;
  input \Size_17to32.imm_Reg_reg[15] ;
  input \Size_17to32.imm_Reg_reg[15]_0 ;
  input inHibit_EX_i_2_0;
  input inHibit_EX_i_2_1;
  input inHibit_EX_i_2_2;

  wire CI;
  wire [0:0]DATA_OUTA;
  wire \Size_17to32.imm_Reg_reg[15] ;
  wire \Size_17to32.imm_Reg_reg[15]_0 ;
  wire \Using_B36_S2.The_BRAMs[1].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[1].RAMB36_I1_0 ;
  wire \Using_B36_S2.The_BRAMs[1].RAMB36_I1_1 ;
  wire \Using_B36_S2.The_BRAMs[1].RAMB36_I1_2 ;
  wire [0:0]imm_Value;
  wire inHibit_EX;
  wire inHibit_EX_i_2_0;
  wire inHibit_EX_i_2_1;
  wire inHibit_EX_i_2_2;
  wire inHibit_EX_i_3_n_0;
  wire inHibit_EX_reg;
  wire inHibit_EX_reg_0;
  wire inHibit_EX_reg_1;
  wire inHibit_EX_reg_2;
  wire inHibit_EX_reg_3;
  wire is_lwx_I_reg;
  wire is_swx_I0;
  wire is_swx_I_reg;
  wire is_swx_I_reg_0;
  wire is_swx_I_reg_1;
  wire is_swx_I_reg_2;
  wire is_swx_I_reg_3;
  wire is_swx_I_reg_4;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[3].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(is_swx_I_reg),
        .A1(is_swx_I_reg_0),
        .A2(is_swx_I_reg_1),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(\Using_B36_S2.The_BRAMs[1].RAMB36_I1 ));
  LUT6 #(
    .INIT(64'h0F0B0F0B0A0B0F0B)) 
    inHibit_EX_i_2
       (.I0(inHibit_EX_reg_0),
        .I1(inHibit_EX),
        .I2(inHibit_EX_reg_1),
        .I3(inHibit_EX_reg_2),
        .I4(inHibit_EX_i_3_n_0),
        .I5(inHibit_EX_reg_3),
        .O(inHibit_EX_reg));
  LUT6 #(
    .INIT(64'h0000002A2A2A002A)) 
    inHibit_EX_i_3
       (.I0(\Using_B36_S2.The_BRAMs[1].RAMB36_I1 ),
        .I1(inHibit_EX_i_2_0),
        .I2(inHibit_EX),
        .I3(inHibit_EX_i_2_1),
        .I4(\Size_17to32.imm_Reg_reg[15] ),
        .I5(inHibit_EX_i_2_2),
        .O(inHibit_EX_i_3_n_0));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    is_lwx_I_i_2
       (.I0(\Using_B36_S2.The_BRAMs[1].RAMB36_I1 ),
        .I1(is_swx_I_reg_2),
        .I2(is_swx_I_reg_3),
        .I3(is_swx_I_reg_4),
        .I4(imm_Value),
        .I5(is_lwx_I_reg),
        .O(\Using_B36_S2.The_BRAMs[1].RAMB36_I1_0 ));
  LUT6 #(
    .INIT(64'h0000000000800000)) 
    is_swx_I_i_1
       (.I0(\Using_B36_S2.The_BRAMs[1].RAMB36_I1 ),
        .I1(is_swx_I_reg_2),
        .I2(is_swx_I_reg_3),
        .I3(is_swx_I_reg_4),
        .I4(imm_Value),
        .I5(is_lwx_I_reg),
        .O(is_swx_I0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFDFFF)) 
    using_Imm_i_2
       (.I0(\Using_B36_S2.The_BRAMs[1].RAMB36_I1 ),
        .I1(is_swx_I_reg_3),
        .I2(is_swx_I_reg_2),
        .I3(is_swx_I_reg_4),
        .I4(\Size_17to32.imm_Reg_reg[15] ),
        .I5(\Size_17to32.imm_Reg_reg[15]_0 ),
        .O(\Using_B36_S2.The_BRAMs[1].RAMB36_I1_2 ));
  LUT6 #(
    .INIT(64'h3F3F1F1F3F3F1F3F)) 
    write_Reg_i_6
       (.I0(\Using_B36_S2.The_BRAMs[1].RAMB36_I1 ),
        .I1(is_swx_I_reg_3),
        .I2(is_swx_I_reg_2),
        .I3(is_swx_I_reg_4),
        .I4(\Size_17to32.imm_Reg_reg[15] ),
        .I5(\Size_17to32.imm_Reg_reg[15]_0 ),
        .O(\Using_B36_S2.The_BRAMs[1].RAMB36_I1_1 ));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_58
   (\Using_B36_S2.The_BRAMs[2].RAMB36_I1 ,
    \Using_FPGA.Native ,
    \Using_B36_S2.The_BRAMs[2].RAMB36_I1_0 ,
    \Using_B36_S2.The_BRAMs[2].RAMB36_I1_1 ,
    \Synchronize.use_sync_reset.sync_reg[2] ,
    mbar_first,
    \Using_B36_S2.The_BRAMs[8].RAMB36_I1 ,
    \Using_B36_S2.The_BRAMs[2].RAMB36_I1_2 ,
    \Using_B36_S2.The_BRAMs[14].RAMB36_I1 ,
    \Using_B36_S2.The_BRAMs[5].RAMB36_I1 ,
    \Synchronize.use_sync_reset.sync_reg[2]_0 ,
    \Using_B36_S2.The_BRAMs[1].RAMB36_I1 ,
    \Using_B36_S2.The_BRAMs[2].RAMB36_I1_3 ,
    \Using_B36_S2.The_BRAMs[2].RAMB36_I1_4 ,
    CI,
    DATA_OUTA,
    \Logic_Oper_reg[0] ,
    \Logic_Oper_reg[0]_0 ,
    \Logic_Oper_reg[0]_1 ,
    out,
    S87_out,
    force_Val2_N,
    Sext16_reg,
    \Using_FPGA.Native_0 ,
    write_Reg_reg,
    byte_i_reg,
    \Using_FPGA.Native_1 ,
    Sext16_reg_0,
    Sext16_reg_1,
    Sext16_reg_2,
    \Using_FPGA.set_BIP_I_reg ,
    Sext16_reg_3,
    inHibit_EX,
    mul_Executing_reg,
    mul_Executing_reg_0,
    mul_Executing_reg_1,
    \Using_FPGA.Native_i_1__10 ,
    write_Reg_reg_0,
    \Using_FPGA.Native_i_1__10_0 ,
    imm_Value,
    write_Reg_reg_1,
    write_Reg_reg_2,
    write_Reg_reg_3,
    jump2_I_reg,
    jump2_I_reg_0,
    jump2_I_reg_1,
    Sext16_reg_4,
    take_Intr_Now_II);
  output \Using_B36_S2.The_BRAMs[2].RAMB36_I1 ;
  output \Using_FPGA.Native ;
  output \Using_B36_S2.The_BRAMs[2].RAMB36_I1_0 ;
  output \Using_B36_S2.The_BRAMs[2].RAMB36_I1_1 ;
  output \Synchronize.use_sync_reset.sync_reg[2] ;
  output mbar_first;
  output \Using_B36_S2.The_BRAMs[8].RAMB36_I1 ;
  output \Using_B36_S2.The_BRAMs[2].RAMB36_I1_2 ;
  output \Using_B36_S2.The_BRAMs[14].RAMB36_I1 ;
  output \Using_B36_S2.The_BRAMs[5].RAMB36_I1 ;
  output \Synchronize.use_sync_reset.sync_reg[2]_0 ;
  output \Using_B36_S2.The_BRAMs[1].RAMB36_I1 ;
  output \Using_B36_S2.The_BRAMs[2].RAMB36_I1_3 ;
  output \Using_B36_S2.The_BRAMs[2].RAMB36_I1_4 ;
  input CI;
  input [0:0]DATA_OUTA;
  input \Logic_Oper_reg[0] ;
  input \Logic_Oper_reg[0]_0 ;
  input \Logic_Oper_reg[0]_1 ;
  input out;
  input S87_out;
  input force_Val2_N;
  input Sext16_reg;
  input \Using_FPGA.Native_0 ;
  input write_Reg_reg;
  input byte_i_reg;
  input \Using_FPGA.Native_1 ;
  input Sext16_reg_0;
  input Sext16_reg_1;
  input Sext16_reg_2;
  input \Using_FPGA.set_BIP_I_reg ;
  input [0:0]Sext16_reg_3;
  input inHibit_EX;
  input mul_Executing_reg;
  input mul_Executing_reg_0;
  input mul_Executing_reg_1;
  input \Using_FPGA.Native_i_1__10 ;
  input write_Reg_reg_0;
  input \Using_FPGA.Native_i_1__10_0 ;
  input [1:0]imm_Value;
  input write_Reg_reg_1;
  input write_Reg_reg_2;
  input write_Reg_reg_3;
  input jump2_I_reg;
  input jump2_I_reg_0;
  input jump2_I_reg_1;
  input Sext16_reg_4;
  input take_Intr_Now_II;

  wire CI;
  wire [0:0]DATA_OUTA;
  wire \Logic_Oper_reg[0] ;
  wire \Logic_Oper_reg[0]_0 ;
  wire \Logic_Oper_reg[0]_1 ;
  wire S87_out;
  wire Sext16_reg;
  wire Sext16_reg_0;
  wire Sext16_reg_1;
  wire Sext16_reg_2;
  wire [0:0]Sext16_reg_3;
  wire Sext16_reg_4;
  wire \Synchronize.use_sync_reset.sync_reg[2] ;
  wire \Synchronize.use_sync_reset.sync_reg[2]_0 ;
  wire \Using_B36_S2.The_BRAMs[14].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[1].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[2].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[2].RAMB36_I1_0 ;
  wire \Using_B36_S2.The_BRAMs[2].RAMB36_I1_1 ;
  wire \Using_B36_S2.The_BRAMs[2].RAMB36_I1_2 ;
  wire \Using_B36_S2.The_BRAMs[2].RAMB36_I1_3 ;
  wire \Using_B36_S2.The_BRAMs[2].RAMB36_I1_4 ;
  wire \Using_B36_S2.The_BRAMs[5].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[8].RAMB36_I1 ;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_i_1__10 ;
  wire \Using_FPGA.Native_i_1__10_0 ;
  wire \Using_FPGA.set_BIP_I_reg ;
  wire byte_i_reg;
  wire force_Val2_N;
  wire [1:0]imm_Value;
  wire inHibit_EX;
  wire jump2_I_i_3_n_0;
  wire jump2_I_reg;
  wire jump2_I_reg_0;
  wire jump2_I_reg_1;
  wire mbar_first;
  wire mbar_first_i_2_n_0;
  wire mul_Executing_reg;
  wire mul_Executing_reg_0;
  wire mul_Executing_reg_1;
  wire out;
  wire take_Intr_Now_II;
  wire write_Reg_i_4_n_0;
  wire write_Reg_reg;
  wire write_Reg_reg_0;
  wire write_Reg_reg_1;
  wire write_Reg_reg_2;
  wire write_Reg_reg_3;

  LUT4 #(
    .INIT(16'hFBAA)) 
    Sext8_i_1
       (.I0(Sext16_reg_3),
        .I1(\Using_B36_S2.The_BRAMs[2].RAMB36_I1_1 ),
        .I2(Sext16_reg_4),
        .I3(Sext16_reg),
        .O(\Synchronize.use_sync_reset.sync_reg[2]_0 ));
  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[4].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(\Logic_Oper_reg[0] ),
        .A1(\Logic_Oper_reg[0]_0 ),
        .A2(\Logic_Oper_reg[0]_1 ),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(\Using_B36_S2.The_BRAMs[2].RAMB36_I1 ));
  LUT6 #(
    .INIT(64'hFEFEFEFEAEAEFEAE)) 
    \Using_FPGA.Native_i_1__97 
       (.I0(S87_out),
        .I1(force_Val2_N),
        .I2(Sext16_reg),
        .I3(\Using_B36_S2.The_BRAMs[2].RAMB36_I1_0 ),
        .I4(\Using_FPGA.Native_0 ),
        .I5(write_Reg_reg),
        .O(\Using_FPGA.Native ));
  LUT6 #(
    .INIT(64'h1010101010100010)) 
    \Using_FPGA.Native_i_2 
       (.I0(\Using_FPGA.Native_i_1__10 ),
        .I1(write_Reg_reg),
        .I2(\Using_B36_S2.The_BRAMs[2].RAMB36_I1_0 ),
        .I3(\Using_B36_S2.The_BRAMs[2].RAMB36_I1_2 ),
        .I4(write_Reg_reg_0),
        .I5(\Using_FPGA.Native_i_1__10_0 ),
        .O(\Using_B36_S2.The_BRAMs[8].RAMB36_I1 ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT5 #(
    .INIT(32'hFFDFFFFF)) 
    \Using_FPGA.Native_i_2__1 
       (.I0(\Using_B36_S2.The_BRAMs[2].RAMB36_I1 ),
        .I1(byte_i_reg),
        .I2(Sext16_reg_0),
        .I3(Sext16_reg_1),
        .I4(Sext16_reg_2),
        .O(\Using_B36_S2.The_BRAMs[2].RAMB36_I1_0 ));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    \Using_FPGA.Native_i_2__4 
       (.I0(\Using_B36_S2.The_BRAMs[2].RAMB36_I1_2 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(take_Intr_Now_II),
        .O(\Using_B36_S2.The_BRAMs[1].RAMB36_I1 ));
  LUT6 #(
    .INIT(64'h0000040000000000)) 
    \Using_FPGA.Native_i_3 
       (.I0(\Using_B36_S2.The_BRAMs[2].RAMB36_I1 ),
        .I1(byte_i_reg),
        .I2(\Using_FPGA.Native_1 ),
        .I3(Sext16_reg_0),
        .I4(Sext16_reg_1),
        .I5(Sext16_reg_2),
        .O(\Using_B36_S2.The_BRAMs[2].RAMB36_I1_2 ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \Using_FPGA.Native_i_3__12 
       (.I0(\Using_B36_S2.The_BRAMs[2].RAMB36_I1 ),
        .I1(Sext16_reg_2),
        .I2(Sext16_reg_1),
        .O(\Using_B36_S2.The_BRAMs[2].RAMB36_I1_4 ));
  LUT5 #(
    .INIT(32'h00000C4C)) 
    \Using_FPGA.set_BIP_I_i_1 
       (.I0(\Using_B36_S2.The_BRAMs[2].RAMB36_I1_0 ),
        .I1(\Using_FPGA.set_BIP_I_reg ),
        .I2(Sext16_reg),
        .I3(write_Reg_reg),
        .I4(Sext16_reg_3),
        .O(\Synchronize.use_sync_reset.sync_reg[2] ));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT2 #(
    .INIT(4'h1)) 
    byte_i_i_2
       (.I0(\Using_B36_S2.The_BRAMs[2].RAMB36_I1 ),
        .I1(byte_i_reg),
        .O(\Using_B36_S2.The_BRAMs[2].RAMB36_I1_3 ));
  LUT6 #(
    .INIT(64'h000000000000CAF0)) 
    jump2_I_i_1
       (.I0(jump2_I_reg),
        .I1(jump2_I_reg_0),
        .I2(byte_i_reg),
        .I3(\Using_B36_S2.The_BRAMs[2].RAMB36_I1 ),
        .I4(jump2_I_reg_1),
        .I5(jump2_I_i_3_n_0),
        .O(\Using_B36_S2.The_BRAMs[5].RAMB36_I1 ));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT4 #(
    .INIT(16'hCDFF)) 
    jump2_I_i_3
       (.I0(\Using_B36_S2.The_BRAMs[2].RAMB36_I1 ),
        .I1(Sext16_reg_1),
        .I2(\Using_FPGA.Native_1 ),
        .I3(Sext16_reg_2),
        .O(jump2_I_i_3_n_0));
  LUT6 #(
    .INIT(64'hFFEFEFEF00202020)) 
    mbar_first_i_1
       (.I0(mbar_first_i_2_n_0),
        .I1(write_Reg_reg),
        .I2(Sext16_reg),
        .I3(inHibit_EX),
        .I4(mul_Executing_reg),
        .I5(mul_Executing_reg_0),
        .O(mbar_first));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'h40)) 
    mbar_first_i_2
       (.I0(\Using_B36_S2.The_BRAMs[2].RAMB36_I1_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(mul_Executing_reg_1),
        .O(mbar_first_i_2_n_0));
  LUT5 #(
    .INIT(32'hBBBFAAAA)) 
    write_Reg_i_2
       (.I0(write_Reg_reg),
        .I1(\Using_B36_S2.The_BRAMs[2].RAMB36_I1_1 ),
        .I2(imm_Value[0]),
        .I3(imm_Value[1]),
        .I4(write_Reg_i_4_n_0),
        .O(\Using_B36_S2.The_BRAMs[14].RAMB36_I1 ));
  LUT6 #(
    .INIT(64'h0000010000000000)) 
    write_Reg_i_3
       (.I0(\Using_B36_S2.The_BRAMs[2].RAMB36_I1 ),
        .I1(byte_i_reg),
        .I2(\Using_FPGA.Native_1 ),
        .I3(Sext16_reg_0),
        .I4(Sext16_reg_1),
        .I5(Sext16_reg_2),
        .O(\Using_B36_S2.The_BRAMs[2].RAMB36_I1_1 ));
  LUT6 #(
    .INIT(64'h4FFF444444444444)) 
    write_Reg_i_4
       (.I0(\Using_B36_S2.The_BRAMs[2].RAMB36_I1_0 ),
        .I1(write_Reg_reg_1),
        .I2(\Using_B36_S2.The_BRAMs[2].RAMB36_I1_2 ),
        .I3(write_Reg_reg_0),
        .I4(write_Reg_reg_2),
        .I5(write_Reg_reg_3),
        .O(write_Reg_i_4_n_0));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_59
   (\Using_B36_S2.The_BRAMs[2].RAMB36_I1 ,
    force_Val1_i24_out,
    \Using_B36_S2.The_BRAMs[2].RAMB36_I1_0 ,
    Reg_Test_Equal_N_i7_out,
    \Using_B36_S2.The_BRAMs[2].RAMB36_I1_1 ,
    \Using_B36_S2.The_BRAMs[2].RAMB36_I1_2 ,
    \Using_B36_S2.The_BRAMs[2].RAMB36_I1_3 ,
    CI,
    DATA_OUTA,
    \Logic_Oper_reg[1] ,
    \Logic_Oper_reg[1]_0 ,
    \Logic_Oper_reg[1]_1 ,
    out,
    \Using_FPGA.Native ,
    instr_OF,
    \Using_FPGA.Native_0 ,
    doublet_i_reg,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    write_Reg_i_4);
  output \Using_B36_S2.The_BRAMs[2].RAMB36_I1 ;
  output force_Val1_i24_out;
  output \Using_B36_S2.The_BRAMs[2].RAMB36_I1_0 ;
  output Reg_Test_Equal_N_i7_out;
  output \Using_B36_S2.The_BRAMs[2].RAMB36_I1_1 ;
  output \Using_B36_S2.The_BRAMs[2].RAMB36_I1_2 ;
  output \Using_B36_S2.The_BRAMs[2].RAMB36_I1_3 ;
  input CI;
  input [0:0]DATA_OUTA;
  input \Logic_Oper_reg[1] ;
  input \Logic_Oper_reg[1]_0 ;
  input \Logic_Oper_reg[1]_1 ;
  input out;
  input \Using_FPGA.Native ;
  input [2:0]instr_OF;
  input \Using_FPGA.Native_0 ;
  input doublet_i_reg;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input write_Reg_i_4;

  wire CI;
  wire [0:0]DATA_OUTA;
  wire \Logic_Oper_reg[1] ;
  wire \Logic_Oper_reg[1]_0 ;
  wire \Logic_Oper_reg[1]_1 ;
  wire Reg_Test_Equal_N_i7_out;
  wire \Using_B36_S2.The_BRAMs[2].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[2].RAMB36_I1_0 ;
  wire \Using_B36_S2.The_BRAMs[2].RAMB36_I1_1 ;
  wire \Using_B36_S2.The_BRAMs[2].RAMB36_I1_2 ;
  wire \Using_B36_S2.The_BRAMs[2].RAMB36_I1_3 ;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire doublet_i_reg;
  wire force_Val1_i24_out;
  wire [2:0]instr_OF;
  wire out;
  wire write_Reg_i_4;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[5].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(\Logic_Oper_reg[1] ),
        .A1(\Logic_Oper_reg[1]_0 ),
        .A2(\Logic_Oper_reg[1]_1 ),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(\Using_B36_S2.The_BRAMs[2].RAMB36_I1 ));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT4 #(
    .INIT(16'h0200)) 
    \Using_FPGA.Native_i_1__15 
       (.I0(\Using_B36_S2.The_BRAMs[2].RAMB36_I1_0 ),
        .I1(\Using_FPGA.Native ),
        .I2(instr_OF[2]),
        .I3(instr_OF[1]),
        .O(force_Val1_i24_out));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT5 #(
    .INIT(32'h00020200)) 
    \Using_FPGA.Native_i_1__17 
       (.I0(\Using_B36_S2.The_BRAMs[2].RAMB36_I1_0 ),
        .I1(\Using_FPGA.Native ),
        .I2(instr_OF[1]),
        .I3(instr_OF[2]),
        .I4(instr_OF[0]),
        .O(Reg_Test_Equal_N_i7_out));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    \Using_FPGA.Native_i_2__3 
       (.I0(\Using_B36_S2.The_BRAMs[2].RAMB36_I1 ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(doublet_i_reg),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\Using_FPGA.Native_2 ),
        .O(\Using_B36_S2.The_BRAMs[2].RAMB36_I1_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    doublet_i_i_1
       (.I0(\Using_B36_S2.The_BRAMs[2].RAMB36_I1 ),
        .I1(doublet_i_reg),
        .O(\Using_B36_S2.The_BRAMs[2].RAMB36_I1_3 ));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT2 #(
    .INIT(4'hB)) 
    is_lwx_I_i_3
       (.I0(\Using_B36_S2.The_BRAMs[2].RAMB36_I1 ),
        .I1(doublet_i_reg),
        .O(\Using_B36_S2.The_BRAMs[2].RAMB36_I1_2 ));
  LUT6 #(
    .INIT(64'hFFFF7F7FFFFF7FFF)) 
    write_Reg_i_5
       (.I0(\Using_B36_S2.The_BRAMs[2].RAMB36_I1 ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_2 ),
        .I3(write_Reg_i_4),
        .I4(\Using_FPGA.Native_1 ),
        .I5(doublet_i_reg),
        .O(\Using_B36_S2.The_BRAMs[2].RAMB36_I1_1 ));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_60
   (\Using_B36_S2.The_BRAMs[3].RAMB36_I1 ,
    D,
    CI,
    DATA_OUTA,
    mbar_is_sleep_reg,
    mbar_is_sleep_reg_0,
    mbar_is_sleep_reg_1,
    out,
    \write_Addr_I_reg[0] ,
    \write_Addr_I_reg[0]_0 );
  output \Using_B36_S2.The_BRAMs[3].RAMB36_I1 ;
  output [0:0]D;
  input CI;
  input [0:0]DATA_OUTA;
  input mbar_is_sleep_reg;
  input mbar_is_sleep_reg_0;
  input mbar_is_sleep_reg_1;
  input out;
  input \write_Addr_I_reg[0] ;
  input [0:0]\write_Addr_I_reg[0]_0 ;

  wire CI;
  wire [0:0]D;
  wire [0:0]DATA_OUTA;
  wire \Using_B36_S2.The_BRAMs[3].RAMB36_I1 ;
  wire mbar_is_sleep_reg;
  wire mbar_is_sleep_reg_0;
  wire mbar_is_sleep_reg_1;
  wire out;
  wire \write_Addr_I_reg[0] ;
  wire [0:0]\write_Addr_I_reg[0]_0 ;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[6].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(mbar_is_sleep_reg),
        .A1(mbar_is_sleep_reg_0),
        .A2(mbar_is_sleep_reg_1),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(\Using_B36_S2.The_BRAMs[3].RAMB36_I1 ));
  LUT3 #(
    .INIT(8'h02)) 
    \write_Addr_I[0]_i_2 
       (.I0(\Using_B36_S2.The_BRAMs[3].RAMB36_I1 ),
        .I1(\write_Addr_I_reg[0] ),
        .I2(\write_Addr_I_reg[0]_0 ),
        .O(D));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_61
   (D,
    CI,
    DATA_OUTA,
    \write_Addr_I_reg[1] ,
    \write_Addr_I_reg[1]_0 ,
    \write_Addr_I_reg[1]_1 ,
    out,
    \write_Addr_I_reg[1]_2 ,
    \write_Addr_I_reg[1]_3 );
  output [0:0]D;
  input CI;
  input [0:0]DATA_OUTA;
  input \write_Addr_I_reg[1] ;
  input \write_Addr_I_reg[1]_0 ;
  input \write_Addr_I_reg[1]_1 ;
  input out;
  input [0:0]\write_Addr_I_reg[1]_2 ;
  input \write_Addr_I_reg[1]_3 ;

  wire CI;
  wire [0:0]D;
  wire [0:0]DATA_OUTA;
  wire [7:7]instr_OF;
  wire out;
  wire \write_Addr_I_reg[1] ;
  wire \write_Addr_I_reg[1]_0 ;
  wire \write_Addr_I_reg[1]_1 ;
  wire [0:0]\write_Addr_I_reg[1]_2 ;
  wire \write_Addr_I_reg[1]_3 ;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[7].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(\write_Addr_I_reg[1] ),
        .A1(\write_Addr_I_reg[1]_0 ),
        .A2(\write_Addr_I_reg[1]_1 ),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(instr_OF));
  LUT3 #(
    .INIT(8'h54)) 
    \write_Addr_I[1]_i_1 
       (.I0(\write_Addr_I_reg[1]_2 ),
        .I1(instr_OF),
        .I2(\write_Addr_I_reg[1]_3 ),
        .O(D));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_62
   (instr_OF,
    D,
    CI,
    DATA_OUTA,
    \write_Addr_I_reg[2] ,
    \write_Addr_I_reg[2]_0 ,
    \write_Addr_I_reg[2]_1 ,
    out,
    \write_Addr_I_reg[2]_2 ,
    \write_Addr_I_reg[2]_3 );
  output [0:0]instr_OF;
  output [0:0]D;
  input CI;
  input [0:0]DATA_OUTA;
  input \write_Addr_I_reg[2] ;
  input \write_Addr_I_reg[2]_0 ;
  input \write_Addr_I_reg[2]_1 ;
  input out;
  input [0:0]\write_Addr_I_reg[2]_2 ;
  input \write_Addr_I_reg[2]_3 ;

  wire CI;
  wire [0:0]D;
  wire [0:0]DATA_OUTA;
  wire [0:0]instr_OF;
  wire out;
  wire \write_Addr_I_reg[2] ;
  wire \write_Addr_I_reg[2]_0 ;
  wire \write_Addr_I_reg[2]_1 ;
  wire [0:0]\write_Addr_I_reg[2]_2 ;
  wire \write_Addr_I_reg[2]_3 ;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[8].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(\write_Addr_I_reg[2] ),
        .A1(\write_Addr_I_reg[2]_0 ),
        .A2(\write_Addr_I_reg[2]_1 ),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(instr_OF));
  LUT3 #(
    .INIT(8'h54)) 
    \write_Addr_I[2]_i_1 
       (.I0(\write_Addr_I_reg[2]_2 ),
        .I1(instr_OF),
        .I2(\write_Addr_I_reg[2]_3 ),
        .O(D));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module c2c_gth_in_system_ibert_0_MB_SRL16E_63
   (instr_OF,
    D,
    reset_BIP_I8_out,
    CI,
    DATA_OUTA,
    \Using_FPGA.reset_BIP_I_reg ,
    \Using_FPGA.reset_BIP_I_reg_0 ,
    \Using_FPGA.reset_BIP_I_reg_1 ,
    out,
    \write_Addr_I_reg[3] ,
    \write_Addr_I_reg[3]_0 ,
    \Using_FPGA.reset_BIP_I_reg_2 );
  output [0:0]instr_OF;
  output [0:0]D;
  output reset_BIP_I8_out;
  input CI;
  input [0:0]DATA_OUTA;
  input \Using_FPGA.reset_BIP_I_reg ;
  input \Using_FPGA.reset_BIP_I_reg_0 ;
  input \Using_FPGA.reset_BIP_I_reg_1 ;
  input out;
  input [0:0]\write_Addr_I_reg[3] ;
  input \write_Addr_I_reg[3]_0 ;
  input \Using_FPGA.reset_BIP_I_reg_2 ;

  wire CI;
  wire [0:0]D;
  wire [0:0]DATA_OUTA;
  wire \Using_FPGA.reset_BIP_I_reg ;
  wire \Using_FPGA.reset_BIP_I_reg_0 ;
  wire \Using_FPGA.reset_BIP_I_reg_1 ;
  wire \Using_FPGA.reset_BIP_I_reg_2 ;
  wire [0:0]instr_OF;
  wire out;
  wire reset_BIP_I8_out;
  wire [0:0]\write_Addr_I_reg[3] ;
  wire \write_Addr_I_reg[3]_0 ;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers " *) 
  (* srl_name = "inst/\mcs_0/microblaze_I/MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[9].SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(\Using_FPGA.reset_BIP_I_reg ),
        .A1(\Using_FPGA.reset_BIP_I_reg_0 ),
        .A2(\Using_FPGA.reset_BIP_I_reg_1 ),
        .A3(1'b0),
        .CE(CI),
        .CLK(out),
        .D(DATA_OUTA),
        .Q(instr_OF));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \Using_FPGA.reset_BIP_I_i_1 
       (.I0(instr_OF),
        .I1(\Using_FPGA.reset_BIP_I_reg_2 ),
        .I2(\write_Addr_I_reg[3]_0 ),
        .O(reset_BIP_I8_out));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT3 #(
    .INIT(8'h54)) 
    \write_Addr_I[3]_i_1 
       (.I0(\write_Addr_I_reg[3] ),
        .I1(instr_OF),
        .I2(\write_Addr_I_reg[3]_0 ),
        .O(D));
endmodule

module c2c_gth_in_system_ibert_0_MSR_Reg
   (MSR,
    I3,
    I3_0,
    I3_1,
    I3_2,
    MSR_Rst,
    \Using_FPGA.Native ,
    out,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    PC_OF,
    \Using_FPGA.Native_5 );
  output [2:0]MSR;
  output I3;
  output I3_0;
  output I3_1;
  output I3_2;
  input MSR_Rst;
  input \Using_FPGA.Native ;
  input out;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;
  input PC_OF;
  input \Using_FPGA.Native_5 ;

  wire I3;
  wire I3_0;
  wire I3_1;
  wire I3_2;
  wire [2:0]MSR;
  wire MSR_Rst;
  wire PC_OF;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire out;

  c2c_gth_in_system_ibert_0_MSR_Reg_Bit \MSR_Bits[28].Using_MSR_Reg_Bit.MSR_Reg_Bit_I 
       (.I3_1(I3_1),
        .MSR(MSR[2]),
        .MSR_Rst(MSR_Rst),
        .PC_OF(PC_OF),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_4 ),
        .out(out));
  c2c_gth_in_system_ibert_0_MSR_Reg_Bit_614 \MSR_Bits[29].Using_MSR_Reg_Bit.MSR_Reg_Bit_I 
       (.I3(I3),
        .I3_2(I3_2),
        .MSR(MSR[1]),
        .\Using_FPGA.Native (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_4 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_5 ),
        .out(out));
  c2c_gth_in_system_ibert_0_MSR_Reg_Bit_615 \MSR_Bits[30].Using_MSR_Reg_Bit.MSR_Reg_Bit_I 
       (.I3_0(I3_0),
        .MSR(MSR[0]),
        .\Using_FPGA.Native (\Using_FPGA.Native_2 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_3 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_4 ),
        .out(out));
endmodule

module c2c_gth_in_system_ibert_0_MSR_Reg_Bit
   (MSR,
    I3_1,
    MSR_Rst,
    \Using_FPGA.Native ,
    out,
    \Using_FPGA.Native_0 ,
    PC_OF);
  output [0:0]MSR;
  output I3_1;
  input MSR_Rst;
  input \Using_FPGA.Native ;
  input out;
  input \Using_FPGA.Native_0 ;
  input PC_OF;

  wire I3_1;
  wire [0:0]MSR;
  wire MSR_Rst;
  wire PC_OF;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire out;

  c2c_gth_in_system_ibert_0_MB_FDRSE_618 MSR_I
       (.I3_1(I3_1),
        .MSR(MSR),
        .MSR_Rst(MSR_Rst),
        .PC_OF(PC_OF),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .out(out));
endmodule

(* ORIG_REF_NAME = "MSR_Reg_Bit" *) 
module c2c_gth_in_system_ibert_0_MSR_Reg_Bit_614
   (MSR,
    I3,
    I3_2,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    out,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 );
  output [0:0]MSR;
  output I3;
  output I3_2;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input out;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;

  wire I3;
  wire I3_2;
  wire [0:0]MSR;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire out;

  c2c_gth_in_system_ibert_0_MB_FDRSE_617 MSR_I
       (.I3(I3),
        .I3_2(I3_2),
        .MSR(MSR),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_2 ),
        .out(out));
endmodule

(* ORIG_REF_NAME = "MSR_Reg_Bit" *) 
module c2c_gth_in_system_ibert_0_MSR_Reg_Bit_615
   (MSR,
    I3_0,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    out,
    \Using_FPGA.Native_1 );
  output [0:0]MSR;
  output I3_0;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input out;
  input \Using_FPGA.Native_1 ;

  wire I3_0;
  wire [0:0]MSR;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire out;

  c2c_gth_in_system_ibert_0_MB_FDRSE_616 MSR_I
       (.I3_0(I3_0),
        .MSR(MSR),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_1 ),
        .out(out));
endmodule

module c2c_gth_in_system_ibert_0_MicroBlaze
   (nonvalid_IFetch_n_reg,
    O,
    byte_i_reg,
    DATA_INB,
    dlmb_M_ABus,
    ilmb_M_AddrStrobe,
    inHibit_EX_reg,
    dlmb_port_BRAM_WEN,
    lmb_reg_write0,
    IO_Write_Strobe,
    IO_Addr_Strobe0,
    IO_Read_Strobe,
    io_read_keep,
    lmb_reg_read0,
    dlmb_M_AddrStrobe,
    lmb_select,
    ADDRARDADDR,
    DATA_OUTA,
    out,
    dlmb_LMB_Ready,
    ilmb_Sl_Ready,
    inHibit_EX_reg_0,
    Sl_Rdy,
    lmb_as,
    ex_Valid_reg,
    load_Store_i_reg,
    lmb_as_0,
    Sl_Rdy_1,
    load_Store_i_reg_0,
    mb_rdy_o,
    extend_Data_Read,
    dlmb_LMB_ReadDBus,
    ilmb_LMB_Rst);
  output nonvalid_IFetch_n_reg;
  output O;
  output byte_i_reg;
  output [0:31]DATA_INB;
  output [0:31]dlmb_M_ABus;
  output ilmb_M_AddrStrobe;
  output inHibit_EX_reg;
  output [0:3]dlmb_port_BRAM_WEN;
  output lmb_reg_write0;
  output IO_Write_Strobe;
  output IO_Addr_Strobe0;
  output IO_Read_Strobe;
  output io_read_keep;
  output lmb_reg_read0;
  output dlmb_M_AddrStrobe;
  output lmb_select;
  output [13:0]ADDRARDADDR;
  input [0:31]DATA_OUTA;
  input out;
  input dlmb_LMB_Ready;
  input ilmb_Sl_Ready;
  input inHibit_EX_reg_0;
  input Sl_Rdy;
  input lmb_as;
  input ex_Valid_reg;
  input load_Store_i_reg;
  input lmb_as_0;
  input Sl_Rdy_1;
  input load_Store_i_reg_0;
  input mb_rdy_o;
  input [15:0]extend_Data_Read;
  input [15:0]dlmb_LMB_ReadDBus;
  input ilmb_LMB_Rst;

  wire [13:0]ADDRARDADDR;
  wire [0:31]DATA_INB;
  wire [0:31]DATA_OUTA;
  wire IO_Addr_Strobe0;
  wire IO_Read_Strobe;
  wire IO_Write_Strobe;
  wire O;
  wire Sl_Rdy;
  wire Sl_Rdy_1;
  wire byte_i_reg;
  wire [15:0]dlmb_LMB_ReadDBus;
  wire dlmb_LMB_Ready;
  wire [0:31]dlmb_M_ABus;
  wire dlmb_M_AddrStrobe;
  wire [0:3]dlmb_port_BRAM_WEN;
  wire ex_Valid_reg;
  wire [15:0]extend_Data_Read;
  wire ilmb_LMB_Rst;
  wire ilmb_M_AddrStrobe;
  wire ilmb_Sl_Ready;
  wire inHibit_EX_reg;
  wire inHibit_EX_reg_0;
  wire io_read_keep;
  wire lmb_as;
  wire lmb_as_0;
  wire lmb_reg_read0;
  wire lmb_reg_write0;
  wire lmb_select;
  wire load_Store_i_reg;
  wire load_Store_i_reg_0;
  wire mb_rdy_o;
  wire nonvalid_IFetch_n_reg;
  wire out;

  c2c_gth_in_system_ibert_0_MicroBlaze_Core MicroBlaze_Core_I
       (.ADDRARDADDR(ADDRARDADDR),
        .DATA_INB(DATA_INB),
        .DATA_OUTA(DATA_OUTA),
        .IO_Addr_Strobe0(IO_Addr_Strobe0),
        .IO_Read_Strobe(IO_Read_Strobe),
        .IO_Write_Strobe(IO_Write_Strobe),
        .O(O),
        .Sl_Rdy(Sl_Rdy),
        .Sl_Rdy_1(Sl_Rdy_1),
        .byte_i_reg(byte_i_reg),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus),
        .dlmb_LMB_Ready(dlmb_LMB_Ready),
        .dlmb_M_ABus(dlmb_M_ABus),
        .dlmb_M_AddrStrobe(dlmb_M_AddrStrobe),
        .dlmb_port_BRAM_WEN(dlmb_port_BRAM_WEN),
        .ex_Valid_reg(ex_Valid_reg),
        .extend_Data_Read(extend_Data_Read),
        .iFetch_In_Progress_reg(ilmb_M_AddrStrobe),
        .ilmb_LMB_Rst(ilmb_LMB_Rst),
        .ilmb_Sl_Ready(ilmb_Sl_Ready),
        .inHibit_EX_reg(inHibit_EX_reg),
        .inHibit_EX_reg_0(inHibit_EX_reg_0),
        .io_read_keep(io_read_keep),
        .lmb_as(lmb_as),
        .lmb_as_0(lmb_as_0),
        .lmb_reg_read0(lmb_reg_read0),
        .lmb_reg_write0(lmb_reg_write0),
        .lmb_select(lmb_select),
        .load_Store_i_reg(load_Store_i_reg),
        .load_Store_i_reg_0(load_Store_i_reg_0),
        .mb_rdy_o(mb_rdy_o),
        .nonvalid_IFetch_n_reg(nonvalid_IFetch_n_reg),
        .out(out));
endmodule

module c2c_gth_in_system_ibert_0_MicroBlaze_Area
   (nonvalid_IFetch_n_reg,
    jump,
    take_Intr_Now_III,
    O,
    byte_i_reg,
    DATA_INB,
    dlmb_M_ABus,
    iFetch_In_Progress_reg,
    inHibit_EX_reg,
    dlmb_port_BRAM_WEN,
    lmb_reg_write0,
    IO_Write_Strobe,
    IO_Addr_Strobe0,
    IO_Read_Strobe,
    io_read_keep,
    lmb_reg_read0,
    dlmb_M_AddrStrobe,
    lmb_select,
    ADDRARDADDR,
    DATA_OUTA,
    out,
    S,
    dlmb_LMB_Ready,
    ilmb_Sl_Ready,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    \Using_FPGA.Native ,
    inHibit_EX_reg_0,
    Sl_Rdy,
    lmb_as,
    ex_Valid_reg,
    \Using_LWX_SWX_instr.reservation_reg ,
    load_Store_i_reg,
    lmb_as_0,
    Sl_Rdy_1,
    load_Store_i_reg_0,
    mb_rdy_o,
    extend_Data_Read,
    dlmb_LMB_ReadDBus);
  output nonvalid_IFetch_n_reg;
  output jump;
  output take_Intr_Now_III;
  output O;
  output byte_i_reg;
  output [0:31]DATA_INB;
  output [0:31]dlmb_M_ABus;
  output iFetch_In_Progress_reg;
  output inHibit_EX_reg;
  output [0:3]dlmb_port_BRAM_WEN;
  output lmb_reg_write0;
  output IO_Write_Strobe;
  output IO_Addr_Strobe0;
  output IO_Read_Strobe;
  output io_read_keep;
  output lmb_reg_read0;
  output dlmb_M_AddrStrobe;
  output lmb_select;
  output [13:0]ADDRARDADDR;
  input [0:31]DATA_OUTA;
  input out;
  input S;
  input dlmb_LMB_Ready;
  input ilmb_Sl_Ready;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input [0:0]\Using_FPGA.Native ;
  input inHibit_EX_reg_0;
  input Sl_Rdy;
  input lmb_as;
  input ex_Valid_reg;
  input \Using_LWX_SWX_instr.reservation_reg ;
  input load_Store_i_reg;
  input lmb_as_0;
  input Sl_Rdy_1;
  input load_Store_i_reg_0;
  input mb_rdy_o;
  input [15:0]extend_Data_Read;
  input [15:0]dlmb_LMB_ReadDBus;

  wire [13:0]ADDRARDADDR;
  wire [0:31]DATA_INB;
  wire [0:31]DATA_OUTA;
  wire Data_Flow_I_n_107;
  wire Data_Flow_I_n_108;
  wire Data_Flow_I_n_109;
  wire Data_Flow_I_n_110;
  wire Data_Flow_I_n_111;
  wire Data_Flow_I_n_112;
  wire Data_Flow_I_n_113;
  wire Data_Flow_I_n_114;
  wire Data_Flow_I_n_115;
  wire Data_Flow_I_n_116;
  wire Data_Flow_I_n_117;
  wire Data_Flow_I_n_118;
  wire Data_Flow_I_n_119;
  wire Data_Flow_I_n_120;
  wire Data_Flow_I_n_121;
  wire Data_Flow_I_n_18;
  wire Data_Flow_I_n_19;
  wire Data_Flow_I_n_20;
  wire Data_Flow_I_n_22;
  wire Data_Flow_I_n_23;
  wire Data_Flow_I_n_24;
  wire Data_Flow_I_n_30;
  wire Data_Flow_I_n_47;
  wire Data_Flow_I_n_48;
  wire Data_Flow_I_n_49;
  wire Data_Flow_I_n_50;
  wire Data_Flow_I_n_51;
  wire Data_Flow_I_n_52;
  wire Data_Flow_I_n_53;
  wire Data_Flow_I_n_54;
  wire Data_Flow_I_n_55;
  wire Data_Flow_I_n_56;
  wire Data_Flow_I_n_57;
  wire Data_Flow_I_n_58;
  wire Data_Flow_I_n_59;
  wire Data_Flow_I_n_60;
  wire Data_Flow_I_n_61;
  wire Decode_I_n_105;
  wire Decode_I_n_106;
  wire Decode_I_n_108;
  wire Decode_I_n_109;
  wire Decode_I_n_52;
  wire Decode_I_n_53;
  wire Decode_I_n_54;
  wire Decode_I_n_55;
  wire Decode_I_n_58;
  wire IO_Addr_Strobe0;
  wire IO_Read_Strobe;
  wire IO_Write_Strobe;
  wire [28:30]MSR;
  wire \MSR_Reg_I/MSR_Rst ;
  wire \MSR_Reg_I/New_Value ;
  wire O;
  wire [0:1]Op1_Low;
  wire \Operand_Select_I/Imm_Reg ;
  wire \Operand_Select_I/OpSelect_Bits[0].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[10].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[11].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[12].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[13].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[14].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[15].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[16].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[17].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[18].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[19].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[1].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[20].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[21].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[22].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[23].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[24].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[25].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[26].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[27].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[28].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[29].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[2].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[30].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[31].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[3].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[4].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[5].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[6].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[7].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[8].Operand_Select_Bit_I/D ;
  wire \Operand_Select_I/OpSelect_Bits[9].Operand_Select_Bit_I/D ;
  (* MAX_FANOUT = "1000" *) (* RTL_MAX_FANOUT = "found" *) wire \PC_Module_I/normal_piperun ;
  (* MAX_FANOUT = "1000" *) (* RTL_MAX_FANOUT = "found" *) (* USELOWSKEWLINES *) wire \PC_Module_I/pc_write_I ;
  wire S;
  wire Sext16;
  wire Sl_Rdy;
  wire Sl_Rdy_1;
  wire Unsigned_Op;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire [0:0]\Using_FPGA.Native ;
  wire \Using_LWX_SWX_instr.reservation_reg ;
  wire alu_Carry;
  wire [0:1]alu_Op;
  wire [1:3]buffer_Addr;
  wire byte_i_reg;
  wire carry_In;
  wire compare_Instr;
  wire [15:0]dlmb_LMB_ReadDBus;
  wire dlmb_LMB_Ready;
  wire [0:31]dlmb_M_ABus;
  wire dlmb_M_AddrStrobe;
  wire [0:3]dlmb_M_BE;
  wire [0:3]dlmb_port_BRAM_WEN;
  wire [16:31]ex_Result;
  wire ex_Valid_reg;
  wire [30:30]exception_kind;
  wire [15:0]extend_Data_Read;
  wire iFetch_In_Progress_reg;
  wire ilmb_Sl_Ready;
  wire imm_Instr;
  wire [0:15]imm_Value;
  wire inHibit_EX_reg;
  wire inHibit_EX_reg_0;
  wire io_read_keep;
  wire isbyte;
  wire isdoublet;
  wire jump;
  wire lmb_as;
  wire lmb_as_0;
  wire lmb_reg_read0;
  wire lmb_reg_write0;
  wire lmb_select;
  wire load_Store_i_reg;
  wire load_Store_i_reg_0;
  wire [0:1]logic_Oper;
  wire lopt;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_12;
  wire lopt_13;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire mb_rdy_o;
  wire nonvalid_IFetch_n_reg;
  wire opsel1_SPR;
  wire out;
  wire pc_Incr;
  wire quadlet_Read;
  wire [0:23]raw_Data_Write;
  wire [0:4]reg1_Addr;
  wire [16:31]reg2_Data;
  wire reg_Test_Equal;
  wire reg_Test_Equal_N;
  wire reg_Write_I;
  wire reg_zero;
  wire res_Forward1;
  wire res_Forward2;
  wire [0:1]result_Sel;
  wire select_Logic;
  wire sext8;
  wire sign_Extend;
  wire take_Intr_Now_III;
  wire valid_Fetch;
  wire [0:4]write_Addr;

  c2c_gth_in_system_ibert_0_Byte_Doublet_Handle Byte_Doublet_Handle_I
       (.D({raw_Data_Write,DATA_INB[24:31]}),
        .DATA_INB({DATA_INB[0],DATA_INB[1],DATA_INB[2],DATA_INB[3],DATA_INB[4],DATA_INB[5],DATA_INB[6],DATA_INB[7],DATA_INB[8],DATA_INB[9],DATA_INB[10],DATA_INB[11],DATA_INB[12],DATA_INB[13],DATA_INB[14],DATA_INB[15],DATA_INB[16],DATA_INB[17],DATA_INB[18],DATA_INB[19],DATA_INB[20],DATA_INB[21],DATA_INB[22],DATA_INB[23]}),
        .EX_Op2(Data_Flow_I_n_18),
        .O(O),
        .Op1_Low(Op1_Low),
        .\Using_IO_Bus.IO_Address_reg[0] (Data_Flow_I_n_19),
        .byte_i_reg(byte_i_reg),
        .dlmb_M_ABus({dlmb_M_ABus[30],dlmb_M_ABus[31]}),
        .dlmb_M_BE(dlmb_M_BE),
        .isbyte(isbyte),
        .isdoublet(isdoublet));
  c2c_gth_in_system_ibert_0_Data_Flow Data_Flow_I
       (.ADDRARDADDR(ADDRARDADDR),
        .Buffer_Addr({buffer_Addr[1],buffer_Addr[2],buffer_Addr[3]}),
        .D(\Operand_Select_I/OpSelect_Bits[31].Operand_Select_Bit_I/D ),
        .DI(Decode_I_n_108),
        .D_0(\Operand_Select_I/OpSelect_Bits[30].Operand_Select_Bit_I/D ),
        .D_1(\Operand_Select_I/OpSelect_Bits[29].Operand_Select_Bit_I/D ),
        .D_10(\Operand_Select_I/OpSelect_Bits[20].Operand_Select_Bit_I/D ),
        .D_11(\Operand_Select_I/OpSelect_Bits[19].Operand_Select_Bit_I/D ),
        .D_12(\Operand_Select_I/OpSelect_Bits[18].Operand_Select_Bit_I/D ),
        .D_13(\Operand_Select_I/OpSelect_Bits[17].Operand_Select_Bit_I/D ),
        .D_14(\Operand_Select_I/OpSelect_Bits[16].Operand_Select_Bit_I/D ),
        .D_15(\Operand_Select_I/OpSelect_Bits[15].Operand_Select_Bit_I/D ),
        .D_16(\Operand_Select_I/OpSelect_Bits[14].Operand_Select_Bit_I/D ),
        .D_17(\Operand_Select_I/OpSelect_Bits[13].Operand_Select_Bit_I/D ),
        .D_18(\Operand_Select_I/OpSelect_Bits[12].Operand_Select_Bit_I/D ),
        .D_19(\Operand_Select_I/OpSelect_Bits[11].Operand_Select_Bit_I/D ),
        .D_2(\Operand_Select_I/OpSelect_Bits[28].Operand_Select_Bit_I/D ),
        .D_20(\Operand_Select_I/OpSelect_Bits[10].Operand_Select_Bit_I/D ),
        .D_21(\Operand_Select_I/OpSelect_Bits[9].Operand_Select_Bit_I/D ),
        .D_22(\Operand_Select_I/OpSelect_Bits[8].Operand_Select_Bit_I/D ),
        .D_23(\Operand_Select_I/OpSelect_Bits[7].Operand_Select_Bit_I/D ),
        .D_24(\Operand_Select_I/OpSelect_Bits[6].Operand_Select_Bit_I/D ),
        .D_25(\Operand_Select_I/OpSelect_Bits[5].Operand_Select_Bit_I/D ),
        .D_26(\Operand_Select_I/OpSelect_Bits[4].Operand_Select_Bit_I/D ),
        .D_27(\Operand_Select_I/OpSelect_Bits[3].Operand_Select_Bit_I/D ),
        .D_28(\Operand_Select_I/OpSelect_Bits[2].Operand_Select_Bit_I/D ),
        .D_29(\Operand_Select_I/OpSelect_Bits[1].Operand_Select_Bit_I/D ),
        .D_3(\Operand_Select_I/OpSelect_Bits[27].Operand_Select_Bit_I/D ),
        .D_30(\Operand_Select_I/OpSelect_Bits[0].Operand_Select_Bit_I/D ),
        .D_4(\Operand_Select_I/OpSelect_Bits[26].Operand_Select_Bit_I/D ),
        .D_5(\Operand_Select_I/OpSelect_Bits[25].Operand_Select_Bit_I/D ),
        .D_6(\Operand_Select_I/OpSelect_Bits[24].Operand_Select_Bit_I/D ),
        .D_7(\Operand_Select_I/OpSelect_Bits[23].Operand_Select_Bit_I/D ),
        .D_8(\Operand_Select_I/OpSelect_Bits[22].Operand_Select_Bit_I/D ),
        .D_9(\Operand_Select_I/OpSelect_Bits[21].Operand_Select_Bit_I/D ),
        .Data_Read_Mask(Decode_I_n_109),
        .Data_Write({raw_Data_Write,DATA_INB[24:31]}),
        .E(imm_Instr),
        .EX_Op2(Data_Flow_I_n_18),
        .IReady(valid_Fetch),
        .Increment(pc_Incr),
        .Jump(jump),
        .LO(alu_Carry),
        .MSR({MSR[28],MSR[29],MSR[30]}),
        .MSR_Rst(\MSR_Reg_I/MSR_Rst ),
        .O(dlmb_M_ABus[0]),
        .Op1_Low(Op1_Low),
        .Op1_Shift(Data_Flow_I_n_20),
        .PC_Write(\PC_Module_I/pc_write_I ),
        .Q({logic_Oper[0],logic_Oper[1]}),
        .Reg2_Data({reg2_Data[16],reg2_Data[17],reg2_Data[18],reg2_Data[19],reg2_Data[20],reg2_Data[21],reg2_Data[22],reg2_Data[23],reg2_Data[24],reg2_Data[25],reg2_Data[26],reg2_Data[27],reg2_Data[28],reg2_Data[29],reg2_Data[30],reg2_Data[31]}),
        .Reg_Test_Equal(reg_Test_Equal),
        .Reg_Write(reg_Write_I),
        .Reg_zero(reg_zero),
        .\Result_Sel_reg[1] ({ex_Result[16],ex_Result[17],ex_Result[18],ex_Result[19],ex_Result[20],ex_Result[21],ex_Result[22],ex_Result[23],ex_Result[24],ex_Result[25],ex_Result[26],ex_Result[27],ex_Result[28],ex_Result[29],ex_Result[30],ex_Result[31]}),
        .Select_Logic(select_Logic),
        .Sext16(Sext16),
        .Shift_Oper(sign_Extend),
        .Shifted(Decode_I_n_55),
        .\Size_17to32.imm_Reg_reg[0] ({Data_Flow_I_n_107,Data_Flow_I_n_108,Data_Flow_I_n_109,Data_Flow_I_n_110,Data_Flow_I_n_111,Data_Flow_I_n_112,Data_Flow_I_n_113,Data_Flow_I_n_114,Data_Flow_I_n_115,Data_Flow_I_n_116,Data_Flow_I_n_117,Data_Flow_I_n_118,Data_Flow_I_n_119,Data_Flow_I_n_120,Data_Flow_I_n_121,\Operand_Select_I/Imm_Reg }),
        .Unsigned_Op(Unsigned_Op),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ({write_Addr[0],write_Addr[1],write_Addr[2],write_Addr[3],write_Addr[4]}),
        .\Using_FPGA.Native (Data_Flow_I_n_19),
        .\Using_FPGA.Native_0 (\MSR_Reg_I/New_Value ),
        .\Using_FPGA.Native_1 (Data_Flow_I_n_22),
        .\Using_FPGA.Native_10 (Decode_I_n_58),
        .\Using_FPGA.Native_11 ({result_Sel[0],result_Sel[1]}),
        .\Using_FPGA.Native_2 (Data_Flow_I_n_23),
        .\Using_FPGA.Native_3 (Data_Flow_I_n_24),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_5 (Decode_I_n_52),
        .\Using_FPGA.Native_6 (Decode_I_n_106),
        .\Using_FPGA.Native_7 (Decode_I_n_53),
        .\Using_FPGA.Native_8 (Decode_I_n_105),
        .\Using_FPGA.Native_9 (Decode_I_n_54),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (Data_Flow_I_n_30),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_0 (Data_Flow_I_n_47),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_1 (Data_Flow_I_n_48),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_10 (Data_Flow_I_n_57),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_11 (Data_Flow_I_n_58),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_12 (Data_Flow_I_n_59),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_13 (Data_Flow_I_n_60),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_14 (Data_Flow_I_n_61),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_2 (Data_Flow_I_n_49),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_3 (Data_Flow_I_n_50),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_4 (Data_Flow_I_n_51),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_5 (Data_Flow_I_n_52),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_6 (Data_Flow_I_n_53),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_7 (Data_Flow_I_n_54),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_8 (Data_Flow_I_n_55),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_9 (Data_Flow_I_n_56),
        .alu_Op(alu_Op),
        .carry_In(carry_In),
        .compare_Instr(compare_Instr),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus),
        .dlmb_M_ABus({dlmb_M_ABus[1],dlmb_M_ABus[2],dlmb_M_ABus[3],dlmb_M_ABus[4],dlmb_M_ABus[5],dlmb_M_ABus[6],dlmb_M_ABus[7],dlmb_M_ABus[8],dlmb_M_ABus[9],dlmb_M_ABus[10],dlmb_M_ABus[11],dlmb_M_ABus[12],dlmb_M_ABus[13],dlmb_M_ABus[14],dlmb_M_ABus[15],dlmb_M_ABus[16],dlmb_M_ABus[17],dlmb_M_ABus[18],dlmb_M_ABus[19],dlmb_M_ABus[20],dlmb_M_ABus[21],dlmb_M_ABus[22],dlmb_M_ABus[23],dlmb_M_ABus[24],dlmb_M_ABus[25],dlmb_M_ABus[26],dlmb_M_ABus[27],dlmb_M_ABus[28],dlmb_M_ABus[29]}),
        .exception_kind(exception_kind),
        .extend_Data_Read(extend_Data_Read),
        .imm_Value(imm_Value),
        .lmb_select(lmb_select),
        .lopt(lopt),
        .lopt_1(Op1_Low[1]),
        .lopt_10(lopt_9),
        .lopt_11(lopt_10),
        .lopt_12(lopt_11),
        .lopt_13(lopt_12),
        .lopt_14(lopt_13),
        .lopt_2(lopt_1),
        .lopt_3(lopt_2),
        .lopt_4(lopt_3),
        .lopt_5(lopt_4),
        .lopt_6(lopt_5),
        .lopt_7(lopt_6),
        .lopt_8(lopt_7),
        .lopt_9(lopt_8),
        .normal_piperun(\PC_Module_I/normal_piperun ),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .quadlet_Read(quadlet_Read),
        .reg1_Addr(reg1_Addr),
        .reg_Test_Equal_N(reg_Test_Equal_N),
        .res_Forward1(res_Forward1),
        .res_Forward2(res_Forward2),
        .sext8(sext8));
  c2c_gth_in_system_ibert_0_Decode Decode_I
       (.Buffer_Addr({buffer_Addr[1],buffer_Addr[2],buffer_Addr[3]}),
        .D(\Operand_Select_I/OpSelect_Bits[0].Operand_Select_Bit_I/D ),
        .DATA_OUTA(DATA_OUTA),
        .DI(Decode_I_n_108),
        .D_0(\Operand_Select_I/OpSelect_Bits[1].Operand_Select_Bit_I/D ),
        .D_1(\Operand_Select_I/OpSelect_Bits[2].Operand_Select_Bit_I/D ),
        .D_10(\Operand_Select_I/OpSelect_Bits[11].Operand_Select_Bit_I/D ),
        .D_11(\Operand_Select_I/OpSelect_Bits[12].Operand_Select_Bit_I/D ),
        .D_12(\Operand_Select_I/OpSelect_Bits[13].Operand_Select_Bit_I/D ),
        .D_13(\Operand_Select_I/OpSelect_Bits[14].Operand_Select_Bit_I/D ),
        .D_14(\Operand_Select_I/OpSelect_Bits[15].Operand_Select_Bit_I/D ),
        .D_15(\Operand_Select_I/OpSelect_Bits[16].Operand_Select_Bit_I/D ),
        .D_16(\Operand_Select_I/OpSelect_Bits[17].Operand_Select_Bit_I/D ),
        .D_17(\Operand_Select_I/OpSelect_Bits[18].Operand_Select_Bit_I/D ),
        .D_18(\Operand_Select_I/OpSelect_Bits[19].Operand_Select_Bit_I/D ),
        .D_19(\Operand_Select_I/OpSelect_Bits[20].Operand_Select_Bit_I/D ),
        .D_2(\Operand_Select_I/OpSelect_Bits[3].Operand_Select_Bit_I/D ),
        .D_20(\Operand_Select_I/OpSelect_Bits[21].Operand_Select_Bit_I/D ),
        .D_21(\Operand_Select_I/OpSelect_Bits[22].Operand_Select_Bit_I/D ),
        .D_22(\Operand_Select_I/OpSelect_Bits[23].Operand_Select_Bit_I/D ),
        .D_23(\Operand_Select_I/OpSelect_Bits[24].Operand_Select_Bit_I/D ),
        .D_24(\Operand_Select_I/OpSelect_Bits[25].Operand_Select_Bit_I/D ),
        .D_25(\Operand_Select_I/OpSelect_Bits[26].Operand_Select_Bit_I/D ),
        .D_26(\Operand_Select_I/OpSelect_Bits[27].Operand_Select_Bit_I/D ),
        .D_27(\Operand_Select_I/OpSelect_Bits[28].Operand_Select_Bit_I/D ),
        .D_28(\Operand_Select_I/OpSelect_Bits[29].Operand_Select_Bit_I/D ),
        .D_29(\Operand_Select_I/OpSelect_Bits[30].Operand_Select_Bit_I/D ),
        .D_3(\Operand_Select_I/OpSelect_Bits[4].Operand_Select_Bit_I/D ),
        .D_30(\Operand_Select_I/OpSelect_Bits[31].Operand_Select_Bit_I/D ),
        .D_4(\Operand_Select_I/OpSelect_Bits[5].Operand_Select_Bit_I/D ),
        .D_5(\Operand_Select_I/OpSelect_Bits[6].Operand_Select_Bit_I/D ),
        .D_6(\Operand_Select_I/OpSelect_Bits[7].Operand_Select_Bit_I/D ),
        .D_7(\Operand_Select_I/OpSelect_Bits[8].Operand_Select_Bit_I/D ),
        .D_8(\Operand_Select_I/OpSelect_Bits[9].Operand_Select_Bit_I/D ),
        .D_9(\Operand_Select_I/OpSelect_Bits[10].Operand_Select_Bit_I/D ),
        .Data_Read_Mask(Decode_I_n_109),
        .E(imm_Instr),
        .IO_Addr_Strobe0(IO_Addr_Strobe0),
        .IO_Read_Strobe(IO_Read_Strobe),
        .IO_Write_Strobe(IO_Write_Strobe),
        .IReady(valid_Fetch),
        .Increment(pc_Incr),
        .Jump(jump),
        .LO(alu_Carry),
        .\Logic_Oper_reg[0]_0 ({logic_Oper[0],logic_Oper[1]}),
        .MSR({MSR[28],MSR[29],MSR[30]}),
        .MSR_Rst(\MSR_Reg_I/MSR_Rst ),
        .O(dlmb_M_ABus[0]),
        .Op1_Low(Op1_Low),
        .Op1_Shift(Data_Flow_I_n_20),
        .PC_Write(\PC_Module_I/pc_write_I ),
        .Q({write_Addr[0],write_Addr[1],write_Addr[2],write_Addr[3],write_Addr[4]}),
        .Reg2_Data({reg2_Data[16],reg2_Data[17],reg2_Data[18],reg2_Data[19],reg2_Data[20],reg2_Data[21],reg2_Data[22],reg2_Data[23],reg2_Data[24],reg2_Data[25],reg2_Data[26],reg2_Data[27],reg2_Data[28],reg2_Data[29],reg2_Data[30],reg2_Data[31]}),
        .Reg_Test_Equal(reg_Test_Equal),
        .Reg_Write(reg_Write_I),
        .Reg_zero(reg_zero),
        .\Result_Sel_reg[0]_0 ({result_Sel[0],result_Sel[1]}),
        .S(S),
        .Select_Logic(select_Logic),
        .Sext16(Sext16),
        .Shift_Oper(sign_Extend),
        .Shifted(Decode_I_n_55),
        .Sl_Rdy(Sl_Rdy),
        .Sl_Rdy_1(Sl_Rdy_1),
        .\Synchronize.use_sync_reset.sync_reg[2] (Decode_I_n_105),
        .\Synchronize.use_sync_reset.sync_reg[2]_0 (Decode_I_n_106),
        .Unsigned_Op(Unsigned_Op),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .\Using_B36_S2.The_BRAMs[8].RAMB36_I1 (Decode_I_n_58),
        .\Using_FPGA.Native (Decode_I_n_53),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (Data_Flow_I_n_24),
        .\Using_FPGA.Native_10 (Data_Flow_I_n_51),
        .\Using_FPGA.Native_11 (Data_Flow_I_n_52),
        .\Using_FPGA.Native_12 (Data_Flow_I_n_53),
        .\Using_FPGA.Native_13 (Data_Flow_I_n_54),
        .\Using_FPGA.Native_14 (Data_Flow_I_n_55),
        .\Using_FPGA.Native_15 (Data_Flow_I_n_56),
        .\Using_FPGA.Native_16 (Data_Flow_I_n_57),
        .\Using_FPGA.Native_17 (Data_Flow_I_n_58),
        .\Using_FPGA.Native_18 (Data_Flow_I_n_59),
        .\Using_FPGA.Native_19 (Data_Flow_I_n_60),
        .\Using_FPGA.Native_2 (\MSR_Reg_I/New_Value ),
        .\Using_FPGA.Native_20 (Data_Flow_I_n_61),
        .\Using_FPGA.Native_21 ({ex_Result[16],ex_Result[17],ex_Result[18],ex_Result[19],ex_Result[20],ex_Result[21],ex_Result[22],ex_Result[23],ex_Result[24],ex_Result[25],ex_Result[26],ex_Result[27],ex_Result[28],ex_Result[29],ex_Result[30],ex_Result[31]}),
        .\Using_FPGA.Native_22 (Data_Flow_I_n_22),
        .\Using_FPGA.Native_3 (Data_Flow_I_n_23),
        .\Using_FPGA.Native_4 ({Data_Flow_I_n_107,Data_Flow_I_n_108,Data_Flow_I_n_109,Data_Flow_I_n_110,Data_Flow_I_n_111,Data_Flow_I_n_112,Data_Flow_I_n_113,Data_Flow_I_n_114,Data_Flow_I_n_115,Data_Flow_I_n_116,Data_Flow_I_n_117,Data_Flow_I_n_118,Data_Flow_I_n_119,Data_Flow_I_n_120,Data_Flow_I_n_121,\Operand_Select_I/Imm_Reg }),
        .\Using_FPGA.Native_5 (Data_Flow_I_n_30),
        .\Using_FPGA.Native_6 (Data_Flow_I_n_47),
        .\Using_FPGA.Native_7 (Data_Flow_I_n_48),
        .\Using_FPGA.Native_8 (Data_Flow_I_n_49),
        .\Using_FPGA.Native_9 (Data_Flow_I_n_50),
        .\Using_FPGA.enable_Interrupts_I_reg_0 (Decode_I_n_54),
        .\Using_FPGA.set_BIP_I_reg_0 (Decode_I_n_52),
        .\Using_FPGA.take_Intr_2nd_Phase_reg_0 (take_Intr_Now_III),
        .\Using_LWX_SWX_instr.reservation_reg_0 (\Using_LWX_SWX_instr.reservation_reg ),
        .alu_Op(alu_Op),
        .carry_In(carry_In),
        .compare_Instr(compare_Instr),
        .dlmb_LMB_Ready(dlmb_LMB_Ready),
        .dlmb_M_ABus(dlmb_M_ABus[1]),
        .dlmb_M_AddrStrobe(dlmb_M_AddrStrobe),
        .dlmb_M_BE(dlmb_M_BE),
        .dlmb_port_BRAM_WEN(dlmb_port_BRAM_WEN),
        .ex_Valid_reg_0(ex_Valid_reg),
        .exception_kind(exception_kind),
        .iFetch_In_Progress_reg_0(iFetch_In_Progress_reg),
        .ilmb_Sl_Ready(ilmb_Sl_Ready),
        .imm_Value(imm_Value),
        .inHibit_EX_reg_0(inHibit_EX_reg),
        .inHibit_EX_reg_1(inHibit_EX_reg_0),
        .io_read_keep(io_read_keep),
        .isbyte(isbyte),
        .isdoublet(isdoublet),
        .lmb_as(lmb_as),
        .lmb_as_0(lmb_as_0),
        .lmb_reg_read0(lmb_reg_read0),
        .lmb_reg_write0(lmb_reg_write0),
        .load_Store_i_reg_0(load_Store_i_reg),
        .load_Store_i_reg_1(load_Store_i_reg_0),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_12(lopt_12),
        .lopt_13(lopt_13),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9),
        .mb_rdy_o(mb_rdy_o),
        .nonvalid_IFetch_n_reg_0(nonvalid_IFetch_n_reg),
        .normal_piperun(\PC_Module_I/normal_piperun ),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .quadlet_Read(quadlet_Read),
        .reg1_Addr(reg1_Addr),
        .reg_Test_Equal_N(reg_Test_Equal_N),
        .res_Forward1(res_Forward1),
        .res_Forward2(res_Forward2),
        .sext8(sext8));
endmodule

module c2c_gth_in_system_ibert_0_MicroBlaze_Core
   (nonvalid_IFetch_n_reg,
    O,
    byte_i_reg,
    DATA_INB,
    dlmb_M_ABus,
    iFetch_In_Progress_reg,
    inHibit_EX_reg,
    dlmb_port_BRAM_WEN,
    lmb_reg_write0,
    IO_Write_Strobe,
    IO_Addr_Strobe0,
    IO_Read_Strobe,
    io_read_keep,
    lmb_reg_read0,
    dlmb_M_AddrStrobe,
    lmb_select,
    ADDRARDADDR,
    DATA_OUTA,
    out,
    dlmb_LMB_Ready,
    ilmb_Sl_Ready,
    inHibit_EX_reg_0,
    Sl_Rdy,
    lmb_as,
    ex_Valid_reg,
    load_Store_i_reg,
    lmb_as_0,
    Sl_Rdy_1,
    load_Store_i_reg_0,
    mb_rdy_o,
    extend_Data_Read,
    dlmb_LMB_ReadDBus,
    ilmb_LMB_Rst);
  output nonvalid_IFetch_n_reg;
  output O;
  output byte_i_reg;
  output [0:31]DATA_INB;
  output [0:31]dlmb_M_ABus;
  output iFetch_In_Progress_reg;
  output inHibit_EX_reg;
  output [0:3]dlmb_port_BRAM_WEN;
  output lmb_reg_write0;
  output IO_Write_Strobe;
  output IO_Addr_Strobe0;
  output IO_Read_Strobe;
  output io_read_keep;
  output lmb_reg_read0;
  output dlmb_M_AddrStrobe;
  output lmb_select;
  output [13:0]ADDRARDADDR;
  input [0:31]DATA_OUTA;
  input out;
  input dlmb_LMB_Ready;
  input ilmb_Sl_Ready;
  input inHibit_EX_reg_0;
  input Sl_Rdy;
  input lmb_as;
  input ex_Valid_reg;
  input load_Store_i_reg;
  input lmb_as_0;
  input Sl_Rdy_1;
  input load_Store_i_reg_0;
  input mb_rdy_o;
  input [15:0]extend_Data_Read;
  input [15:0]dlmb_LMB_ReadDBus;
  input ilmb_LMB_Rst;

  wire [13:0]ADDRARDADDR;
  wire [0:31]DATA_INB;
  wire [0:31]DATA_OUTA;
  wire \Decode_I/PreFetch_Buffer_I/S ;
  wire \Decode_I/take_Intr_Now_III ;
  wire IO_Addr_Strobe0;
  wire IO_Read_Strobe;
  wire IO_Write_Strobe;
  wire O;
  wire Reset_DFF_n_2;
  wire Reset_DFF_n_3;
  wire Sl_Rdy;
  wire Sl_Rdy_1;
  wire Synced;
  wire byte_i_reg;
  wire [15:0]dlmb_LMB_ReadDBus;
  wire dlmb_LMB_Ready;
  wire [0:31]dlmb_M_ABus;
  wire dlmb_M_AddrStrobe;
  wire [0:3]dlmb_port_BRAM_WEN;
  wire ex_Valid_reg;
  wire [15:0]extend_Data_Read;
  wire iFetch_In_Progress_reg;
  wire ilmb_LMB_Rst;
  wire ilmb_Sl_Ready;
  wire inHibit_EX_reg;
  wire inHibit_EX_reg_0;
  wire io_read_keep;
  wire jump;
  wire lmb_as;
  wire lmb_as_0;
  wire lmb_reg_read0;
  wire lmb_reg_write0;
  wire lmb_select;
  wire load_Store_i_reg;
  wire load_Store_i_reg_0;
  wire mb_rdy_o;
  wire nonvalid_IFetch_n_reg;
  wire out;

  c2c_gth_in_system_ibert_0_MicroBlaze_Area \Area.Core 
       (.ADDRARDADDR(ADDRARDADDR),
        .DATA_INB(DATA_INB),
        .DATA_OUTA(DATA_OUTA),
        .IO_Addr_Strobe0(IO_Addr_Strobe0),
        .IO_Read_Strobe(IO_Read_Strobe),
        .IO_Write_Strobe(IO_Write_Strobe),
        .O(O),
        .S(\Decode_I/PreFetch_Buffer_I/S ),
        .Sl_Rdy(Sl_Rdy),
        .Sl_Rdy_1(Sl_Rdy_1),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (Reset_DFF_n_3),
        .\Using_FPGA.Native (Synced),
        .\Using_LWX_SWX_instr.reservation_reg (Reset_DFF_n_2),
        .byte_i_reg(byte_i_reg),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus),
        .dlmb_LMB_Ready(dlmb_LMB_Ready),
        .dlmb_M_ABus(dlmb_M_ABus),
        .dlmb_M_AddrStrobe(dlmb_M_AddrStrobe),
        .dlmb_port_BRAM_WEN(dlmb_port_BRAM_WEN),
        .ex_Valid_reg(ex_Valid_reg),
        .extend_Data_Read(extend_Data_Read),
        .iFetch_In_Progress_reg(iFetch_In_Progress_reg),
        .ilmb_Sl_Ready(ilmb_Sl_Ready),
        .inHibit_EX_reg(inHibit_EX_reg),
        .inHibit_EX_reg_0(inHibit_EX_reg_0),
        .io_read_keep(io_read_keep),
        .jump(jump),
        .lmb_as(lmb_as),
        .lmb_as_0(lmb_as_0),
        .lmb_reg_read0(lmb_reg_read0),
        .lmb_reg_write0(lmb_reg_write0),
        .lmb_select(lmb_select),
        .load_Store_i_reg(load_Store_i_reg),
        .load_Store_i_reg_0(load_Store_i_reg_0),
        .mb_rdy_o(mb_rdy_o),
        .nonvalid_IFetch_n_reg(nonvalid_IFetch_n_reg),
        .out(out),
        .take_Intr_Now_III(\Decode_I/take_Intr_Now_III ));
  c2c_gth_in_system_ibert_0_mb_sync_bit Reset_DFF
       (.S(\Decode_I/PreFetch_Buffer_I/S ),
        .\Synchronize.use_sync_reset.sync_reg[1]_0 (out),
        .\Synchronize.use_sync_reset.sync_reg[2]_0 (Reset_DFF_n_2),
        .\Synchronize.use_sync_reset.sync_reg[2]_1 (Reset_DFF_n_3),
        .ilmb_LMB_Rst(ilmb_LMB_Rst),
        .jump(jump),
        .out(Synced),
        .take_Intr_Now_III(\Decode_I/take_Intr_Now_III ));
endmodule

module c2c_gth_in_system_ibert_0_Operand_Select
   (Op1_Logic,
    EX_Op2,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    Shifted,
    \Using_FPGA.Native_1 ,
    Op2,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    op2_C,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 ,
    \Using_FPGA.Native_9 ,
    \Using_FPGA.Native_10 ,
    \Using_FPGA.Native_11 ,
    \Using_FPGA.Native_12 ,
    \Using_FPGA.Native_13 ,
    \Using_FPGA.Native_14 ,
    \Using_FPGA.Native_15 ,
    \Using_FPGA.Native_16 ,
    \Using_FPGA.Native_17 ,
    \Using_FPGA.Native_18 ,
    \Using_FPGA.Native_19 ,
    \Using_FPGA.Native_20 ,
    \Using_FPGA.Native_21 ,
    \Using_FPGA.Native_22 ,
    \Using_FPGA.Native_23 ,
    \Using_FPGA.Native_24 ,
    \Using_FPGA.Native_25 ,
    \Using_FPGA.Native_26 ,
    Op1_Shift,
    \Using_FPGA.Native_27 ,
    \Using_FPGA.Native_28 ,
    \Using_FPGA.Native_29 ,
    \Using_FPGA.Native_30 ,
    \Using_FPGA.Native_31 ,
    \Using_FPGA.Native_32 ,
    \Using_FPGA.Native_33 ,
    \Using_FPGA.Native_34 ,
    \Using_FPGA.Native_35 ,
    \Using_FPGA.Native_36 ,
    \Using_FPGA.Native_37 ,
    \Using_FPGA.Native_38 ,
    \Using_FPGA.Native_39 ,
    \Using_FPGA.Native_40 ,
    \Using_FPGA.Native_41 ,
    \Using_FPGA.Native_42 ,
    \Using_FPGA.Native_43 ,
    \Using_FPGA.Native_44 ,
    \Using_FPGA.Native_45 ,
    \Using_FPGA.Native_46 ,
    \Using_FPGA.Native_47 ,
    \Using_FPGA.Native_48 ,
    \Using_FPGA.Native_49 ,
    \Using_FPGA.Native_50 ,
    \Using_FPGA.Native_51 ,
    \Using_FPGA.Native_52 ,
    \Using_FPGA.Native_53 ,
    \Using_FPGA.Native_54 ,
    \Using_FPGA.Native_55 ,
    \Using_FPGA.Native_56 ,
    \Using_FPGA.Native_57 ,
    \Using_FPGA.Native_58 ,
    \Using_FPGA.Native_59 ,
    \Zero_Detecting[0].nibble_Zero_reg ,
    \Size_17to32.imm_Reg_reg[0]_0 ,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR,
    \Using_FPGA.Native_60 ,
    normal_piperun,
    out,
    D,
    I3,
    D_0,
    I3_0,
    D_1,
    I3_1,
    D_2,
    I3_2,
    D_3,
    I3_3,
    D_4,
    I3_4,
    D_5,
    I3_5,
    D_6,
    PC_OF,
    D_7,
    \Using_FPGA.Native_61 ,
    D_8,
    \Using_FPGA.Native_62 ,
    D_9,
    \Using_FPGA.Native_63 ,
    D_10,
    \Using_FPGA.Native_64 ,
    D_11,
    \Using_FPGA.Native_65 ,
    D_12,
    \Using_FPGA.Native_66 ,
    D_13,
    \Using_FPGA.Native_67 ,
    D_14,
    D_15,
    D_16,
    D_17,
    D_18,
    D_19,
    D_20,
    D_21,
    D_22,
    D_23,
    D_24,
    D_25,
    D_26,
    D_27,
    D_28,
    D_29,
    I3_6,
    D_30,
    E,
    imm_Value);
  output Op1_Logic;
  output EX_Op2;
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output Shifted;
  output \Using_FPGA.Native_1 ;
  output Op2;
  output \Using_FPGA.Native_2 ;
  output \Using_FPGA.Native_3 ;
  output \Using_FPGA.Native_4 ;
  output \Using_FPGA.Native_5 ;
  output \Using_FPGA.Native_6 ;
  output [27:0]op2_C;
  output \Using_FPGA.Native_7 ;
  output \Using_FPGA.Native_8 ;
  output \Using_FPGA.Native_9 ;
  output \Using_FPGA.Native_10 ;
  output \Using_FPGA.Native_11 ;
  output \Using_FPGA.Native_12 ;
  output \Using_FPGA.Native_13 ;
  output \Using_FPGA.Native_14 ;
  output \Using_FPGA.Native_15 ;
  output \Using_FPGA.Native_16 ;
  output \Using_FPGA.Native_17 ;
  output \Using_FPGA.Native_18 ;
  output \Using_FPGA.Native_19 ;
  output \Using_FPGA.Native_20 ;
  output \Using_FPGA.Native_21 ;
  output \Using_FPGA.Native_22 ;
  output \Using_FPGA.Native_23 ;
  output \Using_FPGA.Native_24 ;
  output \Using_FPGA.Native_25 ;
  output \Using_FPGA.Native_26 ;
  output Op1_Shift;
  output \Using_FPGA.Native_27 ;
  output \Using_FPGA.Native_28 ;
  output \Using_FPGA.Native_29 ;
  output \Using_FPGA.Native_30 ;
  output \Using_FPGA.Native_31 ;
  output \Using_FPGA.Native_32 ;
  output \Using_FPGA.Native_33 ;
  output \Using_FPGA.Native_34 ;
  output \Using_FPGA.Native_35 ;
  output \Using_FPGA.Native_36 ;
  output \Using_FPGA.Native_37 ;
  output \Using_FPGA.Native_38 ;
  output \Using_FPGA.Native_39 ;
  output \Using_FPGA.Native_40 ;
  output \Using_FPGA.Native_41 ;
  output \Using_FPGA.Native_42 ;
  output \Using_FPGA.Native_43 ;
  output \Using_FPGA.Native_44 ;
  output \Using_FPGA.Native_45 ;
  output \Using_FPGA.Native_46 ;
  output \Using_FPGA.Native_47 ;
  output \Using_FPGA.Native_48 ;
  output \Using_FPGA.Native_49 ;
  output \Using_FPGA.Native_50 ;
  output \Using_FPGA.Native_51 ;
  output \Using_FPGA.Native_52 ;
  output \Using_FPGA.Native_53 ;
  output \Using_FPGA.Native_54 ;
  output \Using_FPGA.Native_55 ;
  output \Using_FPGA.Native_56 ;
  output \Using_FPGA.Native_57 ;
  output \Using_FPGA.Native_58 ;
  output \Using_FPGA.Native_59 ;
  output \Zero_Detecting[0].nibble_Zero_reg ;
  output [15:0]\Size_17to32.imm_Reg_reg[0]_0 ;
  input [0:31]Reg1_Data;
  input [0:31]EX_Result;
  input res_Forward1;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_60 ;
  input normal_piperun;
  input out;
  input D;
  input I3;
  input D_0;
  input I3_0;
  input D_1;
  input I3_1;
  input D_2;
  input I3_2;
  input D_3;
  input I3_3;
  input D_4;
  input I3_4;
  input D_5;
  input I3_5;
  input D_6;
  input PC_OF;
  input D_7;
  input \Using_FPGA.Native_61 ;
  input D_8;
  input \Using_FPGA.Native_62 ;
  input D_9;
  input \Using_FPGA.Native_63 ;
  input D_10;
  input \Using_FPGA.Native_64 ;
  input D_11;
  input \Using_FPGA.Native_65 ;
  input D_12;
  input \Using_FPGA.Native_66 ;
  input D_13;
  input \Using_FPGA.Native_67 ;
  input D_14;
  input D_15;
  input D_16;
  input D_17;
  input D_18;
  input D_19;
  input D_20;
  input D_21;
  input D_22;
  input D_23;
  input D_24;
  input D_25;
  input D_26;
  input D_27;
  input D_28;
  input D_29;
  input I3_6;
  input D_30;
  input [0:0]E;
  input [0:15]imm_Value;

  wire D;
  wire D_0;
  wire D_1;
  wire D_10;
  wire D_11;
  wire D_12;
  wire D_13;
  wire D_14;
  wire D_15;
  wire D_16;
  wire D_17;
  wire D_18;
  wire D_19;
  wire D_2;
  wire D_20;
  wire D_21;
  wire D_22;
  wire D_23;
  wire D_24;
  wire D_25;
  wire D_26;
  wire D_27;
  wire D_28;
  wire D_29;
  wire D_3;
  wire D_30;
  wire D_4;
  wire D_5;
  wire D_6;
  wire D_7;
  wire D_8;
  wire D_9;
  wire [0:0]E;
  wire EX_Op2;
  wire [0:31]EX_Result;
  wire I3;
  wire I3_0;
  wire I3_1;
  wire I3_2;
  wire I3_3;
  wire I3_4;
  wire I3_5;
  wire I3_6;
  wire Op1_Logic;
  wire Op1_Shift;
  wire Op2;
  wire \OpSelect_Bits[31].Operand_Select_Bit_I_n_1 ;
  wire PC_OF;
  wire [0:31]Reg1_Data;
  wire Shifted;
  wire [15:0]\Size_17to32.imm_Reg_reg[0]_0 ;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire \Using_FPGA.Native_11 ;
  wire \Using_FPGA.Native_12 ;
  wire \Using_FPGA.Native_13 ;
  wire \Using_FPGA.Native_14 ;
  wire \Using_FPGA.Native_15 ;
  wire \Using_FPGA.Native_16 ;
  wire \Using_FPGA.Native_17 ;
  wire \Using_FPGA.Native_18 ;
  wire \Using_FPGA.Native_19 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_20 ;
  wire \Using_FPGA.Native_21 ;
  wire \Using_FPGA.Native_22 ;
  wire \Using_FPGA.Native_23 ;
  wire \Using_FPGA.Native_24 ;
  wire \Using_FPGA.Native_25 ;
  wire \Using_FPGA.Native_26 ;
  wire \Using_FPGA.Native_27 ;
  wire \Using_FPGA.Native_28 ;
  wire \Using_FPGA.Native_29 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_30 ;
  wire \Using_FPGA.Native_31 ;
  wire \Using_FPGA.Native_32 ;
  wire \Using_FPGA.Native_33 ;
  wire \Using_FPGA.Native_34 ;
  wire \Using_FPGA.Native_35 ;
  wire \Using_FPGA.Native_36 ;
  wire \Using_FPGA.Native_37 ;
  wire \Using_FPGA.Native_38 ;
  wire \Using_FPGA.Native_39 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_40 ;
  wire \Using_FPGA.Native_41 ;
  wire \Using_FPGA.Native_42 ;
  wire \Using_FPGA.Native_43 ;
  wire \Using_FPGA.Native_44 ;
  wire \Using_FPGA.Native_45 ;
  wire \Using_FPGA.Native_46 ;
  wire \Using_FPGA.Native_47 ;
  wire \Using_FPGA.Native_48 ;
  wire \Using_FPGA.Native_49 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_50 ;
  wire \Using_FPGA.Native_51 ;
  wire \Using_FPGA.Native_52 ;
  wire \Using_FPGA.Native_53 ;
  wire \Using_FPGA.Native_54 ;
  wire \Using_FPGA.Native_55 ;
  wire \Using_FPGA.Native_56 ;
  wire \Using_FPGA.Native_57 ;
  wire \Using_FPGA.Native_58 ;
  wire \Using_FPGA.Native_59 ;
  wire \Using_FPGA.Native_6 ;
  wire [0:0]\Using_FPGA.Native_60 ;
  wire \Using_FPGA.Native_61 ;
  wire \Using_FPGA.Native_62 ;
  wire \Using_FPGA.Native_63 ;
  wire \Using_FPGA.Native_64 ;
  wire \Using_FPGA.Native_65 ;
  wire \Using_FPGA.Native_66 ;
  wire \Using_FPGA.Native_67 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \Using_FPGA.Native_9 ;
  wire \Zero_Detecting[0].nibble_Zero_reg ;
  wire [0:15]imm_Value;
  wire normal_piperun;
  wire [27:0]op2_C;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized12 \OpSelect_Bits[0].Operand_Select_Bit_I 
       (.D_30(D_30),
        .EX_Result(EX_Result[0]),
        .I3_6(I3_6),
        .Reg1_Data(Reg1_Data[0]),
        .\Using_FPGA.Native (\Using_FPGA.Native_58 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_59 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C[27]),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10 \OpSelect_Bits[10].Operand_Select_Bit_I 
       (.D_20(D_20),
        .EX_Result(EX_Result[10]),
        .Reg1_Data(Reg1_Data[10]),
        .\Using_FPGA.Native (\Using_FPGA.Native_38 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_39 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C[17]),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10_463 \OpSelect_Bits[11].Operand_Select_Bit_I 
       (.D_19(D_19),
        .EX_Result(EX_Result[11]),
        .Reg1_Data(Reg1_Data[11]),
        .\Using_FPGA.Native (\Using_FPGA.Native_36 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_37 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C[16]),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10_464 \OpSelect_Bits[12].Operand_Select_Bit_I 
       (.D_18(D_18),
        .EX_Result(EX_Result[12]),
        .Reg1_Data(Reg1_Data[12]),
        .\Using_FPGA.Native (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_35 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C[15]),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10_465 \OpSelect_Bits[13].Operand_Select_Bit_I 
       (.D_17(D_17),
        .EX_Result(EX_Result[13]),
        .Reg1_Data(Reg1_Data[13]),
        .\Using_FPGA.Native (\Using_FPGA.Native_32 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_33 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C[14]),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10_466 \OpSelect_Bits[14].Operand_Select_Bit_I 
       (.D_16(D_16),
        .EX_Result(EX_Result[14]),
        .Reg1_Data(Reg1_Data[14]),
        .\Using_FPGA.Native (\Using_FPGA.Native_30 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C[13]),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10_467 \OpSelect_Bits[15].Operand_Select_Bit_I 
       (.D_15(D_15),
        .EX_Result(EX_Result[15]),
        .Reg1_Data(Reg1_Data[15]),
        .\Using_FPGA.Native (\Using_FPGA.Native_28 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_29 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C[12]),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized8 \OpSelect_Bits[16].Operand_Select_Bit_I 
       (.D_14(D_14),
        .EX_Result(EX_Result[16]),
        .Op1_Shift(Op1_Shift),
        .Reg1_Data(Reg1_Data[16]),
        .\Using_FPGA.Native (\Using_FPGA.Native_27 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_67 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C[11]),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized8_468 \OpSelect_Bits[17].Operand_Select_Bit_I 
       (.D_13(D_13),
        .EX_Result(EX_Result[17]),
        .Reg1_Data(Reg1_Data[17]),
        .\Using_FPGA.Native (\Using_FPGA.Native_25 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_26 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_66 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C[10]),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized8_469 \OpSelect_Bits[18].Operand_Select_Bit_I 
       (.D_12(D_12),
        .EX_Result(EX_Result[18]),
        .Reg1_Data(Reg1_Data[18]),
        .\Using_FPGA.Native (\Using_FPGA.Native_23 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_24 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_65 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C[9]),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized8_470 \OpSelect_Bits[19].Operand_Select_Bit_I 
       (.D_11(D_11),
        .EX_Result(EX_Result[19]),
        .Reg1_Data(Reg1_Data[19]),
        .\Using_FPGA.Native (\Using_FPGA.Native_21 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_22 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_64 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C[8]),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10_471 \OpSelect_Bits[1].Operand_Select_Bit_I 
       (.D_29(D_29),
        .EX_Result(EX_Result[1]),
        .Reg1_Data(Reg1_Data[1]),
        .\Using_FPGA.Native (\Using_FPGA.Native_56 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_57 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C[26]),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized8_472 \OpSelect_Bits[20].Operand_Select_Bit_I 
       (.D_10(D_10),
        .EX_Result(EX_Result[20]),
        .Reg1_Data(Reg1_Data[20]),
        .\Using_FPGA.Native (\Using_FPGA.Native_19 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_20 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_63 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C[7]),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized8_473 \OpSelect_Bits[21].Operand_Select_Bit_I 
       (.D_9(D_9),
        .EX_Result(EX_Result[21]),
        .Reg1_Data(Reg1_Data[21]),
        .\Using_FPGA.Native (\Using_FPGA.Native_17 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_18 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_62 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C[6]),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized8_474 \OpSelect_Bits[22].Operand_Select_Bit_I 
       (.D_8(D_8),
        .EX_Result(EX_Result[22]),
        .Reg1_Data(Reg1_Data[22]),
        .\Using_FPGA.Native (\Using_FPGA.Native_15 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_16 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_61 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C[5]),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized8_475 \OpSelect_Bits[23].Operand_Select_Bit_I 
       (.D_7(D_7),
        .EX_Result(EX_Result[23]),
        .PC_OF(PC_OF),
        .Reg1_Data(Reg1_Data[23]),
        .\Using_FPGA.Native (\Using_FPGA.Native_13 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_14 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C[4]),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit \OpSelect_Bits[24].Operand_Select_Bit_I 
       (.D_6(D_6),
        .EX_Result(EX_Result[24]),
        .I3_5(I3_5),
        .Reg1_Data(Reg1_Data[24]),
        .\Using_FPGA.Native (\Using_FPGA.Native_11 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_12 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C[3]),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit_476 \OpSelect_Bits[25].Operand_Select_Bit_I 
       (.D_5(D_5),
        .EX_Result(EX_Result[25]),
        .I3_4(I3_4),
        .Reg1_Data(Reg1_Data[25]),
        .\Using_FPGA.Native (\Using_FPGA.Native_9 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_10 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C[2]),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized6 \OpSelect_Bits[26].Operand_Select_Bit_I 
       (.D_4(D_4),
        .EX_Result(EX_Result[26]),
        .I3_3(I3_3),
        .Reg1_Data(Reg1_Data[26]),
        .\Using_FPGA.Native (\Using_FPGA.Native_7 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_8 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C[1]),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized4 \OpSelect_Bits[27].Operand_Select_Bit_I 
       (.D_3(D_3),
        .EX_Result(EX_Result[27]),
        .I3_2(I3_2),
        .Reg1_Data(Reg1_Data[27]),
        .\Using_FPGA.Native (\Using_FPGA.Native_5 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_6 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C[0]),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized2 \OpSelect_Bits[28].Operand_Select_Bit_I 
       (.D_2(D_2),
        .EX_Result(EX_Result[28]),
        .I3_1(I3_1),
        .Reg1_Data(Reg1_Data[28]),
        .\Using_FPGA.Native (\Using_FPGA.Native_2 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_3 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_4 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit_477 \OpSelect_Bits[29].Operand_Select_Bit_I 
       (.D_1(D_1),
        .EX_Result(EX_Result[29]),
        .I3_0(I3_0),
        .Op2(Op2),
        .Reg1_Data(Reg1_Data[29]),
        .Shifted(Shifted),
        .\Using_FPGA.Native (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10_478 \OpSelect_Bits[2].Operand_Select_Bit_I 
       (.D_28(D_28),
        .EX_Result(EX_Result[2]),
        .Reg1_Data(Reg1_Data[2]),
        .\Using_FPGA.Native (\Using_FPGA.Native_54 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_55 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C[25]),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit_479 \OpSelect_Bits[30].Operand_Select_Bit_I 
       (.D_0(D_0),
        .EX_Result(EX_Result[30]),
        .I3(I3),
        .Reg1_Data(Reg1_Data[30]),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_60 ),
        .\Using_FPGA.Native_2 (\OpSelect_Bits[31].Operand_Select_Bit_I_n_1 ),
        .\Zero_Detecting[0].nibble_Zero_reg (\Zero_Detecting[0].nibble_Zero_reg ),
        .normal_piperun(normal_piperun),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit_480 \OpSelect_Bits[31].Operand_Select_Bit_I 
       (.D(D),
        .EX_Op2(EX_Op2),
        .EX_Result(EX_Result[31]),
        .Op1_Logic(Op1_Logic),
        .Reg1_Data(Reg1_Data[31]),
        .\Using_FPGA.Native (\OpSelect_Bits[31].Operand_Select_Bit_I_n_1 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10_481 \OpSelect_Bits[3].Operand_Select_Bit_I 
       (.D_27(D_27),
        .EX_Result(EX_Result[3]),
        .Reg1_Data(Reg1_Data[3]),
        .\Using_FPGA.Native (\Using_FPGA.Native_52 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_53 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C[24]),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10_482 \OpSelect_Bits[4].Operand_Select_Bit_I 
       (.D_26(D_26),
        .EX_Result(EX_Result[4]),
        .Reg1_Data(Reg1_Data[4]),
        .\Using_FPGA.Native (\Using_FPGA.Native_50 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_51 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C[23]),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10_483 \OpSelect_Bits[5].Operand_Select_Bit_I 
       (.D_25(D_25),
        .EX_Result(EX_Result[5]),
        .Reg1_Data(Reg1_Data[5]),
        .\Using_FPGA.Native (\Using_FPGA.Native_48 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_49 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C[22]),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10_484 \OpSelect_Bits[6].Operand_Select_Bit_I 
       (.D_24(D_24),
        .EX_Result(EX_Result[6]),
        .Reg1_Data(Reg1_Data[6]),
        .\Using_FPGA.Native (\Using_FPGA.Native_46 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_47 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C[21]),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10_485 \OpSelect_Bits[7].Operand_Select_Bit_I 
       (.D_23(D_23),
        .EX_Result(EX_Result[7]),
        .Reg1_Data(Reg1_Data[7]),
        .\Using_FPGA.Native (\Using_FPGA.Native_44 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_45 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C[20]),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10_486 \OpSelect_Bits[8].Operand_Select_Bit_I 
       (.D_22(D_22),
        .EX_Result(EX_Result[8]),
        .Reg1_Data(Reg1_Data[8]),
        .\Using_FPGA.Native (\Using_FPGA.Native_42 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_43 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C[19]),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10_487 \OpSelect_Bits[9].Operand_Select_Bit_I 
       (.D_21(D_21),
        .EX_Result(EX_Result[9]),
        .Reg1_Data(Reg1_Data[9]),
        .\Using_FPGA.Native (\Using_FPGA.Native_40 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_41 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_60 ),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C[18]),
        .opsel1_SPR(opsel1_SPR),
        .out(out),
        .res_Forward1(res_Forward1));
  FDRE \Size_17to32.imm_Reg_reg[0] 
       (.C(out),
        .CE(E),
        .D(imm_Value[0]),
        .Q(\Size_17to32.imm_Reg_reg[0]_0 [15]),
        .R(\Using_FPGA.Native_60 ));
  FDRE \Size_17to32.imm_Reg_reg[10] 
       (.C(out),
        .CE(E),
        .D(imm_Value[10]),
        .Q(\Size_17to32.imm_Reg_reg[0]_0 [5]),
        .R(\Using_FPGA.Native_60 ));
  FDRE \Size_17to32.imm_Reg_reg[11] 
       (.C(out),
        .CE(E),
        .D(imm_Value[11]),
        .Q(\Size_17to32.imm_Reg_reg[0]_0 [4]),
        .R(\Using_FPGA.Native_60 ));
  FDRE \Size_17to32.imm_Reg_reg[12] 
       (.C(out),
        .CE(E),
        .D(imm_Value[12]),
        .Q(\Size_17to32.imm_Reg_reg[0]_0 [3]),
        .R(\Using_FPGA.Native_60 ));
  FDRE \Size_17to32.imm_Reg_reg[13] 
       (.C(out),
        .CE(E),
        .D(imm_Value[13]),
        .Q(\Size_17to32.imm_Reg_reg[0]_0 [2]),
        .R(\Using_FPGA.Native_60 ));
  FDRE \Size_17to32.imm_Reg_reg[14] 
       (.C(out),
        .CE(E),
        .D(imm_Value[14]),
        .Q(\Size_17to32.imm_Reg_reg[0]_0 [1]),
        .R(\Using_FPGA.Native_60 ));
  FDRE \Size_17to32.imm_Reg_reg[15] 
       (.C(out),
        .CE(E),
        .D(imm_Value[15]),
        .Q(\Size_17to32.imm_Reg_reg[0]_0 [0]),
        .R(\Using_FPGA.Native_60 ));
  FDRE \Size_17to32.imm_Reg_reg[1] 
       (.C(out),
        .CE(E),
        .D(imm_Value[1]),
        .Q(\Size_17to32.imm_Reg_reg[0]_0 [14]),
        .R(\Using_FPGA.Native_60 ));
  FDRE \Size_17to32.imm_Reg_reg[2] 
       (.C(out),
        .CE(E),
        .D(imm_Value[2]),
        .Q(\Size_17to32.imm_Reg_reg[0]_0 [13]),
        .R(\Using_FPGA.Native_60 ));
  FDRE \Size_17to32.imm_Reg_reg[3] 
       (.C(out),
        .CE(E),
        .D(imm_Value[3]),
        .Q(\Size_17to32.imm_Reg_reg[0]_0 [12]),
        .R(\Using_FPGA.Native_60 ));
  FDRE \Size_17to32.imm_Reg_reg[4] 
       (.C(out),
        .CE(E),
        .D(imm_Value[4]),
        .Q(\Size_17to32.imm_Reg_reg[0]_0 [11]),
        .R(\Using_FPGA.Native_60 ));
  FDRE \Size_17to32.imm_Reg_reg[5] 
       (.C(out),
        .CE(E),
        .D(imm_Value[5]),
        .Q(\Size_17to32.imm_Reg_reg[0]_0 [10]),
        .R(\Using_FPGA.Native_60 ));
  FDRE \Size_17to32.imm_Reg_reg[6] 
       (.C(out),
        .CE(E),
        .D(imm_Value[6]),
        .Q(\Size_17to32.imm_Reg_reg[0]_0 [9]),
        .R(\Using_FPGA.Native_60 ));
  FDRE \Size_17to32.imm_Reg_reg[7] 
       (.C(out),
        .CE(E),
        .D(imm_Value[7]),
        .Q(\Size_17to32.imm_Reg_reg[0]_0 [8]),
        .R(\Using_FPGA.Native_60 ));
  FDRE \Size_17to32.imm_Reg_reg[8] 
       (.C(out),
        .CE(E),
        .D(imm_Value[8]),
        .Q(\Size_17to32.imm_Reg_reg[0]_0 [7]),
        .R(\Using_FPGA.Native_60 ));
  FDRE \Size_17to32.imm_Reg_reg[9] 
       (.C(out),
        .CE(E),
        .D(imm_Value[9]),
        .Q(\Size_17to32.imm_Reg_reg[0]_0 [6]),
        .R(\Using_FPGA.Native_60 ));
endmodule

module c2c_gth_in_system_ibert_0_Operand_Select_Bit
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    op2_C,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    I3_5,
    opsel1_SPR,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    out,
    D_6);
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [0:0]op2_C;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input I3_5;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input out;
  input D_6;

  wire D_6;
  wire [0:0]EX_Result;
  wire I3_5;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire [0:0]op2_C;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_546 \Both_PC_and_MSR.Op1_LUT6 
       (.EX_Result(EX_Result),
        .I3_5(I3_5),
        .Reg1_Data(Reg1_Data),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_547 Op1_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_548 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_549 Op2_DFF
       (.D_6(D_6),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit_476
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    op2_C,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    I3_4,
    opsel1_SPR,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    out,
    D_5);
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [0:0]op2_C;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input I3_4;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input out;
  input D_5;

  wire D_5;
  wire [0:0]EX_Result;
  wire I3_4;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire [0:0]op2_C;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_542 \Both_PC_and_MSR.Op1_LUT6 
       (.EX_Result(EX_Result),
        .I3_4(I3_4),
        .Reg1_Data(Reg1_Data),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_543 Op1_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_544 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_545 Op2_DFF
       (.D_5(D_5),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit_477
   (Shifted,
    \Using_FPGA.Native ,
    Op2,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    I3_0,
    opsel1_SPR,
    \Using_FPGA.Native_0 ,
    normal_piperun,
    out,
    D_1);
  output Shifted;
  output \Using_FPGA.Native ;
  output Op2;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input I3_0;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_0 ;
  input normal_piperun;
  input out;
  input D_1;

  wire D_1;
  wire [0:0]EX_Result;
  wire I3_0;
  wire Op2;
  wire [0:0]Reg1_Data;
  wire Shifted;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_526 \Both_PC_and_MSR.Op1_LUT6 
       (.EX_Result(EX_Result),
        .I3_0(I3_0),
        .Reg1_Data(Reg1_Data),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_527 Op1_DFF
       (.Shifted(Shifted),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_528 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_529 Op2_DFF
       (.D_1(D_1),
        .Op2(Op2),
        .normal_piperun(normal_piperun),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit_479
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Zero_Detecting[0].nibble_Zero_reg ,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    I3,
    opsel1_SPR,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    out,
    D_0,
    \Using_FPGA.Native_2 );
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output \Zero_Detecting[0].nibble_Zero_reg ;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input I3;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input out;
  input D_0;
  input \Using_FPGA.Native_2 ;

  wire D_0;
  wire [0:0]EX_Result;
  wire I3;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Zero_Detecting[0].nibble_Zero_reg ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_518 \Both_PC_and_MSR.Op1_LUT6 
       (.EX_Result(EX_Result),
        .I3(I3),
        .Reg1_Data(Reg1_Data),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_519 Op1_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_520 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .\Zero_Detecting[0].nibble_Zero_reg (\Zero_Detecting[0].nibble_Zero_reg ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_521 Op2_DFF
       (.D_0(D_0),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .normal_piperun(normal_piperun),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit_480
   (Op1_Logic,
    \Using_FPGA.Native ,
    EX_Op2,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR,
    \Using_FPGA.Native_0 ,
    normal_piperun,
    out,
    D);
  output Op1_Logic;
  output \Using_FPGA.Native ;
  output EX_Op2;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_0 ;
  input normal_piperun;
  input out;
  input D;

  wire D;
  wire EX_Op2;
  wire [0:0]EX_Result;
  wire Op1_Logic;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_514 \Both_PC_and_MSR.Op1_LUT6 
       (.EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_515 Op1_DFF
       (.Op1_Logic(Op1_Logic),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_516 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_517 Op2_DFF
       (.D(D),
        .EX_Op2(EX_Op2),
        .normal_piperun(normal_piperun),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    op2_C,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    out,
    D_20);
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [0:0]op2_C;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input out;
  input D_20;

  wire D_20;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire [0:0]op2_C;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_606 \Only_PC.Op1_LUT6 
       (.EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_607 Op1_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_608 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_609 Op2_DFF
       (.D_20(D_20),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10_463
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    op2_C,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    out,
    D_19);
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [0:0]op2_C;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input out;
  input D_19;

  wire D_19;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire [0:0]op2_C;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_602 \Only_PC.Op1_LUT6 
       (.EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_603 Op1_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_604 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_605 Op2_DFF
       (.D_19(D_19),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10_464
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    op2_C,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    out,
    D_18);
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [0:0]op2_C;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input out;
  input D_18;

  wire D_18;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire [0:0]op2_C;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_598 \Only_PC.Op1_LUT6 
       (.EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_599 Op1_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_600 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_601 Op2_DFF
       (.D_18(D_18),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10_465
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    op2_C,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    out,
    D_17);
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [0:0]op2_C;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input out;
  input D_17;

  wire D_17;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire [0:0]op2_C;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_594 \Only_PC.Op1_LUT6 
       (.EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_595 Op1_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_596 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_597 Op2_DFF
       (.D_17(D_17),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10_466
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    op2_C,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    out,
    D_16);
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [0:0]op2_C;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input out;
  input D_16;

  wire D_16;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire [0:0]op2_C;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_590 \Only_PC.Op1_LUT6 
       (.EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_591 Op1_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_592 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_593 Op2_DFF
       (.D_16(D_16),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10_467
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    op2_C,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    out,
    D_15);
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [0:0]op2_C;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input out;
  input D_15;

  wire D_15;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire [0:0]op2_C;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_586 \Only_PC.Op1_LUT6 
       (.EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_587 Op1_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_588 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_589 Op2_DFF
       (.D_15(D_15),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10_471
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    op2_C,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    out,
    D_29);
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [0:0]op2_C;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input out;
  input D_29;

  wire D_29;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire [0:0]op2_C;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_566 \Only_PC.Op1_LUT6 
       (.EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_567 Op1_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_568 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_569 Op2_DFF
       (.D_29(D_29),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10_478
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    op2_C,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    out,
    D_28);
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [0:0]op2_C;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input out;
  input D_28;

  wire D_28;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire [0:0]op2_C;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_522 \Only_PC.Op1_LUT6 
       (.EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_523 Op1_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_524 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_525 Op2_DFF
       (.D_28(D_28),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10_481
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    op2_C,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    out,
    D_27);
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [0:0]op2_C;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input out;
  input D_27;

  wire D_27;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire [0:0]op2_C;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_510 \Only_PC.Op1_LUT6 
       (.EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_511 Op1_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_512 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_513 Op2_DFF
       (.D_27(D_27),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10_482
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    op2_C,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    out,
    D_26);
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [0:0]op2_C;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input out;
  input D_26;

  wire D_26;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire [0:0]op2_C;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_506 \Only_PC.Op1_LUT6 
       (.EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_507 Op1_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_508 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_509 Op2_DFF
       (.D_26(D_26),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10_483
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    op2_C,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    out,
    D_25);
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [0:0]op2_C;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input out;
  input D_25;

  wire D_25;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire [0:0]op2_C;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_502 \Only_PC.Op1_LUT6 
       (.EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_503 Op1_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_504 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_505 Op2_DFF
       (.D_25(D_25),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10_484
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    op2_C,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    out,
    D_24);
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [0:0]op2_C;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input out;
  input D_24;

  wire D_24;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire [0:0]op2_C;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_498 \Only_PC.Op1_LUT6 
       (.EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_499 Op1_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_500 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_501 Op2_DFF
       (.D_24(D_24),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10_485
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    op2_C,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    out,
    D_23);
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [0:0]op2_C;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input out;
  input D_23;

  wire D_23;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire [0:0]op2_C;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_494 \Only_PC.Op1_LUT6 
       (.EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_495 Op1_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_496 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_497 Op2_DFF
       (.D_23(D_23),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10_486
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    op2_C,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    out,
    D_22);
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [0:0]op2_C;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input out;
  input D_22;

  wire D_22;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire [0:0]op2_C;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_490 \Only_PC.Op1_LUT6 
       (.EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_491 Op1_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_492 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_493 Op2_DFF
       (.D_22(D_22),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized10_487
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    op2_C,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    opsel1_SPR,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    out,
    D_21);
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [0:0]op2_C;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input out;
  input D_21;

  wire D_21;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire [0:0]op2_C;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2 \Only_PC.Op1_LUT6 
       (.EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_488 Op1_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_489 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE Op2_DFF
       (.D_21(D_21),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized12
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    op2_C,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    I3_6,
    opsel1_SPR,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    out,
    D_30);
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [0:0]op2_C;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input I3_6;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input out;
  input D_30;

  wire D_30;
  wire [0:0]EX_Result;
  wire I3_6;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire [0:0]op2_C;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_610 \Both_PC_and_MSR.Op1_LUT6 
       (.EX_Result(EX_Result),
        .I3_6(I3_6),
        .Reg1_Data(Reg1_Data),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_611 Op1_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_612 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_613 Op2_DFF
       (.D_30(D_30),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized2
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    I3_1,
    opsel1_SPR,
    \Using_FPGA.Native_2 ,
    normal_piperun,
    out,
    D_2);
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input I3_1;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_2 ;
  input normal_piperun;
  input out;
  input D_2;

  wire D_2;
  wire [0:0]EX_Result;
  wire I3_1;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_530 \Both_PC_and_MSR.Op1_LUT6 
       (.EX_Result(EX_Result),
        .I3_1(I3_1),
        .Reg1_Data(Reg1_Data),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_531 Op1_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_532 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_533 Op2_DFF
       (.D_2(D_2),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized4
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    op2_C,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    I3_2,
    opsel1_SPR,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    out,
    D_3);
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [0:0]op2_C;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input I3_2;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input out;
  input D_3;

  wire D_3;
  wire [0:0]EX_Result;
  wire I3_2;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire [0:0]op2_C;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_534 \Both_PC_and_MSR.Op1_LUT6 
       (.EX_Result(EX_Result),
        .I3_2(I3_2),
        .Reg1_Data(Reg1_Data),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_535 Op1_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_536 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_537 Op2_DFF
       (.D_3(D_3),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized6
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    op2_C,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    I3_3,
    opsel1_SPR,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    out,
    D_4);
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [0:0]op2_C;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input I3_3;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input out;
  input D_4;

  wire D_4;
  wire [0:0]EX_Result;
  wire I3_3;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire [0:0]op2_C;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_538 \Both_PC_and_MSR.Op1_LUT6 
       (.EX_Result(EX_Result),
        .I3_3(I3_3),
        .Reg1_Data(Reg1_Data),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_539 Op1_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_540 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_541 Op2_DFF
       (.D_4(D_4),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized8
   (Op1_Shift,
    \Using_FPGA.Native ,
    op2_C,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    \Using_FPGA.Native_0 ,
    opsel1_SPR,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    out,
    D_14);
  output Op1_Shift;
  output \Using_FPGA.Native ;
  output [0:0]op2_C;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input \Using_FPGA.Native_0 ;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input out;
  input D_14;

  wire D_14;
  wire [0:0]EX_Result;
  wire Op1_Shift;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire [0:0]op2_C;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_582 \Only_PC.Op1_LUT6 
       (.EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_583 Op1_DFF
       (.Op1_Shift(Op1_Shift),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_584 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_585 Op2_DFF
       (.D_14(D_14),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized8_468
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    op2_C,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    \Using_FPGA.Native_1 ,
    opsel1_SPR,
    \Using_FPGA.Native_2 ,
    normal_piperun,
    out,
    D_13);
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [0:0]op2_C;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input \Using_FPGA.Native_1 ;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_2 ;
  input normal_piperun;
  input out;
  input D_13;

  wire D_13;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire [0:0]op2_C;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_578 \Only_PC.Op1_LUT6 
       (.EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_579 Op1_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_580 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_581 Op2_DFF
       (.D_13(D_13),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized8_469
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    op2_C,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    \Using_FPGA.Native_1 ,
    opsel1_SPR,
    \Using_FPGA.Native_2 ,
    normal_piperun,
    out,
    D_12);
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [0:0]op2_C;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input \Using_FPGA.Native_1 ;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_2 ;
  input normal_piperun;
  input out;
  input D_12;

  wire D_12;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire [0:0]op2_C;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_574 \Only_PC.Op1_LUT6 
       (.EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_575 Op1_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_576 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_577 Op2_DFF
       (.D_12(D_12),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized8_470
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    op2_C,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    \Using_FPGA.Native_1 ,
    opsel1_SPR,
    \Using_FPGA.Native_2 ,
    normal_piperun,
    out,
    D_11);
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [0:0]op2_C;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input \Using_FPGA.Native_1 ;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_2 ;
  input normal_piperun;
  input out;
  input D_11;

  wire D_11;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire [0:0]op2_C;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_570 \Only_PC.Op1_LUT6 
       (.EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_571 Op1_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_572 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_573 Op2_DFF
       (.D_11(D_11),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized8_472
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    op2_C,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    \Using_FPGA.Native_1 ,
    opsel1_SPR,
    \Using_FPGA.Native_2 ,
    normal_piperun,
    out,
    D_10);
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [0:0]op2_C;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input \Using_FPGA.Native_1 ;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_2 ;
  input normal_piperun;
  input out;
  input D_10;

  wire D_10;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire [0:0]op2_C;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_562 \Only_PC.Op1_LUT6 
       (.EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_563 Op1_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_564 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_565 Op2_DFF
       (.D_10(D_10),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized8_473
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    op2_C,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    \Using_FPGA.Native_1 ,
    opsel1_SPR,
    \Using_FPGA.Native_2 ,
    normal_piperun,
    out,
    D_9);
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [0:0]op2_C;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input \Using_FPGA.Native_1 ;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_2 ;
  input normal_piperun;
  input out;
  input D_9;

  wire D_9;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire [0:0]op2_C;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_558 \Only_PC.Op1_LUT6 
       (.EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_559 Op1_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_560 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_561 Op2_DFF
       (.D_9(D_9),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized8_474
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    op2_C,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    \Using_FPGA.Native_1 ,
    opsel1_SPR,
    \Using_FPGA.Native_2 ,
    normal_piperun,
    out,
    D_8);
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [0:0]op2_C;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input \Using_FPGA.Native_1 ;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_2 ;
  input normal_piperun;
  input out;
  input D_8;

  wire D_8;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire [0:0]op2_C;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_554 \Only_PC.Op1_LUT6 
       (.EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_555 Op1_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_556 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_557 Op2_DFF
       (.D_8(D_8),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Operand_Select_Bit" *) 
module c2c_gth_in_system_ibert_0_Operand_Select_Bit__parameterized8_475
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    op2_C,
    Reg1_Data,
    EX_Result,
    res_Forward1,
    PC_OF,
    opsel1_SPR,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    out,
    D_7);
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [0:0]op2_C;
  input [0:0]Reg1_Data;
  input [0:0]EX_Result;
  input res_Forward1;
  input PC_OF;
  input opsel1_SPR;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input out;
  input D_7;

  wire D_7;
  wire [0:0]EX_Result;
  wire PC_OF;
  wire [0:0]Reg1_Data;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire op1_Reg;
  wire [0:0]op2_C;
  wire opsel1_SPR;
  wire out;
  wire res_Forward1;

  c2c_gth_in_system_ibert_0_MB_LUT6_2_550 \Only_PC.Op1_LUT6 
       (.EX_Result(EX_Result),
        .PC_OF(PC_OF),
        .Reg1_Data(Reg1_Data),
        .op1_I(op1_I),
        .op1_Reg(op1_Reg),
        .opsel1_SPR(opsel1_SPR),
        .res_Forward1(res_Forward1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_551 Op1_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_I(op1_I),
        .out(out));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_552 Op1_Reg_DFF
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .normal_piperun(normal_piperun),
        .op1_Reg(op1_Reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_FDE_553 Op2_DFF
       (.D_7(D_7),
        .normal_piperun(normal_piperun),
        .op2_C(op2_C),
        .out(out));
endmodule

module c2c_gth_in_system_ibert_0_PC_Bit
   (ADDRARDADDR,
    PC_OF,
    LO,
    dlmb_M_ABus,
    Jump,
    \Using_FPGA.Native ,
    PC_Write,
    out,
    IReady,
    Buffer_Addr,
    lopt,
    lopt_1);
  output [0:0]ADDRARDADDR;
  output PC_OF;
  input LO;
  input [0:0]dlmb_M_ABus;
  input Jump;
  input [0:0]\Using_FPGA.Native ;
  input PC_Write;
  input out;
  input IReady;
  input [2:0]Buffer_Addr;
  input lopt;
  output lopt_1;

  wire [0:0]ADDRARDADDR;
  wire [2:0]Buffer_Addr;
  wire IReady;
  wire Jump;
  wire LO;
  wire PC_OF;
  wire PC_Write;
  wire [0:0]\Using_FPGA.Native ;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire out;
  wire pc_I;
  wire pc_Sum;
  wire xor_Sum;

  assign lopt_1 = xor_Sum;
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_458 MUXCY_XOR_I
       (.LO(LO),
        .lopt(lopt),
        .pc_Sum(pc_Sum),
        .xor_Sum(xor_Sum));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized27_459 NewPC_Mux
       (.ADDRARDADDR(ADDRARDADDR),
        .Jump(Jump),
        .dlmb_M_ABus(dlmb_M_ABus),
        .pc_Sum(pc_Sum));
  c2c_gth_in_system_ibert_0_MB_SRL16E_460 PC_OF_Buffer
       (.Buffer_Addr(Buffer_Addr),
        .IReady(IReady),
        .PC_OF(PC_OF),
        .out(out),
        .pc_I(pc_I));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized25_461 SUM_I
       (.pc_I(pc_I),
        .xor_Sum(xor_Sum));
  c2c_gth_in_system_ibert_0_MB_FDSE_462 \Set_DFF.PC_IF_DFF 
       (.ADDRARDADDR(ADDRARDADDR),
        .PC_Write(PC_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .out(out),
        .pc_I(pc_I));
endmodule

(* ORIG_REF_NAME = "PC_Bit" *) 
module c2c_gth_in_system_ibert_0_PC_Bit_382
   (Carry_Out,
    ADDRARDADDR,
    \Using_FPGA.Native ,
    LO,
    dlmb_M_ABus,
    Jump,
    \Using_FPGA.Native_0 ,
    PC_Write,
    out,
    IReady,
    Buffer_Addr,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6);
  output Carry_Out;
  output [0:0]ADDRARDADDR;
  output \Using_FPGA.Native ;
  input LO;
  input [0:0]dlmb_M_ABus;
  input Jump;
  input [0:0]\Using_FPGA.Native_0 ;
  input PC_Write;
  input out;
  input IReady;
  input [2:0]Buffer_Addr;
  output lopt;
  input lopt_1;
  input lopt_2;
  input lopt_3;
  input lopt_4;
  output lopt_5;
  output lopt_6;

  wire [0:0]ADDRARDADDR;
  wire [2:0]Buffer_Addr;
  wire Carry_Out;
  wire IReady;
  wire Jump;
  wire LO;
  wire PC_Write;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire out;
  wire pc_I;
  wire pc_Sum;
  wire xor_Sum;

  assign lopt_6 = xor_Sum;
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_453 MUXCY_XOR_I
       (.Carry_Out(Carry_Out),
        .LO(LO),
        .O(pc_Sum),
        .S(xor_Sum),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized27_454 NewPC_Mux
       (.ADDRARDADDR(ADDRARDADDR),
        .Jump(Jump),
        .O(pc_Sum),
        .dlmb_M_ABus(dlmb_M_ABus));
  c2c_gth_in_system_ibert_0_MB_SRL16E_455 PC_OF_Buffer
       (.Buffer_Addr(Buffer_Addr),
        .IReady(IReady),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .out(out),
        .pc_I(pc_I));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized25_456 SUM_I
       (.S(xor_Sum),
        .pc_I(pc_I));
  c2c_gth_in_system_ibert_0_MB_FDSE_457 \Set_DFF.PC_IF_DFF 
       (.ADDRARDADDR(ADDRARDADDR),
        .PC_Write(PC_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .out(out),
        .pc_I(pc_I));
endmodule

(* ORIG_REF_NAME = "PC_Bit" *) 
module c2c_gth_in_system_ibert_0_PC_Bit_383
   (Carry_Out,
    ADDRARDADDR,
    \Using_FPGA.Native ,
    LO,
    dlmb_M_ABus,
    Jump,
    \Using_FPGA.Native_0 ,
    PC_Write,
    out,
    IReady,
    Buffer_Addr,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output Carry_Out;
  output [0:0]ADDRARDADDR;
  output \Using_FPGA.Native ;
  input LO;
  input [0:0]dlmb_M_ABus;
  input Jump;
  input [0:0]\Using_FPGA.Native_0 ;
  input PC_Write;
  input out;
  input IReady;
  input [2:0]Buffer_Addr;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]ADDRARDADDR;
  wire [2:0]Buffer_Addr;
  wire Carry_Out;
  wire IReady;
  wire Jump;
  wire LO;
  wire PC_Write;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire lopt_1;
  wire \^lopt_2 ;
  wire out;
  wire pc_I;
  wire pc_Sum;
  wire xor_Sum;

  assign \^lopt_2  = lopt_3;
  assign lopt_2 = xor_Sum;
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_448 MUXCY_XOR_I
       (.Carry_Out(Carry_Out),
        .LO(LO),
        .O(pc_Sum),
        .S(xor_Sum),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(\^lopt_2 ));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized27_449 NewPC_Mux
       (.ADDRARDADDR(ADDRARDADDR),
        .Jump(Jump),
        .O(pc_Sum),
        .dlmb_M_ABus(dlmb_M_ABus));
  c2c_gth_in_system_ibert_0_MB_SRL16E_450 PC_OF_Buffer
       (.Buffer_Addr(Buffer_Addr),
        .IReady(IReady),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .out(out),
        .pc_I(pc_I));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized25_451 SUM_I
       (.S(xor_Sum),
        .pc_I(pc_I));
  c2c_gth_in_system_ibert_0_MB_FDSE_452 \Set_DFF.PC_IF_DFF 
       (.ADDRARDADDR(ADDRARDADDR),
        .PC_Write(PC_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .out(out),
        .pc_I(pc_I));
endmodule

(* ORIG_REF_NAME = "PC_Bit" *) 
module c2c_gth_in_system_ibert_0_PC_Bit_384
   (Carry_Out,
    ADDRARDADDR,
    \Using_FPGA.Native ,
    LO,
    dlmb_M_ABus,
    Jump,
    \Using_FPGA.Native_0 ,
    PC_Write,
    out,
    IReady,
    Buffer_Addr,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output Carry_Out;
  output [0:0]ADDRARDADDR;
  output \Using_FPGA.Native ;
  input LO;
  input [0:0]dlmb_M_ABus;
  input Jump;
  input [0:0]\Using_FPGA.Native_0 ;
  input PC_Write;
  input out;
  input IReady;
  input [2:0]Buffer_Addr;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]ADDRARDADDR;
  wire [2:0]Buffer_Addr;
  wire Carry_Out;
  wire IReady;
  wire Jump;
  wire LO;
  wire PC_Write;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire lopt_1;
  wire \^lopt_2 ;
  wire out;
  wire pc_I;
  wire pc_Sum;
  wire xor_Sum;

  assign \^lopt_2  = lopt_3;
  assign lopt_2 = xor_Sum;
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_443 MUXCY_XOR_I
       (.Carry_Out(Carry_Out),
        .LO(LO),
        .O(pc_Sum),
        .S(xor_Sum),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(\^lopt_2 ));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized27_444 NewPC_Mux
       (.ADDRARDADDR(ADDRARDADDR),
        .Jump(Jump),
        .O(pc_Sum),
        .dlmb_M_ABus(dlmb_M_ABus));
  c2c_gth_in_system_ibert_0_MB_SRL16E_445 PC_OF_Buffer
       (.Buffer_Addr(Buffer_Addr),
        .IReady(IReady),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .out(out),
        .pc_I(pc_I));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized25_446 SUM_I
       (.S(xor_Sum),
        .pc_I(pc_I));
  c2c_gth_in_system_ibert_0_MB_FDSE_447 \Set_DFF.PC_IF_DFF 
       (.ADDRARDADDR(ADDRARDADDR),
        .PC_Write(PC_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .out(out),
        .pc_I(pc_I));
endmodule

(* ORIG_REF_NAME = "PC_Bit" *) 
module c2c_gth_in_system_ibert_0_PC_Bit_385
   (Carry_Out,
    ADDRARDADDR,
    \Using_FPGA.Native ,
    LO,
    dlmb_M_ABus,
    Jump,
    \Using_FPGA.Native_0 ,
    PC_Write,
    out,
    IReady,
    Buffer_Addr,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output Carry_Out;
  output [0:0]ADDRARDADDR;
  output \Using_FPGA.Native ;
  input LO;
  input [0:0]dlmb_M_ABus;
  input Jump;
  input [0:0]\Using_FPGA.Native_0 ;
  input PC_Write;
  input out;
  input IReady;
  input [2:0]Buffer_Addr;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]ADDRARDADDR;
  wire [2:0]Buffer_Addr;
  wire Carry_Out;
  wire IReady;
  wire Jump;
  wire LO;
  wire PC_Write;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire lopt_1;
  wire \^lopt_2 ;
  wire out;
  wire pc_I;
  wire pc_Sum;
  wire xor_Sum;

  assign \^lopt_2  = lopt_3;
  assign lopt_2 = xor_Sum;
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_438 MUXCY_XOR_I
       (.Carry_Out(Carry_Out),
        .LO(LO),
        .O(pc_Sum),
        .S(xor_Sum),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(\^lopt_2 ));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized27_439 NewPC_Mux
       (.ADDRARDADDR(ADDRARDADDR),
        .Jump(Jump),
        .O(pc_Sum),
        .dlmb_M_ABus(dlmb_M_ABus));
  c2c_gth_in_system_ibert_0_MB_SRL16E_440 PC_OF_Buffer
       (.Buffer_Addr(Buffer_Addr),
        .IReady(IReady),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .out(out),
        .pc_I(pc_I));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized25_441 SUM_I
       (.S(xor_Sum),
        .pc_I(pc_I));
  c2c_gth_in_system_ibert_0_MB_FDSE_442 \Set_DFF.PC_IF_DFF 
       (.ADDRARDADDR(ADDRARDADDR),
        .PC_Write(PC_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .out(out),
        .pc_I(pc_I));
endmodule

(* ORIG_REF_NAME = "PC_Bit" *) 
module c2c_gth_in_system_ibert_0_PC_Bit_386
   (Carry_Out,
    ADDRARDADDR,
    \Using_FPGA.Native ,
    LO,
    dlmb_M_ABus,
    Jump,
    \Using_FPGA.Native_0 ,
    PC_Write,
    out,
    IReady,
    Buffer_Addr,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11,
    lopt_12,
    lopt_13,
    lopt_14,
    lopt_15,
    lopt_16,
    lopt_17);
  output Carry_Out;
  output [0:0]ADDRARDADDR;
  output \Using_FPGA.Native ;
  input LO;
  input [0:0]dlmb_M_ABus;
  input Jump;
  input [0:0]\Using_FPGA.Native_0 ;
  input PC_Write;
  input out;
  input IReady;
  input [2:0]Buffer_Addr;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;
  output lopt_12;
  output lopt_13;
  output lopt_14;
  input lopt_15;
  input lopt_16;
  input lopt_17;

  wire [0:0]ADDRARDADDR;
  wire [2:0]Buffer_Addr;
  wire Carry_Out;
  wire IReady;
  wire Jump;
  wire LO;
  wire PC_Write;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_12;
  wire lopt_13;
  wire lopt_14;
  wire lopt_15;
  wire lopt_16;
  wire lopt_17;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire out;
  wire pc_I;
  wire pc_Sum;
  wire xor_Sum;

  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_433 MUXCY_XOR_I
       (.Carry_Out(Carry_Out),
        .LO(LO),
        .O(pc_Sum),
        .S(xor_Sum),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_12(lopt_12),
        .lopt_13(lopt_13),
        .lopt_14(lopt_14),
        .lopt_15(lopt_15),
        .lopt_16(lopt_16),
        .lopt_17(lopt_17),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized27_434 NewPC_Mux
       (.ADDRARDADDR(ADDRARDADDR),
        .Jump(Jump),
        .O(pc_Sum),
        .dlmb_M_ABus(dlmb_M_ABus));
  c2c_gth_in_system_ibert_0_MB_SRL16E_435 PC_OF_Buffer
       (.Buffer_Addr(Buffer_Addr),
        .IReady(IReady),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .out(out),
        .pc_I(pc_I));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized25_436 SUM_I
       (.S(xor_Sum),
        .pc_I(pc_I));
  c2c_gth_in_system_ibert_0_MB_FDSE_437 \Set_DFF.PC_IF_DFF 
       (.ADDRARDADDR(ADDRARDADDR),
        .PC_Write(PC_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .out(out),
        .pc_I(pc_I));
endmodule

(* ORIG_REF_NAME = "PC_Bit" *) 
module c2c_gth_in_system_ibert_0_PC_Bit_387
   (Carry_Out,
    ADDRARDADDR,
    \Using_FPGA.Native ,
    LO,
    dlmb_M_ABus,
    Jump,
    \Using_FPGA.Native_0 ,
    PC_Write,
    out,
    IReady,
    Buffer_Addr,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output Carry_Out;
  output [0:0]ADDRARDADDR;
  output \Using_FPGA.Native ;
  input LO;
  input [0:0]dlmb_M_ABus;
  input Jump;
  input [0:0]\Using_FPGA.Native_0 ;
  input PC_Write;
  input out;
  input IReady;
  input [2:0]Buffer_Addr;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]ADDRARDADDR;
  wire [2:0]Buffer_Addr;
  wire Carry_Out;
  wire IReady;
  wire Jump;
  wire LO;
  wire PC_Write;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire lopt_1;
  wire \^lopt_2 ;
  wire out;
  wire pc_I;
  wire pc_Sum;
  wire xor_Sum;

  assign \^lopt_2  = lopt_3;
  assign lopt_2 = xor_Sum;
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_428 MUXCY_XOR_I
       (.Carry_Out(Carry_Out),
        .LO(LO),
        .O(pc_Sum),
        .S(xor_Sum),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(\^lopt_2 ));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized27_429 NewPC_Mux
       (.ADDRARDADDR(ADDRARDADDR),
        .Jump(Jump),
        .O(pc_Sum),
        .dlmb_M_ABus(dlmb_M_ABus));
  c2c_gth_in_system_ibert_0_MB_SRL16E_430 PC_OF_Buffer
       (.Buffer_Addr(Buffer_Addr),
        .IReady(IReady),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .out(out),
        .pc_I(pc_I));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized25_431 SUM_I
       (.S(xor_Sum),
        .pc_I(pc_I));
  c2c_gth_in_system_ibert_0_MB_FDSE_432 \Set_DFF.PC_IF_DFF 
       (.ADDRARDADDR(ADDRARDADDR),
        .PC_Write(PC_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .out(out),
        .pc_I(pc_I));
endmodule

(* ORIG_REF_NAME = "PC_Bit" *) 
module c2c_gth_in_system_ibert_0_PC_Bit_388
   (Carry_Out,
    ADDRARDADDR,
    \Using_FPGA.Native ,
    LO,
    dlmb_M_ABus,
    Jump,
    \Using_FPGA.Native_0 ,
    PC_Write,
    out,
    IReady,
    Buffer_Addr,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output Carry_Out;
  output [0:0]ADDRARDADDR;
  output \Using_FPGA.Native ;
  input LO;
  input [0:0]dlmb_M_ABus;
  input Jump;
  input [0:0]\Using_FPGA.Native_0 ;
  input PC_Write;
  input out;
  input IReady;
  input [2:0]Buffer_Addr;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]ADDRARDADDR;
  wire [2:0]Buffer_Addr;
  wire Carry_Out;
  wire IReady;
  wire Jump;
  wire LO;
  wire PC_Write;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire lopt_1;
  wire \^lopt_2 ;
  wire out;
  wire pc_I;
  wire pc_Sum;
  wire xor_Sum;

  assign \^lopt_2  = lopt_3;
  assign lopt_2 = xor_Sum;
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_423 MUXCY_XOR_I
       (.Carry_Out(Carry_Out),
        .LO(LO),
        .O(pc_Sum),
        .S(xor_Sum),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(\^lopt_2 ));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized27_424 NewPC_Mux
       (.ADDRARDADDR(ADDRARDADDR),
        .Jump(Jump),
        .O(pc_Sum),
        .dlmb_M_ABus(dlmb_M_ABus));
  c2c_gth_in_system_ibert_0_MB_SRL16E_425 PC_OF_Buffer
       (.Buffer_Addr(Buffer_Addr),
        .IReady(IReady),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .out(out),
        .pc_I(pc_I));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized25_426 SUM_I
       (.S(xor_Sum),
        .pc_I(pc_I));
  c2c_gth_in_system_ibert_0_MB_FDSE_427 \Set_DFF.PC_IF_DFF 
       (.ADDRARDADDR(ADDRARDADDR),
        .PC_Write(PC_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .out(out),
        .pc_I(pc_I));
endmodule

(* ORIG_REF_NAME = "PC_Bit" *) 
module c2c_gth_in_system_ibert_0_PC_Bit_389
   (I3,
    Carry_Out,
    ADDRARDADDR,
    \Using_FPGA.Native ,
    LO,
    dlmb_M_ABus,
    Jump,
    \Using_FPGA.Native_0 ,
    PC_Write,
    out,
    IReady,
    Buffer_Addr,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output I3;
  output Carry_Out;
  output [0:0]ADDRARDADDR;
  input \Using_FPGA.Native ;
  input LO;
  input [0:0]dlmb_M_ABus;
  input Jump;
  input [0:0]\Using_FPGA.Native_0 ;
  input PC_Write;
  input out;
  input IReady;
  input [2:0]Buffer_Addr;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]ADDRARDADDR;
  wire [2:0]Buffer_Addr;
  wire Carry_Out;
  wire I3;
  wire IReady;
  wire Jump;
  wire LO;
  wire PC_Write;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire lopt_1;
  wire \^lopt_2 ;
  wire out;
  wire pc_I;
  wire pc_Sum;
  wire xor_Sum;

  assign \^lopt_2  = lopt_3;
  assign lopt_2 = xor_Sum;
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_418 MUXCY_XOR_I
       (.Carry_Out(Carry_Out),
        .LO(LO),
        .O(pc_Sum),
        .S(xor_Sum),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(\^lopt_2 ));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized27_419 NewPC_Mux
       (.ADDRARDADDR(ADDRARDADDR),
        .Jump(Jump),
        .O(pc_Sum),
        .dlmb_M_ABus(dlmb_M_ABus));
  c2c_gth_in_system_ibert_0_MB_SRL16E_420 PC_OF_Buffer
       (.Buffer_Addr(Buffer_Addr),
        .I3(I3),
        .IReady(IReady),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .out(out),
        .pc_I(pc_I));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized25_421 SUM_I
       (.S(xor_Sum),
        .pc_I(pc_I));
  c2c_gth_in_system_ibert_0_MB_FDSE_422 \Set_DFF.PC_IF_DFF 
       (.ADDRARDADDR(ADDRARDADDR),
        .PC_Write(PC_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .out(out),
        .pc_I(pc_I));
endmodule

(* ORIG_REF_NAME = "PC_Bit" *) 
module c2c_gth_in_system_ibert_0_PC_Bit_390
   (I3_0,
    Carry_Out,
    ADDRARDADDR,
    \Using_FPGA.Native ,
    LO,
    dlmb_M_ABus,
    Jump,
    \Using_FPGA.Native_0 ,
    PC_Write,
    out,
    IReady,
    Buffer_Addr,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11,
    lopt_12,
    lopt_13,
    lopt_14,
    lopt_15,
    lopt_16,
    lopt_17,
    lopt_18,
    lopt_19,
    lopt_20,
    lopt_21);
  output I3_0;
  output Carry_Out;
  output [0:0]ADDRARDADDR;
  input \Using_FPGA.Native ;
  input LO;
  input [0:0]dlmb_M_ABus;
  input Jump;
  input [0:0]\Using_FPGA.Native_0 ;
  input PC_Write;
  input out;
  input IReady;
  input [2:0]Buffer_Addr;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;
  input lopt_12;
  input lopt_13;
  input lopt_14;
  input lopt_15;
  input lopt_16;
  input lopt_17;
  input lopt_18;
  input lopt_19;
  output lopt_20;
  output lopt_21;

  wire [0:0]ADDRARDADDR;
  wire [2:0]Buffer_Addr;
  wire Carry_Out;
  wire I3_0;
  wire IReady;
  wire Jump;
  wire LO;
  wire PC_Write;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_12;
  wire lopt_13;
  wire lopt_14;
  wire lopt_15;
  wire lopt_16;
  wire lopt_17;
  wire lopt_18;
  wire lopt_19;
  wire lopt_2;
  wire lopt_20;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire out;
  wire pc_I;
  wire pc_Sum;
  wire xor_Sum;

  assign lopt_21 = xor_Sum;
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_413 MUXCY_XOR_I
       (.Carry_Out(Carry_Out),
        .LO(LO),
        .O(pc_Sum),
        .S(xor_Sum),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_12(lopt_12),
        .lopt_13(lopt_13),
        .lopt_14(lopt_14),
        .lopt_15(lopt_15),
        .lopt_16(lopt_16),
        .lopt_17(lopt_17),
        .lopt_18(lopt_18),
        .lopt_19(lopt_19),
        .lopt_2(lopt_2),
        .lopt_20(lopt_20),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized27_414 NewPC_Mux
       (.ADDRARDADDR(ADDRARDADDR),
        .Jump(Jump),
        .O(pc_Sum),
        .dlmb_M_ABus(dlmb_M_ABus));
  c2c_gth_in_system_ibert_0_MB_SRL16E_415 PC_OF_Buffer
       (.Buffer_Addr(Buffer_Addr),
        .I3_0(I3_0),
        .IReady(IReady),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .out(out),
        .pc_I(pc_I));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized25_416 SUM_I
       (.S(xor_Sum),
        .pc_I(pc_I));
  c2c_gth_in_system_ibert_0_MB_FDSE_417 \Set_DFF.PC_IF_DFF 
       (.ADDRARDADDR(ADDRARDADDR),
        .PC_Write(PC_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .out(out),
        .pc_I(pc_I));
endmodule

(* ORIG_REF_NAME = "PC_Bit" *) 
module c2c_gth_in_system_ibert_0_PC_Bit_391
   (I3_1,
    Carry_Out,
    ADDRARDADDR,
    \Using_FPGA.Native ,
    LO,
    dlmb_M_ABus,
    Jump,
    \Using_FPGA.Native_0 ,
    PC_Write,
    out,
    IReady,
    Buffer_Addr,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output I3_1;
  output Carry_Out;
  output [0:0]ADDRARDADDR;
  input \Using_FPGA.Native ;
  input LO;
  input [0:0]dlmb_M_ABus;
  input Jump;
  input [0:0]\Using_FPGA.Native_0 ;
  input PC_Write;
  input out;
  input IReady;
  input [2:0]Buffer_Addr;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]ADDRARDADDR;
  wire [2:0]Buffer_Addr;
  wire Carry_Out;
  wire I3_1;
  wire IReady;
  wire Jump;
  wire LO;
  wire PC_Write;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire lopt_1;
  wire \^lopt_2 ;
  wire out;
  wire pc_I;
  wire pc_Sum;
  wire xor_Sum;

  assign \^lopt_2  = lopt_3;
  assign lopt_2 = xor_Sum;
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_408 MUXCY_XOR_I
       (.Carry_Out(Carry_Out),
        .LO(LO),
        .O(pc_Sum),
        .S(xor_Sum),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(\^lopt_2 ));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized27_409 NewPC_Mux
       (.ADDRARDADDR(ADDRARDADDR),
        .Jump(Jump),
        .O(pc_Sum),
        .dlmb_M_ABus(dlmb_M_ABus));
  c2c_gth_in_system_ibert_0_MB_SRL16E_410 PC_OF_Buffer
       (.Buffer_Addr(Buffer_Addr),
        .I3_1(I3_1),
        .IReady(IReady),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .out(out),
        .pc_I(pc_I));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized25_411 SUM_I
       (.S(xor_Sum),
        .pc_I(pc_I));
  c2c_gth_in_system_ibert_0_MB_FDSE_412 \Set_DFF.PC_IF_DFF 
       (.ADDRARDADDR(ADDRARDADDR),
        .PC_Write(PC_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .out(out),
        .pc_I(pc_I));
endmodule

(* ORIG_REF_NAME = "PC_Bit" *) 
module c2c_gth_in_system_ibert_0_PC_Bit_392
   (I3_2,
    Carry_Out,
    ADDRARDADDR,
    \Using_FPGA.Native ,
    LO,
    dlmb_M_ABus,
    Jump,
    \Using_FPGA.Native_0 ,
    PC_Write,
    out,
    IReady,
    Buffer_Addr,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output I3_2;
  output Carry_Out;
  output [0:0]ADDRARDADDR;
  input \Using_FPGA.Native ;
  input LO;
  input [0:0]dlmb_M_ABus;
  input Jump;
  input [0:0]\Using_FPGA.Native_0 ;
  input PC_Write;
  input out;
  input IReady;
  input [2:0]Buffer_Addr;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]ADDRARDADDR;
  wire [2:0]Buffer_Addr;
  wire Carry_Out;
  wire I3_2;
  wire IReady;
  wire Jump;
  wire LO;
  wire PC_Write;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire lopt_1;
  wire \^lopt_2 ;
  wire out;
  wire pc_I;
  wire pc_Sum;
  wire xor_Sum;

  assign \^lopt_2  = lopt_3;
  assign lopt_2 = xor_Sum;
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_403 MUXCY_XOR_I
       (.Carry_Out(Carry_Out),
        .LO(LO),
        .O(pc_Sum),
        .S(xor_Sum),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(\^lopt_2 ));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized27_404 NewPC_Mux
       (.ADDRARDADDR(ADDRARDADDR),
        .Jump(Jump),
        .O(pc_Sum),
        .dlmb_M_ABus(dlmb_M_ABus));
  c2c_gth_in_system_ibert_0_MB_SRL16E_405 PC_OF_Buffer
       (.Buffer_Addr(Buffer_Addr),
        .I3_2(I3_2),
        .IReady(IReady),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .out(out),
        .pc_I(pc_I));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized25_406 SUM_I
       (.S(xor_Sum),
        .pc_I(pc_I));
  c2c_gth_in_system_ibert_0_MB_FDSE_407 \Set_DFF.PC_IF_DFF 
       (.ADDRARDADDR(ADDRARDADDR),
        .PC_Write(PC_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .out(out),
        .pc_I(pc_I));
endmodule

(* ORIG_REF_NAME = "PC_Bit" *) 
module c2c_gth_in_system_ibert_0_PC_Bit_393
   (Carry_Out,
    ADDRARDADDR,
    \Using_FPGA.Native ,
    LO,
    dlmb_M_ABus,
    Jump,
    \Using_FPGA.Native_0 ,
    PC_Write,
    out,
    IReady,
    Buffer_Addr,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output Carry_Out;
  output [0:0]ADDRARDADDR;
  output \Using_FPGA.Native ;
  input LO;
  input [0:0]dlmb_M_ABus;
  input Jump;
  input [0:0]\Using_FPGA.Native_0 ;
  input PC_Write;
  input out;
  input IReady;
  input [2:0]Buffer_Addr;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]ADDRARDADDR;
  wire [2:0]Buffer_Addr;
  wire Carry_Out;
  wire IReady;
  wire Jump;
  wire LO;
  wire PC_Write;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire lopt_1;
  wire \^lopt_2 ;
  wire out;
  wire pc_I;
  wire pc_Sum;
  wire xor_Sum;

  assign \^lopt_2  = lopt_3;
  assign lopt_2 = xor_Sum;
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_398 MUXCY_XOR_I
       (.Carry_Out(Carry_Out),
        .LO(LO),
        .O(pc_Sum),
        .S(xor_Sum),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(\^lopt_2 ));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized27_399 NewPC_Mux
       (.ADDRARDADDR(ADDRARDADDR),
        .Jump(Jump),
        .O(pc_Sum),
        .dlmb_M_ABus(dlmb_M_ABus));
  c2c_gth_in_system_ibert_0_MB_SRL16E_400 PC_OF_Buffer
       (.Buffer_Addr(Buffer_Addr),
        .IReady(IReady),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .out(out),
        .pc_I(pc_I));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized25_401 SUM_I
       (.S(xor_Sum),
        .pc_I(pc_I));
  c2c_gth_in_system_ibert_0_MB_FDSE_402 \Set_DFF.PC_IF_DFF 
       (.ADDRARDADDR(ADDRARDADDR),
        .PC_Write(PC_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .out(out),
        .pc_I(pc_I));
endmodule

(* ORIG_REF_NAME = "PC_Bit" *) 
module c2c_gth_in_system_ibert_0_PC_Bit_394
   (Carry_Out,
    ADDRARDADDR,
    \Using_FPGA.Native ,
    Increment,
    DI,
    dlmb_M_ABus,
    Jump,
    \Using_FPGA.Native_0 ,
    PC_Write,
    out,
    IReady,
    Buffer_Addr,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11,
    lopt_12,
    lopt_13,
    lopt_14,
    lopt_15,
    lopt_16,
    lopt_17,
    lopt_18,
    lopt_19,
    lopt_20,
    lopt_21,
    lopt_22,
    lopt_23,
    lopt_24,
    lopt_25,
    lopt_26,
    lopt_27);
  output Carry_Out;
  output [0:0]ADDRARDADDR;
  output \Using_FPGA.Native ;
  input Increment;
  input DI;
  input [0:0]dlmb_M_ABus;
  input Jump;
  input [0:0]\Using_FPGA.Native_0 ;
  input PC_Write;
  input out;
  input IReady;
  input [2:0]Buffer_Addr;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;
  output lopt_12;
  output lopt_13;
  output lopt_14;
  output lopt_15;
  output lopt_16;
  output lopt_17;
  output lopt_18;
  output lopt_19;
  input lopt_20;
  input lopt_21;
  input lopt_22;
  input lopt_23;
  input lopt_24;
  input lopt_25;
  input lopt_26;
  input lopt_27;

  wire [0:0]ADDRARDADDR;
  wire [2:0]Buffer_Addr;
  wire Carry_Out;
  wire DI;
  wire IReady;
  wire Increment;
  wire Jump;
  wire PC_Write;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire lopt;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_12;
  wire lopt_13;
  wire lopt_14;
  wire lopt_15;
  wire lopt_16;
  wire lopt_17;
  wire lopt_18;
  wire lopt_19;
  wire lopt_2;
  wire lopt_20;
  wire lopt_21;
  wire lopt_22;
  wire lopt_23;
  wire lopt_24;
  wire lopt_25;
  wire lopt_26;
  wire lopt_27;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire out;
  wire pc_I;
  wire pc_Sum;
  wire xor_Sum;

  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_395 MUXCY_XOR_I
       (.Carry_Out(Carry_Out),
        .DI(DI),
        .O(pc_Sum),
        .S(xor_Sum),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_12(lopt_12),
        .lopt_13(lopt_13),
        .lopt_14(lopt_14),
        .lopt_15(lopt_15),
        .lopt_16(lopt_16),
        .lopt_17(lopt_17),
        .lopt_18(lopt_18),
        .lopt_19(lopt_19),
        .lopt_2(lopt_2),
        .lopt_20(lopt_20),
        .lopt_21(lopt_21),
        .lopt_22(lopt_22),
        .lopt_23(lopt_23),
        .lopt_24(lopt_24),
        .lopt_25(lopt_25),
        .lopt_26(lopt_26),
        .lopt_27(lopt_27),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized27 NewPC_Mux
       (.ADDRARDADDR(ADDRARDADDR),
        .Jump(Jump),
        .O(pc_Sum),
        .dlmb_M_ABus(dlmb_M_ABus));
  c2c_gth_in_system_ibert_0_MB_SRL16E_396 PC_OF_Buffer
       (.Buffer_Addr(Buffer_Addr),
        .IReady(IReady),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .out(out),
        .pc_I(pc_I));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized25 SUM_I
       (.Increment(Increment),
        .S(xor_Sum),
        .pc_I(pc_I));
  c2c_gth_in_system_ibert_0_MB_FDSE_397 \Set_DFF.PC_IF_DFF 
       (.ADDRARDADDR(ADDRARDADDR),
        .PC_Write(PC_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .out(out),
        .pc_I(pc_I));
endmodule

module c2c_gth_in_system_ibert_0_PC_Module
   (I3,
    I3_0,
    I3_1,
    I3_2,
    ADDRARDADDR,
    PC_OF,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    normal_piperun,
    \Using_FPGA.Native_8 ,
    dlmb_M_ABus,
    Jump,
    \Using_FPGA.Native_9 ,
    PC_Write,
    out,
    IReady,
    Buffer_Addr,
    Increment,
    DI);
  output I3;
  output I3_0;
  output I3_1;
  output I3_2;
  output [13:0]ADDRARDADDR;
  output PC_OF;
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  output \Using_FPGA.Native_2 ;
  output \Using_FPGA.Native_3 ;
  output \Using_FPGA.Native_4 ;
  output \Using_FPGA.Native_5 ;
  output \Using_FPGA.Native_6 ;
  output \Using_FPGA.Native_7 ;
  input normal_piperun;
  input \Using_FPGA.Native_8 ;
  input [13:0]dlmb_M_ABus;
  input Jump;
  input [0:0]\Using_FPGA.Native_9 ;
  input PC_Write;
  input out;
  input IReady;
  input [2:0]Buffer_Addr;
  input Increment;
  input DI;

  wire [13:0]ADDRARDADDR;
  wire [2:0]Buffer_Addr;
  wire Carry_10;
  wire Carry_11;
  wire Carry_12;
  wire Carry_13;
  wire Carry_14;
  wire Carry_15;
  wire Carry_3;
  wire Carry_4;
  wire Carry_5;
  wire Carry_6;
  wire Carry_7;
  wire Carry_8;
  wire Carry_9;
  wire DI;
  wire I3;
  wire I3_0;
  wire I3_1;
  wire I3_2;
  wire IReady;
  wire Increment;
  wire Jump;
  wire PC_OF;
  wire PC_Write;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire [0:0]\Using_FPGA.Native_9 ;
  wire [13:0]dlmb_M_ABus;
  wire lopt;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_12;
  wire lopt_13;
  wire lopt_14;
  wire lopt_15;
  wire lopt_16;
  wire lopt_17;
  wire lopt_18;
  wire lopt_19;
  wire lopt_2;
  wire lopt_20;
  wire lopt_21;
  wire lopt_22;
  wire lopt_23;
  wire lopt_24;
  wire lopt_25;
  wire lopt_26;
  wire lopt_27;
  wire lopt_28;
  wire lopt_29;
  wire lopt_3;
  wire lopt_30;
  wire lopt_31;
  wire lopt_32;
  wire lopt_33;
  wire lopt_34;
  wire lopt_35;
  wire lopt_36;
  wire lopt_37;
  wire lopt_38;
  wire lopt_39;
  wire lopt_4;
  wire lopt_40;
  wire lopt_41;
  wire lopt_42;
  wire lopt_43;
  wire lopt_44;
  wire lopt_45;
  wire lopt_46;
  wire lopt_47;
  wire lopt_48;
  wire lopt_49;
  wire lopt_5;
  wire lopt_50;
  wire lopt_51;
  wire lopt_52;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  (* MAX_FANOUT = "1000" *) (* RTL_MAX_FANOUT = "found" *) wire normal_piperun;
  wire out;

  c2c_gth_in_system_ibert_0_PC_Bit \Not_All_Bits.PC_GEN[16].PC_Bit_I 
       (.ADDRARDADDR(ADDRARDADDR[13]),
        .Buffer_Addr(Buffer_Addr),
        .IReady(IReady),
        .Jump(Jump),
        .LO(Carry_15),
        .PC_OF(PC_OF),
        .PC_Write(PC_Write),
        .\Using_FPGA.Native (\Using_FPGA.Native_9 ),
        .dlmb_M_ABus(dlmb_M_ABus[13]),
        .lopt(lopt_36),
        .lopt_1(lopt_37),
        .out(out));
  c2c_gth_in_system_ibert_0_PC_Bit_382 \Not_All_Bits.PC_GEN[17].PC_Bit_I 
       (.ADDRARDADDR(ADDRARDADDR[12]),
        .Buffer_Addr(Buffer_Addr),
        .Carry_Out(Carry_15),
        .IReady(IReady),
        .Jump(Jump),
        .LO(Carry_14),
        .PC_Write(PC_Write),
        .\Using_FPGA.Native (\Using_FPGA.Native_7 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_9 ),
        .dlmb_M_ABus(dlmb_M_ABus[12]),
        .lopt(lopt_36),
        .lopt_1(lopt_37),
        .lopt_2(lopt_48),
        .lopt_3(lopt_49),
        .lopt_4(lopt_50),
        .lopt_5(lopt_51),
        .lopt_6(lopt_52),
        .out(out));
  c2c_gth_in_system_ibert_0_PC_Bit_383 \Not_All_Bits.PC_GEN[18].PC_Bit_I 
       (.ADDRARDADDR(ADDRARDADDR[11]),
        .Buffer_Addr(Buffer_Addr),
        .Carry_Out(Carry_14),
        .IReady(IReady),
        .Jump(Jump),
        .LO(Carry_13),
        .PC_Write(PC_Write),
        .\Using_FPGA.Native (\Using_FPGA.Native_6 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_9 ),
        .dlmb_M_ABus(dlmb_M_ABus[11]),
        .lopt(lopt_30),
        .lopt_1(lopt_31),
        .lopt_2(lopt_32),
        .lopt_3(lopt_35),
        .out(out));
  c2c_gth_in_system_ibert_0_PC_Bit_384 \Not_All_Bits.PC_GEN[19].PC_Bit_I 
       (.ADDRARDADDR(ADDRARDADDR[10]),
        .Buffer_Addr(Buffer_Addr),
        .Carry_Out(Carry_13),
        .IReady(IReady),
        .Jump(Jump),
        .LO(Carry_12),
        .PC_Write(PC_Write),
        .\Using_FPGA.Native (\Using_FPGA.Native_5 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_9 ),
        .dlmb_M_ABus(dlmb_M_ABus[10]),
        .lopt(lopt_27),
        .lopt_1(lopt_28),
        .lopt_2(lopt_29),
        .lopt_3(lopt_34),
        .out(out));
  c2c_gth_in_system_ibert_0_PC_Bit_385 \Not_All_Bits.PC_GEN[20].PC_Bit_I 
       (.ADDRARDADDR(ADDRARDADDR[9]),
        .Buffer_Addr(Buffer_Addr),
        .Carry_Out(Carry_12),
        .IReady(IReady),
        .Jump(Jump),
        .LO(Carry_11),
        .PC_Write(PC_Write),
        .\Using_FPGA.Native (\Using_FPGA.Native_4 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_9 ),
        .dlmb_M_ABus(dlmb_M_ABus[9]),
        .lopt(lopt_24),
        .lopt_1(lopt_25),
        .lopt_2(lopt_26),
        .lopt_3(lopt_33),
        .out(out));
  c2c_gth_in_system_ibert_0_PC_Bit_386 \Not_All_Bits.PC_GEN[21].PC_Bit_I 
       (.ADDRARDADDR(ADDRARDADDR[8]),
        .Buffer_Addr(Buffer_Addr),
        .Carry_Out(Carry_11),
        .IReady(IReady),
        .Jump(Jump),
        .LO(Carry_10),
        .PC_Write(PC_Write),
        .\Using_FPGA.Native (\Using_FPGA.Native_3 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_9 ),
        .dlmb_M_ABus(dlmb_M_ABus[8]),
        .lopt(lopt_24),
        .lopt_1(lopt_25),
        .lopt_10(lopt_34),
        .lopt_11(lopt_35),
        .lopt_12(lopt_48),
        .lopt_13(lopt_49),
        .lopt_14(lopt_50),
        .lopt_15(lopt_51),
        .lopt_16(lopt_37),
        .lopt_17(lopt_52),
        .lopt_2(lopt_26),
        .lopt_3(lopt_27),
        .lopt_4(lopt_28),
        .lopt_5(lopt_29),
        .lopt_6(lopt_30),
        .lopt_7(lopt_31),
        .lopt_8(lopt_32),
        .lopt_9(lopt_33),
        .out(out));
  c2c_gth_in_system_ibert_0_PC_Bit_387 \Not_All_Bits.PC_GEN[22].PC_Bit_I 
       (.ADDRARDADDR(ADDRARDADDR[7]),
        .Buffer_Addr(Buffer_Addr),
        .Carry_Out(Carry_10),
        .IReady(IReady),
        .Jump(Jump),
        .LO(Carry_9),
        .PC_Write(PC_Write),
        .\Using_FPGA.Native (\Using_FPGA.Native_2 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_9 ),
        .dlmb_M_ABus(dlmb_M_ABus[7]),
        .lopt(lopt_18),
        .lopt_1(lopt_19),
        .lopt_2(lopt_20),
        .lopt_3(lopt_23),
        .out(out));
  c2c_gth_in_system_ibert_0_PC_Bit_388 \Not_All_Bits.PC_GEN[23].PC_Bit_I 
       (.ADDRARDADDR(ADDRARDADDR[6]),
        .Buffer_Addr(Buffer_Addr),
        .Carry_Out(Carry_9),
        .IReady(IReady),
        .Jump(Jump),
        .LO(Carry_8),
        .PC_Write(PC_Write),
        .\Using_FPGA.Native (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_9 ),
        .dlmb_M_ABus(dlmb_M_ABus[6]),
        .lopt(lopt_15),
        .lopt_1(lopt_16),
        .lopt_2(lopt_17),
        .lopt_3(lopt_22),
        .out(out));
  c2c_gth_in_system_ibert_0_PC_Bit_389 \Not_All_Bits.PC_GEN[24].PC_Bit_I 
       (.ADDRARDADDR(ADDRARDADDR[5]),
        .Buffer_Addr(Buffer_Addr),
        .Carry_Out(Carry_8),
        .I3(I3),
        .IReady(IReady),
        .Jump(Jump),
        .LO(Carry_7),
        .PC_Write(PC_Write),
        .\Using_FPGA.Native (\Using_FPGA.Native_8 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_9 ),
        .dlmb_M_ABus(dlmb_M_ABus[5]),
        .lopt(lopt_12),
        .lopt_1(lopt_13),
        .lopt_2(lopt_14),
        .lopt_3(lopt_21),
        .out(out));
  c2c_gth_in_system_ibert_0_PC_Bit_390 \Not_All_Bits.PC_GEN[25].PC_Bit_I 
       (.ADDRARDADDR(ADDRARDADDR[4]),
        .Buffer_Addr(Buffer_Addr),
        .Carry_Out(Carry_7),
        .I3_0(I3_0),
        .IReady(IReady),
        .Jump(Jump),
        .LO(Carry_6),
        .PC_Write(PC_Write),
        .\Using_FPGA.Native (\Using_FPGA.Native_8 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_9 ),
        .dlmb_M_ABus(dlmb_M_ABus[4]),
        .lopt(lopt_12),
        .lopt_1(lopt_13),
        .lopt_10(lopt_22),
        .lopt_11(lopt_23),
        .lopt_12(lopt_38),
        .lopt_13(lopt_39),
        .lopt_14(lopt_40),
        .lopt_15(lopt_41),
        .lopt_16(lopt_42),
        .lopt_17(lopt_43),
        .lopt_18(lopt_44),
        .lopt_19(lopt_45),
        .lopt_2(lopt_14),
        .lopt_20(lopt_46),
        .lopt_21(lopt_47),
        .lopt_3(lopt_15),
        .lopt_4(lopt_16),
        .lopt_5(lopt_17),
        .lopt_6(lopt_18),
        .lopt_7(lopt_19),
        .lopt_8(lopt_20),
        .lopt_9(lopt_21),
        .out(out));
  c2c_gth_in_system_ibert_0_PC_Bit_391 \Not_All_Bits.PC_GEN[26].PC_Bit_I 
       (.ADDRARDADDR(ADDRARDADDR[3]),
        .Buffer_Addr(Buffer_Addr),
        .Carry_Out(Carry_6),
        .I3_1(I3_1),
        .IReady(IReady),
        .Jump(Jump),
        .LO(Carry_5),
        .PC_Write(PC_Write),
        .\Using_FPGA.Native (\Using_FPGA.Native_8 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_9 ),
        .dlmb_M_ABus(dlmb_M_ABus[3]),
        .lopt(lopt_6),
        .lopt_1(lopt_7),
        .lopt_2(lopt_8),
        .lopt_3(lopt_11),
        .out(out));
  c2c_gth_in_system_ibert_0_PC_Bit_392 \Not_All_Bits.PC_GEN[27].PC_Bit_I 
       (.ADDRARDADDR(ADDRARDADDR[2]),
        .Buffer_Addr(Buffer_Addr),
        .Carry_Out(Carry_5),
        .I3_2(I3_2),
        .IReady(IReady),
        .Jump(Jump),
        .LO(Carry_4),
        .PC_Write(PC_Write),
        .\Using_FPGA.Native (\Using_FPGA.Native_8 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_9 ),
        .dlmb_M_ABus(dlmb_M_ABus[2]),
        .lopt(lopt_3),
        .lopt_1(lopt_4),
        .lopt_2(lopt_5),
        .lopt_3(lopt_10),
        .out(out));
  c2c_gth_in_system_ibert_0_PC_Bit_393 \Not_All_Bits.PC_GEN[28].PC_Bit_I 
       (.ADDRARDADDR(ADDRARDADDR[1]),
        .Buffer_Addr(Buffer_Addr),
        .Carry_Out(Carry_4),
        .IReady(IReady),
        .Jump(Jump),
        .LO(Carry_3),
        .PC_Write(PC_Write),
        .\Using_FPGA.Native (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_9 ),
        .dlmb_M_ABus(dlmb_M_ABus[1]),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_9),
        .out(out));
  c2c_gth_in_system_ibert_0_PC_Bit_394 \Not_All_Bits.PC_GEN[29].PC_Bit_I 
       (.ADDRARDADDR(ADDRARDADDR[0]),
        .Buffer_Addr(Buffer_Addr),
        .Carry_Out(Carry_3),
        .DI(DI),
        .IReady(IReady),
        .Increment(Increment),
        .Jump(Jump),
        .PC_Write(PC_Write),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_9 ),
        .dlmb_M_ABus(dlmb_M_ABus[0]),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_12(lopt_38),
        .lopt_13(lopt_39),
        .lopt_14(lopt_40),
        .lopt_15(lopt_41),
        .lopt_16(lopt_42),
        .lopt_17(lopt_43),
        .lopt_18(lopt_44),
        .lopt_19(lopt_45),
        .lopt_2(lopt_2),
        .lopt_20(lopt_19),
        .lopt_21(lopt_16),
        .lopt_22(lopt_13),
        .lopt_23(lopt_46),
        .lopt_24(lopt_20),
        .lopt_25(lopt_17),
        .lopt_26(lopt_14),
        .lopt_27(lopt_47),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9),
        .out(out));
endmodule

module c2c_gth_in_system_ibert_0_PreFetch_Buffer
   (\Using_B36_S2.The_BRAMs[0].RAMB36_I1 ,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_B36_S2.The_BRAMs[5].RAMB36_I1 ,
    \Using_B36_S2.The_BRAMs[6].RAMB36_I1 ,
    \Using_B36_S2.The_BRAMs[6].RAMB36_I1_0 ,
    \Using_B36_S2.The_BRAMs[7].RAMB36_I1 ,
    reg1_Addr,
    \Using_B36_S2.The_BRAMs[8].RAMB36_I1 ,
    \Using_B36_S2.The_BRAMs[8].RAMB36_I1_0 ,
    imm_Value,
    of_Valid,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_B36_S2.The_BRAMs[2].RAMB36_I1 ,
    \Using_B36_S2.The_BRAMs[1].RAMB36_I1 ,
    inHibit_EX_reg,
    \Using_B36_S2.The_BRAMs[0].RAMB36_I1_0 ,
    D,
    \Using_B36_S2.The_BRAMs[0].RAMB36_I1_1 ,
    inHibit_EX_reg_0,
    \Synchronize.use_sync_reset.sync_reg[2] ,
    mtsmsr_write_i_reg,
    Increment,
    buffer_Full,
    mbar_first,
    of_mbar_decode,
    \Using_B36_S2.The_BRAMs[8].RAMB36_I1_1 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg ,
    \Using_B36_S2.The_BRAMs[0].RAMB36_I1_2 ,
    \Using_B36_S2.The_BRAMs[6].RAMB36_I1_1 ,
    D_31,
    \Using_B36_S2.The_BRAMs[14].RAMB36_I1 ,
    E,
    \Using_B36_S2.The_BRAMs[1].RAMB36_I1_0 ,
    force_Val1_i24_out,
    Reg_Test_Equal_i,
    Reg_Test_Equal_N_i7_out,
    use_Reg_Neg_DI_i23_out,
    force2_i,
    use_Reg_Neg_S_i25_out,
    force1_i26_out,
    \Using_B36_S2.The_BRAMs[5].RAMB36_I1_0 ,
    \Synchronize.use_sync_reset.sync_reg[2]_0 ,
    \Using_B36_S2.The_BRAMs[0].RAMB36_I1_3 ,
    \Size_17to32.imm_Reg_reg[0] ,
    D_0,
    D_1,
    D_2,
    D_3,
    D_4,
    D_5,
    D_6,
    D_7,
    D_8,
    D_9,
    D_10,
    D_11,
    D_12,
    D_13,
    D_14,
    D_15,
    D_16,
    D_17,
    D_18,
    D_19,
    D_20,
    D_21,
    D_22,
    D_23,
    D_24,
    D_25,
    D_26,
    D_27,
    D_28,
    D_29,
    D_30,
    is_swx_I0,
    load_Store_i051_out,
    doublet_i,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_B36_S2.The_BRAMs[2].RAMB36_I1_0 ,
    reset_BIP_I8_out,
    enable_Interrupts_I,
    \Using_B36_S2.The_BRAMs[2].RAMB36_I1_1 ,
    Sext80,
    Sext160,
    \Using_B36_S2.The_BRAMs[0].RAMB36_I1_4 ,
    \Using_B36_S2.The_BRAMs[2].RAMB36_I1_2 ,
    \Using_B36_S2.The_BRAMs[1].RAMB36_I1_1 ,
    DI,
    CI,
    DATA_OUTA,
    out,
    S,
    inHibit_EX,
    ilmb_Sl_Ready,
    nonvalid_IFetch_n_reg,
    nonvalid_IFetch_n_reg_0,
    nonvalid_IFetch_n_reg_1,
    Sext16_reg,
    \Using_FPGA.set_BIP_I_reg ,
    S87_out,
    force_Val2_N,
    \Size_17to32.imm_Reg_reg[15] ,
    \write_Addr_I_reg[3] ,
    Sext16_reg_0,
    mtsmsr_write_i_reg_0,
    ex_Valid,
    \Using_FPGA.Native_6 ,
    missed_IFetch,
    mul_Executing_reg,
    jump2_I_reg,
    \Using_FPGA.Native_7 ,
    use_Imm_Reg,
    \Using_FPGA.Native_8 ,
    \Using_FPGA.Native_9 ,
    \Using_FPGA.Native_10 ,
    \Using_FPGA.Native_11 ,
    \Using_FPGA.Native_12 ,
    \Using_FPGA.Native_13 ,
    \Using_FPGA.Native_14 ,
    \Using_FPGA.Native_15 ,
    \Using_FPGA.Native_16 ,
    \Using_FPGA.Native_17 ,
    \Using_FPGA.Native_18 ,
    \Using_FPGA.Native_19 ,
    \Using_FPGA.Native_20 ,
    \Using_FPGA.Native_21 ,
    \Using_FPGA.Native_22 ,
    \Using_FPGA.Native_23 ,
    \Using_FPGA.Native_24 ,
    \Using_FPGA.Native_25 ,
    Reg2_Data,
    take_Intr_Now_II,
    ex_Valid_reg,
    jump_Carry2,
    mul_Executing,
    \Using_FPGA.Native_26 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6);
  output [6:0]\Using_B36_S2.The_BRAMs[0].RAMB36_I1 ;
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  output \Using_B36_S2.The_BRAMs[5].RAMB36_I1 ;
  output \Using_B36_S2.The_BRAMs[6].RAMB36_I1 ;
  output \Using_B36_S2.The_BRAMs[6].RAMB36_I1_0 ;
  output \Using_B36_S2.The_BRAMs[7].RAMB36_I1 ;
  output [0:0]reg1_Addr;
  output \Using_B36_S2.The_BRAMs[8].RAMB36_I1 ;
  output \Using_B36_S2.The_BRAMs[8].RAMB36_I1_0 ;
  output [13:0]imm_Value;
  output of_Valid;
  output \Using_FPGA.Native_2 ;
  output \Using_FPGA.Native_3 ;
  output \Using_B36_S2.The_BRAMs[2].RAMB36_I1 ;
  output \Using_B36_S2.The_BRAMs[1].RAMB36_I1 ;
  output inHibit_EX_reg;
  output \Using_B36_S2.The_BRAMs[0].RAMB36_I1_0 ;
  output [4:0]D;
  output \Using_B36_S2.The_BRAMs[0].RAMB36_I1_1 ;
  output inHibit_EX_reg_0;
  output \Synchronize.use_sync_reset.sync_reg[2] ;
  output mtsmsr_write_i_reg;
  output Increment;
  output buffer_Full;
  output mbar_first;
  output of_mbar_decode;
  output \Using_B36_S2.The_BRAMs[8].RAMB36_I1_1 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  output \Using_B36_S2.The_BRAMs[0].RAMB36_I1_2 ;
  output \Using_B36_S2.The_BRAMs[6].RAMB36_I1_1 ;
  output D_31;
  output \Using_B36_S2.The_BRAMs[14].RAMB36_I1 ;
  output [0:0]E;
  output \Using_B36_S2.The_BRAMs[1].RAMB36_I1_0 ;
  output force_Val1_i24_out;
  output Reg_Test_Equal_i;
  output Reg_Test_Equal_N_i7_out;
  output use_Reg_Neg_DI_i23_out;
  output force2_i;
  output use_Reg_Neg_S_i25_out;
  output force1_i26_out;
  output \Using_B36_S2.The_BRAMs[5].RAMB36_I1_0 ;
  output \Synchronize.use_sync_reset.sync_reg[2]_0 ;
  output \Using_B36_S2.The_BRAMs[0].RAMB36_I1_3 ;
  output \Size_17to32.imm_Reg_reg[0] ;
  output D_0;
  output D_1;
  output D_2;
  output D_3;
  output D_4;
  output D_5;
  output D_6;
  output D_7;
  output D_8;
  output D_9;
  output D_10;
  output D_11;
  output D_12;
  output D_13;
  output D_14;
  output D_15;
  output D_16;
  output D_17;
  output D_18;
  output D_19;
  output D_20;
  output D_21;
  output D_22;
  output D_23;
  output D_24;
  output D_25;
  output D_26;
  output D_27;
  output D_28;
  output D_29;
  output D_30;
  output is_swx_I0;
  output load_Store_i051_out;
  output doublet_i;
  output \Using_FPGA.Native_4 ;
  output \Using_FPGA.Native_5 ;
  output \Using_B36_S2.The_BRAMs[2].RAMB36_I1_0 ;
  output reset_BIP_I8_out;
  output enable_Interrupts_I;
  output \Using_B36_S2.The_BRAMs[2].RAMB36_I1_1 ;
  output Sext80;
  output Sext160;
  output \Using_B36_S2.The_BRAMs[0].RAMB36_I1_4 ;
  output \Using_B36_S2.The_BRAMs[2].RAMB36_I1_2 ;
  output \Using_B36_S2.The_BRAMs[1].RAMB36_I1_1 ;
  output DI;
  input CI;
  input [0:31]DATA_OUTA;
  input out;
  input S;
  input inHibit_EX;
  input ilmb_Sl_Ready;
  input nonvalid_IFetch_n_reg;
  input nonvalid_IFetch_n_reg_0;
  input nonvalid_IFetch_n_reg_1;
  input Sext16_reg;
  input \Using_FPGA.set_BIP_I_reg ;
  input S87_out;
  input force_Val2_N;
  input \Size_17to32.imm_Reg_reg[15] ;
  input [0:0]\write_Addr_I_reg[3] ;
  input Sext16_reg_0;
  input mtsmsr_write_i_reg_0;
  input ex_Valid;
  input \Using_FPGA.Native_6 ;
  input missed_IFetch;
  input mul_Executing_reg;
  input jump2_I_reg;
  input [15:0]\Using_FPGA.Native_7 ;
  input use_Imm_Reg;
  input \Using_FPGA.Native_8 ;
  input \Using_FPGA.Native_9 ;
  input \Using_FPGA.Native_10 ;
  input \Using_FPGA.Native_11 ;
  input \Using_FPGA.Native_12 ;
  input \Using_FPGA.Native_13 ;
  input \Using_FPGA.Native_14 ;
  input \Using_FPGA.Native_15 ;
  input \Using_FPGA.Native_16 ;
  input \Using_FPGA.Native_17 ;
  input \Using_FPGA.Native_18 ;
  input \Using_FPGA.Native_19 ;
  input \Using_FPGA.Native_20 ;
  input \Using_FPGA.Native_21 ;
  input \Using_FPGA.Native_22 ;
  input \Using_FPGA.Native_23 ;
  input [15:0]\Using_FPGA.Native_24 ;
  input \Using_FPGA.Native_25 ;
  input [15:0]Reg2_Data;
  input take_Intr_Now_II;
  input ex_Valid_reg;
  input jump_Carry2;
  input mul_Executing;
  input \Using_FPGA.Native_26 ;
  input lopt;
  input lopt_1;
  output lopt_2;
  input lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;

  wire \Buffer_DFFs[1].FDS_I_n_2 ;
  wire CI;
  wire [4:0]D;
  wire [0:31]DATA_OUTA;
  wire DI;
  wire D_0;
  wire D_1;
  wire D_10;
  wire D_11;
  wire D_12;
  wire D_13;
  wire D_14;
  wire D_15;
  wire D_16;
  wire D_17;
  wire D_18;
  wire D_19;
  wire D_2;
  wire D_20;
  wire D_21;
  wire D_22;
  wire D_23;
  wire D_24;
  wire D_25;
  wire D_26;
  wire D_27;
  wire D_28;
  wire D_29;
  wire D_3;
  wire D_30;
  wire D_31;
  wire D_32;
  wire D_4;
  wire D_5;
  wire D_6;
  wire D_7;
  wire D_8;
  wire D_9;
  wire [0:0]E;
  wire Increment;
  wire \PreFetch_Buffers[0].SRL16E_I_n_9 ;
  wire \PreFetch_Buffers[11].SRL16E_I_n_1 ;
  wire \PreFetch_Buffers[17].SRL16E_I_n_2 ;
  wire \PreFetch_Buffers[1].SRL16E_I_n_4 ;
  wire \PreFetch_Buffers[3].SRL16E_I_n_3 ;
  wire \PreFetch_Buffers[4].SRL16E_I_n_11 ;
  wire \PreFetch_Buffers[4].SRL16E_I_n_2 ;
  wire \PreFetch_Buffers[4].SRL16E_I_n_7 ;
  wire \PreFetch_Buffers[5].SRL16E_I_n_2 ;
  wire \PreFetch_Buffers[5].SRL16E_I_n_4 ;
  wire \PreFetch_Buffers[5].SRL16E_I_n_5 ;
  wire [15:0]Reg2_Data;
  wire Reg_Test_Equal_N_i7_out;
  wire Reg_Test_Equal_i;
  wire S;
  wire S0_out;
  wire S87_out;
  wire Sext160;
  wire Sext16_reg;
  wire Sext16_reg_0;
  wire Sext80;
  wire \Size_17to32.imm_Reg_reg[0] ;
  wire \Size_17to32.imm_Reg_reg[15] ;
  wire \Synchronize.use_sync_reset.sync_reg[2] ;
  wire \Synchronize.use_sync_reset.sync_reg[2]_0 ;
  wire [6:0]\Using_B36_S2.The_BRAMs[0].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[0].RAMB36_I1_0 ;
  wire \Using_B36_S2.The_BRAMs[0].RAMB36_I1_1 ;
  wire \Using_B36_S2.The_BRAMs[0].RAMB36_I1_2 ;
  wire \Using_B36_S2.The_BRAMs[0].RAMB36_I1_3 ;
  wire \Using_B36_S2.The_BRAMs[0].RAMB36_I1_4 ;
  wire \Using_B36_S2.The_BRAMs[14].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[1].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[1].RAMB36_I1_0 ;
  wire \Using_B36_S2.The_BRAMs[1].RAMB36_I1_1 ;
  wire \Using_B36_S2.The_BRAMs[2].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[2].RAMB36_I1_0 ;
  wire \Using_B36_S2.The_BRAMs[2].RAMB36_I1_1 ;
  wire \Using_B36_S2.The_BRAMs[2].RAMB36_I1_2 ;
  wire \Using_B36_S2.The_BRAMs[5].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[5].RAMB36_I1_0 ;
  wire \Using_B36_S2.The_BRAMs[6].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[6].RAMB36_I1_0 ;
  wire \Using_B36_S2.The_BRAMs[6].RAMB36_I1_1 ;
  wire \Using_B36_S2.The_BRAMs[7].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[8].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[8].RAMB36_I1_0 ;
  wire \Using_B36_S2.The_BRAMs[8].RAMB36_I1_1 ;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire \Using_FPGA.Native_11 ;
  wire \Using_FPGA.Native_12 ;
  wire \Using_FPGA.Native_13 ;
  wire \Using_FPGA.Native_14 ;
  wire \Using_FPGA.Native_15 ;
  wire \Using_FPGA.Native_16 ;
  wire \Using_FPGA.Native_17 ;
  wire \Using_FPGA.Native_18 ;
  wire \Using_FPGA.Native_19 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_20 ;
  wire \Using_FPGA.Native_21 ;
  wire \Using_FPGA.Native_22 ;
  wire \Using_FPGA.Native_23 ;
  wire [15:0]\Using_FPGA.Native_24 ;
  wire \Using_FPGA.Native_25 ;
  wire \Using_FPGA.Native_26 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire [15:0]\Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \Using_FPGA.Native_9 ;
  wire \Using_FPGA.set_BIP_I_reg ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire buffer_Addr_Carry_1;
  wire buffer_Addr_Carry_2;
  wire buffer_Addr_S_I_0;
  wire buffer_Addr_S_I_1;
  wire buffer_Addr_S_I_2;
  wire buffer_Full;
  wire doublet_i;
  wire enable_Interrupts_I;
  wire ex_Valid;
  wire ex_Valid_reg;
  wire force1_i26_out;
  wire force2_i;
  wire force_Val1_i24_out;
  wire force_Val2_N;
  wire ilmb_Sl_Ready;
  wire [13:0]imm_Value;
  wire inHibit_EX;
  wire inHibit_EX_reg;
  wire inHibit_EX_reg_0;
  wire [8:10]instr_OF;
  wire is_swx_I0;
  wire jump2_I_reg;
  wire jump_Carry2;
  wire load_Store_i051_out;
  wire lopt;
  wire lopt_1;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_4 ;
  wire mbar_first;
  wire missed_IFetch;
  wire mtsmsr_write_i_reg;
  wire mtsmsr_write_i_reg_0;
  wire mul_Executing;
  wire mul_Executing_reg;
  wire nonvalid_IFetch_n_reg;
  wire nonvalid_IFetch_n_reg_0;
  wire nonvalid_IFetch_n_reg_1;
  wire of_Valid;
  wire of_mbar_decode;
  wire out;
  wire [0:0]reg1_Addr;
  wire reset_BIP_I8_out;
  wire take_Intr_Now_II;
  wire use_Imm_Reg;
  wire use_Reg_Neg_DI_i23_out;
  wire use_Reg_Neg_S_i25_out;
  wire [0:0]\write_Addr_I_reg[3] ;

  assign \^lopt_2  = lopt_3;
  assign \^lopt_3  = lopt_4;
  assign \^lopt_4  = lopt_5;
  assign lopt_2 = S0_out;
  assign lopt_6 = \Buffer_DFFs[1].FDS_I_n_2 ;
  c2c_gth_in_system_ibert_0_MB_FDS \Buffer_DFFs[1].FDS_I 
       (.DI(DI),
        .Increment(Increment),
        .S(S),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_1 (\Buffer_DFFs[1].FDS_I_n_2 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_6 ),
        .\Using_FPGA.Native_3 (of_Valid),
        .\Using_FPGA.Native_4 (Sext16_reg),
        .buffer_Addr_S_I_2(buffer_Addr_S_I_2),
        .ex_Valid(ex_Valid),
        .missed_IFetch(missed_IFetch),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY \Buffer_DFFs[1].MUXCY_XOR_I 
       (.LO(buffer_Addr_Carry_2),
        .\Using_FPGA.Native (\Buffer_DFFs[1].FDS_I_n_2 ),
        .buffer_Addr_S_I_2(buffer_Addr_S_I_2),
        .lopt(\^lopt_4 ));
  c2c_gth_in_system_ibert_0_MB_FDS_29 \Buffer_DFFs[2].FDS_I 
       (.O(buffer_Addr_S_I_1),
        .S(S),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (S0_out),
        .\Using_FPGA.Native_2 (Sext16_reg),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_30 \Buffer_DFFs[2].MUXCY_XOR_I 
       (.LO(buffer_Addr_Carry_2),
        .O(buffer_Addr_S_I_1),
        .S(S0_out),
        .\Using_FPGA.Native (Sext16_reg),
        .\Using_FPGA.Native_0 (buffer_Addr_Carry_1),
        .lopt(lopt_1),
        .lopt_1(\^lopt_3 ));
  c2c_gth_in_system_ibert_0_MB_FDS_31 \Buffer_DFFs[3].FDS_I 
       (.O(buffer_Addr_S_I_0),
        .S(S),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_MUXCY_XORCY_32 \Buffer_DFFs[3].MUXCY_XOR_I 
       (.CI(CI),
        .LO(buffer_Addr_Carry_1),
        .O(buffer_Addr_S_I_0),
        .\Using_FPGA.Native (\Using_FPGA.Native_26 ),
        .\Using_FPGA.Native_0 (Sext16_reg),
        .lopt(lopt),
        .lopt_1(\^lopt_2 ));
  c2c_gth_in_system_ibert_0_MB_SRL16E \PreFetch_Buffers[0].SRL16E_I 
       (.CI(CI),
        .DATA_OUTA(DATA_OUTA[0]),
        .\Result_Sel_reg[0] (\Using_FPGA.Native ),
        .\Result_Sel_reg[0]_0 (\Using_FPGA.Native_0 ),
        .\Result_Sel_reg[0]_1 (\Using_FPGA.Native_1 ),
        .\Using_B36_S2.The_BRAMs[0].RAMB36_I1 (\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [6]),
        .\Using_B36_S2.The_BRAMs[0].RAMB36_I1_0 (\Using_B36_S2.The_BRAMs[0].RAMB36_I1_1 ),
        .\Using_B36_S2.The_BRAMs[0].RAMB36_I1_1 (\Using_B36_S2.The_BRAMs[0].RAMB36_I1_2 ),
        .\Using_B36_S2.The_BRAMs[0].RAMB36_I1_2 (force2_i),
        .\Using_B36_S2.The_BRAMs[0].RAMB36_I1_3 (\PreFetch_Buffers[0].SRL16E_I_n_9 ),
        .\Using_B36_S2.The_BRAMs[0].RAMB36_I1_4 (\Using_B36_S2.The_BRAMs[0].RAMB36_I1_4 ),
        .\Using_FPGA.Native (Sext16_reg_0),
        .\Using_FPGA.Native_0 (\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [3]),
        .\Using_FPGA.Native_1 (\Using_B36_S2.The_BRAMs[6].RAMB36_I1 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg ),
        .d_AS_I_reg(nonvalid_IFetch_n_reg_0),
        .doublet_i(doublet_i),
        .doublet_i_reg(Sext16_reg),
        .doublet_i_reg_0(\write_Addr_I_reg[3] ),
        .force1_i26_out(force1_i26_out),
        .inHibit_EX(inHibit_EX),
        .inHibit_EX_reg(inHibit_EX_reg),
        .instr_OF({instr_OF[8],instr_OF[9],instr_OF[10]}),
        .out(out),
        .quadlet_Read_i_reg(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [5]),
        .quadlet_Read_i_reg_0(\Size_17to32.imm_Reg_reg[15] ),
        .quadlet_Read_i_reg_1(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [2]),
        .quadlet_Read_i_reg_2(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [1]),
        .use_Reg_Neg_DI_i23_out(use_Reg_Neg_DI_i23_out),
        .use_Reg_Neg_S_i25_out(use_Reg_Neg_S_i25_out));
  c2c_gth_in_system_ibert_0_MB_SRL16E_33 \PreFetch_Buffers[10].SRL16E_I 
       (.CI(CI),
        .D(D[0]),
        .DATA_OUTA(DATA_OUTA[10]),
        .Reg_Test_Equal_i(Reg_Test_Equal_i),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_2 ({instr_OF[8],instr_OF[9]}),
        .\Using_FPGA.Native_3 (\PreFetch_Buffers[5].SRL16E_I_n_2 ),
        .\Using_FPGA.enable_Interrupts_I_reg (\PreFetch_Buffers[1].SRL16E_I_n_4 ),
        .enable_Interrupts_I(enable_Interrupts_I),
        .instr_OF(instr_OF[10]),
        .out(out),
        .\write_Addr_I_reg[4] (\Size_17to32.imm_Reg_reg[15] ),
        .\write_Addr_I_reg[4]_0 (\write_Addr_I_reg[3] ));
  c2c_gth_in_system_ibert_0_MB_SRL16E_34 \PreFetch_Buffers[11].SRL16E_I 
       (.CI(CI),
        .DATA_OUTA(DATA_OUTA[11]),
        .\Using_B36_S2.The_BRAMs[5].RAMB36_I1 (\Using_B36_S2.The_BRAMs[5].RAMB36_I1 ),
        .\Using_FPGA.set_BIP_I_reg (\PreFetch_Buffers[11].SRL16E_I_n_1 ),
        .\Using_FPGA.set_BIP_I_reg_0 (\Using_B36_S2.The_BRAMs[6].RAMB36_I1 ),
        .\Using_FPGA.set_BIP_I_reg_1 (\Using_B36_S2.The_BRAMs[6].RAMB36_I1_0 ),
        .\Using_FPGA.set_BIP_I_reg_2 (Sext16_reg),
        .\Using_FPGA.set_BIP_I_reg_3 (\Using_FPGA.set_BIP_I_reg ),
        .jump2_I_reg(\Using_FPGA.Native ),
        .jump2_I_reg_0(\Using_FPGA.Native_0 ),
        .jump2_I_reg_1(\Using_FPGA.Native_1 ),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_SRL16E_35 \PreFetch_Buffers[12].SRL16E_I 
       (.CI(CI),
        .DATA_OUTA(DATA_OUTA[12]),
        .D_31(D_31),
        .\Using_B36_S2.The_BRAMs[6].RAMB36_I1 (\Using_B36_S2.The_BRAMs[6].RAMB36_I1 ),
        .\Using_B36_S2.The_BRAMs[6].RAMB36_I1_0 (\Using_B36_S2.The_BRAMs[6].RAMB36_I1_1 ),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_2 (\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [2]),
        .\Using_FPGA.Native_3 (\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [1]),
        .\Using_FPGA.Native_4 (\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [3]),
        .\Using_FPGA.Native_5 (\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [5]),
        .\Using_FPGA.Native_6 (\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [6]),
        .\Using_FPGA.Native_7 (\PreFetch_Buffers[4].SRL16E_I_n_2 ),
        .\Using_FPGA.Native_8 (Sext16_reg_0),
        .\Using_FPGA.Native_9 (\Size_17to32.imm_Reg_reg[15] ),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_SRL16E_36 \PreFetch_Buffers[13].SRL16E_I 
       (.CI(CI),
        .DATA_OUTA(DATA_OUTA[13]),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_FPGA.Native ),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 (\Using_FPGA.Native_0 ),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1_1 (\Using_FPGA.Native_1 ),
        .\Using_B36_S2.The_BRAMs[6].RAMB36_I1 (\Using_B36_S2.The_BRAMs[6].RAMB36_I1_0 ),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_SRL16E_37 \PreFetch_Buffers[14].SRL16E_I 
       (.CI(CI),
        .DATA_OUTA(DATA_OUTA[14]),
        .\Using_B36_S2.The_BRAMs[7].RAMB36_I1 (\Using_B36_S2.The_BRAMs[7].RAMB36_I1 ),
        .mbar_decode_I_reg(\Using_FPGA.Native ),
        .mbar_decode_I_reg_0(\Using_FPGA.Native_0 ),
        .mbar_decode_I_reg_1(\Using_FPGA.Native_1 ),
        .mbar_decode_I_reg_2(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [4]),
        .mbar_decode_I_reg_3(\PreFetch_Buffers[4].SRL16E_I_n_2 ),
        .mbar_decode_I_reg_4(\Size_17to32.imm_Reg_reg[15] ),
        .of_mbar_decode(of_mbar_decode),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_SRL16E_38 \PreFetch_Buffers[15].SRL16E_I 
       (.CI(CI),
        .DATA_OUTA(DATA_OUTA[15]),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_FPGA.Native ),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 (\Using_FPGA.Native_0 ),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1_1 (\Using_FPGA.Native_1 ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_SRL16E_39 \PreFetch_Buffers[16].SRL16E_I 
       (.CI(CI),
        .DATA_OUTA(DATA_OUTA[16]),
        .D_0(D_0),
        .D_1(D_1),
        .D_10(D_10),
        .D_11(D_11),
        .D_12(D_12),
        .D_13(D_13),
        .D_14(D_14),
        .D_15(D_15),
        .D_2(D_2),
        .D_3(D_3),
        .D_4(D_4),
        .D_5(D_5),
        .D_6(D_6),
        .D_7(D_7),
        .D_8(D_8),
        .D_9(D_9),
        .Reg2_Data(Reg2_Data[15]),
        .\Size_17to32.imm_Reg_reg[0] (\Size_17to32.imm_Reg_reg[0] ),
        .\Size_17to32.imm_Reg_reg[0]_0 (\Using_FPGA.Native ),
        .\Size_17to32.imm_Reg_reg[0]_1 (\Using_FPGA.Native_0 ),
        .\Size_17to32.imm_Reg_reg[0]_2 (\Using_FPGA.Native_1 ),
        .\Using_B36_S2.The_BRAMs[8].RAMB36_I1 (\Using_B36_S2.The_BRAMs[8].RAMB36_I1 ),
        .\Using_FPGA.Native (\Using_FPGA.Native_7 ),
        .\Using_FPGA.Native_0 (\PreFetch_Buffers[4].SRL16E_I_n_11 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_8 ),
        .\Using_FPGA.Native_10 (\Using_FPGA.Native_17 ),
        .\Using_FPGA.Native_11 (\Using_FPGA.Native_18 ),
        .\Using_FPGA.Native_12 (\Using_FPGA.Native_19 ),
        .\Using_FPGA.Native_13 (\Using_FPGA.Native_20 ),
        .\Using_FPGA.Native_14 (\Using_FPGA.Native_21 ),
        .\Using_FPGA.Native_15 (\Using_FPGA.Native_22 ),
        .\Using_FPGA.Native_16 (\Using_FPGA.Native_23 ),
        .\Using_FPGA.Native_17 (\Using_FPGA.Native_24 [15]),
        .\Using_FPGA.Native_18 (Sext16_reg_0),
        .\Using_FPGA.Native_19 (\Using_FPGA.Native_25 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_9 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_10 ),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_11 ),
        .\Using_FPGA.Native_5 (\Using_FPGA.Native_12 ),
        .\Using_FPGA.Native_6 (\Using_FPGA.Native_13 ),
        .\Using_FPGA.Native_7 (\Using_FPGA.Native_14 ),
        .\Using_FPGA.Native_8 (\Using_FPGA.Native_15 ),
        .\Using_FPGA.Native_9 (\Using_FPGA.Native_16 ),
        .out(out),
        .use_Imm_Reg(use_Imm_Reg));
  c2c_gth_in_system_ibert_0_MB_SRL16E_40 \PreFetch_Buffers[17].SRL16E_I 
       (.CI(CI),
        .DATA_OUTA(DATA_OUTA[17]),
        .D_16(D_16),
        .Reg2_Data(Reg2_Data[14]),
        .\Size_17to32.imm_Reg_reg[1] (\Using_FPGA.Native ),
        .\Size_17to32.imm_Reg_reg[1]_0 (\Using_FPGA.Native_0 ),
        .\Size_17to32.imm_Reg_reg[1]_1 (\Using_FPGA.Native_1 ),
        .\Using_B36_S2.The_BRAMs[8].RAMB36_I1 (\Using_B36_S2.The_BRAMs[8].RAMB36_I1_0 ),
        .\Using_B36_S2.The_BRAMs[8].RAMB36_I1_0 (\PreFetch_Buffers[17].SRL16E_I_n_2 ),
        .\Using_FPGA.Native (\PreFetch_Buffers[4].SRL16E_I_n_11 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_24 [14]),
        .\Using_FPGA.Native_1 (Sext16_reg_0),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_25 ),
        .mtsmsr_write_i_reg(\PreFetch_Buffers[4].SRL16E_I_n_7 ),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_SRL16E_41 \PreFetch_Buffers[18].SRL16E_I 
       (.CI(CI),
        .DATA_OUTA(DATA_OUTA[18]),
        .D_17(D_17),
        .Reg2_Data(Reg2_Data[13]),
        .\Size_17to32.imm_Reg_reg[2] (\Using_FPGA.Native ),
        .\Size_17to32.imm_Reg_reg[2]_0 (\Using_FPGA.Native_0 ),
        .\Size_17to32.imm_Reg_reg[2]_1 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native (\PreFetch_Buffers[4].SRL16E_I_n_11 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_24 [13]),
        .\Using_FPGA.Native_1 (Sext16_reg_0),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_25 ),
        .imm_Value(imm_Value[13]),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_SRL16E_42 \PreFetch_Buffers[19].SRL16E_I 
       (.CI(CI),
        .DATA_OUTA(DATA_OUTA[19]),
        .D_18(D_18),
        .Reg2_Data(Reg2_Data[12]),
        .\Size_17to32.imm_Reg_reg[3] (\Using_FPGA.Native ),
        .\Size_17to32.imm_Reg_reg[3]_0 (\Using_FPGA.Native_0 ),
        .\Size_17to32.imm_Reg_reg[3]_1 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native (\PreFetch_Buffers[4].SRL16E_I_n_11 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_24 [12]),
        .\Using_FPGA.Native_1 (Sext16_reg_0),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_25 ),
        .imm_Value(imm_Value[12]),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_SRL16E_43 \PreFetch_Buffers[1].SRL16E_I 
       (.CI(CI),
        .DATA_OUTA(DATA_OUTA[1]),
        .\Result_Sel_reg[1] (\Using_FPGA.Native ),
        .\Result_Sel_reg[1]_0 (\Using_FPGA.Native_0 ),
        .\Result_Sel_reg[1]_1 (\Using_FPGA.Native_1 ),
        .\Using_B36_S2.The_BRAMs[0].RAMB36_I1 (\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [5]),
        .\Using_B36_S2.The_BRAMs[0].RAMB36_I1_0 (\Using_B36_S2.The_BRAMs[0].RAMB36_I1_0 ),
        .\Using_B36_S2.The_BRAMs[0].RAMB36_I1_1 (\Using_B36_S2.The_BRAMs[0].RAMB36_I1_3 ),
        .\Using_B36_S2.The_BRAMs[0].RAMB36_I1_2 (\PreFetch_Buffers[1].SRL16E_I_n_4 ),
        .\Using_FPGA.reset_BIP_I_reg (\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [4]),
        .\Using_FPGA.reset_BIP_I_reg_0 (\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [1]),
        .\Using_FPGA.reset_BIP_I_reg_1 (\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [2]),
        .inHibit_EX(inHibit_EX),
        .load_Store_i051_out(load_Store_i051_out),
        .load_Store_i_reg(nonvalid_IFetch_n_reg_0),
        .out(out),
        .write_Carry_I_reg(imm_Value[5]),
        .write_Carry_I_reg_0(imm_Value[6]),
        .write_Carry_I_reg_1(\Using_B36_S2.The_BRAMs[2].RAMB36_I1 ),
        .writing_reg(\Size_17to32.imm_Reg_reg[15] ),
        .writing_reg_0(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [6]),
        .writing_reg_1(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [3]));
  c2c_gth_in_system_ibert_0_MB_SRL16E_44 \PreFetch_Buffers[20].SRL16E_I 
       (.CI(CI),
        .DATA_OUTA(DATA_OUTA[20]),
        .D_19(D_19),
        .Reg2_Data(Reg2_Data[11]),
        .\Size_17to32.imm_Reg_reg[4] (\Using_FPGA.Native ),
        .\Size_17to32.imm_Reg_reg[4]_0 (\Using_FPGA.Native_0 ),
        .\Size_17to32.imm_Reg_reg[4]_1 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native (\PreFetch_Buffers[4].SRL16E_I_n_11 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_24 [11]),
        .\Using_FPGA.Native_1 (Sext16_reg_0),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_25 ),
        .imm_Value(imm_Value[11]),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_SRL16E_45 \PreFetch_Buffers[21].SRL16E_I 
       (.CI(CI),
        .DATA_OUTA(DATA_OUTA[21]),
        .D_20(D_20),
        .Reg2_Data(Reg2_Data[10]),
        .\Size_17to32.imm_Reg_reg[5] (\Using_FPGA.Native ),
        .\Size_17to32.imm_Reg_reg[5]_0 (\Using_FPGA.Native_0 ),
        .\Size_17to32.imm_Reg_reg[5]_1 (\Using_FPGA.Native_1 ),
        .\Using_B36_S2.The_BRAMs[10].RAMB36_I1 (imm_Value[10]),
        .\Using_FPGA.Native (\PreFetch_Buffers[4].SRL16E_I_n_11 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_24 [10]),
        .\Using_FPGA.Native_1 (Sext16_reg_0),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_25 ),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_SRL16E_46 \PreFetch_Buffers[22].SRL16E_I 
       (.CI(CI),
        .DATA_OUTA(DATA_OUTA[22]),
        .D_21(D_21),
        .Reg2_Data(Reg2_Data[9]),
        .\Size_17to32.imm_Reg_reg[6] (\Using_FPGA.Native ),
        .\Size_17to32.imm_Reg_reg[6]_0 (\Using_FPGA.Native_0 ),
        .\Size_17to32.imm_Reg_reg[6]_1 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native (\PreFetch_Buffers[4].SRL16E_I_n_11 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_24 [9]),
        .\Using_FPGA.Native_1 (Sext16_reg_0),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_25 ),
        .imm_Value(imm_Value[9]),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_SRL16E_47 \PreFetch_Buffers[23].SRL16E_I 
       (.CI(CI),
        .DATA_OUTA(DATA_OUTA[23]),
        .D_22(D_22),
        .Reg2_Data(Reg2_Data[8]),
        .\Size_17to32.imm_Reg_reg[7] (\Using_FPGA.Native ),
        .\Size_17to32.imm_Reg_reg[7]_0 (\Using_FPGA.Native_0 ),
        .\Size_17to32.imm_Reg_reg[7]_1 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native (\PreFetch_Buffers[4].SRL16E_I_n_11 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_24 [8]),
        .\Using_FPGA.Native_1 (Sext16_reg_0),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_25 ),
        .imm_Value(imm_Value[8]),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_SRL16E_48 \PreFetch_Buffers[24].SRL16E_I 
       (.CI(CI),
        .DATA_OUTA(DATA_OUTA[24]),
        .D_23(D_23),
        .Reg2_Data(Reg2_Data[7]),
        .\Size_17to32.imm_Reg_reg[8] (\Using_FPGA.Native ),
        .\Size_17to32.imm_Reg_reg[8]_0 (\Using_FPGA.Native_0 ),
        .\Size_17to32.imm_Reg_reg[8]_1 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native (\PreFetch_Buffers[4].SRL16E_I_n_11 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_24 [7]),
        .\Using_FPGA.Native_1 (Sext16_reg_0),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_25 ),
        .imm_Value(imm_Value[7]),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_SRL16E_49 \PreFetch_Buffers[25].SRL16E_I 
       (.CI(CI),
        .DATA_OUTA(DATA_OUTA[25]),
        .D_24(D_24),
        .Reg2_Data(Reg2_Data[6]),
        .Sext80(Sext80),
        .Sext8_reg(imm_Value[5]),
        .Sext8_reg_0(imm_Value[0]),
        .\Shift_Oper_reg[0] (\Using_FPGA.Native ),
        .\Shift_Oper_reg[0]_0 (\Using_FPGA.Native_0 ),
        .\Shift_Oper_reg[0]_1 (\Using_FPGA.Native_1 ),
        .\Using_B36_S2.The_BRAMs[12].RAMB36_I1 (imm_Value[6]),
        .\Using_FPGA.Native (\PreFetch_Buffers[4].SRL16E_I_n_11 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_24 [6]),
        .\Using_FPGA.Native_1 (Sext16_reg_0),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_25 ),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_SRL16E_50 \PreFetch_Buffers[26].SRL16E_I 
       (.CI(CI),
        .DATA_OUTA(DATA_OUTA[26]),
        .D_25(D_25),
        .Reg2_Data(Reg2_Data[5]),
        .\Shift_Oper_reg[1] (\Using_FPGA.Native ),
        .\Shift_Oper_reg[1]_0 (\Using_FPGA.Native_0 ),
        .\Shift_Oper_reg[1]_1 (\Using_FPGA.Native_1 ),
        .\Using_B36_S2.The_BRAMs[13].RAMB36_I1 (imm_Value[5]),
        .\Using_FPGA.Native (\PreFetch_Buffers[4].SRL16E_I_n_11 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_24 [5]),
        .\Using_FPGA.Native_1 (Sext16_reg_0),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_25 ),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_SRL16E_51 \PreFetch_Buffers[27].SRL16E_I 
       (.CI(CI),
        .DATA_OUTA(DATA_OUTA[27]),
        .D_26(D_26),
        .Reg2_Data(Reg2_Data[4]),
        .\Size_17to32.imm_Reg_reg[11] (\Using_FPGA.Native ),
        .\Size_17to32.imm_Reg_reg[11]_0 (\Using_FPGA.Native_0 ),
        .\Size_17to32.imm_Reg_reg[11]_1 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native (\PreFetch_Buffers[4].SRL16E_I_n_11 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_24 [4]),
        .\Using_FPGA.Native_1 (Sext16_reg_0),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_25 ),
        .imm_Value(imm_Value[4]),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_SRL16E_52 \PreFetch_Buffers[28].SRL16E_I 
       (.CI(CI),
        .DATA_OUTA(DATA_OUTA[28]),
        .D_27(D_27),
        .Reg2_Data(Reg2_Data[3]),
        .\Size_17to32.imm_Reg_reg[12] (\Using_FPGA.Native ),
        .\Size_17to32.imm_Reg_reg[12]_0 (\Using_FPGA.Native_0 ),
        .\Size_17to32.imm_Reg_reg[12]_1 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native (\PreFetch_Buffers[4].SRL16E_I_n_11 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_24 [3]),
        .\Using_FPGA.Native_1 (Sext16_reg_0),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_25 ),
        .imm_Value(imm_Value[3]),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_SRL16E_53 \PreFetch_Buffers[29].SRL16E_I 
       (.CI(CI),
        .DATA_OUTA(DATA_OUTA[29]),
        .D_28(D_28),
        .Reg2_Data(Reg2_Data[2]),
        .\Size_17to32.imm_Reg_reg[13] (\Using_FPGA.Native ),
        .\Size_17to32.imm_Reg_reg[13]_0 (\Using_FPGA.Native_0 ),
        .\Size_17to32.imm_Reg_reg[13]_1 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native (\PreFetch_Buffers[4].SRL16E_I_n_11 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_24 [2]),
        .\Using_FPGA.Native_1 (Sext16_reg_0),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_25 ),
        .imm_Value(imm_Value[2]),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_SRL16E_54 \PreFetch_Buffers[2].SRL16E_I 
       (.CI(CI),
        .Compare_Instr_reg(\Using_FPGA.Native ),
        .Compare_Instr_reg_0(\Using_FPGA.Native_0 ),
        .Compare_Instr_reg_1(\Using_FPGA.Native_1 ),
        .Compare_Instr_reg_2(imm_Value[0]),
        .Compare_Instr_reg_3(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [6]),
        .Compare_Instr_reg_4(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [5]),
        .DATA_OUTA(DATA_OUTA[2]),
        .\Using_B36_S2.The_BRAMs[1].RAMB36_I1 (\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [4]),
        .\Using_B36_S2.The_BRAMs[1].RAMB36_I1_0 (\Using_B36_S2.The_BRAMs[1].RAMB36_I1_1 ),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_SRL16E_55 \PreFetch_Buffers[30].SRL16E_I 
       (.CI(CI),
        .DATA_OUTA(DATA_OUTA[30]),
        .D_29(D_29),
        .Reg2_Data(Reg2_Data[1]),
        .Unsigned_Op_reg(\Using_FPGA.Native ),
        .Unsigned_Op_reg_0(\Using_FPGA.Native_0 ),
        .Unsigned_Op_reg_1(\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native (\PreFetch_Buffers[4].SRL16E_I_n_11 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_24 [1]),
        .\Using_FPGA.Native_1 (Sext16_reg_0),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_25 ),
        .imm_Value(imm_Value[1]),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_SRL16E_56 \PreFetch_Buffers[31].SRL16E_I 
       (.CI(CI),
        .DATA_OUTA(DATA_OUTA[31]),
        .D_30(D_30),
        .Reg2_Data(Reg2_Data[0]),
        .Sext160(Sext160),
        .\Size_17to32.imm_Reg_reg[15] (\Using_FPGA.Native ),
        .\Size_17to32.imm_Reg_reg[15]_0 (\Using_FPGA.Native_0 ),
        .\Size_17to32.imm_Reg_reg[15]_1 (\Using_FPGA.Native_1 ),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (imm_Value[0]),
        .\Using_FPGA.Native (\PreFetch_Buffers[4].SRL16E_I_n_11 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_24 [0]),
        .\Using_FPGA.Native_1 (Sext16_reg_0),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_25 ),
        .imm_Value(imm_Value[6:5]),
        .mtsmsr_write_i_reg(mtsmsr_write_i_reg),
        .mtsmsr_write_i_reg_0(\PreFetch_Buffers[17].SRL16E_I_n_2 ),
        .mtsmsr_write_i_reg_1(\Size_17to32.imm_Reg_reg[15] ),
        .mtsmsr_write_i_reg_2(Sext16_reg),
        .mtsmsr_write_i_reg_3(mtsmsr_write_i_reg_0),
        .mtsmsr_write_i_reg_4(\write_Addr_I_reg[3] ),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_SRL16E_57 \PreFetch_Buffers[3].SRL16E_I 
       (.CI(CI),
        .DATA_OUTA(DATA_OUTA[3]),
        .\Size_17to32.imm_Reg_reg[15] (\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [1]),
        .\Size_17to32.imm_Reg_reg[15]_0 (\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [2]),
        .\Using_B36_S2.The_BRAMs[1].RAMB36_I1 (\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [3]),
        .\Using_B36_S2.The_BRAMs[1].RAMB36_I1_0 (\Using_B36_S2.The_BRAMs[1].RAMB36_I1 ),
        .\Using_B36_S2.The_BRAMs[1].RAMB36_I1_1 (\PreFetch_Buffers[3].SRL16E_I_n_3 ),
        .\Using_B36_S2.The_BRAMs[1].RAMB36_I1_2 (\Using_B36_S2.The_BRAMs[1].RAMB36_I1_0 ),
        .imm_Value(imm_Value[10]),
        .inHibit_EX(inHibit_EX),
        .inHibit_EX_i_2_0(nonvalid_IFetch_n_reg_0),
        .inHibit_EX_i_2_1(\Using_B36_S2.The_BRAMs[5].RAMB36_I1 ),
        .inHibit_EX_i_2_2(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [0]),
        .inHibit_EX_reg(inHibit_EX_reg_0),
        .inHibit_EX_reg_0(\Size_17to32.imm_Reg_reg[15] ),
        .inHibit_EX_reg_1(Sext16_reg_0),
        .inHibit_EX_reg_2(Sext16_reg),
        .inHibit_EX_reg_3(\PreFetch_Buffers[0].SRL16E_I_n_9 ),
        .is_lwx_I_reg(\PreFetch_Buffers[5].SRL16E_I_n_5 ),
        .is_swx_I0(is_swx_I0),
        .is_swx_I_reg(\Using_FPGA.Native ),
        .is_swx_I_reg_0(\Using_FPGA.Native_0 ),
        .is_swx_I_reg_1(\Using_FPGA.Native_1 ),
        .is_swx_I_reg_2(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [6]),
        .is_swx_I_reg_3(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [5]),
        .is_swx_I_reg_4(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [4]),
        .out(out));
  c2c_gth_in_system_ibert_0_MB_SRL16E_58 \PreFetch_Buffers[4].SRL16E_I 
       (.CI(CI),
        .DATA_OUTA(DATA_OUTA[4]),
        .\Logic_Oper_reg[0] (\Using_FPGA.Native ),
        .\Logic_Oper_reg[0]_0 (\Using_FPGA.Native_0 ),
        .\Logic_Oper_reg[0]_1 (\Using_FPGA.Native_1 ),
        .S87_out(S87_out),
        .Sext16_reg(Sext16_reg),
        .Sext16_reg_0(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [3]),
        .Sext16_reg_1(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [5]),
        .Sext16_reg_2(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [6]),
        .Sext16_reg_3(\write_Addr_I_reg[3] ),
        .Sext16_reg_4(Sext16_reg_0),
        .\Synchronize.use_sync_reset.sync_reg[2] (\Synchronize.use_sync_reset.sync_reg[2] ),
        .\Synchronize.use_sync_reset.sync_reg[2]_0 (\Synchronize.use_sync_reset.sync_reg[2]_0 ),
        .\Using_B36_S2.The_BRAMs[14].RAMB36_I1 (\Using_B36_S2.The_BRAMs[14].RAMB36_I1 ),
        .\Using_B36_S2.The_BRAMs[1].RAMB36_I1 (\PreFetch_Buffers[4].SRL16E_I_n_11 ),
        .\Using_B36_S2.The_BRAMs[2].RAMB36_I1 (\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [2]),
        .\Using_B36_S2.The_BRAMs[2].RAMB36_I1_0 (\PreFetch_Buffers[4].SRL16E_I_n_2 ),
        .\Using_B36_S2.The_BRAMs[2].RAMB36_I1_1 (\Using_B36_S2.The_BRAMs[2].RAMB36_I1 ),
        .\Using_B36_S2.The_BRAMs[2].RAMB36_I1_2 (\PreFetch_Buffers[4].SRL16E_I_n_7 ),
        .\Using_B36_S2.The_BRAMs[2].RAMB36_I1_3 (\Using_B36_S2.The_BRAMs[2].RAMB36_I1_0 ),
        .\Using_B36_S2.The_BRAMs[2].RAMB36_I1_4 (\Using_B36_S2.The_BRAMs[2].RAMB36_I1_2 ),
        .\Using_B36_S2.The_BRAMs[5].RAMB36_I1 (\Using_B36_S2.The_BRAMs[5].RAMB36_I1_0 ),
        .\Using_B36_S2.The_BRAMs[8].RAMB36_I1 (\Using_B36_S2.The_BRAMs[8].RAMB36_I1_1 ),
        .\Using_FPGA.Native (\Using_FPGA.Native_3 ),
        .\Using_FPGA.Native_0 (\PreFetch_Buffers[1].SRL16E_I_n_4 ),
        .\Using_FPGA.Native_1 (\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [4]),
        .\Using_FPGA.Native_i_1__10 (\PreFetch_Buffers[5].SRL16E_I_n_2 ),
        .\Using_FPGA.Native_i_1__10_0 (imm_Value[0]),
        .\Using_FPGA.set_BIP_I_reg (\PreFetch_Buffers[11].SRL16E_I_n_1 ),
        .byte_i_reg(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [1]),
        .force_Val2_N(force_Val2_N),
        .imm_Value(imm_Value[3:2]),
        .inHibit_EX(inHibit_EX),
        .jump2_I_reg(\Using_B36_S2.The_BRAMs[5].RAMB36_I1 ),
        .jump2_I_reg_0(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [0]),
        .jump2_I_reg_1(jump2_I_reg),
        .mbar_first(mbar_first),
        .mul_Executing_reg(nonvalid_IFetch_n_reg_0),
        .mul_Executing_reg_0(mul_Executing_reg),
        .mul_Executing_reg_1(\Using_B36_S2.The_BRAMs[7].RAMB36_I1 ),
        .out(out),
        .take_Intr_Now_II(take_Intr_Now_II),
        .write_Reg_reg(\Size_17to32.imm_Reg_reg[15] ),
        .write_Reg_reg_0(\Using_B36_S2.The_BRAMs[8].RAMB36_I1_0 ),
        .write_Reg_reg_1(\Using_B36_S2.The_BRAMs[6].RAMB36_I1_0 ),
        .write_Reg_reg_2(\PreFetch_Buffers[5].SRL16E_I_n_4 ),
        .write_Reg_reg_3(\PreFetch_Buffers[3].SRL16E_I_n_3 ));
  c2c_gth_in_system_ibert_0_MB_SRL16E_59 \PreFetch_Buffers[5].SRL16E_I 
       (.CI(CI),
        .DATA_OUTA(DATA_OUTA[5]),
        .\Logic_Oper_reg[1] (\Using_FPGA.Native ),
        .\Logic_Oper_reg[1]_0 (\Using_FPGA.Native_0 ),
        .\Logic_Oper_reg[1]_1 (\Using_FPGA.Native_1 ),
        .Reg_Test_Equal_N_i7_out(Reg_Test_Equal_N_i7_out),
        .\Using_B36_S2.The_BRAMs[2].RAMB36_I1 (\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [1]),
        .\Using_B36_S2.The_BRAMs[2].RAMB36_I1_0 (\PreFetch_Buffers[5].SRL16E_I_n_2 ),
        .\Using_B36_S2.The_BRAMs[2].RAMB36_I1_1 (\PreFetch_Buffers[5].SRL16E_I_n_4 ),
        .\Using_B36_S2.The_BRAMs[2].RAMB36_I1_2 (\PreFetch_Buffers[5].SRL16E_I_n_5 ),
        .\Using_B36_S2.The_BRAMs[2].RAMB36_I1_3 (\Using_B36_S2.The_BRAMs[2].RAMB36_I1_1 ),
        .\Using_FPGA.Native (\Size_17to32.imm_Reg_reg[15] ),
        .\Using_FPGA.Native_0 (\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [3]),
        .\Using_FPGA.Native_1 (\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [5]),
        .\Using_FPGA.Native_2 (\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [6]),
        .doublet_i_reg(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [2]),
        .force_Val1_i24_out(force_Val1_i24_out),
        .instr_OF({instr_OF[8],instr_OF[9],instr_OF[10]}),
        .out(out),
        .write_Reg_i_4(\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [4]));
  c2c_gth_in_system_ibert_0_MB_SRL16E_60 \PreFetch_Buffers[6].SRL16E_I 
       (.CI(CI),
        .D(D[4]),
        .DATA_OUTA(DATA_OUTA[6]),
        .\Using_B36_S2.The_BRAMs[3].RAMB36_I1 (\Using_B36_S2.The_BRAMs[0].RAMB36_I1 [0]),
        .mbar_is_sleep_reg(\Using_FPGA.Native ),
        .mbar_is_sleep_reg_0(\Using_FPGA.Native_0 ),
        .mbar_is_sleep_reg_1(\Using_FPGA.Native_1 ),
        .out(out),
        .\write_Addr_I_reg[0] (\Size_17to32.imm_Reg_reg[15] ),
        .\write_Addr_I_reg[0]_0 (\write_Addr_I_reg[3] ));
  c2c_gth_in_system_ibert_0_MB_SRL16E_61 \PreFetch_Buffers[7].SRL16E_I 
       (.CI(CI),
        .D(D[3]),
        .DATA_OUTA(DATA_OUTA[7]),
        .out(out),
        .\write_Addr_I_reg[1] (\Using_FPGA.Native ),
        .\write_Addr_I_reg[1]_0 (\Using_FPGA.Native_0 ),
        .\write_Addr_I_reg[1]_1 (\Using_FPGA.Native_1 ),
        .\write_Addr_I_reg[1]_2 (\write_Addr_I_reg[3] ),
        .\write_Addr_I_reg[1]_3 (\Size_17to32.imm_Reg_reg[15] ));
  c2c_gth_in_system_ibert_0_MB_SRL16E_62 \PreFetch_Buffers[8].SRL16E_I 
       (.CI(CI),
        .D(D[2]),
        .DATA_OUTA(DATA_OUTA[8]),
        .instr_OF(instr_OF[8]),
        .out(out),
        .\write_Addr_I_reg[2] (\Using_FPGA.Native ),
        .\write_Addr_I_reg[2]_0 (\Using_FPGA.Native_0 ),
        .\write_Addr_I_reg[2]_1 (\Using_FPGA.Native_1 ),
        .\write_Addr_I_reg[2]_2 (\write_Addr_I_reg[3] ),
        .\write_Addr_I_reg[2]_3 (\Size_17to32.imm_Reg_reg[15] ));
  c2c_gth_in_system_ibert_0_MB_SRL16E_63 \PreFetch_Buffers[9].SRL16E_I 
       (.CI(CI),
        .D(D[1]),
        .DATA_OUTA(DATA_OUTA[9]),
        .\Using_FPGA.reset_BIP_I_reg (\Using_FPGA.Native ),
        .\Using_FPGA.reset_BIP_I_reg_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.reset_BIP_I_reg_1 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.reset_BIP_I_reg_2 (\PreFetch_Buffers[1].SRL16E_I_n_4 ),
        .instr_OF(instr_OF[9]),
        .out(out),
        .reset_BIP_I8_out(reset_BIP_I8_out),
        .\write_Addr_I_reg[3] (\write_Addr_I_reg[3] ),
        .\write_Addr_I_reg[3]_0 (\Size_17to32.imm_Reg_reg[15] ));
  LUT3 #(
    .INIT(8'h7F)) 
    of_Valid_early
       (.I0(buffer_Addr_S_I_2),
        .I1(buffer_Addr_S_I_1),
        .I2(buffer_Addr_S_I_0),
        .O(D_32));
  c2c_gth_in_system_ibert_0_MB_FDR of_valid_FDR_I
       (.D_32(D_32),
        .E(E),
        .S(S),
        .\Size_17to32.imm_Reg_reg[15] (\Using_B36_S2.The_BRAMs[1].RAMB36_I1_0 ),
        .\Size_17to32.imm_Reg_reg[15]_0 (\Size_17to32.imm_Reg_reg[15] ),
        .\Using_FPGA.Native_0 (of_Valid),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_4 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_5 ),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_1 ),
        .buffer_Full(buffer_Full),
        .ex_Valid_reg(ex_Valid_reg),
        .ex_Valid_reg_0(Sext16_reg),
        .ilmb_Sl_Ready(ilmb_Sl_Ready),
        .inHibit_EX(inHibit_EX),
        .jump_Carry2(jump_Carry2),
        .mul_Executing(mul_Executing),
        .nonvalid_IFetch_n_reg(nonvalid_IFetch_n_reg),
        .nonvalid_IFetch_n_reg_0(nonvalid_IFetch_n_reg_0),
        .nonvalid_IFetch_n_reg_1(nonvalid_IFetch_n_reg_1),
        .out(out));
endmodule

module c2c_gth_in_system_ibert_0_RAM_Module_Top
   (DATA_OUTA,
    DATA_OUTB,
    out,
    ilmb_M_AddrStrobe,
    dlmb_M_AddrStrobe,
    ADDRARDADDR,
    dlmb_M_ABus,
    DATA_INB,
    dlmb_port_BRAM_WEN);
  output [0:31]DATA_OUTA;
  output [0:31]DATA_OUTB;
  input out;
  input ilmb_M_AddrStrobe;
  input dlmb_M_AddrStrobe;
  input [13:0]ADDRARDADDR;
  input [13:0]dlmb_M_ABus;
  input [0:31]DATA_INB;
  input [0:3]dlmb_port_BRAM_WEN;

  wire [13:0]ADDRARDADDR;
  wire [0:31]DATA_INB;
  wire [0:31]DATA_OUTA;
  wire [0:31]DATA_OUTB;
  wire [13:0]dlmb_M_ABus;
  wire dlmb_M_AddrStrobe;
  wire [0:3]dlmb_port_BRAM_WEN;
  wire ilmb_M_AddrStrobe;
  wire out;
  wire \NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_CASINDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_CASINSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_DBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_SBITERR_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_CASDINA_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_CASDOUTPB_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_DOUTADOUT_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_RDADDRECC_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_CASINDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_CASINSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_DBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_SBITERR_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_CASDINA_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_CASDOUTPB_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_DOUTADOUT_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_RDADDRECC_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_CASINDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_CASINSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_DBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_SBITERR_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_CASDINA_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_CASDOUTPB_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_DOUTADOUT_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_RDADDRECC_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_CASINDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_CASINSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_DBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_SBITERR_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_CASDINA_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_CASDOUTPB_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_DOUTADOUT_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_RDADDRECC_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_CASINDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_CASINSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_DBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_SBITERR_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_CASDINA_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_CASDOUTPB_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_DOUTADOUT_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_RDADDRECC_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_CASINDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_CASINSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_DBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_SBITERR_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_CASDINA_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_CASDOUTPB_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_DOUTADOUT_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_RDADDRECC_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_CASINDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_CASINSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_DBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_SBITERR_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_CASDINA_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_CASDOUTPB_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_DOUTADOUT_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_RDADDRECC_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_CASINDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_CASINSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_DBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_SBITERR_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_CASDINA_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_CASDOUTPB_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_DOUTADOUT_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_RDADDRECC_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_CASINDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_CASINSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_DBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_SBITERR_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_CASDINA_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_CASDOUTPB_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_DOUTADOUT_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_RDADDRECC_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_CASINDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_CASINSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_DBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_SBITERR_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_CASDINA_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_CASDOUTPB_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_DOUTADOUT_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_RDADDRECC_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_CASINDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_CASINSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_DBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_SBITERR_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_CASDINA_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_CASDOUTPB_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_DOUTADOUT_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_RDADDRECC_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_CASINDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_CASINSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_DBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_SBITERR_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_CASDINA_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_CASDOUTPB_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_DOUTADOUT_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_RDADDRECC_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_CASINDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_CASINSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_DBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_SBITERR_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_CASDINA_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_CASDOUTPB_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_DOUTADOUT_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_RDADDRECC_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_CASINDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_CASINSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_DBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_SBITERR_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_CASDINA_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_CASDOUTPB_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_DOUTADOUT_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_RDADDRECC_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_CASINDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_CASINSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_DBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_SBITERR_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_CASDINA_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_CASDOUTPB_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_DOUTADOUT_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_RDADDRECC_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_CASINDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_CASINSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_DBITERR_UNCONNECTED ;
  wire \NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_SBITERR_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_CASDINA_UNCONNECTED ;
  wire [31:1]\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_CASDOUTPB_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_DOUTADOUT_UNCONNECTED ;
  wire [31:2]\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_RDADDRECC_UNCONNECTED ;

  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "RAMB36E1" *) 
  (* XILINX_TRANSFORM_PINMAP = "CASCADEINA:CASDINA[0] CASCADEINB:CASDINB[0] CASCADEOUTA:CASDOUTA[0] CASCADEOUTB:CASDOUTB[0] DIADI[0]:DINADIN[0] DIADI[10]:DINADIN[10] DIADI[11]:DINADIN[11] DIADI[12]:DINADIN[12] DIADI[13]:DINADIN[13] DIADI[14]:DINADIN[14] DIADI[15]:DINADIN[15] DIADI[16]:DINADIN[16] DIADI[17]:DINADIN[17] DIADI[18]:DINADIN[18] DIADI[19]:DINADIN[19] DIADI[1]:DINADIN[1] DIADI[20]:DINADIN[20] DIADI[21]:DINADIN[21] DIADI[22]:DINADIN[22] DIADI[23]:DINADIN[23] DIADI[24]:DINADIN[24] DIADI[25]:DINADIN[25] DIADI[26]:DINADIN[26] DIADI[27]:DINADIN[27] DIADI[28]:DINADIN[28] DIADI[29]:DINADIN[29] DIADI[2]:DINADIN[2] DIADI[30]:DINADIN[30] DIADI[31]:DINADIN[31] DIADI[3]:DINADIN[3] DIADI[4]:DINADIN[4] DIADI[5]:DINADIN[5] DIADI[6]:DINADIN[6] DIADI[7]:DINADIN[7] DIADI[8]:DINADIN[8] DIADI[9]:DINADIN[9] DIBDI[0]:DINBDIN[0] DIBDI[10]:DINBDIN[10] DIBDI[11]:DINBDIN[11] DIBDI[12]:DINBDIN[12] DIBDI[13]:DINBDIN[13] DIBDI[14]:DINBDIN[14] DIBDI[15]:DINBDIN[15] DIBDI[16]:DINBDIN[16] DIBDI[17]:DINBDIN[17] DIBDI[18]:DINBDIN[18] DIBDI[19]:DINBDIN[19] DIBDI[1]:DINBDIN[1] DIBDI[20]:DINBDIN[20] DIBDI[21]:DINBDIN[21] DIBDI[22]:DINBDIN[22] DIBDI[23]:DINBDIN[23] DIBDI[24]:DINBDIN[24] DIBDI[25]:DINBDIN[25] DIBDI[26]:DINBDIN[26] DIBDI[27]:DINBDIN[27] DIBDI[28]:DINBDIN[28] DIBDI[29]:DINBDIN[29] DIBDI[2]:DINBDIN[2] DIBDI[30]:DINBDIN[30] DIBDI[31]:DINBDIN[31] DIBDI[3]:DINBDIN[3] DIBDI[4]:DINBDIN[4] DIBDI[5]:DINBDIN[5] DIBDI[6]:DINBDIN[6] DIBDI[7]:DINBDIN[7] DIBDI[8]:DINBDIN[8] DIBDI[9]:DINBDIN[9] DIPADIP[0]:DINPADINP[0] DIPADIP[1]:DINPADINP[1] DIPADIP[2]:DINPADINP[2] DIPADIP[3]:DINPADINP[3] DIPBDIP[0]:DINPBDINP[0] DIPBDIP[1]:DINPBDINP[1] DIPBDIP[2]:DINPBDINP[2] DIPBDIP[3]:DINPBDINP[3] DOADO[0]:DOUTADOUT[0] DOADO[10]:DOUTADOUT[10] DOADO[11]:DOUTADOUT[11] DOADO[12]:DOUTADOUT[12] DOADO[13]:DOUTADOUT[13] DOADO[14]:DOUTADOUT[14] DOADO[15]:DOUTADOUT[15] DOADO[16]:DOUTADOUT[16] DOADO[17]:DOUTADOUT[17] DOADO[18]:DOUTADOUT[18] DOADO[19]:DOUTADOUT[19] DOADO[1]:DOUTADOUT[1] DOADO[20]:DOUTADOUT[20] DOADO[21]:DOUTADOUT[21] DOADO[22]:DOUTADOUT[22] DOADO[23]:DOUTADOUT[23] DOADO[24]:DOUTADOUT[24] DOADO[25]:DOUTADOUT[25] DOADO[26]:DOUTADOUT[26] DOADO[27]:DOUTADOUT[27] DOADO[28]:DOUTADOUT[28] DOADO[29]:DOUTADOUT[29] DOADO[2]:DOUTADOUT[2] DOADO[30]:DOUTADOUT[30] DOADO[31]:DOUTADOUT[31] DOADO[3]:DOUTADOUT[3] DOADO[4]:DOUTADOUT[4] DOADO[5]:DOUTADOUT[5] DOADO[6]:DOUTADOUT[6] DOADO[7]:DOUTADOUT[7] DOADO[8]:DOUTADOUT[8] DOADO[9]:DOUTADOUT[9] DOBDO[0]:DOUTBDOUT[0] DOBDO[10]:DOUTBDOUT[10] DOBDO[11]:DOUTBDOUT[11] DOBDO[12]:DOUTBDOUT[12] DOBDO[13]:DOUTBDOUT[13] DOBDO[14]:DOUTBDOUT[14] DOBDO[15]:DOUTBDOUT[15] DOBDO[16]:DOUTBDOUT[16] DOBDO[17]:DOUTBDOUT[17] DOBDO[18]:DOUTBDOUT[18] DOBDO[19]:DOUTBDOUT[19] DOBDO[1]:DOUTBDOUT[1] DOBDO[20]:DOUTBDOUT[20] DOBDO[21]:DOUTBDOUT[21] DOBDO[22]:DOUTBDOUT[22] DOBDO[23]:DOUTBDOUT[23] DOBDO[24]:DOUTBDOUT[24] DOBDO[25]:DOUTBDOUT[25] DOBDO[26]:DOUTBDOUT[26] DOBDO[27]:DOUTBDOUT[27] DOBDO[28]:DOUTBDOUT[28] DOBDO[29]:DOUTBDOUT[29] DOBDO[2]:DOUTBDOUT[2] DOBDO[30]:DOUTBDOUT[30] DOBDO[31]:DOUTBDOUT[31] DOBDO[3]:DOUTBDOUT[3] DOBDO[4]:DOUTBDOUT[4] DOBDO[5]:DOUTBDOUT[5] DOBDO[6]:DOUTBDOUT[6] DOBDO[7]:DOUTBDOUT[7] DOBDO[8]:DOUTBDOUT[8] DOBDO[9]:DOUTBDOUT[9] DOPADOP[0]:DOUTPADOUTP[0] DOPADOP[1]:DOUTPADOUTP[1] DOPADOP[2]:DOUTPADOUTP[2] DOPADOP[3]:DOUTPADOUTP[3] DOPBDOP[0]:DOUTPBDOUTP[0] DOPBDOP[1]:DOUTPBDOUTP[1] DOPBDOP[2]:DOUTPBDOUTP[2] DOPBDOP[3]:DOUTPBDOUTP[3] ADDRARDADDR[15]:CASDOMUXEN_A ADDRBWRADDR[15]:CASDOMUXEN_B" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E2 #(
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .READ_WIDTH_A(2),
    .READ_WIDTH_B(2),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(2),
    .WRITE_WIDTH_B(2)) 
    \Using_B36_S2.The_BRAMs[0].RAMB36_I1 
       (.ADDRARDADDR({ADDRARDADDR,1'b0}),
        .ADDRBWRADDR({dlmb_M_ABus,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_CASDINA_UNCONNECTED [31:1],1'b0}),
        .CASDINB({\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_CASDINB_UNCONNECTED [31:1],1'b0}),
        .CASDINPA(\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_CASINDBITERR_UNCONNECTED ),
        .CASINSBITERR(\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_CASINSBITERR_UNCONNECTED ),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(out),
        .CLKBWRCLK(out),
        .DBITERR(\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_DBITERR_UNCONNECTED ),
        .DINADIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DINBDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,DATA_INB[0],DATA_INB[1]}),
        .DINPADINP({1'b0,1'b0,1'b0,1'b0}),
        .DINPBDINP({1'b0,1'b0,1'b0,1'b0}),
        .DOUTADOUT({\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_DOUTADOUT_UNCONNECTED [31:2],DATA_OUTA[0],DATA_OUTA[1]}),
        .DOUTBDOUT({\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_DOUTBDOUT_UNCONNECTED [31:2],DATA_OUTB[0],DATA_OUTB[1]}),
        .DOUTPADOUTP(\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(ilmb_M_AddrStrobe),
        .ENBWREN(dlmb_M_AddrStrobe),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_Using_B36_S2.The_BRAMs[0].RAMB36_I1_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dlmb_port_BRAM_WEN[0]}));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "RAMB36E1" *) 
  (* XILINX_TRANSFORM_PINMAP = "CASCADEINA:CASDINA[0] CASCADEINB:CASDINB[0] CASCADEOUTA:CASDOUTA[0] CASCADEOUTB:CASDOUTB[0] DIADI[0]:DINADIN[0] DIADI[10]:DINADIN[10] DIADI[11]:DINADIN[11] DIADI[12]:DINADIN[12] DIADI[13]:DINADIN[13] DIADI[14]:DINADIN[14] DIADI[15]:DINADIN[15] DIADI[16]:DINADIN[16] DIADI[17]:DINADIN[17] DIADI[18]:DINADIN[18] DIADI[19]:DINADIN[19] DIADI[1]:DINADIN[1] DIADI[20]:DINADIN[20] DIADI[21]:DINADIN[21] DIADI[22]:DINADIN[22] DIADI[23]:DINADIN[23] DIADI[24]:DINADIN[24] DIADI[25]:DINADIN[25] DIADI[26]:DINADIN[26] DIADI[27]:DINADIN[27] DIADI[28]:DINADIN[28] DIADI[29]:DINADIN[29] DIADI[2]:DINADIN[2] DIADI[30]:DINADIN[30] DIADI[31]:DINADIN[31] DIADI[3]:DINADIN[3] DIADI[4]:DINADIN[4] DIADI[5]:DINADIN[5] DIADI[6]:DINADIN[6] DIADI[7]:DINADIN[7] DIADI[8]:DINADIN[8] DIADI[9]:DINADIN[9] DIBDI[0]:DINBDIN[0] DIBDI[10]:DINBDIN[10] DIBDI[11]:DINBDIN[11] DIBDI[12]:DINBDIN[12] DIBDI[13]:DINBDIN[13] DIBDI[14]:DINBDIN[14] DIBDI[15]:DINBDIN[15] DIBDI[16]:DINBDIN[16] DIBDI[17]:DINBDIN[17] DIBDI[18]:DINBDIN[18] DIBDI[19]:DINBDIN[19] DIBDI[1]:DINBDIN[1] DIBDI[20]:DINBDIN[20] DIBDI[21]:DINBDIN[21] DIBDI[22]:DINBDIN[22] DIBDI[23]:DINBDIN[23] DIBDI[24]:DINBDIN[24] DIBDI[25]:DINBDIN[25] DIBDI[26]:DINBDIN[26] DIBDI[27]:DINBDIN[27] DIBDI[28]:DINBDIN[28] DIBDI[29]:DINBDIN[29] DIBDI[2]:DINBDIN[2] DIBDI[30]:DINBDIN[30] DIBDI[31]:DINBDIN[31] DIBDI[3]:DINBDIN[3] DIBDI[4]:DINBDIN[4] DIBDI[5]:DINBDIN[5] DIBDI[6]:DINBDIN[6] DIBDI[7]:DINBDIN[7] DIBDI[8]:DINBDIN[8] DIBDI[9]:DINBDIN[9] DIPADIP[0]:DINPADINP[0] DIPADIP[1]:DINPADINP[1] DIPADIP[2]:DINPADINP[2] DIPADIP[3]:DINPADINP[3] DIPBDIP[0]:DINPBDINP[0] DIPBDIP[1]:DINPBDINP[1] DIPBDIP[2]:DINPBDINP[2] DIPBDIP[3]:DINPBDINP[3] DOADO[0]:DOUTADOUT[0] DOADO[10]:DOUTADOUT[10] DOADO[11]:DOUTADOUT[11] DOADO[12]:DOUTADOUT[12] DOADO[13]:DOUTADOUT[13] DOADO[14]:DOUTADOUT[14] DOADO[15]:DOUTADOUT[15] DOADO[16]:DOUTADOUT[16] DOADO[17]:DOUTADOUT[17] DOADO[18]:DOUTADOUT[18] DOADO[19]:DOUTADOUT[19] DOADO[1]:DOUTADOUT[1] DOADO[20]:DOUTADOUT[20] DOADO[21]:DOUTADOUT[21] DOADO[22]:DOUTADOUT[22] DOADO[23]:DOUTADOUT[23] DOADO[24]:DOUTADOUT[24] DOADO[25]:DOUTADOUT[25] DOADO[26]:DOUTADOUT[26] DOADO[27]:DOUTADOUT[27] DOADO[28]:DOUTADOUT[28] DOADO[29]:DOUTADOUT[29] DOADO[2]:DOUTADOUT[2] DOADO[30]:DOUTADOUT[30] DOADO[31]:DOUTADOUT[31] DOADO[3]:DOUTADOUT[3] DOADO[4]:DOUTADOUT[4] DOADO[5]:DOUTADOUT[5] DOADO[6]:DOUTADOUT[6] DOADO[7]:DOUTADOUT[7] DOADO[8]:DOUTADOUT[8] DOADO[9]:DOUTADOUT[9] DOBDO[0]:DOUTBDOUT[0] DOBDO[10]:DOUTBDOUT[10] DOBDO[11]:DOUTBDOUT[11] DOBDO[12]:DOUTBDOUT[12] DOBDO[13]:DOUTBDOUT[13] DOBDO[14]:DOUTBDOUT[14] DOBDO[15]:DOUTBDOUT[15] DOBDO[16]:DOUTBDOUT[16] DOBDO[17]:DOUTBDOUT[17] DOBDO[18]:DOUTBDOUT[18] DOBDO[19]:DOUTBDOUT[19] DOBDO[1]:DOUTBDOUT[1] DOBDO[20]:DOUTBDOUT[20] DOBDO[21]:DOUTBDOUT[21] DOBDO[22]:DOUTBDOUT[22] DOBDO[23]:DOUTBDOUT[23] DOBDO[24]:DOUTBDOUT[24] DOBDO[25]:DOUTBDOUT[25] DOBDO[26]:DOUTBDOUT[26] DOBDO[27]:DOUTBDOUT[27] DOBDO[28]:DOUTBDOUT[28] DOBDO[29]:DOUTBDOUT[29] DOBDO[2]:DOUTBDOUT[2] DOBDO[30]:DOUTBDOUT[30] DOBDO[31]:DOUTBDOUT[31] DOBDO[3]:DOUTBDOUT[3] DOBDO[4]:DOUTBDOUT[4] DOBDO[5]:DOUTBDOUT[5] DOBDO[6]:DOUTBDOUT[6] DOBDO[7]:DOUTBDOUT[7] DOBDO[8]:DOUTBDOUT[8] DOBDO[9]:DOUTBDOUT[9] DOPADOP[0]:DOUTPADOUTP[0] DOPADOP[1]:DOUTPADOUTP[1] DOPADOP[2]:DOUTPADOUTP[2] DOPADOP[3]:DOUTPADOUTP[3] DOPBDOP[0]:DOUTPBDOUTP[0] DOPBDOP[1]:DOUTPBDOUTP[1] DOPBDOP[2]:DOUTPBDOUTP[2] DOPBDOP[3]:DOUTPBDOUTP[3] ADDRARDADDR[15]:CASDOMUXEN_A ADDRBWRADDR[15]:CASDOMUXEN_B" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E2 #(
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .READ_WIDTH_A(2),
    .READ_WIDTH_B(2),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(2),
    .WRITE_WIDTH_B(2)) 
    \Using_B36_S2.The_BRAMs[10].RAMB36_I1 
       (.ADDRARDADDR({ADDRARDADDR,1'b0}),
        .ADDRBWRADDR({dlmb_M_ABus,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_CASDINA_UNCONNECTED [31:1],1'b0}),
        .CASDINB({\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_CASDINB_UNCONNECTED [31:1],1'b0}),
        .CASDINPA(\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_CASINDBITERR_UNCONNECTED ),
        .CASINSBITERR(\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_CASINSBITERR_UNCONNECTED ),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(out),
        .CLKBWRCLK(out),
        .DBITERR(\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_DBITERR_UNCONNECTED ),
        .DINADIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DINBDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,DATA_INB[20],DATA_INB[21]}),
        .DINPADINP({1'b0,1'b0,1'b0,1'b0}),
        .DINPBDINP({1'b0,1'b0,1'b0,1'b0}),
        .DOUTADOUT({\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_DOUTADOUT_UNCONNECTED [31:2],DATA_OUTA[20],DATA_OUTA[21]}),
        .DOUTBDOUT({\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_DOUTBDOUT_UNCONNECTED [31:2],DATA_OUTB[20],DATA_OUTB[21]}),
        .DOUTPADOUTP(\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(ilmb_M_AddrStrobe),
        .ENBWREN(dlmb_M_AddrStrobe),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_Using_B36_S2.The_BRAMs[10].RAMB36_I1_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dlmb_port_BRAM_WEN[2]}));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "RAMB36E1" *) 
  (* XILINX_TRANSFORM_PINMAP = "CASCADEINA:CASDINA[0] CASCADEINB:CASDINB[0] CASCADEOUTA:CASDOUTA[0] CASCADEOUTB:CASDOUTB[0] DIADI[0]:DINADIN[0] DIADI[10]:DINADIN[10] DIADI[11]:DINADIN[11] DIADI[12]:DINADIN[12] DIADI[13]:DINADIN[13] DIADI[14]:DINADIN[14] DIADI[15]:DINADIN[15] DIADI[16]:DINADIN[16] DIADI[17]:DINADIN[17] DIADI[18]:DINADIN[18] DIADI[19]:DINADIN[19] DIADI[1]:DINADIN[1] DIADI[20]:DINADIN[20] DIADI[21]:DINADIN[21] DIADI[22]:DINADIN[22] DIADI[23]:DINADIN[23] DIADI[24]:DINADIN[24] DIADI[25]:DINADIN[25] DIADI[26]:DINADIN[26] DIADI[27]:DINADIN[27] DIADI[28]:DINADIN[28] DIADI[29]:DINADIN[29] DIADI[2]:DINADIN[2] DIADI[30]:DINADIN[30] DIADI[31]:DINADIN[31] DIADI[3]:DINADIN[3] DIADI[4]:DINADIN[4] DIADI[5]:DINADIN[5] DIADI[6]:DINADIN[6] DIADI[7]:DINADIN[7] DIADI[8]:DINADIN[8] DIADI[9]:DINADIN[9] DIBDI[0]:DINBDIN[0] DIBDI[10]:DINBDIN[10] DIBDI[11]:DINBDIN[11] DIBDI[12]:DINBDIN[12] DIBDI[13]:DINBDIN[13] DIBDI[14]:DINBDIN[14] DIBDI[15]:DINBDIN[15] DIBDI[16]:DINBDIN[16] DIBDI[17]:DINBDIN[17] DIBDI[18]:DINBDIN[18] DIBDI[19]:DINBDIN[19] DIBDI[1]:DINBDIN[1] DIBDI[20]:DINBDIN[20] DIBDI[21]:DINBDIN[21] DIBDI[22]:DINBDIN[22] DIBDI[23]:DINBDIN[23] DIBDI[24]:DINBDIN[24] DIBDI[25]:DINBDIN[25] DIBDI[26]:DINBDIN[26] DIBDI[27]:DINBDIN[27] DIBDI[28]:DINBDIN[28] DIBDI[29]:DINBDIN[29] DIBDI[2]:DINBDIN[2] DIBDI[30]:DINBDIN[30] DIBDI[31]:DINBDIN[31] DIBDI[3]:DINBDIN[3] DIBDI[4]:DINBDIN[4] DIBDI[5]:DINBDIN[5] DIBDI[6]:DINBDIN[6] DIBDI[7]:DINBDIN[7] DIBDI[8]:DINBDIN[8] DIBDI[9]:DINBDIN[9] DIPADIP[0]:DINPADINP[0] DIPADIP[1]:DINPADINP[1] DIPADIP[2]:DINPADINP[2] DIPADIP[3]:DINPADINP[3] DIPBDIP[0]:DINPBDINP[0] DIPBDIP[1]:DINPBDINP[1] DIPBDIP[2]:DINPBDINP[2] DIPBDIP[3]:DINPBDINP[3] DOADO[0]:DOUTADOUT[0] DOADO[10]:DOUTADOUT[10] DOADO[11]:DOUTADOUT[11] DOADO[12]:DOUTADOUT[12] DOADO[13]:DOUTADOUT[13] DOADO[14]:DOUTADOUT[14] DOADO[15]:DOUTADOUT[15] DOADO[16]:DOUTADOUT[16] DOADO[17]:DOUTADOUT[17] DOADO[18]:DOUTADOUT[18] DOADO[19]:DOUTADOUT[19] DOADO[1]:DOUTADOUT[1] DOADO[20]:DOUTADOUT[20] DOADO[21]:DOUTADOUT[21] DOADO[22]:DOUTADOUT[22] DOADO[23]:DOUTADOUT[23] DOADO[24]:DOUTADOUT[24] DOADO[25]:DOUTADOUT[25] DOADO[26]:DOUTADOUT[26] DOADO[27]:DOUTADOUT[27] DOADO[28]:DOUTADOUT[28] DOADO[29]:DOUTADOUT[29] DOADO[2]:DOUTADOUT[2] DOADO[30]:DOUTADOUT[30] DOADO[31]:DOUTADOUT[31] DOADO[3]:DOUTADOUT[3] DOADO[4]:DOUTADOUT[4] DOADO[5]:DOUTADOUT[5] DOADO[6]:DOUTADOUT[6] DOADO[7]:DOUTADOUT[7] DOADO[8]:DOUTADOUT[8] DOADO[9]:DOUTADOUT[9] DOBDO[0]:DOUTBDOUT[0] DOBDO[10]:DOUTBDOUT[10] DOBDO[11]:DOUTBDOUT[11] DOBDO[12]:DOUTBDOUT[12] DOBDO[13]:DOUTBDOUT[13] DOBDO[14]:DOUTBDOUT[14] DOBDO[15]:DOUTBDOUT[15] DOBDO[16]:DOUTBDOUT[16] DOBDO[17]:DOUTBDOUT[17] DOBDO[18]:DOUTBDOUT[18] DOBDO[19]:DOUTBDOUT[19] DOBDO[1]:DOUTBDOUT[1] DOBDO[20]:DOUTBDOUT[20] DOBDO[21]:DOUTBDOUT[21] DOBDO[22]:DOUTBDOUT[22] DOBDO[23]:DOUTBDOUT[23] DOBDO[24]:DOUTBDOUT[24] DOBDO[25]:DOUTBDOUT[25] DOBDO[26]:DOUTBDOUT[26] DOBDO[27]:DOUTBDOUT[27] DOBDO[28]:DOUTBDOUT[28] DOBDO[29]:DOUTBDOUT[29] DOBDO[2]:DOUTBDOUT[2] DOBDO[30]:DOUTBDOUT[30] DOBDO[31]:DOUTBDOUT[31] DOBDO[3]:DOUTBDOUT[3] DOBDO[4]:DOUTBDOUT[4] DOBDO[5]:DOUTBDOUT[5] DOBDO[6]:DOUTBDOUT[6] DOBDO[7]:DOUTBDOUT[7] DOBDO[8]:DOUTBDOUT[8] DOBDO[9]:DOUTBDOUT[9] DOPADOP[0]:DOUTPADOUTP[0] DOPADOP[1]:DOUTPADOUTP[1] DOPADOP[2]:DOUTPADOUTP[2] DOPADOP[3]:DOUTPADOUTP[3] DOPBDOP[0]:DOUTPBDOUTP[0] DOPBDOP[1]:DOUTPBDOUTP[1] DOPBDOP[2]:DOUTPBDOUTP[2] DOPBDOP[3]:DOUTPBDOUTP[3] ADDRARDADDR[15]:CASDOMUXEN_A ADDRBWRADDR[15]:CASDOMUXEN_B" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E2 #(
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .READ_WIDTH_A(2),
    .READ_WIDTH_B(2),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(2),
    .WRITE_WIDTH_B(2)) 
    \Using_B36_S2.The_BRAMs[11].RAMB36_I1 
       (.ADDRARDADDR({ADDRARDADDR,1'b0}),
        .ADDRBWRADDR({dlmb_M_ABus,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_CASDINA_UNCONNECTED [31:1],1'b0}),
        .CASDINB({\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_CASDINB_UNCONNECTED [31:1],1'b0}),
        .CASDINPA(\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_CASINDBITERR_UNCONNECTED ),
        .CASINSBITERR(\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_CASINSBITERR_UNCONNECTED ),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(out),
        .CLKBWRCLK(out),
        .DBITERR(\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_DBITERR_UNCONNECTED ),
        .DINADIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DINBDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,DATA_INB[22],DATA_INB[23]}),
        .DINPADINP({1'b0,1'b0,1'b0,1'b0}),
        .DINPBDINP({1'b0,1'b0,1'b0,1'b0}),
        .DOUTADOUT({\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_DOUTADOUT_UNCONNECTED [31:2],DATA_OUTA[22],DATA_OUTA[23]}),
        .DOUTBDOUT({\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_DOUTBDOUT_UNCONNECTED [31:2],DATA_OUTB[22],DATA_OUTB[23]}),
        .DOUTPADOUTP(\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(ilmb_M_AddrStrobe),
        .ENBWREN(dlmb_M_AddrStrobe),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_Using_B36_S2.The_BRAMs[11].RAMB36_I1_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dlmb_port_BRAM_WEN[2]}));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "RAMB36E1" *) 
  (* XILINX_TRANSFORM_PINMAP = "CASCADEINA:CASDINA[0] CASCADEINB:CASDINB[0] CASCADEOUTA:CASDOUTA[0] CASCADEOUTB:CASDOUTB[0] DIADI[0]:DINADIN[0] DIADI[10]:DINADIN[10] DIADI[11]:DINADIN[11] DIADI[12]:DINADIN[12] DIADI[13]:DINADIN[13] DIADI[14]:DINADIN[14] DIADI[15]:DINADIN[15] DIADI[16]:DINADIN[16] DIADI[17]:DINADIN[17] DIADI[18]:DINADIN[18] DIADI[19]:DINADIN[19] DIADI[1]:DINADIN[1] DIADI[20]:DINADIN[20] DIADI[21]:DINADIN[21] DIADI[22]:DINADIN[22] DIADI[23]:DINADIN[23] DIADI[24]:DINADIN[24] DIADI[25]:DINADIN[25] DIADI[26]:DINADIN[26] DIADI[27]:DINADIN[27] DIADI[28]:DINADIN[28] DIADI[29]:DINADIN[29] DIADI[2]:DINADIN[2] DIADI[30]:DINADIN[30] DIADI[31]:DINADIN[31] DIADI[3]:DINADIN[3] DIADI[4]:DINADIN[4] DIADI[5]:DINADIN[5] DIADI[6]:DINADIN[6] DIADI[7]:DINADIN[7] DIADI[8]:DINADIN[8] DIADI[9]:DINADIN[9] DIBDI[0]:DINBDIN[0] DIBDI[10]:DINBDIN[10] DIBDI[11]:DINBDIN[11] DIBDI[12]:DINBDIN[12] DIBDI[13]:DINBDIN[13] DIBDI[14]:DINBDIN[14] DIBDI[15]:DINBDIN[15] DIBDI[16]:DINBDIN[16] DIBDI[17]:DINBDIN[17] DIBDI[18]:DINBDIN[18] DIBDI[19]:DINBDIN[19] DIBDI[1]:DINBDIN[1] DIBDI[20]:DINBDIN[20] DIBDI[21]:DINBDIN[21] DIBDI[22]:DINBDIN[22] DIBDI[23]:DINBDIN[23] DIBDI[24]:DINBDIN[24] DIBDI[25]:DINBDIN[25] DIBDI[26]:DINBDIN[26] DIBDI[27]:DINBDIN[27] DIBDI[28]:DINBDIN[28] DIBDI[29]:DINBDIN[29] DIBDI[2]:DINBDIN[2] DIBDI[30]:DINBDIN[30] DIBDI[31]:DINBDIN[31] DIBDI[3]:DINBDIN[3] DIBDI[4]:DINBDIN[4] DIBDI[5]:DINBDIN[5] DIBDI[6]:DINBDIN[6] DIBDI[7]:DINBDIN[7] DIBDI[8]:DINBDIN[8] DIBDI[9]:DINBDIN[9] DIPADIP[0]:DINPADINP[0] DIPADIP[1]:DINPADINP[1] DIPADIP[2]:DINPADINP[2] DIPADIP[3]:DINPADINP[3] DIPBDIP[0]:DINPBDINP[0] DIPBDIP[1]:DINPBDINP[1] DIPBDIP[2]:DINPBDINP[2] DIPBDIP[3]:DINPBDINP[3] DOADO[0]:DOUTADOUT[0] DOADO[10]:DOUTADOUT[10] DOADO[11]:DOUTADOUT[11] DOADO[12]:DOUTADOUT[12] DOADO[13]:DOUTADOUT[13] DOADO[14]:DOUTADOUT[14] DOADO[15]:DOUTADOUT[15] DOADO[16]:DOUTADOUT[16] DOADO[17]:DOUTADOUT[17] DOADO[18]:DOUTADOUT[18] DOADO[19]:DOUTADOUT[19] DOADO[1]:DOUTADOUT[1] DOADO[20]:DOUTADOUT[20] DOADO[21]:DOUTADOUT[21] DOADO[22]:DOUTADOUT[22] DOADO[23]:DOUTADOUT[23] DOADO[24]:DOUTADOUT[24] DOADO[25]:DOUTADOUT[25] DOADO[26]:DOUTADOUT[26] DOADO[27]:DOUTADOUT[27] DOADO[28]:DOUTADOUT[28] DOADO[29]:DOUTADOUT[29] DOADO[2]:DOUTADOUT[2] DOADO[30]:DOUTADOUT[30] DOADO[31]:DOUTADOUT[31] DOADO[3]:DOUTADOUT[3] DOADO[4]:DOUTADOUT[4] DOADO[5]:DOUTADOUT[5] DOADO[6]:DOUTADOUT[6] DOADO[7]:DOUTADOUT[7] DOADO[8]:DOUTADOUT[8] DOADO[9]:DOUTADOUT[9] DOBDO[0]:DOUTBDOUT[0] DOBDO[10]:DOUTBDOUT[10] DOBDO[11]:DOUTBDOUT[11] DOBDO[12]:DOUTBDOUT[12] DOBDO[13]:DOUTBDOUT[13] DOBDO[14]:DOUTBDOUT[14] DOBDO[15]:DOUTBDOUT[15] DOBDO[16]:DOUTBDOUT[16] DOBDO[17]:DOUTBDOUT[17] DOBDO[18]:DOUTBDOUT[18] DOBDO[19]:DOUTBDOUT[19] DOBDO[1]:DOUTBDOUT[1] DOBDO[20]:DOUTBDOUT[20] DOBDO[21]:DOUTBDOUT[21] DOBDO[22]:DOUTBDOUT[22] DOBDO[23]:DOUTBDOUT[23] DOBDO[24]:DOUTBDOUT[24] DOBDO[25]:DOUTBDOUT[25] DOBDO[26]:DOUTBDOUT[26] DOBDO[27]:DOUTBDOUT[27] DOBDO[28]:DOUTBDOUT[28] DOBDO[29]:DOUTBDOUT[29] DOBDO[2]:DOUTBDOUT[2] DOBDO[30]:DOUTBDOUT[30] DOBDO[31]:DOUTBDOUT[31] DOBDO[3]:DOUTBDOUT[3] DOBDO[4]:DOUTBDOUT[4] DOBDO[5]:DOUTBDOUT[5] DOBDO[6]:DOUTBDOUT[6] DOBDO[7]:DOUTBDOUT[7] DOBDO[8]:DOUTBDOUT[8] DOBDO[9]:DOUTBDOUT[9] DOPADOP[0]:DOUTPADOUTP[0] DOPADOP[1]:DOUTPADOUTP[1] DOPADOP[2]:DOUTPADOUTP[2] DOPADOP[3]:DOUTPADOUTP[3] DOPBDOP[0]:DOUTPBDOUTP[0] DOPBDOP[1]:DOUTPBDOUTP[1] DOPBDOP[2]:DOUTPBDOUTP[2] DOPBDOP[3]:DOUTPBDOUTP[3] ADDRARDADDR[15]:CASDOMUXEN_A ADDRBWRADDR[15]:CASDOMUXEN_B" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E2 #(
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .READ_WIDTH_A(2),
    .READ_WIDTH_B(2),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(2),
    .WRITE_WIDTH_B(2)) 
    \Using_B36_S2.The_BRAMs[12].RAMB36_I1 
       (.ADDRARDADDR({ADDRARDADDR,1'b0}),
        .ADDRBWRADDR({dlmb_M_ABus,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_CASDINA_UNCONNECTED [31:1],1'b0}),
        .CASDINB({\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_CASDINB_UNCONNECTED [31:1],1'b0}),
        .CASDINPA(\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_CASINDBITERR_UNCONNECTED ),
        .CASINSBITERR(\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_CASINSBITERR_UNCONNECTED ),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(out),
        .CLKBWRCLK(out),
        .DBITERR(\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_DBITERR_UNCONNECTED ),
        .DINADIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DINBDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,DATA_INB[24],DATA_INB[25]}),
        .DINPADINP({1'b0,1'b0,1'b0,1'b0}),
        .DINPBDINP({1'b0,1'b0,1'b0,1'b0}),
        .DOUTADOUT({\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_DOUTADOUT_UNCONNECTED [31:2],DATA_OUTA[24],DATA_OUTA[25]}),
        .DOUTBDOUT({\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_DOUTBDOUT_UNCONNECTED [31:2],DATA_OUTB[24],DATA_OUTB[25]}),
        .DOUTPADOUTP(\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(ilmb_M_AddrStrobe),
        .ENBWREN(dlmb_M_AddrStrobe),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_Using_B36_S2.The_BRAMs[12].RAMB36_I1_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dlmb_port_BRAM_WEN[3]}));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "RAMB36E1" *) 
  (* XILINX_TRANSFORM_PINMAP = "CASCADEINA:CASDINA[0] CASCADEINB:CASDINB[0] CASCADEOUTA:CASDOUTA[0] CASCADEOUTB:CASDOUTB[0] DIADI[0]:DINADIN[0] DIADI[10]:DINADIN[10] DIADI[11]:DINADIN[11] DIADI[12]:DINADIN[12] DIADI[13]:DINADIN[13] DIADI[14]:DINADIN[14] DIADI[15]:DINADIN[15] DIADI[16]:DINADIN[16] DIADI[17]:DINADIN[17] DIADI[18]:DINADIN[18] DIADI[19]:DINADIN[19] DIADI[1]:DINADIN[1] DIADI[20]:DINADIN[20] DIADI[21]:DINADIN[21] DIADI[22]:DINADIN[22] DIADI[23]:DINADIN[23] DIADI[24]:DINADIN[24] DIADI[25]:DINADIN[25] DIADI[26]:DINADIN[26] DIADI[27]:DINADIN[27] DIADI[28]:DINADIN[28] DIADI[29]:DINADIN[29] DIADI[2]:DINADIN[2] DIADI[30]:DINADIN[30] DIADI[31]:DINADIN[31] DIADI[3]:DINADIN[3] DIADI[4]:DINADIN[4] DIADI[5]:DINADIN[5] DIADI[6]:DINADIN[6] DIADI[7]:DINADIN[7] DIADI[8]:DINADIN[8] DIADI[9]:DINADIN[9] DIBDI[0]:DINBDIN[0] DIBDI[10]:DINBDIN[10] DIBDI[11]:DINBDIN[11] DIBDI[12]:DINBDIN[12] DIBDI[13]:DINBDIN[13] DIBDI[14]:DINBDIN[14] DIBDI[15]:DINBDIN[15] DIBDI[16]:DINBDIN[16] DIBDI[17]:DINBDIN[17] DIBDI[18]:DINBDIN[18] DIBDI[19]:DINBDIN[19] DIBDI[1]:DINBDIN[1] DIBDI[20]:DINBDIN[20] DIBDI[21]:DINBDIN[21] DIBDI[22]:DINBDIN[22] DIBDI[23]:DINBDIN[23] DIBDI[24]:DINBDIN[24] DIBDI[25]:DINBDIN[25] DIBDI[26]:DINBDIN[26] DIBDI[27]:DINBDIN[27] DIBDI[28]:DINBDIN[28] DIBDI[29]:DINBDIN[29] DIBDI[2]:DINBDIN[2] DIBDI[30]:DINBDIN[30] DIBDI[31]:DINBDIN[31] DIBDI[3]:DINBDIN[3] DIBDI[4]:DINBDIN[4] DIBDI[5]:DINBDIN[5] DIBDI[6]:DINBDIN[6] DIBDI[7]:DINBDIN[7] DIBDI[8]:DINBDIN[8] DIBDI[9]:DINBDIN[9] DIPADIP[0]:DINPADINP[0] DIPADIP[1]:DINPADINP[1] DIPADIP[2]:DINPADINP[2] DIPADIP[3]:DINPADINP[3] DIPBDIP[0]:DINPBDINP[0] DIPBDIP[1]:DINPBDINP[1] DIPBDIP[2]:DINPBDINP[2] DIPBDIP[3]:DINPBDINP[3] DOADO[0]:DOUTADOUT[0] DOADO[10]:DOUTADOUT[10] DOADO[11]:DOUTADOUT[11] DOADO[12]:DOUTADOUT[12] DOADO[13]:DOUTADOUT[13] DOADO[14]:DOUTADOUT[14] DOADO[15]:DOUTADOUT[15] DOADO[16]:DOUTADOUT[16] DOADO[17]:DOUTADOUT[17] DOADO[18]:DOUTADOUT[18] DOADO[19]:DOUTADOUT[19] DOADO[1]:DOUTADOUT[1] DOADO[20]:DOUTADOUT[20] DOADO[21]:DOUTADOUT[21] DOADO[22]:DOUTADOUT[22] DOADO[23]:DOUTADOUT[23] DOADO[24]:DOUTADOUT[24] DOADO[25]:DOUTADOUT[25] DOADO[26]:DOUTADOUT[26] DOADO[27]:DOUTADOUT[27] DOADO[28]:DOUTADOUT[28] DOADO[29]:DOUTADOUT[29] DOADO[2]:DOUTADOUT[2] DOADO[30]:DOUTADOUT[30] DOADO[31]:DOUTADOUT[31] DOADO[3]:DOUTADOUT[3] DOADO[4]:DOUTADOUT[4] DOADO[5]:DOUTADOUT[5] DOADO[6]:DOUTADOUT[6] DOADO[7]:DOUTADOUT[7] DOADO[8]:DOUTADOUT[8] DOADO[9]:DOUTADOUT[9] DOBDO[0]:DOUTBDOUT[0] DOBDO[10]:DOUTBDOUT[10] DOBDO[11]:DOUTBDOUT[11] DOBDO[12]:DOUTBDOUT[12] DOBDO[13]:DOUTBDOUT[13] DOBDO[14]:DOUTBDOUT[14] DOBDO[15]:DOUTBDOUT[15] DOBDO[16]:DOUTBDOUT[16] DOBDO[17]:DOUTBDOUT[17] DOBDO[18]:DOUTBDOUT[18] DOBDO[19]:DOUTBDOUT[19] DOBDO[1]:DOUTBDOUT[1] DOBDO[20]:DOUTBDOUT[20] DOBDO[21]:DOUTBDOUT[21] DOBDO[22]:DOUTBDOUT[22] DOBDO[23]:DOUTBDOUT[23] DOBDO[24]:DOUTBDOUT[24] DOBDO[25]:DOUTBDOUT[25] DOBDO[26]:DOUTBDOUT[26] DOBDO[27]:DOUTBDOUT[27] DOBDO[28]:DOUTBDOUT[28] DOBDO[29]:DOUTBDOUT[29] DOBDO[2]:DOUTBDOUT[2] DOBDO[30]:DOUTBDOUT[30] DOBDO[31]:DOUTBDOUT[31] DOBDO[3]:DOUTBDOUT[3] DOBDO[4]:DOUTBDOUT[4] DOBDO[5]:DOUTBDOUT[5] DOBDO[6]:DOUTBDOUT[6] DOBDO[7]:DOUTBDOUT[7] DOBDO[8]:DOUTBDOUT[8] DOBDO[9]:DOUTBDOUT[9] DOPADOP[0]:DOUTPADOUTP[0] DOPADOP[1]:DOUTPADOUTP[1] DOPADOP[2]:DOUTPADOUTP[2] DOPADOP[3]:DOUTPADOUTP[3] DOPBDOP[0]:DOUTPBDOUTP[0] DOPBDOP[1]:DOUTPBDOUTP[1] DOPBDOP[2]:DOUTPBDOUTP[2] DOPBDOP[3]:DOUTPBDOUTP[3] ADDRARDADDR[15]:CASDOMUXEN_A ADDRBWRADDR[15]:CASDOMUXEN_B" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E2 #(
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .READ_WIDTH_A(2),
    .READ_WIDTH_B(2),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(2),
    .WRITE_WIDTH_B(2)) 
    \Using_B36_S2.The_BRAMs[13].RAMB36_I1 
       (.ADDRARDADDR({ADDRARDADDR,1'b0}),
        .ADDRBWRADDR({dlmb_M_ABus,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_CASDINA_UNCONNECTED [31:1],1'b0}),
        .CASDINB({\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_CASDINB_UNCONNECTED [31:1],1'b0}),
        .CASDINPA(\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_CASINDBITERR_UNCONNECTED ),
        .CASINSBITERR(\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_CASINSBITERR_UNCONNECTED ),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(out),
        .CLKBWRCLK(out),
        .DBITERR(\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_DBITERR_UNCONNECTED ),
        .DINADIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DINBDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,DATA_INB[26],DATA_INB[27]}),
        .DINPADINP({1'b0,1'b0,1'b0,1'b0}),
        .DINPBDINP({1'b0,1'b0,1'b0,1'b0}),
        .DOUTADOUT({\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_DOUTADOUT_UNCONNECTED [31:2],DATA_OUTA[26],DATA_OUTA[27]}),
        .DOUTBDOUT({\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_DOUTBDOUT_UNCONNECTED [31:2],DATA_OUTB[26],DATA_OUTB[27]}),
        .DOUTPADOUTP(\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(ilmb_M_AddrStrobe),
        .ENBWREN(dlmb_M_AddrStrobe),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_Using_B36_S2.The_BRAMs[13].RAMB36_I1_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dlmb_port_BRAM_WEN[3]}));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "RAMB36E1" *) 
  (* XILINX_TRANSFORM_PINMAP = "CASCADEINA:CASDINA[0] CASCADEINB:CASDINB[0] CASCADEOUTA:CASDOUTA[0] CASCADEOUTB:CASDOUTB[0] DIADI[0]:DINADIN[0] DIADI[10]:DINADIN[10] DIADI[11]:DINADIN[11] DIADI[12]:DINADIN[12] DIADI[13]:DINADIN[13] DIADI[14]:DINADIN[14] DIADI[15]:DINADIN[15] DIADI[16]:DINADIN[16] DIADI[17]:DINADIN[17] DIADI[18]:DINADIN[18] DIADI[19]:DINADIN[19] DIADI[1]:DINADIN[1] DIADI[20]:DINADIN[20] DIADI[21]:DINADIN[21] DIADI[22]:DINADIN[22] DIADI[23]:DINADIN[23] DIADI[24]:DINADIN[24] DIADI[25]:DINADIN[25] DIADI[26]:DINADIN[26] DIADI[27]:DINADIN[27] DIADI[28]:DINADIN[28] DIADI[29]:DINADIN[29] DIADI[2]:DINADIN[2] DIADI[30]:DINADIN[30] DIADI[31]:DINADIN[31] DIADI[3]:DINADIN[3] DIADI[4]:DINADIN[4] DIADI[5]:DINADIN[5] DIADI[6]:DINADIN[6] DIADI[7]:DINADIN[7] DIADI[8]:DINADIN[8] DIADI[9]:DINADIN[9] DIBDI[0]:DINBDIN[0] DIBDI[10]:DINBDIN[10] DIBDI[11]:DINBDIN[11] DIBDI[12]:DINBDIN[12] DIBDI[13]:DINBDIN[13] DIBDI[14]:DINBDIN[14] DIBDI[15]:DINBDIN[15] DIBDI[16]:DINBDIN[16] DIBDI[17]:DINBDIN[17] DIBDI[18]:DINBDIN[18] DIBDI[19]:DINBDIN[19] DIBDI[1]:DINBDIN[1] DIBDI[20]:DINBDIN[20] DIBDI[21]:DINBDIN[21] DIBDI[22]:DINBDIN[22] DIBDI[23]:DINBDIN[23] DIBDI[24]:DINBDIN[24] DIBDI[25]:DINBDIN[25] DIBDI[26]:DINBDIN[26] DIBDI[27]:DINBDIN[27] DIBDI[28]:DINBDIN[28] DIBDI[29]:DINBDIN[29] DIBDI[2]:DINBDIN[2] DIBDI[30]:DINBDIN[30] DIBDI[31]:DINBDIN[31] DIBDI[3]:DINBDIN[3] DIBDI[4]:DINBDIN[4] DIBDI[5]:DINBDIN[5] DIBDI[6]:DINBDIN[6] DIBDI[7]:DINBDIN[7] DIBDI[8]:DINBDIN[8] DIBDI[9]:DINBDIN[9] DIPADIP[0]:DINPADINP[0] DIPADIP[1]:DINPADINP[1] DIPADIP[2]:DINPADINP[2] DIPADIP[3]:DINPADINP[3] DIPBDIP[0]:DINPBDINP[0] DIPBDIP[1]:DINPBDINP[1] DIPBDIP[2]:DINPBDINP[2] DIPBDIP[3]:DINPBDINP[3] DOADO[0]:DOUTADOUT[0] DOADO[10]:DOUTADOUT[10] DOADO[11]:DOUTADOUT[11] DOADO[12]:DOUTADOUT[12] DOADO[13]:DOUTADOUT[13] DOADO[14]:DOUTADOUT[14] DOADO[15]:DOUTADOUT[15] DOADO[16]:DOUTADOUT[16] DOADO[17]:DOUTADOUT[17] DOADO[18]:DOUTADOUT[18] DOADO[19]:DOUTADOUT[19] DOADO[1]:DOUTADOUT[1] DOADO[20]:DOUTADOUT[20] DOADO[21]:DOUTADOUT[21] DOADO[22]:DOUTADOUT[22] DOADO[23]:DOUTADOUT[23] DOADO[24]:DOUTADOUT[24] DOADO[25]:DOUTADOUT[25] DOADO[26]:DOUTADOUT[26] DOADO[27]:DOUTADOUT[27] DOADO[28]:DOUTADOUT[28] DOADO[29]:DOUTADOUT[29] DOADO[2]:DOUTADOUT[2] DOADO[30]:DOUTADOUT[30] DOADO[31]:DOUTADOUT[31] DOADO[3]:DOUTADOUT[3] DOADO[4]:DOUTADOUT[4] DOADO[5]:DOUTADOUT[5] DOADO[6]:DOUTADOUT[6] DOADO[7]:DOUTADOUT[7] DOADO[8]:DOUTADOUT[8] DOADO[9]:DOUTADOUT[9] DOBDO[0]:DOUTBDOUT[0] DOBDO[10]:DOUTBDOUT[10] DOBDO[11]:DOUTBDOUT[11] DOBDO[12]:DOUTBDOUT[12] DOBDO[13]:DOUTBDOUT[13] DOBDO[14]:DOUTBDOUT[14] DOBDO[15]:DOUTBDOUT[15] DOBDO[16]:DOUTBDOUT[16] DOBDO[17]:DOUTBDOUT[17] DOBDO[18]:DOUTBDOUT[18] DOBDO[19]:DOUTBDOUT[19] DOBDO[1]:DOUTBDOUT[1] DOBDO[20]:DOUTBDOUT[20] DOBDO[21]:DOUTBDOUT[21] DOBDO[22]:DOUTBDOUT[22] DOBDO[23]:DOUTBDOUT[23] DOBDO[24]:DOUTBDOUT[24] DOBDO[25]:DOUTBDOUT[25] DOBDO[26]:DOUTBDOUT[26] DOBDO[27]:DOUTBDOUT[27] DOBDO[28]:DOUTBDOUT[28] DOBDO[29]:DOUTBDOUT[29] DOBDO[2]:DOUTBDOUT[2] DOBDO[30]:DOUTBDOUT[30] DOBDO[31]:DOUTBDOUT[31] DOBDO[3]:DOUTBDOUT[3] DOBDO[4]:DOUTBDOUT[4] DOBDO[5]:DOUTBDOUT[5] DOBDO[6]:DOUTBDOUT[6] DOBDO[7]:DOUTBDOUT[7] DOBDO[8]:DOUTBDOUT[8] DOBDO[9]:DOUTBDOUT[9] DOPADOP[0]:DOUTPADOUTP[0] DOPADOP[1]:DOUTPADOUTP[1] DOPADOP[2]:DOUTPADOUTP[2] DOPADOP[3]:DOUTPADOUTP[3] DOPBDOP[0]:DOUTPBDOUTP[0] DOPBDOP[1]:DOUTPBDOUTP[1] DOPBDOP[2]:DOUTPBDOUTP[2] DOPBDOP[3]:DOUTPBDOUTP[3] ADDRARDADDR[15]:CASDOMUXEN_A ADDRBWRADDR[15]:CASDOMUXEN_B" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E2 #(
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .READ_WIDTH_A(2),
    .READ_WIDTH_B(2),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(2),
    .WRITE_WIDTH_B(2)) 
    \Using_B36_S2.The_BRAMs[14].RAMB36_I1 
       (.ADDRARDADDR({ADDRARDADDR,1'b0}),
        .ADDRBWRADDR({dlmb_M_ABus,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_CASDINA_UNCONNECTED [31:1],1'b0}),
        .CASDINB({\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_CASDINB_UNCONNECTED [31:1],1'b0}),
        .CASDINPA(\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_CASINDBITERR_UNCONNECTED ),
        .CASINSBITERR(\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_CASINSBITERR_UNCONNECTED ),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(out),
        .CLKBWRCLK(out),
        .DBITERR(\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_DBITERR_UNCONNECTED ),
        .DINADIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DINBDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,DATA_INB[28],DATA_INB[29]}),
        .DINPADINP({1'b0,1'b0,1'b0,1'b0}),
        .DINPBDINP({1'b0,1'b0,1'b0,1'b0}),
        .DOUTADOUT({\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_DOUTADOUT_UNCONNECTED [31:2],DATA_OUTA[28],DATA_OUTA[29]}),
        .DOUTBDOUT({\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_DOUTBDOUT_UNCONNECTED [31:2],DATA_OUTB[28],DATA_OUTB[29]}),
        .DOUTPADOUTP(\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(ilmb_M_AddrStrobe),
        .ENBWREN(dlmb_M_AddrStrobe),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_Using_B36_S2.The_BRAMs[14].RAMB36_I1_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dlmb_port_BRAM_WEN[3]}));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "RAMB36E1" *) 
  (* XILINX_TRANSFORM_PINMAP = "CASCADEINA:CASDINA[0] CASCADEINB:CASDINB[0] CASCADEOUTA:CASDOUTA[0] CASCADEOUTB:CASDOUTB[0] DIADI[0]:DINADIN[0] DIADI[10]:DINADIN[10] DIADI[11]:DINADIN[11] DIADI[12]:DINADIN[12] DIADI[13]:DINADIN[13] DIADI[14]:DINADIN[14] DIADI[15]:DINADIN[15] DIADI[16]:DINADIN[16] DIADI[17]:DINADIN[17] DIADI[18]:DINADIN[18] DIADI[19]:DINADIN[19] DIADI[1]:DINADIN[1] DIADI[20]:DINADIN[20] DIADI[21]:DINADIN[21] DIADI[22]:DINADIN[22] DIADI[23]:DINADIN[23] DIADI[24]:DINADIN[24] DIADI[25]:DINADIN[25] DIADI[26]:DINADIN[26] DIADI[27]:DINADIN[27] DIADI[28]:DINADIN[28] DIADI[29]:DINADIN[29] DIADI[2]:DINADIN[2] DIADI[30]:DINADIN[30] DIADI[31]:DINADIN[31] DIADI[3]:DINADIN[3] DIADI[4]:DINADIN[4] DIADI[5]:DINADIN[5] DIADI[6]:DINADIN[6] DIADI[7]:DINADIN[7] DIADI[8]:DINADIN[8] DIADI[9]:DINADIN[9] DIBDI[0]:DINBDIN[0] DIBDI[10]:DINBDIN[10] DIBDI[11]:DINBDIN[11] DIBDI[12]:DINBDIN[12] DIBDI[13]:DINBDIN[13] DIBDI[14]:DINBDIN[14] DIBDI[15]:DINBDIN[15] DIBDI[16]:DINBDIN[16] DIBDI[17]:DINBDIN[17] DIBDI[18]:DINBDIN[18] DIBDI[19]:DINBDIN[19] DIBDI[1]:DINBDIN[1] DIBDI[20]:DINBDIN[20] DIBDI[21]:DINBDIN[21] DIBDI[22]:DINBDIN[22] DIBDI[23]:DINBDIN[23] DIBDI[24]:DINBDIN[24] DIBDI[25]:DINBDIN[25] DIBDI[26]:DINBDIN[26] DIBDI[27]:DINBDIN[27] DIBDI[28]:DINBDIN[28] DIBDI[29]:DINBDIN[29] DIBDI[2]:DINBDIN[2] DIBDI[30]:DINBDIN[30] DIBDI[31]:DINBDIN[31] DIBDI[3]:DINBDIN[3] DIBDI[4]:DINBDIN[4] DIBDI[5]:DINBDIN[5] DIBDI[6]:DINBDIN[6] DIBDI[7]:DINBDIN[7] DIBDI[8]:DINBDIN[8] DIBDI[9]:DINBDIN[9] DIPADIP[0]:DINPADINP[0] DIPADIP[1]:DINPADINP[1] DIPADIP[2]:DINPADINP[2] DIPADIP[3]:DINPADINP[3] DIPBDIP[0]:DINPBDINP[0] DIPBDIP[1]:DINPBDINP[1] DIPBDIP[2]:DINPBDINP[2] DIPBDIP[3]:DINPBDINP[3] DOADO[0]:DOUTADOUT[0] DOADO[10]:DOUTADOUT[10] DOADO[11]:DOUTADOUT[11] DOADO[12]:DOUTADOUT[12] DOADO[13]:DOUTADOUT[13] DOADO[14]:DOUTADOUT[14] DOADO[15]:DOUTADOUT[15] DOADO[16]:DOUTADOUT[16] DOADO[17]:DOUTADOUT[17] DOADO[18]:DOUTADOUT[18] DOADO[19]:DOUTADOUT[19] DOADO[1]:DOUTADOUT[1] DOADO[20]:DOUTADOUT[20] DOADO[21]:DOUTADOUT[21] DOADO[22]:DOUTADOUT[22] DOADO[23]:DOUTADOUT[23] DOADO[24]:DOUTADOUT[24] DOADO[25]:DOUTADOUT[25] DOADO[26]:DOUTADOUT[26] DOADO[27]:DOUTADOUT[27] DOADO[28]:DOUTADOUT[28] DOADO[29]:DOUTADOUT[29] DOADO[2]:DOUTADOUT[2] DOADO[30]:DOUTADOUT[30] DOADO[31]:DOUTADOUT[31] DOADO[3]:DOUTADOUT[3] DOADO[4]:DOUTADOUT[4] DOADO[5]:DOUTADOUT[5] DOADO[6]:DOUTADOUT[6] DOADO[7]:DOUTADOUT[7] DOADO[8]:DOUTADOUT[8] DOADO[9]:DOUTADOUT[9] DOBDO[0]:DOUTBDOUT[0] DOBDO[10]:DOUTBDOUT[10] DOBDO[11]:DOUTBDOUT[11] DOBDO[12]:DOUTBDOUT[12] DOBDO[13]:DOUTBDOUT[13] DOBDO[14]:DOUTBDOUT[14] DOBDO[15]:DOUTBDOUT[15] DOBDO[16]:DOUTBDOUT[16] DOBDO[17]:DOUTBDOUT[17] DOBDO[18]:DOUTBDOUT[18] DOBDO[19]:DOUTBDOUT[19] DOBDO[1]:DOUTBDOUT[1] DOBDO[20]:DOUTBDOUT[20] DOBDO[21]:DOUTBDOUT[21] DOBDO[22]:DOUTBDOUT[22] DOBDO[23]:DOUTBDOUT[23] DOBDO[24]:DOUTBDOUT[24] DOBDO[25]:DOUTBDOUT[25] DOBDO[26]:DOUTBDOUT[26] DOBDO[27]:DOUTBDOUT[27] DOBDO[28]:DOUTBDOUT[28] DOBDO[29]:DOUTBDOUT[29] DOBDO[2]:DOUTBDOUT[2] DOBDO[30]:DOUTBDOUT[30] DOBDO[31]:DOUTBDOUT[31] DOBDO[3]:DOUTBDOUT[3] DOBDO[4]:DOUTBDOUT[4] DOBDO[5]:DOUTBDOUT[5] DOBDO[6]:DOUTBDOUT[6] DOBDO[7]:DOUTBDOUT[7] DOBDO[8]:DOUTBDOUT[8] DOBDO[9]:DOUTBDOUT[9] DOPADOP[0]:DOUTPADOUTP[0] DOPADOP[1]:DOUTPADOUTP[1] DOPADOP[2]:DOUTPADOUTP[2] DOPADOP[3]:DOUTPADOUTP[3] DOPBDOP[0]:DOUTPBDOUTP[0] DOPBDOP[1]:DOUTPBDOUTP[1] DOPBDOP[2]:DOUTPBDOUTP[2] DOPBDOP[3]:DOUTPBDOUTP[3] ADDRARDADDR[15]:CASDOMUXEN_A ADDRBWRADDR[15]:CASDOMUXEN_B" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E2 #(
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .READ_WIDTH_A(2),
    .READ_WIDTH_B(2),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(2),
    .WRITE_WIDTH_B(2)) 
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 
       (.ADDRARDADDR({ADDRARDADDR,1'b0}),
        .ADDRBWRADDR({dlmb_M_ABus,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_CASDINA_UNCONNECTED [31:1],1'b0}),
        .CASDINB({\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_CASDINB_UNCONNECTED [31:1],1'b0}),
        .CASDINPA(\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_CASINDBITERR_UNCONNECTED ),
        .CASINSBITERR(\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_CASINSBITERR_UNCONNECTED ),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(out),
        .CLKBWRCLK(out),
        .DBITERR(\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_DBITERR_UNCONNECTED ),
        .DINADIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DINBDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,DATA_INB[30],DATA_INB[31]}),
        .DINPADINP({1'b0,1'b0,1'b0,1'b0}),
        .DINPBDINP({1'b0,1'b0,1'b0,1'b0}),
        .DOUTADOUT({\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_DOUTADOUT_UNCONNECTED [31:2],DATA_OUTA[30],DATA_OUTA[31]}),
        .DOUTBDOUT({\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_DOUTBDOUT_UNCONNECTED [31:2],DATA_OUTB[30],DATA_OUTB[31]}),
        .DOUTPADOUTP(\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(ilmb_M_AddrStrobe),
        .ENBWREN(dlmb_M_AddrStrobe),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_Using_B36_S2.The_BRAMs[15].RAMB36_I1_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dlmb_port_BRAM_WEN[3]}));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "RAMB36E1" *) 
  (* XILINX_TRANSFORM_PINMAP = "CASCADEINA:CASDINA[0] CASCADEINB:CASDINB[0] CASCADEOUTA:CASDOUTA[0] CASCADEOUTB:CASDOUTB[0] DIADI[0]:DINADIN[0] DIADI[10]:DINADIN[10] DIADI[11]:DINADIN[11] DIADI[12]:DINADIN[12] DIADI[13]:DINADIN[13] DIADI[14]:DINADIN[14] DIADI[15]:DINADIN[15] DIADI[16]:DINADIN[16] DIADI[17]:DINADIN[17] DIADI[18]:DINADIN[18] DIADI[19]:DINADIN[19] DIADI[1]:DINADIN[1] DIADI[20]:DINADIN[20] DIADI[21]:DINADIN[21] DIADI[22]:DINADIN[22] DIADI[23]:DINADIN[23] DIADI[24]:DINADIN[24] DIADI[25]:DINADIN[25] DIADI[26]:DINADIN[26] DIADI[27]:DINADIN[27] DIADI[28]:DINADIN[28] DIADI[29]:DINADIN[29] DIADI[2]:DINADIN[2] DIADI[30]:DINADIN[30] DIADI[31]:DINADIN[31] DIADI[3]:DINADIN[3] DIADI[4]:DINADIN[4] DIADI[5]:DINADIN[5] DIADI[6]:DINADIN[6] DIADI[7]:DINADIN[7] DIADI[8]:DINADIN[8] DIADI[9]:DINADIN[9] DIBDI[0]:DINBDIN[0] DIBDI[10]:DINBDIN[10] DIBDI[11]:DINBDIN[11] DIBDI[12]:DINBDIN[12] DIBDI[13]:DINBDIN[13] DIBDI[14]:DINBDIN[14] DIBDI[15]:DINBDIN[15] DIBDI[16]:DINBDIN[16] DIBDI[17]:DINBDIN[17] DIBDI[18]:DINBDIN[18] DIBDI[19]:DINBDIN[19] DIBDI[1]:DINBDIN[1] DIBDI[20]:DINBDIN[20] DIBDI[21]:DINBDIN[21] DIBDI[22]:DINBDIN[22] DIBDI[23]:DINBDIN[23] DIBDI[24]:DINBDIN[24] DIBDI[25]:DINBDIN[25] DIBDI[26]:DINBDIN[26] DIBDI[27]:DINBDIN[27] DIBDI[28]:DINBDIN[28] DIBDI[29]:DINBDIN[29] DIBDI[2]:DINBDIN[2] DIBDI[30]:DINBDIN[30] DIBDI[31]:DINBDIN[31] DIBDI[3]:DINBDIN[3] DIBDI[4]:DINBDIN[4] DIBDI[5]:DINBDIN[5] DIBDI[6]:DINBDIN[6] DIBDI[7]:DINBDIN[7] DIBDI[8]:DINBDIN[8] DIBDI[9]:DINBDIN[9] DIPADIP[0]:DINPADINP[0] DIPADIP[1]:DINPADINP[1] DIPADIP[2]:DINPADINP[2] DIPADIP[3]:DINPADINP[3] DIPBDIP[0]:DINPBDINP[0] DIPBDIP[1]:DINPBDINP[1] DIPBDIP[2]:DINPBDINP[2] DIPBDIP[3]:DINPBDINP[3] DOADO[0]:DOUTADOUT[0] DOADO[10]:DOUTADOUT[10] DOADO[11]:DOUTADOUT[11] DOADO[12]:DOUTADOUT[12] DOADO[13]:DOUTADOUT[13] DOADO[14]:DOUTADOUT[14] DOADO[15]:DOUTADOUT[15] DOADO[16]:DOUTADOUT[16] DOADO[17]:DOUTADOUT[17] DOADO[18]:DOUTADOUT[18] DOADO[19]:DOUTADOUT[19] DOADO[1]:DOUTADOUT[1] DOADO[20]:DOUTADOUT[20] DOADO[21]:DOUTADOUT[21] DOADO[22]:DOUTADOUT[22] DOADO[23]:DOUTADOUT[23] DOADO[24]:DOUTADOUT[24] DOADO[25]:DOUTADOUT[25] DOADO[26]:DOUTADOUT[26] DOADO[27]:DOUTADOUT[27] DOADO[28]:DOUTADOUT[28] DOADO[29]:DOUTADOUT[29] DOADO[2]:DOUTADOUT[2] DOADO[30]:DOUTADOUT[30] DOADO[31]:DOUTADOUT[31] DOADO[3]:DOUTADOUT[3] DOADO[4]:DOUTADOUT[4] DOADO[5]:DOUTADOUT[5] DOADO[6]:DOUTADOUT[6] DOADO[7]:DOUTADOUT[7] DOADO[8]:DOUTADOUT[8] DOADO[9]:DOUTADOUT[9] DOBDO[0]:DOUTBDOUT[0] DOBDO[10]:DOUTBDOUT[10] DOBDO[11]:DOUTBDOUT[11] DOBDO[12]:DOUTBDOUT[12] DOBDO[13]:DOUTBDOUT[13] DOBDO[14]:DOUTBDOUT[14] DOBDO[15]:DOUTBDOUT[15] DOBDO[16]:DOUTBDOUT[16] DOBDO[17]:DOUTBDOUT[17] DOBDO[18]:DOUTBDOUT[18] DOBDO[19]:DOUTBDOUT[19] DOBDO[1]:DOUTBDOUT[1] DOBDO[20]:DOUTBDOUT[20] DOBDO[21]:DOUTBDOUT[21] DOBDO[22]:DOUTBDOUT[22] DOBDO[23]:DOUTBDOUT[23] DOBDO[24]:DOUTBDOUT[24] DOBDO[25]:DOUTBDOUT[25] DOBDO[26]:DOUTBDOUT[26] DOBDO[27]:DOUTBDOUT[27] DOBDO[28]:DOUTBDOUT[28] DOBDO[29]:DOUTBDOUT[29] DOBDO[2]:DOUTBDOUT[2] DOBDO[30]:DOUTBDOUT[30] DOBDO[31]:DOUTBDOUT[31] DOBDO[3]:DOUTBDOUT[3] DOBDO[4]:DOUTBDOUT[4] DOBDO[5]:DOUTBDOUT[5] DOBDO[6]:DOUTBDOUT[6] DOBDO[7]:DOUTBDOUT[7] DOBDO[8]:DOUTBDOUT[8] DOBDO[9]:DOUTBDOUT[9] DOPADOP[0]:DOUTPADOUTP[0] DOPADOP[1]:DOUTPADOUTP[1] DOPADOP[2]:DOUTPADOUTP[2] DOPADOP[3]:DOUTPADOUTP[3] DOPBDOP[0]:DOUTPBDOUTP[0] DOPBDOP[1]:DOUTPBDOUTP[1] DOPBDOP[2]:DOUTPBDOUTP[2] DOPBDOP[3]:DOUTPBDOUTP[3] ADDRARDADDR[15]:CASDOMUXEN_A ADDRBWRADDR[15]:CASDOMUXEN_B" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E2 #(
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .READ_WIDTH_A(2),
    .READ_WIDTH_B(2),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(2),
    .WRITE_WIDTH_B(2)) 
    \Using_B36_S2.The_BRAMs[1].RAMB36_I1 
       (.ADDRARDADDR({ADDRARDADDR,1'b0}),
        .ADDRBWRADDR({dlmb_M_ABus,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_CASDINA_UNCONNECTED [31:1],1'b0}),
        .CASDINB({\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_CASDINB_UNCONNECTED [31:1],1'b0}),
        .CASDINPA(\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_CASINDBITERR_UNCONNECTED ),
        .CASINSBITERR(\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_CASINSBITERR_UNCONNECTED ),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(out),
        .CLKBWRCLK(out),
        .DBITERR(\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_DBITERR_UNCONNECTED ),
        .DINADIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DINBDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,DATA_INB[2],DATA_INB[3]}),
        .DINPADINP({1'b0,1'b0,1'b0,1'b0}),
        .DINPBDINP({1'b0,1'b0,1'b0,1'b0}),
        .DOUTADOUT({\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_DOUTADOUT_UNCONNECTED [31:2],DATA_OUTA[2],DATA_OUTA[3]}),
        .DOUTBDOUT({\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_DOUTBDOUT_UNCONNECTED [31:2],DATA_OUTB[2],DATA_OUTB[3]}),
        .DOUTPADOUTP(\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(ilmb_M_AddrStrobe),
        .ENBWREN(dlmb_M_AddrStrobe),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_Using_B36_S2.The_BRAMs[1].RAMB36_I1_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dlmb_port_BRAM_WEN[0]}));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "RAMB36E1" *) 
  (* XILINX_TRANSFORM_PINMAP = "CASCADEINA:CASDINA[0] CASCADEINB:CASDINB[0] CASCADEOUTA:CASDOUTA[0] CASCADEOUTB:CASDOUTB[0] DIADI[0]:DINADIN[0] DIADI[10]:DINADIN[10] DIADI[11]:DINADIN[11] DIADI[12]:DINADIN[12] DIADI[13]:DINADIN[13] DIADI[14]:DINADIN[14] DIADI[15]:DINADIN[15] DIADI[16]:DINADIN[16] DIADI[17]:DINADIN[17] DIADI[18]:DINADIN[18] DIADI[19]:DINADIN[19] DIADI[1]:DINADIN[1] DIADI[20]:DINADIN[20] DIADI[21]:DINADIN[21] DIADI[22]:DINADIN[22] DIADI[23]:DINADIN[23] DIADI[24]:DINADIN[24] DIADI[25]:DINADIN[25] DIADI[26]:DINADIN[26] DIADI[27]:DINADIN[27] DIADI[28]:DINADIN[28] DIADI[29]:DINADIN[29] DIADI[2]:DINADIN[2] DIADI[30]:DINADIN[30] DIADI[31]:DINADIN[31] DIADI[3]:DINADIN[3] DIADI[4]:DINADIN[4] DIADI[5]:DINADIN[5] DIADI[6]:DINADIN[6] DIADI[7]:DINADIN[7] DIADI[8]:DINADIN[8] DIADI[9]:DINADIN[9] DIBDI[0]:DINBDIN[0] DIBDI[10]:DINBDIN[10] DIBDI[11]:DINBDIN[11] DIBDI[12]:DINBDIN[12] DIBDI[13]:DINBDIN[13] DIBDI[14]:DINBDIN[14] DIBDI[15]:DINBDIN[15] DIBDI[16]:DINBDIN[16] DIBDI[17]:DINBDIN[17] DIBDI[18]:DINBDIN[18] DIBDI[19]:DINBDIN[19] DIBDI[1]:DINBDIN[1] DIBDI[20]:DINBDIN[20] DIBDI[21]:DINBDIN[21] DIBDI[22]:DINBDIN[22] DIBDI[23]:DINBDIN[23] DIBDI[24]:DINBDIN[24] DIBDI[25]:DINBDIN[25] DIBDI[26]:DINBDIN[26] DIBDI[27]:DINBDIN[27] DIBDI[28]:DINBDIN[28] DIBDI[29]:DINBDIN[29] DIBDI[2]:DINBDIN[2] DIBDI[30]:DINBDIN[30] DIBDI[31]:DINBDIN[31] DIBDI[3]:DINBDIN[3] DIBDI[4]:DINBDIN[4] DIBDI[5]:DINBDIN[5] DIBDI[6]:DINBDIN[6] DIBDI[7]:DINBDIN[7] DIBDI[8]:DINBDIN[8] DIBDI[9]:DINBDIN[9] DIPADIP[0]:DINPADINP[0] DIPADIP[1]:DINPADINP[1] DIPADIP[2]:DINPADINP[2] DIPADIP[3]:DINPADINP[3] DIPBDIP[0]:DINPBDINP[0] DIPBDIP[1]:DINPBDINP[1] DIPBDIP[2]:DINPBDINP[2] DIPBDIP[3]:DINPBDINP[3] DOADO[0]:DOUTADOUT[0] DOADO[10]:DOUTADOUT[10] DOADO[11]:DOUTADOUT[11] DOADO[12]:DOUTADOUT[12] DOADO[13]:DOUTADOUT[13] DOADO[14]:DOUTADOUT[14] DOADO[15]:DOUTADOUT[15] DOADO[16]:DOUTADOUT[16] DOADO[17]:DOUTADOUT[17] DOADO[18]:DOUTADOUT[18] DOADO[19]:DOUTADOUT[19] DOADO[1]:DOUTADOUT[1] DOADO[20]:DOUTADOUT[20] DOADO[21]:DOUTADOUT[21] DOADO[22]:DOUTADOUT[22] DOADO[23]:DOUTADOUT[23] DOADO[24]:DOUTADOUT[24] DOADO[25]:DOUTADOUT[25] DOADO[26]:DOUTADOUT[26] DOADO[27]:DOUTADOUT[27] DOADO[28]:DOUTADOUT[28] DOADO[29]:DOUTADOUT[29] DOADO[2]:DOUTADOUT[2] DOADO[30]:DOUTADOUT[30] DOADO[31]:DOUTADOUT[31] DOADO[3]:DOUTADOUT[3] DOADO[4]:DOUTADOUT[4] DOADO[5]:DOUTADOUT[5] DOADO[6]:DOUTADOUT[6] DOADO[7]:DOUTADOUT[7] DOADO[8]:DOUTADOUT[8] DOADO[9]:DOUTADOUT[9] DOBDO[0]:DOUTBDOUT[0] DOBDO[10]:DOUTBDOUT[10] DOBDO[11]:DOUTBDOUT[11] DOBDO[12]:DOUTBDOUT[12] DOBDO[13]:DOUTBDOUT[13] DOBDO[14]:DOUTBDOUT[14] DOBDO[15]:DOUTBDOUT[15] DOBDO[16]:DOUTBDOUT[16] DOBDO[17]:DOUTBDOUT[17] DOBDO[18]:DOUTBDOUT[18] DOBDO[19]:DOUTBDOUT[19] DOBDO[1]:DOUTBDOUT[1] DOBDO[20]:DOUTBDOUT[20] DOBDO[21]:DOUTBDOUT[21] DOBDO[22]:DOUTBDOUT[22] DOBDO[23]:DOUTBDOUT[23] DOBDO[24]:DOUTBDOUT[24] DOBDO[25]:DOUTBDOUT[25] DOBDO[26]:DOUTBDOUT[26] DOBDO[27]:DOUTBDOUT[27] DOBDO[28]:DOUTBDOUT[28] DOBDO[29]:DOUTBDOUT[29] DOBDO[2]:DOUTBDOUT[2] DOBDO[30]:DOUTBDOUT[30] DOBDO[31]:DOUTBDOUT[31] DOBDO[3]:DOUTBDOUT[3] DOBDO[4]:DOUTBDOUT[4] DOBDO[5]:DOUTBDOUT[5] DOBDO[6]:DOUTBDOUT[6] DOBDO[7]:DOUTBDOUT[7] DOBDO[8]:DOUTBDOUT[8] DOBDO[9]:DOUTBDOUT[9] DOPADOP[0]:DOUTPADOUTP[0] DOPADOP[1]:DOUTPADOUTP[1] DOPADOP[2]:DOUTPADOUTP[2] DOPADOP[3]:DOUTPADOUTP[3] DOPBDOP[0]:DOUTPBDOUTP[0] DOPBDOP[1]:DOUTPBDOUTP[1] DOPBDOP[2]:DOUTPBDOUTP[2] DOPBDOP[3]:DOUTPBDOUTP[3] ADDRARDADDR[15]:CASDOMUXEN_A ADDRBWRADDR[15]:CASDOMUXEN_B" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E2 #(
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .READ_WIDTH_A(2),
    .READ_WIDTH_B(2),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(2),
    .WRITE_WIDTH_B(2)) 
    \Using_B36_S2.The_BRAMs[2].RAMB36_I1 
       (.ADDRARDADDR({ADDRARDADDR,1'b0}),
        .ADDRBWRADDR({dlmb_M_ABus,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_CASDINA_UNCONNECTED [31:1],1'b0}),
        .CASDINB({\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_CASDINB_UNCONNECTED [31:1],1'b0}),
        .CASDINPA(\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_CASINDBITERR_UNCONNECTED ),
        .CASINSBITERR(\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_CASINSBITERR_UNCONNECTED ),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(out),
        .CLKBWRCLK(out),
        .DBITERR(\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_DBITERR_UNCONNECTED ),
        .DINADIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DINBDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,DATA_INB[4],DATA_INB[5]}),
        .DINPADINP({1'b0,1'b0,1'b0,1'b0}),
        .DINPBDINP({1'b0,1'b0,1'b0,1'b0}),
        .DOUTADOUT({\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_DOUTADOUT_UNCONNECTED [31:2],DATA_OUTA[4],DATA_OUTA[5]}),
        .DOUTBDOUT({\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_DOUTBDOUT_UNCONNECTED [31:2],DATA_OUTB[4],DATA_OUTB[5]}),
        .DOUTPADOUTP(\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(ilmb_M_AddrStrobe),
        .ENBWREN(dlmb_M_AddrStrobe),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_Using_B36_S2.The_BRAMs[2].RAMB36_I1_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dlmb_port_BRAM_WEN[0]}));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "RAMB36E1" *) 
  (* XILINX_TRANSFORM_PINMAP = "CASCADEINA:CASDINA[0] CASCADEINB:CASDINB[0] CASCADEOUTA:CASDOUTA[0] CASCADEOUTB:CASDOUTB[0] DIADI[0]:DINADIN[0] DIADI[10]:DINADIN[10] DIADI[11]:DINADIN[11] DIADI[12]:DINADIN[12] DIADI[13]:DINADIN[13] DIADI[14]:DINADIN[14] DIADI[15]:DINADIN[15] DIADI[16]:DINADIN[16] DIADI[17]:DINADIN[17] DIADI[18]:DINADIN[18] DIADI[19]:DINADIN[19] DIADI[1]:DINADIN[1] DIADI[20]:DINADIN[20] DIADI[21]:DINADIN[21] DIADI[22]:DINADIN[22] DIADI[23]:DINADIN[23] DIADI[24]:DINADIN[24] DIADI[25]:DINADIN[25] DIADI[26]:DINADIN[26] DIADI[27]:DINADIN[27] DIADI[28]:DINADIN[28] DIADI[29]:DINADIN[29] DIADI[2]:DINADIN[2] DIADI[30]:DINADIN[30] DIADI[31]:DINADIN[31] DIADI[3]:DINADIN[3] DIADI[4]:DINADIN[4] DIADI[5]:DINADIN[5] DIADI[6]:DINADIN[6] DIADI[7]:DINADIN[7] DIADI[8]:DINADIN[8] DIADI[9]:DINADIN[9] DIBDI[0]:DINBDIN[0] DIBDI[10]:DINBDIN[10] DIBDI[11]:DINBDIN[11] DIBDI[12]:DINBDIN[12] DIBDI[13]:DINBDIN[13] DIBDI[14]:DINBDIN[14] DIBDI[15]:DINBDIN[15] DIBDI[16]:DINBDIN[16] DIBDI[17]:DINBDIN[17] DIBDI[18]:DINBDIN[18] DIBDI[19]:DINBDIN[19] DIBDI[1]:DINBDIN[1] DIBDI[20]:DINBDIN[20] DIBDI[21]:DINBDIN[21] DIBDI[22]:DINBDIN[22] DIBDI[23]:DINBDIN[23] DIBDI[24]:DINBDIN[24] DIBDI[25]:DINBDIN[25] DIBDI[26]:DINBDIN[26] DIBDI[27]:DINBDIN[27] DIBDI[28]:DINBDIN[28] DIBDI[29]:DINBDIN[29] DIBDI[2]:DINBDIN[2] DIBDI[30]:DINBDIN[30] DIBDI[31]:DINBDIN[31] DIBDI[3]:DINBDIN[3] DIBDI[4]:DINBDIN[4] DIBDI[5]:DINBDIN[5] DIBDI[6]:DINBDIN[6] DIBDI[7]:DINBDIN[7] DIBDI[8]:DINBDIN[8] DIBDI[9]:DINBDIN[9] DIPADIP[0]:DINPADINP[0] DIPADIP[1]:DINPADINP[1] DIPADIP[2]:DINPADINP[2] DIPADIP[3]:DINPADINP[3] DIPBDIP[0]:DINPBDINP[0] DIPBDIP[1]:DINPBDINP[1] DIPBDIP[2]:DINPBDINP[2] DIPBDIP[3]:DINPBDINP[3] DOADO[0]:DOUTADOUT[0] DOADO[10]:DOUTADOUT[10] DOADO[11]:DOUTADOUT[11] DOADO[12]:DOUTADOUT[12] DOADO[13]:DOUTADOUT[13] DOADO[14]:DOUTADOUT[14] DOADO[15]:DOUTADOUT[15] DOADO[16]:DOUTADOUT[16] DOADO[17]:DOUTADOUT[17] DOADO[18]:DOUTADOUT[18] DOADO[19]:DOUTADOUT[19] DOADO[1]:DOUTADOUT[1] DOADO[20]:DOUTADOUT[20] DOADO[21]:DOUTADOUT[21] DOADO[22]:DOUTADOUT[22] DOADO[23]:DOUTADOUT[23] DOADO[24]:DOUTADOUT[24] DOADO[25]:DOUTADOUT[25] DOADO[26]:DOUTADOUT[26] DOADO[27]:DOUTADOUT[27] DOADO[28]:DOUTADOUT[28] DOADO[29]:DOUTADOUT[29] DOADO[2]:DOUTADOUT[2] DOADO[30]:DOUTADOUT[30] DOADO[31]:DOUTADOUT[31] DOADO[3]:DOUTADOUT[3] DOADO[4]:DOUTADOUT[4] DOADO[5]:DOUTADOUT[5] DOADO[6]:DOUTADOUT[6] DOADO[7]:DOUTADOUT[7] DOADO[8]:DOUTADOUT[8] DOADO[9]:DOUTADOUT[9] DOBDO[0]:DOUTBDOUT[0] DOBDO[10]:DOUTBDOUT[10] DOBDO[11]:DOUTBDOUT[11] DOBDO[12]:DOUTBDOUT[12] DOBDO[13]:DOUTBDOUT[13] DOBDO[14]:DOUTBDOUT[14] DOBDO[15]:DOUTBDOUT[15] DOBDO[16]:DOUTBDOUT[16] DOBDO[17]:DOUTBDOUT[17] DOBDO[18]:DOUTBDOUT[18] DOBDO[19]:DOUTBDOUT[19] DOBDO[1]:DOUTBDOUT[1] DOBDO[20]:DOUTBDOUT[20] DOBDO[21]:DOUTBDOUT[21] DOBDO[22]:DOUTBDOUT[22] DOBDO[23]:DOUTBDOUT[23] DOBDO[24]:DOUTBDOUT[24] DOBDO[25]:DOUTBDOUT[25] DOBDO[26]:DOUTBDOUT[26] DOBDO[27]:DOUTBDOUT[27] DOBDO[28]:DOUTBDOUT[28] DOBDO[29]:DOUTBDOUT[29] DOBDO[2]:DOUTBDOUT[2] DOBDO[30]:DOUTBDOUT[30] DOBDO[31]:DOUTBDOUT[31] DOBDO[3]:DOUTBDOUT[3] DOBDO[4]:DOUTBDOUT[4] DOBDO[5]:DOUTBDOUT[5] DOBDO[6]:DOUTBDOUT[6] DOBDO[7]:DOUTBDOUT[7] DOBDO[8]:DOUTBDOUT[8] DOBDO[9]:DOUTBDOUT[9] DOPADOP[0]:DOUTPADOUTP[0] DOPADOP[1]:DOUTPADOUTP[1] DOPADOP[2]:DOUTPADOUTP[2] DOPADOP[3]:DOUTPADOUTP[3] DOPBDOP[0]:DOUTPBDOUTP[0] DOPBDOP[1]:DOUTPBDOUTP[1] DOPBDOP[2]:DOUTPBDOUTP[2] DOPBDOP[3]:DOUTPBDOUTP[3] ADDRARDADDR[15]:CASDOMUXEN_A ADDRBWRADDR[15]:CASDOMUXEN_B" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E2 #(
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .READ_WIDTH_A(2),
    .READ_WIDTH_B(2),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(2),
    .WRITE_WIDTH_B(2)) 
    \Using_B36_S2.The_BRAMs[3].RAMB36_I1 
       (.ADDRARDADDR({ADDRARDADDR,1'b0}),
        .ADDRBWRADDR({dlmb_M_ABus,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_CASDINA_UNCONNECTED [31:1],1'b0}),
        .CASDINB({\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_CASDINB_UNCONNECTED [31:1],1'b0}),
        .CASDINPA(\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_CASINDBITERR_UNCONNECTED ),
        .CASINSBITERR(\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_CASINSBITERR_UNCONNECTED ),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(out),
        .CLKBWRCLK(out),
        .DBITERR(\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_DBITERR_UNCONNECTED ),
        .DINADIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DINBDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,DATA_INB[6],DATA_INB[7]}),
        .DINPADINP({1'b0,1'b0,1'b0,1'b0}),
        .DINPBDINP({1'b0,1'b0,1'b0,1'b0}),
        .DOUTADOUT({\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_DOUTADOUT_UNCONNECTED [31:2],DATA_OUTA[6],DATA_OUTA[7]}),
        .DOUTBDOUT({\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_DOUTBDOUT_UNCONNECTED [31:2],DATA_OUTB[6],DATA_OUTB[7]}),
        .DOUTPADOUTP(\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(ilmb_M_AddrStrobe),
        .ENBWREN(dlmb_M_AddrStrobe),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_Using_B36_S2.The_BRAMs[3].RAMB36_I1_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dlmb_port_BRAM_WEN[0]}));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "RAMB36E1" *) 
  (* XILINX_TRANSFORM_PINMAP = "CASCADEINA:CASDINA[0] CASCADEINB:CASDINB[0] CASCADEOUTA:CASDOUTA[0] CASCADEOUTB:CASDOUTB[0] DIADI[0]:DINADIN[0] DIADI[10]:DINADIN[10] DIADI[11]:DINADIN[11] DIADI[12]:DINADIN[12] DIADI[13]:DINADIN[13] DIADI[14]:DINADIN[14] DIADI[15]:DINADIN[15] DIADI[16]:DINADIN[16] DIADI[17]:DINADIN[17] DIADI[18]:DINADIN[18] DIADI[19]:DINADIN[19] DIADI[1]:DINADIN[1] DIADI[20]:DINADIN[20] DIADI[21]:DINADIN[21] DIADI[22]:DINADIN[22] DIADI[23]:DINADIN[23] DIADI[24]:DINADIN[24] DIADI[25]:DINADIN[25] DIADI[26]:DINADIN[26] DIADI[27]:DINADIN[27] DIADI[28]:DINADIN[28] DIADI[29]:DINADIN[29] DIADI[2]:DINADIN[2] DIADI[30]:DINADIN[30] DIADI[31]:DINADIN[31] DIADI[3]:DINADIN[3] DIADI[4]:DINADIN[4] DIADI[5]:DINADIN[5] DIADI[6]:DINADIN[6] DIADI[7]:DINADIN[7] DIADI[8]:DINADIN[8] DIADI[9]:DINADIN[9] DIBDI[0]:DINBDIN[0] DIBDI[10]:DINBDIN[10] DIBDI[11]:DINBDIN[11] DIBDI[12]:DINBDIN[12] DIBDI[13]:DINBDIN[13] DIBDI[14]:DINBDIN[14] DIBDI[15]:DINBDIN[15] DIBDI[16]:DINBDIN[16] DIBDI[17]:DINBDIN[17] DIBDI[18]:DINBDIN[18] DIBDI[19]:DINBDIN[19] DIBDI[1]:DINBDIN[1] DIBDI[20]:DINBDIN[20] DIBDI[21]:DINBDIN[21] DIBDI[22]:DINBDIN[22] DIBDI[23]:DINBDIN[23] DIBDI[24]:DINBDIN[24] DIBDI[25]:DINBDIN[25] DIBDI[26]:DINBDIN[26] DIBDI[27]:DINBDIN[27] DIBDI[28]:DINBDIN[28] DIBDI[29]:DINBDIN[29] DIBDI[2]:DINBDIN[2] DIBDI[30]:DINBDIN[30] DIBDI[31]:DINBDIN[31] DIBDI[3]:DINBDIN[3] DIBDI[4]:DINBDIN[4] DIBDI[5]:DINBDIN[5] DIBDI[6]:DINBDIN[6] DIBDI[7]:DINBDIN[7] DIBDI[8]:DINBDIN[8] DIBDI[9]:DINBDIN[9] DIPADIP[0]:DINPADINP[0] DIPADIP[1]:DINPADINP[1] DIPADIP[2]:DINPADINP[2] DIPADIP[3]:DINPADINP[3] DIPBDIP[0]:DINPBDINP[0] DIPBDIP[1]:DINPBDINP[1] DIPBDIP[2]:DINPBDINP[2] DIPBDIP[3]:DINPBDINP[3] DOADO[0]:DOUTADOUT[0] DOADO[10]:DOUTADOUT[10] DOADO[11]:DOUTADOUT[11] DOADO[12]:DOUTADOUT[12] DOADO[13]:DOUTADOUT[13] DOADO[14]:DOUTADOUT[14] DOADO[15]:DOUTADOUT[15] DOADO[16]:DOUTADOUT[16] DOADO[17]:DOUTADOUT[17] DOADO[18]:DOUTADOUT[18] DOADO[19]:DOUTADOUT[19] DOADO[1]:DOUTADOUT[1] DOADO[20]:DOUTADOUT[20] DOADO[21]:DOUTADOUT[21] DOADO[22]:DOUTADOUT[22] DOADO[23]:DOUTADOUT[23] DOADO[24]:DOUTADOUT[24] DOADO[25]:DOUTADOUT[25] DOADO[26]:DOUTADOUT[26] DOADO[27]:DOUTADOUT[27] DOADO[28]:DOUTADOUT[28] DOADO[29]:DOUTADOUT[29] DOADO[2]:DOUTADOUT[2] DOADO[30]:DOUTADOUT[30] DOADO[31]:DOUTADOUT[31] DOADO[3]:DOUTADOUT[3] DOADO[4]:DOUTADOUT[4] DOADO[5]:DOUTADOUT[5] DOADO[6]:DOUTADOUT[6] DOADO[7]:DOUTADOUT[7] DOADO[8]:DOUTADOUT[8] DOADO[9]:DOUTADOUT[9] DOBDO[0]:DOUTBDOUT[0] DOBDO[10]:DOUTBDOUT[10] DOBDO[11]:DOUTBDOUT[11] DOBDO[12]:DOUTBDOUT[12] DOBDO[13]:DOUTBDOUT[13] DOBDO[14]:DOUTBDOUT[14] DOBDO[15]:DOUTBDOUT[15] DOBDO[16]:DOUTBDOUT[16] DOBDO[17]:DOUTBDOUT[17] DOBDO[18]:DOUTBDOUT[18] DOBDO[19]:DOUTBDOUT[19] DOBDO[1]:DOUTBDOUT[1] DOBDO[20]:DOUTBDOUT[20] DOBDO[21]:DOUTBDOUT[21] DOBDO[22]:DOUTBDOUT[22] DOBDO[23]:DOUTBDOUT[23] DOBDO[24]:DOUTBDOUT[24] DOBDO[25]:DOUTBDOUT[25] DOBDO[26]:DOUTBDOUT[26] DOBDO[27]:DOUTBDOUT[27] DOBDO[28]:DOUTBDOUT[28] DOBDO[29]:DOUTBDOUT[29] DOBDO[2]:DOUTBDOUT[2] DOBDO[30]:DOUTBDOUT[30] DOBDO[31]:DOUTBDOUT[31] DOBDO[3]:DOUTBDOUT[3] DOBDO[4]:DOUTBDOUT[4] DOBDO[5]:DOUTBDOUT[5] DOBDO[6]:DOUTBDOUT[6] DOBDO[7]:DOUTBDOUT[7] DOBDO[8]:DOUTBDOUT[8] DOBDO[9]:DOUTBDOUT[9] DOPADOP[0]:DOUTPADOUTP[0] DOPADOP[1]:DOUTPADOUTP[1] DOPADOP[2]:DOUTPADOUTP[2] DOPADOP[3]:DOUTPADOUTP[3] DOPBDOP[0]:DOUTPBDOUTP[0] DOPBDOP[1]:DOUTPBDOUTP[1] DOPBDOP[2]:DOUTPBDOUTP[2] DOPBDOP[3]:DOUTPBDOUTP[3] ADDRARDADDR[15]:CASDOMUXEN_A ADDRBWRADDR[15]:CASDOMUXEN_B" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E2 #(
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .READ_WIDTH_A(2),
    .READ_WIDTH_B(2),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(2),
    .WRITE_WIDTH_B(2)) 
    \Using_B36_S2.The_BRAMs[4].RAMB36_I1 
       (.ADDRARDADDR({ADDRARDADDR,1'b0}),
        .ADDRBWRADDR({dlmb_M_ABus,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_CASDINA_UNCONNECTED [31:1],1'b0}),
        .CASDINB({\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_CASDINB_UNCONNECTED [31:1],1'b0}),
        .CASDINPA(\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_CASINDBITERR_UNCONNECTED ),
        .CASINSBITERR(\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_CASINSBITERR_UNCONNECTED ),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(out),
        .CLKBWRCLK(out),
        .DBITERR(\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_DBITERR_UNCONNECTED ),
        .DINADIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DINBDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,DATA_INB[8],DATA_INB[9]}),
        .DINPADINP({1'b0,1'b0,1'b0,1'b0}),
        .DINPBDINP({1'b0,1'b0,1'b0,1'b0}),
        .DOUTADOUT({\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_DOUTADOUT_UNCONNECTED [31:2],DATA_OUTA[8],DATA_OUTA[9]}),
        .DOUTBDOUT({\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_DOUTBDOUT_UNCONNECTED [31:2],DATA_OUTB[8],DATA_OUTB[9]}),
        .DOUTPADOUTP(\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(ilmb_M_AddrStrobe),
        .ENBWREN(dlmb_M_AddrStrobe),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_Using_B36_S2.The_BRAMs[4].RAMB36_I1_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dlmb_port_BRAM_WEN[1]}));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "RAMB36E1" *) 
  (* XILINX_TRANSFORM_PINMAP = "CASCADEINA:CASDINA[0] CASCADEINB:CASDINB[0] CASCADEOUTA:CASDOUTA[0] CASCADEOUTB:CASDOUTB[0] DIADI[0]:DINADIN[0] DIADI[10]:DINADIN[10] DIADI[11]:DINADIN[11] DIADI[12]:DINADIN[12] DIADI[13]:DINADIN[13] DIADI[14]:DINADIN[14] DIADI[15]:DINADIN[15] DIADI[16]:DINADIN[16] DIADI[17]:DINADIN[17] DIADI[18]:DINADIN[18] DIADI[19]:DINADIN[19] DIADI[1]:DINADIN[1] DIADI[20]:DINADIN[20] DIADI[21]:DINADIN[21] DIADI[22]:DINADIN[22] DIADI[23]:DINADIN[23] DIADI[24]:DINADIN[24] DIADI[25]:DINADIN[25] DIADI[26]:DINADIN[26] DIADI[27]:DINADIN[27] DIADI[28]:DINADIN[28] DIADI[29]:DINADIN[29] DIADI[2]:DINADIN[2] DIADI[30]:DINADIN[30] DIADI[31]:DINADIN[31] DIADI[3]:DINADIN[3] DIADI[4]:DINADIN[4] DIADI[5]:DINADIN[5] DIADI[6]:DINADIN[6] DIADI[7]:DINADIN[7] DIADI[8]:DINADIN[8] DIADI[9]:DINADIN[9] DIBDI[0]:DINBDIN[0] DIBDI[10]:DINBDIN[10] DIBDI[11]:DINBDIN[11] DIBDI[12]:DINBDIN[12] DIBDI[13]:DINBDIN[13] DIBDI[14]:DINBDIN[14] DIBDI[15]:DINBDIN[15] DIBDI[16]:DINBDIN[16] DIBDI[17]:DINBDIN[17] DIBDI[18]:DINBDIN[18] DIBDI[19]:DINBDIN[19] DIBDI[1]:DINBDIN[1] DIBDI[20]:DINBDIN[20] DIBDI[21]:DINBDIN[21] DIBDI[22]:DINBDIN[22] DIBDI[23]:DINBDIN[23] DIBDI[24]:DINBDIN[24] DIBDI[25]:DINBDIN[25] DIBDI[26]:DINBDIN[26] DIBDI[27]:DINBDIN[27] DIBDI[28]:DINBDIN[28] DIBDI[29]:DINBDIN[29] DIBDI[2]:DINBDIN[2] DIBDI[30]:DINBDIN[30] DIBDI[31]:DINBDIN[31] DIBDI[3]:DINBDIN[3] DIBDI[4]:DINBDIN[4] DIBDI[5]:DINBDIN[5] DIBDI[6]:DINBDIN[6] DIBDI[7]:DINBDIN[7] DIBDI[8]:DINBDIN[8] DIBDI[9]:DINBDIN[9] DIPADIP[0]:DINPADINP[0] DIPADIP[1]:DINPADINP[1] DIPADIP[2]:DINPADINP[2] DIPADIP[3]:DINPADINP[3] DIPBDIP[0]:DINPBDINP[0] DIPBDIP[1]:DINPBDINP[1] DIPBDIP[2]:DINPBDINP[2] DIPBDIP[3]:DINPBDINP[3] DOADO[0]:DOUTADOUT[0] DOADO[10]:DOUTADOUT[10] DOADO[11]:DOUTADOUT[11] DOADO[12]:DOUTADOUT[12] DOADO[13]:DOUTADOUT[13] DOADO[14]:DOUTADOUT[14] DOADO[15]:DOUTADOUT[15] DOADO[16]:DOUTADOUT[16] DOADO[17]:DOUTADOUT[17] DOADO[18]:DOUTADOUT[18] DOADO[19]:DOUTADOUT[19] DOADO[1]:DOUTADOUT[1] DOADO[20]:DOUTADOUT[20] DOADO[21]:DOUTADOUT[21] DOADO[22]:DOUTADOUT[22] DOADO[23]:DOUTADOUT[23] DOADO[24]:DOUTADOUT[24] DOADO[25]:DOUTADOUT[25] DOADO[26]:DOUTADOUT[26] DOADO[27]:DOUTADOUT[27] DOADO[28]:DOUTADOUT[28] DOADO[29]:DOUTADOUT[29] DOADO[2]:DOUTADOUT[2] DOADO[30]:DOUTADOUT[30] DOADO[31]:DOUTADOUT[31] DOADO[3]:DOUTADOUT[3] DOADO[4]:DOUTADOUT[4] DOADO[5]:DOUTADOUT[5] DOADO[6]:DOUTADOUT[6] DOADO[7]:DOUTADOUT[7] DOADO[8]:DOUTADOUT[8] DOADO[9]:DOUTADOUT[9] DOBDO[0]:DOUTBDOUT[0] DOBDO[10]:DOUTBDOUT[10] DOBDO[11]:DOUTBDOUT[11] DOBDO[12]:DOUTBDOUT[12] DOBDO[13]:DOUTBDOUT[13] DOBDO[14]:DOUTBDOUT[14] DOBDO[15]:DOUTBDOUT[15] DOBDO[16]:DOUTBDOUT[16] DOBDO[17]:DOUTBDOUT[17] DOBDO[18]:DOUTBDOUT[18] DOBDO[19]:DOUTBDOUT[19] DOBDO[1]:DOUTBDOUT[1] DOBDO[20]:DOUTBDOUT[20] DOBDO[21]:DOUTBDOUT[21] DOBDO[22]:DOUTBDOUT[22] DOBDO[23]:DOUTBDOUT[23] DOBDO[24]:DOUTBDOUT[24] DOBDO[25]:DOUTBDOUT[25] DOBDO[26]:DOUTBDOUT[26] DOBDO[27]:DOUTBDOUT[27] DOBDO[28]:DOUTBDOUT[28] DOBDO[29]:DOUTBDOUT[29] DOBDO[2]:DOUTBDOUT[2] DOBDO[30]:DOUTBDOUT[30] DOBDO[31]:DOUTBDOUT[31] DOBDO[3]:DOUTBDOUT[3] DOBDO[4]:DOUTBDOUT[4] DOBDO[5]:DOUTBDOUT[5] DOBDO[6]:DOUTBDOUT[6] DOBDO[7]:DOUTBDOUT[7] DOBDO[8]:DOUTBDOUT[8] DOBDO[9]:DOUTBDOUT[9] DOPADOP[0]:DOUTPADOUTP[0] DOPADOP[1]:DOUTPADOUTP[1] DOPADOP[2]:DOUTPADOUTP[2] DOPADOP[3]:DOUTPADOUTP[3] DOPBDOP[0]:DOUTPBDOUTP[0] DOPBDOP[1]:DOUTPBDOUTP[1] DOPBDOP[2]:DOUTPBDOUTP[2] DOPBDOP[3]:DOUTPBDOUTP[3] ADDRARDADDR[15]:CASDOMUXEN_A ADDRBWRADDR[15]:CASDOMUXEN_B" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E2 #(
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .READ_WIDTH_A(2),
    .READ_WIDTH_B(2),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(2),
    .WRITE_WIDTH_B(2)) 
    \Using_B36_S2.The_BRAMs[5].RAMB36_I1 
       (.ADDRARDADDR({ADDRARDADDR,1'b0}),
        .ADDRBWRADDR({dlmb_M_ABus,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_CASDINA_UNCONNECTED [31:1],1'b0}),
        .CASDINB({\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_CASDINB_UNCONNECTED [31:1],1'b0}),
        .CASDINPA(\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_CASINDBITERR_UNCONNECTED ),
        .CASINSBITERR(\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_CASINSBITERR_UNCONNECTED ),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(out),
        .CLKBWRCLK(out),
        .DBITERR(\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_DBITERR_UNCONNECTED ),
        .DINADIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DINBDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,DATA_INB[10],DATA_INB[11]}),
        .DINPADINP({1'b0,1'b0,1'b0,1'b0}),
        .DINPBDINP({1'b0,1'b0,1'b0,1'b0}),
        .DOUTADOUT({\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_DOUTADOUT_UNCONNECTED [31:2],DATA_OUTA[10],DATA_OUTA[11]}),
        .DOUTBDOUT({\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_DOUTBDOUT_UNCONNECTED [31:2],DATA_OUTB[10],DATA_OUTB[11]}),
        .DOUTPADOUTP(\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(ilmb_M_AddrStrobe),
        .ENBWREN(dlmb_M_AddrStrobe),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_Using_B36_S2.The_BRAMs[5].RAMB36_I1_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dlmb_port_BRAM_WEN[1]}));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "RAMB36E1" *) 
  (* XILINX_TRANSFORM_PINMAP = "CASCADEINA:CASDINA[0] CASCADEINB:CASDINB[0] CASCADEOUTA:CASDOUTA[0] CASCADEOUTB:CASDOUTB[0] DIADI[0]:DINADIN[0] DIADI[10]:DINADIN[10] DIADI[11]:DINADIN[11] DIADI[12]:DINADIN[12] DIADI[13]:DINADIN[13] DIADI[14]:DINADIN[14] DIADI[15]:DINADIN[15] DIADI[16]:DINADIN[16] DIADI[17]:DINADIN[17] DIADI[18]:DINADIN[18] DIADI[19]:DINADIN[19] DIADI[1]:DINADIN[1] DIADI[20]:DINADIN[20] DIADI[21]:DINADIN[21] DIADI[22]:DINADIN[22] DIADI[23]:DINADIN[23] DIADI[24]:DINADIN[24] DIADI[25]:DINADIN[25] DIADI[26]:DINADIN[26] DIADI[27]:DINADIN[27] DIADI[28]:DINADIN[28] DIADI[29]:DINADIN[29] DIADI[2]:DINADIN[2] DIADI[30]:DINADIN[30] DIADI[31]:DINADIN[31] DIADI[3]:DINADIN[3] DIADI[4]:DINADIN[4] DIADI[5]:DINADIN[5] DIADI[6]:DINADIN[6] DIADI[7]:DINADIN[7] DIADI[8]:DINADIN[8] DIADI[9]:DINADIN[9] DIBDI[0]:DINBDIN[0] DIBDI[10]:DINBDIN[10] DIBDI[11]:DINBDIN[11] DIBDI[12]:DINBDIN[12] DIBDI[13]:DINBDIN[13] DIBDI[14]:DINBDIN[14] DIBDI[15]:DINBDIN[15] DIBDI[16]:DINBDIN[16] DIBDI[17]:DINBDIN[17] DIBDI[18]:DINBDIN[18] DIBDI[19]:DINBDIN[19] DIBDI[1]:DINBDIN[1] DIBDI[20]:DINBDIN[20] DIBDI[21]:DINBDIN[21] DIBDI[22]:DINBDIN[22] DIBDI[23]:DINBDIN[23] DIBDI[24]:DINBDIN[24] DIBDI[25]:DINBDIN[25] DIBDI[26]:DINBDIN[26] DIBDI[27]:DINBDIN[27] DIBDI[28]:DINBDIN[28] DIBDI[29]:DINBDIN[29] DIBDI[2]:DINBDIN[2] DIBDI[30]:DINBDIN[30] DIBDI[31]:DINBDIN[31] DIBDI[3]:DINBDIN[3] DIBDI[4]:DINBDIN[4] DIBDI[5]:DINBDIN[5] DIBDI[6]:DINBDIN[6] DIBDI[7]:DINBDIN[7] DIBDI[8]:DINBDIN[8] DIBDI[9]:DINBDIN[9] DIPADIP[0]:DINPADINP[0] DIPADIP[1]:DINPADINP[1] DIPADIP[2]:DINPADINP[2] DIPADIP[3]:DINPADINP[3] DIPBDIP[0]:DINPBDINP[0] DIPBDIP[1]:DINPBDINP[1] DIPBDIP[2]:DINPBDINP[2] DIPBDIP[3]:DINPBDINP[3] DOADO[0]:DOUTADOUT[0] DOADO[10]:DOUTADOUT[10] DOADO[11]:DOUTADOUT[11] DOADO[12]:DOUTADOUT[12] DOADO[13]:DOUTADOUT[13] DOADO[14]:DOUTADOUT[14] DOADO[15]:DOUTADOUT[15] DOADO[16]:DOUTADOUT[16] DOADO[17]:DOUTADOUT[17] DOADO[18]:DOUTADOUT[18] DOADO[19]:DOUTADOUT[19] DOADO[1]:DOUTADOUT[1] DOADO[20]:DOUTADOUT[20] DOADO[21]:DOUTADOUT[21] DOADO[22]:DOUTADOUT[22] DOADO[23]:DOUTADOUT[23] DOADO[24]:DOUTADOUT[24] DOADO[25]:DOUTADOUT[25] DOADO[26]:DOUTADOUT[26] DOADO[27]:DOUTADOUT[27] DOADO[28]:DOUTADOUT[28] DOADO[29]:DOUTADOUT[29] DOADO[2]:DOUTADOUT[2] DOADO[30]:DOUTADOUT[30] DOADO[31]:DOUTADOUT[31] DOADO[3]:DOUTADOUT[3] DOADO[4]:DOUTADOUT[4] DOADO[5]:DOUTADOUT[5] DOADO[6]:DOUTADOUT[6] DOADO[7]:DOUTADOUT[7] DOADO[8]:DOUTADOUT[8] DOADO[9]:DOUTADOUT[9] DOBDO[0]:DOUTBDOUT[0] DOBDO[10]:DOUTBDOUT[10] DOBDO[11]:DOUTBDOUT[11] DOBDO[12]:DOUTBDOUT[12] DOBDO[13]:DOUTBDOUT[13] DOBDO[14]:DOUTBDOUT[14] DOBDO[15]:DOUTBDOUT[15] DOBDO[16]:DOUTBDOUT[16] DOBDO[17]:DOUTBDOUT[17] DOBDO[18]:DOUTBDOUT[18] DOBDO[19]:DOUTBDOUT[19] DOBDO[1]:DOUTBDOUT[1] DOBDO[20]:DOUTBDOUT[20] DOBDO[21]:DOUTBDOUT[21] DOBDO[22]:DOUTBDOUT[22] DOBDO[23]:DOUTBDOUT[23] DOBDO[24]:DOUTBDOUT[24] DOBDO[25]:DOUTBDOUT[25] DOBDO[26]:DOUTBDOUT[26] DOBDO[27]:DOUTBDOUT[27] DOBDO[28]:DOUTBDOUT[28] DOBDO[29]:DOUTBDOUT[29] DOBDO[2]:DOUTBDOUT[2] DOBDO[30]:DOUTBDOUT[30] DOBDO[31]:DOUTBDOUT[31] DOBDO[3]:DOUTBDOUT[3] DOBDO[4]:DOUTBDOUT[4] DOBDO[5]:DOUTBDOUT[5] DOBDO[6]:DOUTBDOUT[6] DOBDO[7]:DOUTBDOUT[7] DOBDO[8]:DOUTBDOUT[8] DOBDO[9]:DOUTBDOUT[9] DOPADOP[0]:DOUTPADOUTP[0] DOPADOP[1]:DOUTPADOUTP[1] DOPADOP[2]:DOUTPADOUTP[2] DOPADOP[3]:DOUTPADOUTP[3] DOPBDOP[0]:DOUTPBDOUTP[0] DOPBDOP[1]:DOUTPBDOUTP[1] DOPBDOP[2]:DOUTPBDOUTP[2] DOPBDOP[3]:DOUTPBDOUTP[3] ADDRARDADDR[15]:CASDOMUXEN_A ADDRBWRADDR[15]:CASDOMUXEN_B" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E2 #(
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .READ_WIDTH_A(2),
    .READ_WIDTH_B(2),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(2),
    .WRITE_WIDTH_B(2)) 
    \Using_B36_S2.The_BRAMs[6].RAMB36_I1 
       (.ADDRARDADDR({ADDRARDADDR,1'b0}),
        .ADDRBWRADDR({dlmb_M_ABus,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_CASDINA_UNCONNECTED [31:1],1'b0}),
        .CASDINB({\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_CASDINB_UNCONNECTED [31:1],1'b0}),
        .CASDINPA(\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_CASINDBITERR_UNCONNECTED ),
        .CASINSBITERR(\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_CASINSBITERR_UNCONNECTED ),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(out),
        .CLKBWRCLK(out),
        .DBITERR(\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_DBITERR_UNCONNECTED ),
        .DINADIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DINBDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,DATA_INB[12],DATA_INB[13]}),
        .DINPADINP({1'b0,1'b0,1'b0,1'b0}),
        .DINPBDINP({1'b0,1'b0,1'b0,1'b0}),
        .DOUTADOUT({\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_DOUTADOUT_UNCONNECTED [31:2],DATA_OUTA[12],DATA_OUTA[13]}),
        .DOUTBDOUT({\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_DOUTBDOUT_UNCONNECTED [31:2],DATA_OUTB[12],DATA_OUTB[13]}),
        .DOUTPADOUTP(\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(ilmb_M_AddrStrobe),
        .ENBWREN(dlmb_M_AddrStrobe),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_Using_B36_S2.The_BRAMs[6].RAMB36_I1_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dlmb_port_BRAM_WEN[1]}));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "RAMB36E1" *) 
  (* XILINX_TRANSFORM_PINMAP = "CASCADEINA:CASDINA[0] CASCADEINB:CASDINB[0] CASCADEOUTA:CASDOUTA[0] CASCADEOUTB:CASDOUTB[0] DIADI[0]:DINADIN[0] DIADI[10]:DINADIN[10] DIADI[11]:DINADIN[11] DIADI[12]:DINADIN[12] DIADI[13]:DINADIN[13] DIADI[14]:DINADIN[14] DIADI[15]:DINADIN[15] DIADI[16]:DINADIN[16] DIADI[17]:DINADIN[17] DIADI[18]:DINADIN[18] DIADI[19]:DINADIN[19] DIADI[1]:DINADIN[1] DIADI[20]:DINADIN[20] DIADI[21]:DINADIN[21] DIADI[22]:DINADIN[22] DIADI[23]:DINADIN[23] DIADI[24]:DINADIN[24] DIADI[25]:DINADIN[25] DIADI[26]:DINADIN[26] DIADI[27]:DINADIN[27] DIADI[28]:DINADIN[28] DIADI[29]:DINADIN[29] DIADI[2]:DINADIN[2] DIADI[30]:DINADIN[30] DIADI[31]:DINADIN[31] DIADI[3]:DINADIN[3] DIADI[4]:DINADIN[4] DIADI[5]:DINADIN[5] DIADI[6]:DINADIN[6] DIADI[7]:DINADIN[7] DIADI[8]:DINADIN[8] DIADI[9]:DINADIN[9] DIBDI[0]:DINBDIN[0] DIBDI[10]:DINBDIN[10] DIBDI[11]:DINBDIN[11] DIBDI[12]:DINBDIN[12] DIBDI[13]:DINBDIN[13] DIBDI[14]:DINBDIN[14] DIBDI[15]:DINBDIN[15] DIBDI[16]:DINBDIN[16] DIBDI[17]:DINBDIN[17] DIBDI[18]:DINBDIN[18] DIBDI[19]:DINBDIN[19] DIBDI[1]:DINBDIN[1] DIBDI[20]:DINBDIN[20] DIBDI[21]:DINBDIN[21] DIBDI[22]:DINBDIN[22] DIBDI[23]:DINBDIN[23] DIBDI[24]:DINBDIN[24] DIBDI[25]:DINBDIN[25] DIBDI[26]:DINBDIN[26] DIBDI[27]:DINBDIN[27] DIBDI[28]:DINBDIN[28] DIBDI[29]:DINBDIN[29] DIBDI[2]:DINBDIN[2] DIBDI[30]:DINBDIN[30] DIBDI[31]:DINBDIN[31] DIBDI[3]:DINBDIN[3] DIBDI[4]:DINBDIN[4] DIBDI[5]:DINBDIN[5] DIBDI[6]:DINBDIN[6] DIBDI[7]:DINBDIN[7] DIBDI[8]:DINBDIN[8] DIBDI[9]:DINBDIN[9] DIPADIP[0]:DINPADINP[0] DIPADIP[1]:DINPADINP[1] DIPADIP[2]:DINPADINP[2] DIPADIP[3]:DINPADINP[3] DIPBDIP[0]:DINPBDINP[0] DIPBDIP[1]:DINPBDINP[1] DIPBDIP[2]:DINPBDINP[2] DIPBDIP[3]:DINPBDINP[3] DOADO[0]:DOUTADOUT[0] DOADO[10]:DOUTADOUT[10] DOADO[11]:DOUTADOUT[11] DOADO[12]:DOUTADOUT[12] DOADO[13]:DOUTADOUT[13] DOADO[14]:DOUTADOUT[14] DOADO[15]:DOUTADOUT[15] DOADO[16]:DOUTADOUT[16] DOADO[17]:DOUTADOUT[17] DOADO[18]:DOUTADOUT[18] DOADO[19]:DOUTADOUT[19] DOADO[1]:DOUTADOUT[1] DOADO[20]:DOUTADOUT[20] DOADO[21]:DOUTADOUT[21] DOADO[22]:DOUTADOUT[22] DOADO[23]:DOUTADOUT[23] DOADO[24]:DOUTADOUT[24] DOADO[25]:DOUTADOUT[25] DOADO[26]:DOUTADOUT[26] DOADO[27]:DOUTADOUT[27] DOADO[28]:DOUTADOUT[28] DOADO[29]:DOUTADOUT[29] DOADO[2]:DOUTADOUT[2] DOADO[30]:DOUTADOUT[30] DOADO[31]:DOUTADOUT[31] DOADO[3]:DOUTADOUT[3] DOADO[4]:DOUTADOUT[4] DOADO[5]:DOUTADOUT[5] DOADO[6]:DOUTADOUT[6] DOADO[7]:DOUTADOUT[7] DOADO[8]:DOUTADOUT[8] DOADO[9]:DOUTADOUT[9] DOBDO[0]:DOUTBDOUT[0] DOBDO[10]:DOUTBDOUT[10] DOBDO[11]:DOUTBDOUT[11] DOBDO[12]:DOUTBDOUT[12] DOBDO[13]:DOUTBDOUT[13] DOBDO[14]:DOUTBDOUT[14] DOBDO[15]:DOUTBDOUT[15] DOBDO[16]:DOUTBDOUT[16] DOBDO[17]:DOUTBDOUT[17] DOBDO[18]:DOUTBDOUT[18] DOBDO[19]:DOUTBDOUT[19] DOBDO[1]:DOUTBDOUT[1] DOBDO[20]:DOUTBDOUT[20] DOBDO[21]:DOUTBDOUT[21] DOBDO[22]:DOUTBDOUT[22] DOBDO[23]:DOUTBDOUT[23] DOBDO[24]:DOUTBDOUT[24] DOBDO[25]:DOUTBDOUT[25] DOBDO[26]:DOUTBDOUT[26] DOBDO[27]:DOUTBDOUT[27] DOBDO[28]:DOUTBDOUT[28] DOBDO[29]:DOUTBDOUT[29] DOBDO[2]:DOUTBDOUT[2] DOBDO[30]:DOUTBDOUT[30] DOBDO[31]:DOUTBDOUT[31] DOBDO[3]:DOUTBDOUT[3] DOBDO[4]:DOUTBDOUT[4] DOBDO[5]:DOUTBDOUT[5] DOBDO[6]:DOUTBDOUT[6] DOBDO[7]:DOUTBDOUT[7] DOBDO[8]:DOUTBDOUT[8] DOBDO[9]:DOUTBDOUT[9] DOPADOP[0]:DOUTPADOUTP[0] DOPADOP[1]:DOUTPADOUTP[1] DOPADOP[2]:DOUTPADOUTP[2] DOPADOP[3]:DOUTPADOUTP[3] DOPBDOP[0]:DOUTPBDOUTP[0] DOPBDOP[1]:DOUTPBDOUTP[1] DOPBDOP[2]:DOUTPBDOUTP[2] DOPBDOP[3]:DOUTPBDOUTP[3] ADDRARDADDR[15]:CASDOMUXEN_A ADDRBWRADDR[15]:CASDOMUXEN_B" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E2 #(
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .READ_WIDTH_A(2),
    .READ_WIDTH_B(2),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(2),
    .WRITE_WIDTH_B(2)) 
    \Using_B36_S2.The_BRAMs[7].RAMB36_I1 
       (.ADDRARDADDR({ADDRARDADDR,1'b0}),
        .ADDRBWRADDR({dlmb_M_ABus,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_CASDINA_UNCONNECTED [31:1],1'b0}),
        .CASDINB({\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_CASDINB_UNCONNECTED [31:1],1'b0}),
        .CASDINPA(\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_CASINDBITERR_UNCONNECTED ),
        .CASINSBITERR(\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_CASINSBITERR_UNCONNECTED ),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(out),
        .CLKBWRCLK(out),
        .DBITERR(\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_DBITERR_UNCONNECTED ),
        .DINADIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DINBDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,DATA_INB[14],DATA_INB[15]}),
        .DINPADINP({1'b0,1'b0,1'b0,1'b0}),
        .DINPBDINP({1'b0,1'b0,1'b0,1'b0}),
        .DOUTADOUT({\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_DOUTADOUT_UNCONNECTED [31:2],DATA_OUTA[14],DATA_OUTA[15]}),
        .DOUTBDOUT({\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_DOUTBDOUT_UNCONNECTED [31:2],DATA_OUTB[14],DATA_OUTB[15]}),
        .DOUTPADOUTP(\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(ilmb_M_AddrStrobe),
        .ENBWREN(dlmb_M_AddrStrobe),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_Using_B36_S2.The_BRAMs[7].RAMB36_I1_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dlmb_port_BRAM_WEN[1]}));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "RAMB36E1" *) 
  (* XILINX_TRANSFORM_PINMAP = "CASCADEINA:CASDINA[0] CASCADEINB:CASDINB[0] CASCADEOUTA:CASDOUTA[0] CASCADEOUTB:CASDOUTB[0] DIADI[0]:DINADIN[0] DIADI[10]:DINADIN[10] DIADI[11]:DINADIN[11] DIADI[12]:DINADIN[12] DIADI[13]:DINADIN[13] DIADI[14]:DINADIN[14] DIADI[15]:DINADIN[15] DIADI[16]:DINADIN[16] DIADI[17]:DINADIN[17] DIADI[18]:DINADIN[18] DIADI[19]:DINADIN[19] DIADI[1]:DINADIN[1] DIADI[20]:DINADIN[20] DIADI[21]:DINADIN[21] DIADI[22]:DINADIN[22] DIADI[23]:DINADIN[23] DIADI[24]:DINADIN[24] DIADI[25]:DINADIN[25] DIADI[26]:DINADIN[26] DIADI[27]:DINADIN[27] DIADI[28]:DINADIN[28] DIADI[29]:DINADIN[29] DIADI[2]:DINADIN[2] DIADI[30]:DINADIN[30] DIADI[31]:DINADIN[31] DIADI[3]:DINADIN[3] DIADI[4]:DINADIN[4] DIADI[5]:DINADIN[5] DIADI[6]:DINADIN[6] DIADI[7]:DINADIN[7] DIADI[8]:DINADIN[8] DIADI[9]:DINADIN[9] DIBDI[0]:DINBDIN[0] DIBDI[10]:DINBDIN[10] DIBDI[11]:DINBDIN[11] DIBDI[12]:DINBDIN[12] DIBDI[13]:DINBDIN[13] DIBDI[14]:DINBDIN[14] DIBDI[15]:DINBDIN[15] DIBDI[16]:DINBDIN[16] DIBDI[17]:DINBDIN[17] DIBDI[18]:DINBDIN[18] DIBDI[19]:DINBDIN[19] DIBDI[1]:DINBDIN[1] DIBDI[20]:DINBDIN[20] DIBDI[21]:DINBDIN[21] DIBDI[22]:DINBDIN[22] DIBDI[23]:DINBDIN[23] DIBDI[24]:DINBDIN[24] DIBDI[25]:DINBDIN[25] DIBDI[26]:DINBDIN[26] DIBDI[27]:DINBDIN[27] DIBDI[28]:DINBDIN[28] DIBDI[29]:DINBDIN[29] DIBDI[2]:DINBDIN[2] DIBDI[30]:DINBDIN[30] DIBDI[31]:DINBDIN[31] DIBDI[3]:DINBDIN[3] DIBDI[4]:DINBDIN[4] DIBDI[5]:DINBDIN[5] DIBDI[6]:DINBDIN[6] DIBDI[7]:DINBDIN[7] DIBDI[8]:DINBDIN[8] DIBDI[9]:DINBDIN[9] DIPADIP[0]:DINPADINP[0] DIPADIP[1]:DINPADINP[1] DIPADIP[2]:DINPADINP[2] DIPADIP[3]:DINPADINP[3] DIPBDIP[0]:DINPBDINP[0] DIPBDIP[1]:DINPBDINP[1] DIPBDIP[2]:DINPBDINP[2] DIPBDIP[3]:DINPBDINP[3] DOADO[0]:DOUTADOUT[0] DOADO[10]:DOUTADOUT[10] DOADO[11]:DOUTADOUT[11] DOADO[12]:DOUTADOUT[12] DOADO[13]:DOUTADOUT[13] DOADO[14]:DOUTADOUT[14] DOADO[15]:DOUTADOUT[15] DOADO[16]:DOUTADOUT[16] DOADO[17]:DOUTADOUT[17] DOADO[18]:DOUTADOUT[18] DOADO[19]:DOUTADOUT[19] DOADO[1]:DOUTADOUT[1] DOADO[20]:DOUTADOUT[20] DOADO[21]:DOUTADOUT[21] DOADO[22]:DOUTADOUT[22] DOADO[23]:DOUTADOUT[23] DOADO[24]:DOUTADOUT[24] DOADO[25]:DOUTADOUT[25] DOADO[26]:DOUTADOUT[26] DOADO[27]:DOUTADOUT[27] DOADO[28]:DOUTADOUT[28] DOADO[29]:DOUTADOUT[29] DOADO[2]:DOUTADOUT[2] DOADO[30]:DOUTADOUT[30] DOADO[31]:DOUTADOUT[31] DOADO[3]:DOUTADOUT[3] DOADO[4]:DOUTADOUT[4] DOADO[5]:DOUTADOUT[5] DOADO[6]:DOUTADOUT[6] DOADO[7]:DOUTADOUT[7] DOADO[8]:DOUTADOUT[8] DOADO[9]:DOUTADOUT[9] DOBDO[0]:DOUTBDOUT[0] DOBDO[10]:DOUTBDOUT[10] DOBDO[11]:DOUTBDOUT[11] DOBDO[12]:DOUTBDOUT[12] DOBDO[13]:DOUTBDOUT[13] DOBDO[14]:DOUTBDOUT[14] DOBDO[15]:DOUTBDOUT[15] DOBDO[16]:DOUTBDOUT[16] DOBDO[17]:DOUTBDOUT[17] DOBDO[18]:DOUTBDOUT[18] DOBDO[19]:DOUTBDOUT[19] DOBDO[1]:DOUTBDOUT[1] DOBDO[20]:DOUTBDOUT[20] DOBDO[21]:DOUTBDOUT[21] DOBDO[22]:DOUTBDOUT[22] DOBDO[23]:DOUTBDOUT[23] DOBDO[24]:DOUTBDOUT[24] DOBDO[25]:DOUTBDOUT[25] DOBDO[26]:DOUTBDOUT[26] DOBDO[27]:DOUTBDOUT[27] DOBDO[28]:DOUTBDOUT[28] DOBDO[29]:DOUTBDOUT[29] DOBDO[2]:DOUTBDOUT[2] DOBDO[30]:DOUTBDOUT[30] DOBDO[31]:DOUTBDOUT[31] DOBDO[3]:DOUTBDOUT[3] DOBDO[4]:DOUTBDOUT[4] DOBDO[5]:DOUTBDOUT[5] DOBDO[6]:DOUTBDOUT[6] DOBDO[7]:DOUTBDOUT[7] DOBDO[8]:DOUTBDOUT[8] DOBDO[9]:DOUTBDOUT[9] DOPADOP[0]:DOUTPADOUTP[0] DOPADOP[1]:DOUTPADOUTP[1] DOPADOP[2]:DOUTPADOUTP[2] DOPADOP[3]:DOUTPADOUTP[3] DOPBDOP[0]:DOUTPBDOUTP[0] DOPBDOP[1]:DOUTPBDOUTP[1] DOPBDOP[2]:DOUTPBDOUTP[2] DOPBDOP[3]:DOUTPBDOUTP[3] ADDRARDADDR[15]:CASDOMUXEN_A ADDRBWRADDR[15]:CASDOMUXEN_B" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E2 #(
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .READ_WIDTH_A(2),
    .READ_WIDTH_B(2),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(2),
    .WRITE_WIDTH_B(2)) 
    \Using_B36_S2.The_BRAMs[8].RAMB36_I1 
       (.ADDRARDADDR({ADDRARDADDR,1'b0}),
        .ADDRBWRADDR({dlmb_M_ABus,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_CASDINA_UNCONNECTED [31:1],1'b0}),
        .CASDINB({\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_CASDINB_UNCONNECTED [31:1],1'b0}),
        .CASDINPA(\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_CASINDBITERR_UNCONNECTED ),
        .CASINSBITERR(\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_CASINSBITERR_UNCONNECTED ),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(out),
        .CLKBWRCLK(out),
        .DBITERR(\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_DBITERR_UNCONNECTED ),
        .DINADIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DINBDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,DATA_INB[16],DATA_INB[17]}),
        .DINPADINP({1'b0,1'b0,1'b0,1'b0}),
        .DINPBDINP({1'b0,1'b0,1'b0,1'b0}),
        .DOUTADOUT({\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_DOUTADOUT_UNCONNECTED [31:2],DATA_OUTA[16],DATA_OUTA[17]}),
        .DOUTBDOUT({\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_DOUTBDOUT_UNCONNECTED [31:2],DATA_OUTB[16],DATA_OUTB[17]}),
        .DOUTPADOUTP(\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(ilmb_M_AddrStrobe),
        .ENBWREN(dlmb_M_AddrStrobe),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_Using_B36_S2.The_BRAMs[8].RAMB36_I1_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dlmb_port_BRAM_WEN[2]}));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "RAMB36E1" *) 
  (* XILINX_TRANSFORM_PINMAP = "CASCADEINA:CASDINA[0] CASCADEINB:CASDINB[0] CASCADEOUTA:CASDOUTA[0] CASCADEOUTB:CASDOUTB[0] DIADI[0]:DINADIN[0] DIADI[10]:DINADIN[10] DIADI[11]:DINADIN[11] DIADI[12]:DINADIN[12] DIADI[13]:DINADIN[13] DIADI[14]:DINADIN[14] DIADI[15]:DINADIN[15] DIADI[16]:DINADIN[16] DIADI[17]:DINADIN[17] DIADI[18]:DINADIN[18] DIADI[19]:DINADIN[19] DIADI[1]:DINADIN[1] DIADI[20]:DINADIN[20] DIADI[21]:DINADIN[21] DIADI[22]:DINADIN[22] DIADI[23]:DINADIN[23] DIADI[24]:DINADIN[24] DIADI[25]:DINADIN[25] DIADI[26]:DINADIN[26] DIADI[27]:DINADIN[27] DIADI[28]:DINADIN[28] DIADI[29]:DINADIN[29] DIADI[2]:DINADIN[2] DIADI[30]:DINADIN[30] DIADI[31]:DINADIN[31] DIADI[3]:DINADIN[3] DIADI[4]:DINADIN[4] DIADI[5]:DINADIN[5] DIADI[6]:DINADIN[6] DIADI[7]:DINADIN[7] DIADI[8]:DINADIN[8] DIADI[9]:DINADIN[9] DIBDI[0]:DINBDIN[0] DIBDI[10]:DINBDIN[10] DIBDI[11]:DINBDIN[11] DIBDI[12]:DINBDIN[12] DIBDI[13]:DINBDIN[13] DIBDI[14]:DINBDIN[14] DIBDI[15]:DINBDIN[15] DIBDI[16]:DINBDIN[16] DIBDI[17]:DINBDIN[17] DIBDI[18]:DINBDIN[18] DIBDI[19]:DINBDIN[19] DIBDI[1]:DINBDIN[1] DIBDI[20]:DINBDIN[20] DIBDI[21]:DINBDIN[21] DIBDI[22]:DINBDIN[22] DIBDI[23]:DINBDIN[23] DIBDI[24]:DINBDIN[24] DIBDI[25]:DINBDIN[25] DIBDI[26]:DINBDIN[26] DIBDI[27]:DINBDIN[27] DIBDI[28]:DINBDIN[28] DIBDI[29]:DINBDIN[29] DIBDI[2]:DINBDIN[2] DIBDI[30]:DINBDIN[30] DIBDI[31]:DINBDIN[31] DIBDI[3]:DINBDIN[3] DIBDI[4]:DINBDIN[4] DIBDI[5]:DINBDIN[5] DIBDI[6]:DINBDIN[6] DIBDI[7]:DINBDIN[7] DIBDI[8]:DINBDIN[8] DIBDI[9]:DINBDIN[9] DIPADIP[0]:DINPADINP[0] DIPADIP[1]:DINPADINP[1] DIPADIP[2]:DINPADINP[2] DIPADIP[3]:DINPADINP[3] DIPBDIP[0]:DINPBDINP[0] DIPBDIP[1]:DINPBDINP[1] DIPBDIP[2]:DINPBDINP[2] DIPBDIP[3]:DINPBDINP[3] DOADO[0]:DOUTADOUT[0] DOADO[10]:DOUTADOUT[10] DOADO[11]:DOUTADOUT[11] DOADO[12]:DOUTADOUT[12] DOADO[13]:DOUTADOUT[13] DOADO[14]:DOUTADOUT[14] DOADO[15]:DOUTADOUT[15] DOADO[16]:DOUTADOUT[16] DOADO[17]:DOUTADOUT[17] DOADO[18]:DOUTADOUT[18] DOADO[19]:DOUTADOUT[19] DOADO[1]:DOUTADOUT[1] DOADO[20]:DOUTADOUT[20] DOADO[21]:DOUTADOUT[21] DOADO[22]:DOUTADOUT[22] DOADO[23]:DOUTADOUT[23] DOADO[24]:DOUTADOUT[24] DOADO[25]:DOUTADOUT[25] DOADO[26]:DOUTADOUT[26] DOADO[27]:DOUTADOUT[27] DOADO[28]:DOUTADOUT[28] DOADO[29]:DOUTADOUT[29] DOADO[2]:DOUTADOUT[2] DOADO[30]:DOUTADOUT[30] DOADO[31]:DOUTADOUT[31] DOADO[3]:DOUTADOUT[3] DOADO[4]:DOUTADOUT[4] DOADO[5]:DOUTADOUT[5] DOADO[6]:DOUTADOUT[6] DOADO[7]:DOUTADOUT[7] DOADO[8]:DOUTADOUT[8] DOADO[9]:DOUTADOUT[9] DOBDO[0]:DOUTBDOUT[0] DOBDO[10]:DOUTBDOUT[10] DOBDO[11]:DOUTBDOUT[11] DOBDO[12]:DOUTBDOUT[12] DOBDO[13]:DOUTBDOUT[13] DOBDO[14]:DOUTBDOUT[14] DOBDO[15]:DOUTBDOUT[15] DOBDO[16]:DOUTBDOUT[16] DOBDO[17]:DOUTBDOUT[17] DOBDO[18]:DOUTBDOUT[18] DOBDO[19]:DOUTBDOUT[19] DOBDO[1]:DOUTBDOUT[1] DOBDO[20]:DOUTBDOUT[20] DOBDO[21]:DOUTBDOUT[21] DOBDO[22]:DOUTBDOUT[22] DOBDO[23]:DOUTBDOUT[23] DOBDO[24]:DOUTBDOUT[24] DOBDO[25]:DOUTBDOUT[25] DOBDO[26]:DOUTBDOUT[26] DOBDO[27]:DOUTBDOUT[27] DOBDO[28]:DOUTBDOUT[28] DOBDO[29]:DOUTBDOUT[29] DOBDO[2]:DOUTBDOUT[2] DOBDO[30]:DOUTBDOUT[30] DOBDO[31]:DOUTBDOUT[31] DOBDO[3]:DOUTBDOUT[3] DOBDO[4]:DOUTBDOUT[4] DOBDO[5]:DOUTBDOUT[5] DOBDO[6]:DOUTBDOUT[6] DOBDO[7]:DOUTBDOUT[7] DOBDO[8]:DOUTBDOUT[8] DOBDO[9]:DOUTBDOUT[9] DOPADOP[0]:DOUTPADOUTP[0] DOPADOP[1]:DOUTPADOUTP[1] DOPADOP[2]:DOUTPADOUTP[2] DOPADOP[3]:DOUTPADOUTP[3] DOPBDOP[0]:DOUTPBDOUTP[0] DOPBDOP[1]:DOUTPBDOUTP[1] DOPBDOP[2]:DOUTPBDOUTP[2] DOPBDOP[3]:DOUTPBDOUTP[3] ADDRARDADDR[15]:CASDOMUXEN_A ADDRBWRADDR[15]:CASDOMUXEN_B" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E2 #(
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .READ_WIDTH_A(2),
    .READ_WIDTH_B(2),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(2),
    .WRITE_WIDTH_B(2)) 
    \Using_B36_S2.The_BRAMs[9].RAMB36_I1 
       (.ADDRARDADDR({ADDRARDADDR,1'b0}),
        .ADDRBWRADDR({dlmb_M_ABus,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_CASDINA_UNCONNECTED [31:1],1'b0}),
        .CASDINB({\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_CASDINB_UNCONNECTED [31:1],1'b0}),
        .CASDINPA(\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_CASINDBITERR_UNCONNECTED ),
        .CASINSBITERR(\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_CASINSBITERR_UNCONNECTED ),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(out),
        .CLKBWRCLK(out),
        .DBITERR(\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_DBITERR_UNCONNECTED ),
        .DINADIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DINBDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,DATA_INB[18],DATA_INB[19]}),
        .DINPADINP({1'b0,1'b0,1'b0,1'b0}),
        .DINPBDINP({1'b0,1'b0,1'b0,1'b0}),
        .DOUTADOUT({\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_DOUTADOUT_UNCONNECTED [31:2],DATA_OUTA[18],DATA_OUTA[19]}),
        .DOUTBDOUT({\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_DOUTBDOUT_UNCONNECTED [31:2],DATA_OUTB[18],DATA_OUTB[19]}),
        .DOUTPADOUTP(\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(ilmb_M_AddrStrobe),
        .ENBWREN(dlmb_M_AddrStrobe),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_Using_B36_S2.The_BRAMs[9].RAMB36_I1_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dlmb_port_BRAM_WEN[2]}));
endmodule

module c2c_gth_in_system_ibert_0_Register_File
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    \Using_FPGA.take_Intr_2nd_Phase_reg_0 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg_1 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg_2 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg_3 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg_4 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg_5 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg_6 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg_7 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg_8 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg_9 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg_10 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg_11 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg_12 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg_13 ,
    \Using_FPGA.take_Intr_2nd_Phase_reg_14 ,
    Reg1_Data,
    Data_Write,
    Reg2_Data,
    exception_kind,
    res_Forward2,
    EX_Result,
    out,
    Reg_Write,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    reg1_Addr,
    imm_Value);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_0 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_1 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_2 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_3 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_4 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_5 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_6 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_7 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_8 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_9 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_10 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_11 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_12 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_13 ;
  output \Using_FPGA.take_Intr_2nd_Phase_reg_14 ;
  output [0:31]Reg1_Data;
  output [0:31]Data_Write;
  output [15:0]Reg2_Data;
  input [0:0]exception_kind;
  input res_Forward2;
  input [0:31]EX_Result;
  input out;
  input Reg_Write;
  input [4:0]\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:31]Data_Write;
  wire [0:31]EX_Result;
  wire [0:31]Reg1_Data;
  wire [15:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_0 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_1 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_10 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_11 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_12 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_13 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_14 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_2 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_3 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_4 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_5 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_6 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_7 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_8 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_9 ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;
  wire res_Forward2;

  c2c_gth_in_system_ibert_0_Register_File_Bit \Using_FPGA.Gen_RegFile[0].Register_File_Bit_I 
       (.Data_Write(Data_Write[0]),
        .EX_Result(EX_Result[0]),
        .Reg1_Data(Reg1_Data[0]),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr),
        .res_Forward2(res_Forward2));
  c2c_gth_in_system_ibert_0_Register_File_Bit_288 \Using_FPGA.Gen_RegFile[10].Register_File_Bit_I 
       (.Data_Write(Data_Write[10]),
        .EX_Result(EX_Result[10]),
        .Reg1_Data(Reg1_Data[10]),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg_9 ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr),
        .res_Forward2(res_Forward2));
  c2c_gth_in_system_ibert_0_Register_File_Bit_289 \Using_FPGA.Gen_RegFile[11].Register_File_Bit_I 
       (.Data_Write(Data_Write[11]),
        .EX_Result(EX_Result[11]),
        .Reg1_Data(Reg1_Data[11]),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg_10 ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr),
        .res_Forward2(res_Forward2));
  c2c_gth_in_system_ibert_0_Register_File_Bit_290 \Using_FPGA.Gen_RegFile[12].Register_File_Bit_I 
       (.Data_Write(Data_Write[12]),
        .EX_Result(EX_Result[12]),
        .Reg1_Data(Reg1_Data[12]),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg_11 ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr),
        .res_Forward2(res_Forward2));
  c2c_gth_in_system_ibert_0_Register_File_Bit_291 \Using_FPGA.Gen_RegFile[13].Register_File_Bit_I 
       (.Data_Write(Data_Write[13]),
        .EX_Result(EX_Result[13]),
        .Reg1_Data(Reg1_Data[13]),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg_12 ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr),
        .res_Forward2(res_Forward2));
  c2c_gth_in_system_ibert_0_Register_File_Bit_292 \Using_FPGA.Gen_RegFile[14].Register_File_Bit_I 
       (.Data_Write(Data_Write[14]),
        .EX_Result(EX_Result[14]),
        .Reg1_Data(Reg1_Data[14]),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg_13 ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr),
        .res_Forward2(res_Forward2));
  c2c_gth_in_system_ibert_0_Register_File_Bit_293 \Using_FPGA.Gen_RegFile[15].Register_File_Bit_I 
       (.Data_Write(Data_Write[15]),
        .EX_Result(EX_Result[15]),
        .Reg1_Data(Reg1_Data[15]),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg_14 ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr),
        .res_Forward2(res_Forward2));
  c2c_gth_in_system_ibert_0_Register_File_Bit_294 \Using_FPGA.Gen_RegFile[16].Register_File_Bit_I 
       (.Data_Write(Data_Write[16]),
        .EX_Result(EX_Result[16]),
        .Reg1_Data(Reg1_Data[16]),
        .Reg2_Data(Reg2_Data[15]),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_Register_File_Bit_295 \Using_FPGA.Gen_RegFile[17].Register_File_Bit_I 
       (.Data_Write(Data_Write[17]),
        .EX_Result(EX_Result[17]),
        .Reg1_Data(Reg1_Data[17]),
        .Reg2_Data(Reg2_Data[14]),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_Register_File_Bit_296 \Using_FPGA.Gen_RegFile[18].Register_File_Bit_I 
       (.Data_Write(Data_Write[18]),
        .EX_Result(EX_Result[18]),
        .Reg1_Data(Reg1_Data[18]),
        .Reg2_Data(Reg2_Data[13]),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_Register_File_Bit_297 \Using_FPGA.Gen_RegFile[19].Register_File_Bit_I 
       (.Data_Write(Data_Write[19]),
        .EX_Result(EX_Result[19]),
        .Reg1_Data(Reg1_Data[19]),
        .Reg2_Data(Reg2_Data[12]),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_Register_File_Bit_298 \Using_FPGA.Gen_RegFile[1].Register_File_Bit_I 
       (.Data_Write(Data_Write[1]),
        .EX_Result(EX_Result[1]),
        .Reg1_Data(Reg1_Data[1]),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg_0 ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr),
        .res_Forward2(res_Forward2));
  c2c_gth_in_system_ibert_0_Register_File_Bit_299 \Using_FPGA.Gen_RegFile[20].Register_File_Bit_I 
       (.Data_Write(Data_Write[20]),
        .EX_Result(EX_Result[20]),
        .Reg1_Data(Reg1_Data[20]),
        .Reg2_Data(Reg2_Data[11]),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_Register_File_Bit_300 \Using_FPGA.Gen_RegFile[21].Register_File_Bit_I 
       (.Data_Write(Data_Write[21]),
        .EX_Result(EX_Result[21]),
        .Reg1_Data(Reg1_Data[21]),
        .Reg2_Data(Reg2_Data[10]),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_Register_File_Bit_301 \Using_FPGA.Gen_RegFile[22].Register_File_Bit_I 
       (.Data_Write(Data_Write[22]),
        .EX_Result(EX_Result[22]),
        .Reg1_Data(Reg1_Data[22]),
        .Reg2_Data(Reg2_Data[9]),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_Register_File_Bit_302 \Using_FPGA.Gen_RegFile[23].Register_File_Bit_I 
       (.Data_Write(Data_Write[23]),
        .EX_Result(EX_Result[23]),
        .Reg1_Data(Reg1_Data[23]),
        .Reg2_Data(Reg2_Data[8]),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_Register_File_Bit_303 \Using_FPGA.Gen_RegFile[24].Register_File_Bit_I 
       (.Data_Write(Data_Write[24]),
        .EX_Result(EX_Result[24]),
        .Reg1_Data(Reg1_Data[24]),
        .Reg2_Data(Reg2_Data[7]),
        .Reg_Write(Reg_Write),
        .\Using_B36_S2.The_BRAMs[12].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_Register_File_Bit_304 \Using_FPGA.Gen_RegFile[25].Register_File_Bit_I 
       (.Data_Write(Data_Write[25]),
        .EX_Result(EX_Result[25]),
        .Reg1_Data(Reg1_Data[25]),
        .Reg2_Data(Reg2_Data[6]),
        .Reg_Write(Reg_Write),
        .\Using_B36_S2.The_BRAMs[12].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_Register_File_Bit_305 \Using_FPGA.Gen_RegFile[26].Register_File_Bit_I 
       (.Data_Write(Data_Write[26]),
        .EX_Result(EX_Result[26]),
        .Reg1_Data(Reg1_Data[26]),
        .Reg2_Data(Reg2_Data[5]),
        .Reg_Write(Reg_Write),
        .\Using_B36_S2.The_BRAMs[13].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_Register_File_Bit_306 \Using_FPGA.Gen_RegFile[27].Register_File_Bit_I 
       (.Data_Write(Data_Write[27]),
        .EX_Result(EX_Result[27]),
        .Reg1_Data(Reg1_Data[27]),
        .Reg2_Data(Reg2_Data[4]),
        .Reg_Write(Reg_Write),
        .\Using_B36_S2.The_BRAMs[13].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_Register_File_Bit_307 \Using_FPGA.Gen_RegFile[28].Register_File_Bit_I 
       (.Data_Write(Data_Write[28]),
        .EX_Result(EX_Result[28]),
        .Reg1_Data(Reg1_Data[28]),
        .Reg2_Data(Reg2_Data[3]),
        .Reg_Write(Reg_Write),
        .\Using_B36_S2.The_BRAMs[14].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_Register_File_Bit_308 \Using_FPGA.Gen_RegFile[29].Register_File_Bit_I 
       (.Data_Write(Data_Write[29]),
        .EX_Result(EX_Result[29]),
        .Reg1_Data(Reg1_Data[29]),
        .Reg2_Data(Reg2_Data[2]),
        .Reg_Write(Reg_Write),
        .\Using_B36_S2.The_BRAMs[14].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_Register_File_Bit_309 \Using_FPGA.Gen_RegFile[2].Register_File_Bit_I 
       (.Data_Write(Data_Write[2]),
        .EX_Result(EX_Result[2]),
        .Reg1_Data(Reg1_Data[2]),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg_1 ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr),
        .res_Forward2(res_Forward2));
  c2c_gth_in_system_ibert_0_Register_File_Bit_310 \Using_FPGA.Gen_RegFile[30].Register_File_Bit_I 
       (.Data_Write(Data_Write[30]),
        .EX_Result(EX_Result[30]),
        .Reg1_Data(Reg1_Data[30]),
        .Reg2_Data(Reg2_Data[1]),
        .Reg_Write(Reg_Write),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_Register_File_Bit_311 \Using_FPGA.Gen_RegFile[31].Register_File_Bit_I 
       (.Data_Write(Data_Write[31]),
        .EX_Result(EX_Result[31]),
        .Reg1_Data(Reg1_Data[31]),
        .Reg2_Data(Reg2_Data[0]),
        .Reg_Write(Reg_Write),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_Register_File_Bit_312 \Using_FPGA.Gen_RegFile[3].Register_File_Bit_I 
       (.Data_Write(Data_Write[3]),
        .EX_Result(EX_Result[3]),
        .Reg1_Data(Reg1_Data[3]),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg_2 ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr),
        .res_Forward2(res_Forward2));
  c2c_gth_in_system_ibert_0_Register_File_Bit_313 \Using_FPGA.Gen_RegFile[4].Register_File_Bit_I 
       (.Data_Write(Data_Write[4]),
        .EX_Result(EX_Result[4]),
        .Reg1_Data(Reg1_Data[4]),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg_3 ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr),
        .res_Forward2(res_Forward2));
  c2c_gth_in_system_ibert_0_Register_File_Bit_314 \Using_FPGA.Gen_RegFile[5].Register_File_Bit_I 
       (.Data_Write(Data_Write[5]),
        .EX_Result(EX_Result[5]),
        .Reg1_Data(Reg1_Data[5]),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg_4 ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr),
        .res_Forward2(res_Forward2));
  c2c_gth_in_system_ibert_0_Register_File_Bit_315 \Using_FPGA.Gen_RegFile[6].Register_File_Bit_I 
       (.Data_Write(Data_Write[6]),
        .EX_Result(EX_Result[6]),
        .Reg1_Data(Reg1_Data[6]),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg_5 ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr),
        .res_Forward2(res_Forward2));
  c2c_gth_in_system_ibert_0_Register_File_Bit_316 \Using_FPGA.Gen_RegFile[7].Register_File_Bit_I 
       (.Data_Write(Data_Write[7]),
        .EX_Result(EX_Result[7]),
        .Reg1_Data(Reg1_Data[7]),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg_6 ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr),
        .res_Forward2(res_Forward2));
  c2c_gth_in_system_ibert_0_Register_File_Bit_317 \Using_FPGA.Gen_RegFile[8].Register_File_Bit_I 
       (.Data_Write(Data_Write[8]),
        .EX_Result(EX_Result[8]),
        .Reg1_Data(Reg1_Data[8]),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg_7 ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr),
        .res_Forward2(res_Forward2));
  c2c_gth_in_system_ibert_0_Register_File_Bit_318 \Using_FPGA.Gen_RegFile[9].Register_File_Bit_I 
       (.Data_Write(Data_Write[9]),
        .EX_Result(EX_Result[9]),
        .Reg1_Data(Reg1_Data[9]),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg_8 ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .reg1_Addr(reg1_Addr),
        .res_Forward2(res_Forward2));
endmodule

module c2c_gth_in_system_ibert_0_Register_File_Bit
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    Reg1_Data,
    Data_Write,
    exception_kind,
    res_Forward2,
    EX_Result,
    out,
    Reg_Write,
    \Using_FPGA.Native ,
    reg1_Addr,
    imm_Value);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input [0:0]exception_kind;
  input res_Forward2;
  input [0:0]EX_Result;
  input out;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;
  wire res_Forward2;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_380 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_381 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_i_2__18_0 (\Using_FPGA.Native ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .res_Forward2(res_Forward2));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_288
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    Reg1_Data,
    Data_Write,
    exception_kind,
    res_Forward2,
    EX_Result,
    out,
    Reg_Write,
    \Using_FPGA.Native ,
    reg1_Addr,
    imm_Value);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input [0:0]exception_kind;
  input res_Forward2;
  input [0:0]EX_Result;
  input out;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;
  wire res_Forward2;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_378 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_379 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_i_2__28_0 (\Using_FPGA.Native ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .res_Forward2(res_Forward2));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_289
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    Reg1_Data,
    Data_Write,
    exception_kind,
    res_Forward2,
    EX_Result,
    out,
    Reg_Write,
    \Using_FPGA.Native ,
    reg1_Addr,
    imm_Value);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input [0:0]exception_kind;
  input res_Forward2;
  input [0:0]EX_Result;
  input out;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;
  wire res_Forward2;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_376 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_377 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_i_2__29_0 (\Using_FPGA.Native ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .res_Forward2(res_Forward2));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_290
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    Reg1_Data,
    Data_Write,
    exception_kind,
    res_Forward2,
    EX_Result,
    out,
    Reg_Write,
    \Using_FPGA.Native ,
    reg1_Addr,
    imm_Value);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input [0:0]exception_kind;
  input res_Forward2;
  input [0:0]EX_Result;
  input out;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;
  wire res_Forward2;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_374 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_375 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_i_2__30_0 (\Using_FPGA.Native ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .res_Forward2(res_Forward2));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_291
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    Reg1_Data,
    Data_Write,
    exception_kind,
    res_Forward2,
    EX_Result,
    out,
    Reg_Write,
    \Using_FPGA.Native ,
    reg1_Addr,
    imm_Value);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input [0:0]exception_kind;
  input res_Forward2;
  input [0:0]EX_Result;
  input out;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;
  wire res_Forward2;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_372 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_373 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_i_2__31_0 (\Using_FPGA.Native ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .res_Forward2(res_Forward2));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_292
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    Reg1_Data,
    Data_Write,
    exception_kind,
    res_Forward2,
    EX_Result,
    out,
    Reg_Write,
    \Using_FPGA.Native ,
    reg1_Addr,
    imm_Value);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input [0:0]exception_kind;
  input res_Forward2;
  input [0:0]EX_Result;
  input out;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;
  wire res_Forward2;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_370 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_371 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_i_2__32_0 (\Using_FPGA.Native ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .res_Forward2(res_Forward2));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_293
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    Reg1_Data,
    Data_Write,
    exception_kind,
    res_Forward2,
    EX_Result,
    out,
    Reg_Write,
    \Using_FPGA.Native ,
    reg1_Addr,
    imm_Value);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input [0:0]exception_kind;
  input res_Forward2;
  input [0:0]EX_Result;
  input out;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;
  wire res_Forward2;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_368 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_369 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_i_2__33_0 (\Using_FPGA.Native ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .res_Forward2(res_Forward2));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_294
   (Reg1_Data,
    Data_Write,
    Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native ,
    reg1_Addr,
    imm_Value);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native ;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_366 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_367 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg2_Data(Reg2_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .imm_Value(imm_Value),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_295
   (Reg1_Data,
    Data_Write,
    Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native ,
    reg1_Addr,
    imm_Value);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native ;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_364 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_365 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg2_Data(Reg2_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .imm_Value(imm_Value),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_296
   (Reg1_Data,
    Data_Write,
    Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native ,
    reg1_Addr,
    imm_Value);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native ;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_362 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_363 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg2_Data(Reg2_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .imm_Value(imm_Value),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_297
   (Reg1_Data,
    Data_Write,
    Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native ,
    reg1_Addr,
    imm_Value);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native ;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_360 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_361 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg2_Data(Reg2_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .imm_Value(imm_Value),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_298
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    Reg1_Data,
    Data_Write,
    exception_kind,
    res_Forward2,
    EX_Result,
    out,
    Reg_Write,
    \Using_FPGA.Native ,
    reg1_Addr,
    imm_Value);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input [0:0]exception_kind;
  input res_Forward2;
  input [0:0]EX_Result;
  input out;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;
  wire res_Forward2;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_358 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_359 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_i_2__19_0 (\Using_FPGA.Native ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .res_Forward2(res_Forward2));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_299
   (Reg1_Data,
    Data_Write,
    Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native ,
    reg1_Addr,
    imm_Value);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native ;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_356 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_357 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg2_Data(Reg2_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .imm_Value(imm_Value),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_300
   (Reg1_Data,
    Data_Write,
    Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native ,
    reg1_Addr,
    imm_Value);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native ;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_354 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_355 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg2_Data(Reg2_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .imm_Value(imm_Value),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_301
   (Reg1_Data,
    Data_Write,
    Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native ,
    reg1_Addr,
    imm_Value);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native ;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_352 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_353 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg2_Data(Reg2_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .imm_Value(imm_Value),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_302
   (Reg1_Data,
    Data_Write,
    Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_FPGA.Native ,
    reg1_Addr,
    imm_Value);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native ;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_350 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_351 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg2_Data(Reg2_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .imm_Value(imm_Value),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_303
   (Reg1_Data,
    Data_Write,
    Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_B36_S2.The_BRAMs[12].RAMB36_I1 ,
    reg1_Addr,
    imm_Value);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_B36_S2.The_BRAMs[12].RAMB36_I1 ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_B36_S2.The_BRAMs[12].RAMB36_I1 ;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_348 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_B36_S2.The_BRAMs[12].RAMB36_I1 (\Using_B36_S2.The_BRAMs[12].RAMB36_I1 ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_349 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg2_Data(Reg2_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_B36_S2.The_BRAMs[12].RAMB36_I1 ),
        .imm_Value(imm_Value),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_304
   (Reg1_Data,
    Data_Write,
    Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_B36_S2.The_BRAMs[12].RAMB36_I1 ,
    reg1_Addr,
    imm_Value);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_B36_S2.The_BRAMs[12].RAMB36_I1 ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_B36_S2.The_BRAMs[12].RAMB36_I1 ;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_346 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_B36_S2.The_BRAMs[12].RAMB36_I1 (\Using_B36_S2.The_BRAMs[12].RAMB36_I1 ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_347 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg2_Data(Reg2_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_B36_S2.The_BRAMs[12].RAMB36_I1 ),
        .imm_Value(imm_Value),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_305
   (Reg1_Data,
    Data_Write,
    Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_B36_S2.The_BRAMs[13].RAMB36_I1 ,
    reg1_Addr,
    imm_Value);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_B36_S2.The_BRAMs[13].RAMB36_I1 ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_B36_S2.The_BRAMs[13].RAMB36_I1 ;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_344 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_B36_S2.The_BRAMs[13].RAMB36_I1 (\Using_B36_S2.The_BRAMs[13].RAMB36_I1 ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_345 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg2_Data(Reg2_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_B36_S2.The_BRAMs[13].RAMB36_I1 ),
        .imm_Value(imm_Value),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_306
   (Reg1_Data,
    Data_Write,
    Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_B36_S2.The_BRAMs[13].RAMB36_I1 ,
    reg1_Addr,
    imm_Value);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_B36_S2.The_BRAMs[13].RAMB36_I1 ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_B36_S2.The_BRAMs[13].RAMB36_I1 ;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_342 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_B36_S2.The_BRAMs[13].RAMB36_I1 (\Using_B36_S2.The_BRAMs[13].RAMB36_I1 ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_343 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg2_Data(Reg2_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_B36_S2.The_BRAMs[13].RAMB36_I1 ),
        .imm_Value(imm_Value),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_307
   (Reg1_Data,
    Data_Write,
    Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_B36_S2.The_BRAMs[14].RAMB36_I1 ,
    reg1_Addr,
    imm_Value);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_B36_S2.The_BRAMs[14].RAMB36_I1 ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_B36_S2.The_BRAMs[14].RAMB36_I1 ;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_340 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_B36_S2.The_BRAMs[14].RAMB36_I1 (\Using_B36_S2.The_BRAMs[14].RAMB36_I1 ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_341 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg2_Data(Reg2_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_B36_S2.The_BRAMs[14].RAMB36_I1 ),
        .imm_Value(imm_Value),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_308
   (Reg1_Data,
    Data_Write,
    Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_B36_S2.The_BRAMs[14].RAMB36_I1 ,
    reg1_Addr,
    imm_Value);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_B36_S2.The_BRAMs[14].RAMB36_I1 ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_B36_S2.The_BRAMs[14].RAMB36_I1 ;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_338 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_B36_S2.The_BRAMs[14].RAMB36_I1 (\Using_B36_S2.The_BRAMs[14].RAMB36_I1 ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_339 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg2_Data(Reg2_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_B36_S2.The_BRAMs[14].RAMB36_I1 ),
        .imm_Value(imm_Value),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_309
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    Reg1_Data,
    Data_Write,
    exception_kind,
    res_Forward2,
    EX_Result,
    out,
    Reg_Write,
    \Using_FPGA.Native ,
    reg1_Addr,
    imm_Value);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input [0:0]exception_kind;
  input res_Forward2;
  input [0:0]EX_Result;
  input out;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;
  wire res_Forward2;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_336 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_337 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_i_2__20_0 (\Using_FPGA.Native ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .res_Forward2(res_Forward2));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_310
   (Reg1_Data,
    Data_Write,
    Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    reg1_Addr,
    imm_Value);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_334 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_335 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg2_Data(Reg2_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .imm_Value(imm_Value),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_311
   (Reg1_Data,
    Data_Write,
    Reg2_Data,
    out,
    EX_Result,
    Reg_Write,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    reg1_Addr,
    imm_Value);
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  output [0:0]Reg2_Data;
  input out;
  input [0:0]EX_Result;
  input Reg_Write;
  input [4:0]\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire [0:0]Reg2_Data;
  wire Reg_Write;
  wire [4:0]\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_332 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_333 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg2_Data(Reg2_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .imm_Value(imm_Value),
        .out(out));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_312
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    Reg1_Data,
    Data_Write,
    exception_kind,
    res_Forward2,
    EX_Result,
    out,
    Reg_Write,
    \Using_FPGA.Native ,
    reg1_Addr,
    imm_Value);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input [0:0]exception_kind;
  input res_Forward2;
  input [0:0]EX_Result;
  input out;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;
  wire res_Forward2;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_330 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_331 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_i_2__21_0 (\Using_FPGA.Native ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .res_Forward2(res_Forward2));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_313
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    Reg1_Data,
    Data_Write,
    exception_kind,
    res_Forward2,
    EX_Result,
    out,
    Reg_Write,
    \Using_FPGA.Native ,
    reg1_Addr,
    imm_Value);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input [0:0]exception_kind;
  input res_Forward2;
  input [0:0]EX_Result;
  input out;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;
  wire res_Forward2;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_328 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_329 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_i_2__22_0 (\Using_FPGA.Native ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .res_Forward2(res_Forward2));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_314
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    Reg1_Data,
    Data_Write,
    exception_kind,
    res_Forward2,
    EX_Result,
    out,
    Reg_Write,
    \Using_FPGA.Native ,
    reg1_Addr,
    imm_Value);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input [0:0]exception_kind;
  input res_Forward2;
  input [0:0]EX_Result;
  input out;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;
  wire res_Forward2;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_326 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_327 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_i_2__23_0 (\Using_FPGA.Native ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .res_Forward2(res_Forward2));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_315
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    Reg1_Data,
    Data_Write,
    exception_kind,
    res_Forward2,
    EX_Result,
    out,
    Reg_Write,
    \Using_FPGA.Native ,
    reg1_Addr,
    imm_Value);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input [0:0]exception_kind;
  input res_Forward2;
  input [0:0]EX_Result;
  input out;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;
  wire res_Forward2;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_324 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_325 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_i_2__24_0 (\Using_FPGA.Native ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .res_Forward2(res_Forward2));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_316
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    Reg1_Data,
    Data_Write,
    exception_kind,
    res_Forward2,
    EX_Result,
    out,
    Reg_Write,
    \Using_FPGA.Native ,
    reg1_Addr,
    imm_Value);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input [0:0]exception_kind;
  input res_Forward2;
  input [0:0]EX_Result;
  input out;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;
  wire res_Forward2;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_322 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_323 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_i_2__25_0 (\Using_FPGA.Native ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .res_Forward2(res_Forward2));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_317
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    Reg1_Data,
    Data_Write,
    exception_kind,
    res_Forward2,
    EX_Result,
    out,
    Reg_Write,
    \Using_FPGA.Native ,
    reg1_Addr,
    imm_Value);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input [0:0]exception_kind;
  input res_Forward2;
  input [0:0]EX_Result;
  input out;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;
  wire res_Forward2;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D_320 RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_321 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_i_2__26_0 (\Using_FPGA.Native ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .res_Forward2(res_Forward2));
endmodule

(* ORIG_REF_NAME = "Register_File_Bit" *) 
module c2c_gth_in_system_ibert_0_Register_File_Bit_318
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    Reg1_Data,
    Data_Write,
    exception_kind,
    res_Forward2,
    EX_Result,
    out,
    Reg_Write,
    \Using_FPGA.Native ,
    reg1_Addr,
    imm_Value);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  output [0:0]Reg1_Data;
  output [0:0]Data_Write;
  input [0:0]exception_kind;
  input res_Forward2;
  input [0:0]EX_Result;
  input out;
  input Reg_Write;
  input [4:0]\Using_FPGA.Native ;
  input [0:4]reg1_Addr;
  input [4:0]imm_Value;

  wire [0:0]Data_Write;
  wire [0:0]EX_Result;
  wire [0:0]Reg1_Data;
  wire Reg_Write;
  wire [4:0]\Using_FPGA.Native ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire [0:0]exception_kind;
  wire [4:0]imm_Value;
  wire out;
  wire [0:4]reg1_Addr;
  wire res_Forward2;

  c2c_gth_in_system_ibert_0_MB_RAM32X1D RegFile_X1
       (.Data_Write(Data_Write),
        .EX_Result(EX_Result),
        .Reg1_Data(Reg1_Data),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .out(out),
        .reg1_Addr(reg1_Addr));
  c2c_gth_in_system_ibert_0_MB_RAM32X1D_319 RegFile_X2
       (.EX_Result(EX_Result),
        .Reg_Write(Reg_Write),
        .\Using_FPGA.Native_i_2__27_0 (\Using_FPGA.Native ),
        .\Using_FPGA.take_Intr_2nd_Phase_reg (\Using_FPGA.take_Intr_2nd_Phase_reg ),
        .exception_kind(exception_kind),
        .imm_Value(imm_Value),
        .out(out),
        .res_Forward2(res_Forward2));
endmodule

module c2c_gth_in_system_ibert_0_Result_Mux
   (EX_Result,
    Op1_Logic,
    sext8,
    Op1_Shift,
    Sext16,
    quadlet_Read,
    \Using_FPGA.Native ,
    ALU_Result,
    Shift_Logic_Res,
    extend_Data_Read,
    \Using_FPGA.Native_0 ,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    dlmb_M_ABus,
    \Using_B36_S2.The_BRAMs[14].RAMB36_I1 ,
    \Using_B36_S2.The_BRAMs[14].RAMB36_I1_0 ,
    \Using_B36_S2.The_BRAMs[13].RAMB36_I1 ,
    \Using_B36_S2.The_BRAMs[13].RAMB36_I1_0 ,
    \Using_B36_S2.The_BRAMs[12].RAMB36_I1 ,
    \Using_B36_S2.The_BRAMs[12].RAMB36_I1_0 ,
    \Using_FPGA.Native_1 ,
    Data_Read_Mask,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 ,
    \Using_FPGA.Native_9 ,
    dlmb_LMB_ReadDBus,
    \Using_FPGA.Native_10 ,
    \Using_FPGA.Native_11 ,
    \Using_FPGA.Native_12 ,
    \Using_FPGA.Native_13 ,
    \Using_FPGA.Native_14 ,
    \Using_FPGA.Native_15 ,
    \Using_FPGA.Native_16 ,
    \Using_FPGA.Native_17 ,
    \Using_FPGA.Native_18 ,
    \Using_FPGA.Native_19 ,
    \Using_FPGA.Native_20 ,
    \Using_FPGA.Native_21 ,
    \Using_FPGA.Native_22 ,
    \Using_FPGA.Native_23 ,
    O,
    \Using_FPGA.Native_24 );
  output [0:31]EX_Result;
  input Op1_Logic;
  input sext8;
  input Op1_Shift;
  input Sext16;
  input quadlet_Read;
  input [1:0]\Using_FPGA.Native ;
  input ALU_Result;
  input Shift_Logic_Res;
  input [15:0]extend_Data_Read;
  input \Using_FPGA.Native_0 ;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input [28:0]dlmb_M_ABus;
  input \Using_B36_S2.The_BRAMs[14].RAMB36_I1 ;
  input \Using_B36_S2.The_BRAMs[14].RAMB36_I1_0 ;
  input \Using_B36_S2.The_BRAMs[13].RAMB36_I1 ;
  input \Using_B36_S2.The_BRAMs[13].RAMB36_I1_0 ;
  input \Using_B36_S2.The_BRAMs[12].RAMB36_I1 ;
  input \Using_B36_S2.The_BRAMs[12].RAMB36_I1_0 ;
  input \Using_FPGA.Native_1 ;
  input Data_Read_Mask;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;
  input \Using_FPGA.Native_5 ;
  input \Using_FPGA.Native_6 ;
  input \Using_FPGA.Native_7 ;
  input \Using_FPGA.Native_8 ;
  input \Using_FPGA.Native_9 ;
  input [15:0]dlmb_LMB_ReadDBus;
  input \Using_FPGA.Native_10 ;
  input \Using_FPGA.Native_11 ;
  input \Using_FPGA.Native_12 ;
  input \Using_FPGA.Native_13 ;
  input \Using_FPGA.Native_14 ;
  input \Using_FPGA.Native_15 ;
  input \Using_FPGA.Native_16 ;
  input \Using_FPGA.Native_17 ;
  input \Using_FPGA.Native_18 ;
  input \Using_FPGA.Native_19 ;
  input \Using_FPGA.Native_20 ;
  input \Using_FPGA.Native_21 ;
  input \Using_FPGA.Native_22 ;
  input \Using_FPGA.Native_23 ;
  input O;
  input \Using_FPGA.Native_24 ;

  wire ALU_Result;
  wire Data_Read_Mask;
  wire [0:31]EX_Result;
  wire O;
  wire Op1_Logic;
  wire Op1_Shift;
  wire Sext16;
  wire Shift_Logic_Res;
  wire Upper_extend_n_0;
  wire \Using_B36_S2.The_BRAMs[12].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[12].RAMB36_I1_0 ;
  wire \Using_B36_S2.The_BRAMs[13].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[13].RAMB36_I1_0 ;
  wire \Using_B36_S2.The_BRAMs[14].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[14].RAMB36_I1_0 ;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire [1:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire \Using_FPGA.Native_11 ;
  wire \Using_FPGA.Native_12 ;
  wire \Using_FPGA.Native_13 ;
  wire \Using_FPGA.Native_14 ;
  wire \Using_FPGA.Native_15 ;
  wire \Using_FPGA.Native_16 ;
  wire \Using_FPGA.Native_17 ;
  wire \Using_FPGA.Native_18 ;
  wire \Using_FPGA.Native_19 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_20 ;
  wire \Using_FPGA.Native_21 ;
  wire \Using_FPGA.Native_22 ;
  wire \Using_FPGA.Native_23 ;
  wire \Using_FPGA.Native_24 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \Using_FPGA.Native_9 ;
  wire [15:0]dlmb_LMB_ReadDBus;
  wire [28:0]dlmb_M_ABus;
  wire [15:0]extend_Data_Read;
  wire quadlet_Read;
  wire sext8;

  c2c_gth_in_system_ibert_0_Result_Mux_Bit \Result_Mux_Bits[0].Result_Mux_Bit_I 
       (.Data_Read_Mask(Upper_extend_n_0),
        .EX_Result(EX_Result[0]),
        .O(O),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_24 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus[15]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_195 \Result_Mux_Bits[10].Result_Mux_Bit_I 
       (.Data_Read_Mask(Upper_extend_n_0),
        .EX_Result(EX_Result[10]),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_14 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus[5]),
        .dlmb_M_ABus(dlmb_M_ABus[19]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_196 \Result_Mux_Bits[11].Result_Mux_Bit_I 
       (.Data_Read_Mask(Upper_extend_n_0),
        .EX_Result(EX_Result[11]),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_13 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus[4]),
        .dlmb_M_ABus(dlmb_M_ABus[18]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_197 \Result_Mux_Bits[12].Result_Mux_Bit_I 
       (.Data_Read_Mask(Upper_extend_n_0),
        .EX_Result(EX_Result[12]),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_12 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus[3]),
        .dlmb_M_ABus(dlmb_M_ABus[17]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_198 \Result_Mux_Bits[13].Result_Mux_Bit_I 
       (.Data_Read_Mask(Upper_extend_n_0),
        .EX_Result(EX_Result[13]),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_11 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus[2]),
        .dlmb_M_ABus(dlmb_M_ABus[16]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_199 \Result_Mux_Bits[14].Result_Mux_Bit_I 
       (.Data_Read_Mask(Upper_extend_n_0),
        .EX_Result(EX_Result[14]),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_10 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus[1]),
        .dlmb_M_ABus(dlmb_M_ABus[15]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_200 \Result_Mux_Bits[15].Result_Mux_Bit_I 
       (.Data_Read_Mask(Upper_extend_n_0),
        .EX_Result(EX_Result[15]),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_9 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus[0]),
        .dlmb_M_ABus(dlmb_M_ABus[14]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_201 \Result_Mux_Bits[16].Result_Mux_Bit_I 
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result[16]),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_8 ),
        .dlmb_M_ABus(dlmb_M_ABus[13]),
        .extend_Data_Read(extend_Data_Read[15]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_202 \Result_Mux_Bits[17].Result_Mux_Bit_I 
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result[17]),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_7 ),
        .dlmb_M_ABus(dlmb_M_ABus[12]),
        .extend_Data_Read(extend_Data_Read[14]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_203 \Result_Mux_Bits[18].Result_Mux_Bit_I 
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result[18]),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_6 ),
        .dlmb_M_ABus(dlmb_M_ABus[11]),
        .extend_Data_Read(extend_Data_Read[13]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_204 \Result_Mux_Bits[19].Result_Mux_Bit_I 
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result[19]),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_5 ),
        .dlmb_M_ABus(dlmb_M_ABus[10]),
        .extend_Data_Read(extend_Data_Read[12]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_205 \Result_Mux_Bits[1].Result_Mux_Bit_I 
       (.Data_Read_Mask(Upper_extend_n_0),
        .EX_Result(EX_Result[1]),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_23 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus[14]),
        .dlmb_M_ABus(dlmb_M_ABus[28]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_206 \Result_Mux_Bits[20].Result_Mux_Bit_I 
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result[20]),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_4 ),
        .dlmb_M_ABus(dlmb_M_ABus[9]),
        .extend_Data_Read(extend_Data_Read[11]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_207 \Result_Mux_Bits[21].Result_Mux_Bit_I 
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result[21]),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_3 ),
        .dlmb_M_ABus(dlmb_M_ABus[8]),
        .extend_Data_Read(extend_Data_Read[10]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_208 \Result_Mux_Bits[22].Result_Mux_Bit_I 
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result[22]),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_2 ),
        .dlmb_M_ABus(dlmb_M_ABus[7]),
        .extend_Data_Read(extend_Data_Read[9]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_209 \Result_Mux_Bits[23].Result_Mux_Bit_I 
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result[23]),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .dlmb_M_ABus(dlmb_M_ABus[6]),
        .extend_Data_Read(extend_Data_Read[8]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_210 \Result_Mux_Bits[24].Result_Mux_Bit_I 
       (.EX_Result(EX_Result[24]),
        .\Using_B36_S2.The_BRAMs[12].RAMB36_I1 (\Using_FPGA.Native ),
        .\Using_B36_S2.The_BRAMs[12].RAMB36_I1_0 (\Using_B36_S2.The_BRAMs[12].RAMB36_I1_0 ),
        .dlmb_M_ABus(dlmb_M_ABus[5]),
        .extend_Data_Read(extend_Data_Read[7]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_211 \Result_Mux_Bits[25].Result_Mux_Bit_I 
       (.EX_Result(EX_Result[25]),
        .\Using_B36_S2.The_BRAMs[12].RAMB36_I1 (\Using_FPGA.Native ),
        .\Using_B36_S2.The_BRAMs[12].RAMB36_I1_0 (\Using_B36_S2.The_BRAMs[12].RAMB36_I1 ),
        .dlmb_M_ABus(dlmb_M_ABus[4]),
        .extend_Data_Read(extend_Data_Read[6]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_212 \Result_Mux_Bits[26].Result_Mux_Bit_I 
       (.EX_Result(EX_Result[26]),
        .\Using_B36_S2.The_BRAMs[13].RAMB36_I1 (\Using_FPGA.Native ),
        .\Using_B36_S2.The_BRAMs[13].RAMB36_I1_0 (\Using_B36_S2.The_BRAMs[13].RAMB36_I1_0 ),
        .dlmb_M_ABus(dlmb_M_ABus[3]),
        .extend_Data_Read(extend_Data_Read[5]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_213 \Result_Mux_Bits[27].Result_Mux_Bit_I 
       (.EX_Result(EX_Result[27]),
        .\Using_B36_S2.The_BRAMs[13].RAMB36_I1 (\Using_FPGA.Native ),
        .\Using_B36_S2.The_BRAMs[13].RAMB36_I1_0 (\Using_B36_S2.The_BRAMs[13].RAMB36_I1 ),
        .dlmb_M_ABus(dlmb_M_ABus[2]),
        .extend_Data_Read(extend_Data_Read[4]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_214 \Result_Mux_Bits[28].Result_Mux_Bit_I 
       (.EX_Result(EX_Result[28]),
        .\Using_B36_S2.The_BRAMs[14].RAMB36_I1 (\Using_FPGA.Native ),
        .\Using_B36_S2.The_BRAMs[14].RAMB36_I1_0 (\Using_B36_S2.The_BRAMs[14].RAMB36_I1_0 ),
        .dlmb_M_ABus(dlmb_M_ABus[1]),
        .extend_Data_Read(extend_Data_Read[3]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_215 \Result_Mux_Bits[29].Result_Mux_Bit_I 
       (.EX_Result(EX_Result[29]),
        .\Using_B36_S2.The_BRAMs[14].RAMB36_I1 (\Using_FPGA.Native ),
        .\Using_B36_S2.The_BRAMs[14].RAMB36_I1_0 (\Using_B36_S2.The_BRAMs[14].RAMB36_I1 ),
        .dlmb_M_ABus(dlmb_M_ABus[0]),
        .extend_Data_Read(extend_Data_Read[2]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_216 \Result_Mux_Bits[2].Result_Mux_Bit_I 
       (.Data_Read_Mask(Upper_extend_n_0),
        .EX_Result(EX_Result[2]),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_22 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus[13]),
        .dlmb_M_ABus(dlmb_M_ABus[27]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_217 \Result_Mux_Bits[30].Result_Mux_Bit_I 
       (.EX_Result(EX_Result[30]),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_FPGA.Native ),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .\Using_FPGA.Native (\Using_FPGA.Native_0 ),
        .extend_Data_Read(extend_Data_Read[1]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_218 \Result_Mux_Bits[31].Result_Mux_Bit_I 
       (.ALU_Result(ALU_Result),
        .EX_Result(EX_Result[31]),
        .Shift_Logic_Res(Shift_Logic_Res),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_FPGA.Native ),
        .extend_Data_Read(extend_Data_Read[0]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_219 \Result_Mux_Bits[3].Result_Mux_Bit_I 
       (.Data_Read_Mask(Upper_extend_n_0),
        .EX_Result(EX_Result[3]),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_21 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus[12]),
        .dlmb_M_ABus(dlmb_M_ABus[26]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_220 \Result_Mux_Bits[4].Result_Mux_Bit_I 
       (.Data_Read_Mask(Upper_extend_n_0),
        .EX_Result(EX_Result[4]),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_20 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus[11]),
        .dlmb_M_ABus(dlmb_M_ABus[25]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_221 \Result_Mux_Bits[5].Result_Mux_Bit_I 
       (.Data_Read_Mask(Upper_extend_n_0),
        .EX_Result(EX_Result[5]),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_19 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus[10]),
        .dlmb_M_ABus(dlmb_M_ABus[24]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_222 \Result_Mux_Bits[6].Result_Mux_Bit_I 
       (.Data_Read_Mask(Upper_extend_n_0),
        .EX_Result(EX_Result[6]),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_18 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus[9]),
        .dlmb_M_ABus(dlmb_M_ABus[23]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_223 \Result_Mux_Bits[7].Result_Mux_Bit_I 
       (.Data_Read_Mask(Upper_extend_n_0),
        .EX_Result(EX_Result[7]),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_17 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus[8]),
        .dlmb_M_ABus(dlmb_M_ABus[22]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_224 \Result_Mux_Bits[8].Result_Mux_Bit_I 
       (.Data_Read_Mask(Upper_extend_n_0),
        .EX_Result(EX_Result[8]),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_16 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus[7]),
        .dlmb_M_ABus(dlmb_M_ABus[21]));
  c2c_gth_in_system_ibert_0_Result_Mux_Bit_225 \Result_Mux_Bits[9].Result_Mux_Bit_I 
       (.Data_Read_Mask(Upper_extend_n_0),
        .EX_Result(EX_Result[9]),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_15 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus[6]),
        .dlmb_M_ABus(dlmb_M_ABus[20]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    Upper_extend
       (.I0(Op1_Logic),
        .I1(sext8),
        .I2(Op1_Shift),
        .I3(Sext16),
        .I4(quadlet_Read),
        .O(Upper_extend_n_0));
endmodule

module c2c_gth_in_system_ibert_0_Result_Mux_Bit
   (EX_Result,
    \Using_FPGA.Native ,
    O,
    \Using_FPGA.Native_0 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native ;
  input O;
  input \Using_FPGA.Native_0 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire O;
  wire [1:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_286 Data_Shift_Mux
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_287 Mul_ALU_Mux
       (.O(O),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_195
   (EX_Result,
    \Using_FPGA.Native ,
    dlmb_M_ABus,
    \Using_FPGA.Native_0 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native ;
  input [0:0]dlmb_M_ABus;
  input \Using_FPGA.Native_0 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_284 Data_Shift_Mux
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_285 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .dlmb_M_ABus(dlmb_M_ABus),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_196
   (EX_Result,
    \Using_FPGA.Native ,
    dlmb_M_ABus,
    \Using_FPGA.Native_0 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native ;
  input [0:0]dlmb_M_ABus;
  input \Using_FPGA.Native_0 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_282 Data_Shift_Mux
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_283 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .dlmb_M_ABus(dlmb_M_ABus),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_197
   (EX_Result,
    \Using_FPGA.Native ,
    dlmb_M_ABus,
    \Using_FPGA.Native_0 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native ;
  input [0:0]dlmb_M_ABus;
  input \Using_FPGA.Native_0 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_280 Data_Shift_Mux
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_281 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .dlmb_M_ABus(dlmb_M_ABus),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_198
   (EX_Result,
    \Using_FPGA.Native ,
    dlmb_M_ABus,
    \Using_FPGA.Native_0 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native ;
  input [0:0]dlmb_M_ABus;
  input \Using_FPGA.Native_0 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_278 Data_Shift_Mux
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_279 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .dlmb_M_ABus(dlmb_M_ABus),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_199
   (EX_Result,
    \Using_FPGA.Native ,
    dlmb_M_ABus,
    \Using_FPGA.Native_0 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native ;
  input [0:0]dlmb_M_ABus;
  input \Using_FPGA.Native_0 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_276 Data_Shift_Mux
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_277 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .dlmb_M_ABus(dlmb_M_ABus),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_200
   (EX_Result,
    \Using_FPGA.Native ,
    dlmb_M_ABus,
    \Using_FPGA.Native_0 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native ;
  input [0:0]dlmb_M_ABus;
  input \Using_FPGA.Native_0 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_274 Data_Shift_Mux
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_275 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .dlmb_M_ABus(dlmb_M_ABus),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_201
   (EX_Result,
    \Using_FPGA.Native ,
    dlmb_M_ABus,
    \Using_FPGA.Native_0 ,
    Data_Read_Mask,
    extend_Data_Read);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native ;
  input [0:0]dlmb_M_ABus;
  input \Using_FPGA.Native_0 ;
  input Data_Read_Mask;
  input [0:0]extend_Data_Read;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_272 Data_Shift_Mux
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .extend_Data_Read(extend_Data_Read),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_273 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .dlmb_M_ABus(dlmb_M_ABus),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_202
   (EX_Result,
    \Using_FPGA.Native ,
    dlmb_M_ABus,
    \Using_FPGA.Native_0 ,
    Data_Read_Mask,
    extend_Data_Read);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native ;
  input [0:0]dlmb_M_ABus;
  input \Using_FPGA.Native_0 ;
  input Data_Read_Mask;
  input [0:0]extend_Data_Read;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_270 Data_Shift_Mux
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .extend_Data_Read(extend_Data_Read),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_271 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .dlmb_M_ABus(dlmb_M_ABus),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_203
   (EX_Result,
    \Using_FPGA.Native ,
    dlmb_M_ABus,
    \Using_FPGA.Native_0 ,
    Data_Read_Mask,
    extend_Data_Read);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native ;
  input [0:0]dlmb_M_ABus;
  input \Using_FPGA.Native_0 ;
  input Data_Read_Mask;
  input [0:0]extend_Data_Read;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_268 Data_Shift_Mux
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .extend_Data_Read(extend_Data_Read),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_269 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .dlmb_M_ABus(dlmb_M_ABus),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_204
   (EX_Result,
    \Using_FPGA.Native ,
    dlmb_M_ABus,
    \Using_FPGA.Native_0 ,
    Data_Read_Mask,
    extend_Data_Read);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native ;
  input [0:0]dlmb_M_ABus;
  input \Using_FPGA.Native_0 ;
  input Data_Read_Mask;
  input [0:0]extend_Data_Read;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_266 Data_Shift_Mux
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .extend_Data_Read(extend_Data_Read),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_267 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .dlmb_M_ABus(dlmb_M_ABus),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_205
   (EX_Result,
    \Using_FPGA.Native ,
    dlmb_M_ABus,
    \Using_FPGA.Native_0 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native ;
  input [0:0]dlmb_M_ABus;
  input \Using_FPGA.Native_0 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_264 Data_Shift_Mux
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_265 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .dlmb_M_ABus(dlmb_M_ABus),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_206
   (EX_Result,
    \Using_FPGA.Native ,
    dlmb_M_ABus,
    \Using_FPGA.Native_0 ,
    Data_Read_Mask,
    extend_Data_Read);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native ;
  input [0:0]dlmb_M_ABus;
  input \Using_FPGA.Native_0 ;
  input Data_Read_Mask;
  input [0:0]extend_Data_Read;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_262 Data_Shift_Mux
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .extend_Data_Read(extend_Data_Read),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_263 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .dlmb_M_ABus(dlmb_M_ABus),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_207
   (EX_Result,
    \Using_FPGA.Native ,
    dlmb_M_ABus,
    \Using_FPGA.Native_0 ,
    Data_Read_Mask,
    extend_Data_Read);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native ;
  input [0:0]dlmb_M_ABus;
  input \Using_FPGA.Native_0 ;
  input Data_Read_Mask;
  input [0:0]extend_Data_Read;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_260 Data_Shift_Mux
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .extend_Data_Read(extend_Data_Read),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_261 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .dlmb_M_ABus(dlmb_M_ABus),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_208
   (EX_Result,
    \Using_FPGA.Native ,
    dlmb_M_ABus,
    \Using_FPGA.Native_0 ,
    Data_Read_Mask,
    extend_Data_Read);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native ;
  input [0:0]dlmb_M_ABus;
  input \Using_FPGA.Native_0 ;
  input Data_Read_Mask;
  input [0:0]extend_Data_Read;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_258 Data_Shift_Mux
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .extend_Data_Read(extend_Data_Read),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_259 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .dlmb_M_ABus(dlmb_M_ABus),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_209
   (EX_Result,
    \Using_FPGA.Native ,
    dlmb_M_ABus,
    \Using_FPGA.Native_0 ,
    Data_Read_Mask,
    extend_Data_Read);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native ;
  input [0:0]dlmb_M_ABus;
  input \Using_FPGA.Native_0 ;
  input Data_Read_Mask;
  input [0:0]extend_Data_Read;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]dlmb_M_ABus;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_256 Data_Shift_Mux
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .extend_Data_Read(extend_Data_Read),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_257 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .dlmb_M_ABus(dlmb_M_ABus),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_210
   (EX_Result,
    \Using_B36_S2.The_BRAMs[12].RAMB36_I1 ,
    dlmb_M_ABus,
    \Using_B36_S2.The_BRAMs[12].RAMB36_I1_0 ,
    extend_Data_Read);
  output [0:0]EX_Result;
  input [1:0]\Using_B36_S2.The_BRAMs[12].RAMB36_I1 ;
  input [0:0]dlmb_M_ABus;
  input \Using_B36_S2.The_BRAMs[12].RAMB36_I1_0 ;
  input [0:0]extend_Data_Read;

  wire [0:0]EX_Result;
  wire [1:0]\Using_B36_S2.The_BRAMs[12].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[12].RAMB36_I1_0 ;
  wire [0:0]dlmb_M_ABus;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_254 Data_Shift_Mux
       (.EX_Result(EX_Result),
        .\Using_B36_S2.The_BRAMs[12].RAMB36_I1 (\Using_B36_S2.The_BRAMs[12].RAMB36_I1 ),
        .\Using_B36_S2.The_BRAMs[12].RAMB36_I1_0 (\Using_B36_S2.The_BRAMs[12].RAMB36_I1_0 ),
        .extend_Data_Read(extend_Data_Read),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_255 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_B36_S2.The_BRAMs[12].RAMB36_I1 [0]),
        .dlmb_M_ABus(dlmb_M_ABus),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_211
   (EX_Result,
    \Using_B36_S2.The_BRAMs[12].RAMB36_I1 ,
    dlmb_M_ABus,
    \Using_B36_S2.The_BRAMs[12].RAMB36_I1_0 ,
    extend_Data_Read);
  output [0:0]EX_Result;
  input [1:0]\Using_B36_S2.The_BRAMs[12].RAMB36_I1 ;
  input [0:0]dlmb_M_ABus;
  input \Using_B36_S2.The_BRAMs[12].RAMB36_I1_0 ;
  input [0:0]extend_Data_Read;

  wire [0:0]EX_Result;
  wire [1:0]\Using_B36_S2.The_BRAMs[12].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[12].RAMB36_I1_0 ;
  wire [0:0]dlmb_M_ABus;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_252 Data_Shift_Mux
       (.EX_Result(EX_Result),
        .\Using_B36_S2.The_BRAMs[12].RAMB36_I1 (\Using_B36_S2.The_BRAMs[12].RAMB36_I1 ),
        .\Using_B36_S2.The_BRAMs[12].RAMB36_I1_0 (\Using_B36_S2.The_BRAMs[12].RAMB36_I1_0 ),
        .extend_Data_Read(extend_Data_Read),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_253 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_B36_S2.The_BRAMs[12].RAMB36_I1 [0]),
        .dlmb_M_ABus(dlmb_M_ABus),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_212
   (EX_Result,
    \Using_B36_S2.The_BRAMs[13].RAMB36_I1 ,
    dlmb_M_ABus,
    \Using_B36_S2.The_BRAMs[13].RAMB36_I1_0 ,
    extend_Data_Read);
  output [0:0]EX_Result;
  input [1:0]\Using_B36_S2.The_BRAMs[13].RAMB36_I1 ;
  input [0:0]dlmb_M_ABus;
  input \Using_B36_S2.The_BRAMs[13].RAMB36_I1_0 ;
  input [0:0]extend_Data_Read;

  wire [0:0]EX_Result;
  wire [1:0]\Using_B36_S2.The_BRAMs[13].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[13].RAMB36_I1_0 ;
  wire [0:0]dlmb_M_ABus;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_250 Data_Shift_Mux
       (.EX_Result(EX_Result),
        .\Using_B36_S2.The_BRAMs[13].RAMB36_I1 (\Using_B36_S2.The_BRAMs[13].RAMB36_I1 ),
        .\Using_B36_S2.The_BRAMs[13].RAMB36_I1_0 (\Using_B36_S2.The_BRAMs[13].RAMB36_I1_0 ),
        .extend_Data_Read(extend_Data_Read),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_251 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_B36_S2.The_BRAMs[13].RAMB36_I1 [0]),
        .dlmb_M_ABus(dlmb_M_ABus),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_213
   (EX_Result,
    \Using_B36_S2.The_BRAMs[13].RAMB36_I1 ,
    dlmb_M_ABus,
    \Using_B36_S2.The_BRAMs[13].RAMB36_I1_0 ,
    extend_Data_Read);
  output [0:0]EX_Result;
  input [1:0]\Using_B36_S2.The_BRAMs[13].RAMB36_I1 ;
  input [0:0]dlmb_M_ABus;
  input \Using_B36_S2.The_BRAMs[13].RAMB36_I1_0 ;
  input [0:0]extend_Data_Read;

  wire [0:0]EX_Result;
  wire [1:0]\Using_B36_S2.The_BRAMs[13].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[13].RAMB36_I1_0 ;
  wire [0:0]dlmb_M_ABus;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_248 Data_Shift_Mux
       (.EX_Result(EX_Result),
        .\Using_B36_S2.The_BRAMs[13].RAMB36_I1 (\Using_B36_S2.The_BRAMs[13].RAMB36_I1 ),
        .\Using_B36_S2.The_BRAMs[13].RAMB36_I1_0 (\Using_B36_S2.The_BRAMs[13].RAMB36_I1_0 ),
        .extend_Data_Read(extend_Data_Read),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_249 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_B36_S2.The_BRAMs[13].RAMB36_I1 [0]),
        .dlmb_M_ABus(dlmb_M_ABus),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_214
   (EX_Result,
    \Using_B36_S2.The_BRAMs[14].RAMB36_I1 ,
    dlmb_M_ABus,
    \Using_B36_S2.The_BRAMs[14].RAMB36_I1_0 ,
    extend_Data_Read);
  output [0:0]EX_Result;
  input [1:0]\Using_B36_S2.The_BRAMs[14].RAMB36_I1 ;
  input [0:0]dlmb_M_ABus;
  input \Using_B36_S2.The_BRAMs[14].RAMB36_I1_0 ;
  input [0:0]extend_Data_Read;

  wire [0:0]EX_Result;
  wire [1:0]\Using_B36_S2.The_BRAMs[14].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[14].RAMB36_I1_0 ;
  wire [0:0]dlmb_M_ABus;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_246 Data_Shift_Mux
       (.EX_Result(EX_Result),
        .\Using_B36_S2.The_BRAMs[14].RAMB36_I1 (\Using_B36_S2.The_BRAMs[14].RAMB36_I1 ),
        .\Using_B36_S2.The_BRAMs[14].RAMB36_I1_0 (\Using_B36_S2.The_BRAMs[14].RAMB36_I1_0 ),
        .extend_Data_Read(extend_Data_Read),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_247 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_B36_S2.The_BRAMs[14].RAMB36_I1 [0]),
        .dlmb_M_ABus(dlmb_M_ABus),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_215
   (EX_Result,
    \Using_B36_S2.The_BRAMs[14].RAMB36_I1 ,
    dlmb_M_ABus,
    \Using_B36_S2.The_BRAMs[14].RAMB36_I1_0 ,
    extend_Data_Read);
  output [0:0]EX_Result;
  input [1:0]\Using_B36_S2.The_BRAMs[14].RAMB36_I1 ;
  input [0:0]dlmb_M_ABus;
  input \Using_B36_S2.The_BRAMs[14].RAMB36_I1_0 ;
  input [0:0]extend_Data_Read;

  wire [0:0]EX_Result;
  wire [1:0]\Using_B36_S2.The_BRAMs[14].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[14].RAMB36_I1_0 ;
  wire [0:0]dlmb_M_ABus;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_244 Data_Shift_Mux
       (.EX_Result(EX_Result),
        .\Using_B36_S2.The_BRAMs[14].RAMB36_I1 (\Using_B36_S2.The_BRAMs[14].RAMB36_I1 ),
        .\Using_B36_S2.The_BRAMs[14].RAMB36_I1_0 (\Using_B36_S2.The_BRAMs[14].RAMB36_I1_0 ),
        .extend_Data_Read(extend_Data_Read),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_245 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_B36_S2.The_BRAMs[14].RAMB36_I1 [0]),
        .dlmb_M_ABus(dlmb_M_ABus),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_216
   (EX_Result,
    \Using_FPGA.Native ,
    dlmb_M_ABus,
    \Using_FPGA.Native_0 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native ;
  input [0:0]dlmb_M_ABus;
  input \Using_FPGA.Native_0 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_242 Data_Shift_Mux
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_243 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .dlmb_M_ABus(dlmb_M_ABus),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_217
   (EX_Result,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    \Using_FPGA.Native ,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ,
    extend_Data_Read);
  output [0:0]EX_Result;
  input [1:0]\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input \Using_FPGA.Native ;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ;
  input [0:0]extend_Data_Read;

  wire [0:0]EX_Result;
  wire [1:0]\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ;
  wire \Using_FPGA.Native ;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_240 Data_Shift_Mux
       (.EX_Result(EX_Result),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ),
        .extend_Data_Read(extend_Data_Read),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_241 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 [0]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_218
   (EX_Result,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    ALU_Result,
    Shift_Logic_Res,
    extend_Data_Read);
  output [0:0]EX_Result;
  input [1:0]\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input ALU_Result;
  input Shift_Logic_Res;
  input [0:0]extend_Data_Read;

  wire ALU_Result;
  wire [0:0]EX_Result;
  wire Shift_Logic_Res;
  wire [1:0]\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_238 Data_Shift_Mux
       (.EX_Result(EX_Result),
        .Shift_Logic_Res(Shift_Logic_Res),
        .\Using_B36_S2.The_BRAMs[15].RAMB36_I1 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ),
        .extend_Data_Read(extend_Data_Read),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_239 Mul_ALU_Mux
       (.ALU_Result(ALU_Result),
        .\Using_FPGA.Native_0 (\Using_B36_S2.The_BRAMs[15].RAMB36_I1 [0]),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_219
   (EX_Result,
    \Using_FPGA.Native ,
    dlmb_M_ABus,
    \Using_FPGA.Native_0 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native ;
  input [0:0]dlmb_M_ABus;
  input \Using_FPGA.Native_0 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_236 Data_Shift_Mux
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_237 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .dlmb_M_ABus(dlmb_M_ABus),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_220
   (EX_Result,
    \Using_FPGA.Native ,
    dlmb_M_ABus,
    \Using_FPGA.Native_0 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native ;
  input [0:0]dlmb_M_ABus;
  input \Using_FPGA.Native_0 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_234 Data_Shift_Mux
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_235 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .dlmb_M_ABus(dlmb_M_ABus),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_221
   (EX_Result,
    \Using_FPGA.Native ,
    dlmb_M_ABus,
    \Using_FPGA.Native_0 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native ;
  input [0:0]dlmb_M_ABus;
  input \Using_FPGA.Native_0 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_232 Data_Shift_Mux
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_233 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .dlmb_M_ABus(dlmb_M_ABus),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_222
   (EX_Result,
    \Using_FPGA.Native ,
    dlmb_M_ABus,
    \Using_FPGA.Native_0 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native ;
  input [0:0]dlmb_M_ABus;
  input \Using_FPGA.Native_0 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_230 Data_Shift_Mux
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_231 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .dlmb_M_ABus(dlmb_M_ABus),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_223
   (EX_Result,
    \Using_FPGA.Native ,
    dlmb_M_ABus,
    \Using_FPGA.Native_0 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native ;
  input [0:0]dlmb_M_ABus;
  input \Using_FPGA.Native_0 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_228 Data_Shift_Mux
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_229 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .dlmb_M_ABus(dlmb_M_ABus),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_224
   (EX_Result,
    \Using_FPGA.Native ,
    dlmb_M_ABus,
    \Using_FPGA.Native_0 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native ;
  input [0:0]dlmb_M_ABus;
  input \Using_FPGA.Native_0 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_226 Data_Shift_Mux
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23_227 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .dlmb_M_ABus(dlmb_M_ABus),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

(* ORIG_REF_NAME = "Result_Mux_Bit" *) 
module c2c_gth_in_system_ibert_0_Result_Mux_Bit_225
   (EX_Result,
    \Using_FPGA.Native ,
    dlmb_M_ABus,
    \Using_FPGA.Native_0 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native ;
  input [0:0]dlmb_M_ABus;
  input \Using_FPGA.Native_0 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire [0:0]dlmb_M_ABus;
  wire mul_ALU_Res;

  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0 Data_Shift_Mux
       (.Data_Read_Mask(Data_Read_Mask),
        .EX_Result(EX_Result),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .dlmb_LMB_ReadDBus(dlmb_LMB_ReadDBus),
        .mul_ALU_Res(mul_ALU_Res));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized23 Mul_ALU_Mux
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .dlmb_M_ABus(dlmb_M_ABus),
        .mul_ALU_Res(mul_ALU_Res));
endmodule

module c2c_gth_in_system_ibert_0_Shift_Logic_Bit
   (Select_Logic_reg,
    op2_C,
    \Using_FPGA.Native ,
    Q,
    \Using_FPGA.Native_0 ,
    Sext,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input [0:0]op2_C;
  input \Using_FPGA.Native ;
  input [1:0]Q;
  input \Using_FPGA.Native_0 ;
  input Sext;
  input Shift_Oper;
  input Select_Logic;

  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_192 Logic_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .logic_Res_i(logic_Res_i),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_193 Shift_LUT
       (.Sext(Sext),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_194 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_100
   (Select_Logic_reg,
    op2_C,
    \Using_FPGA.Native ,
    Q,
    \Using_FPGA.Native_0 ,
    Sext,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input [0:0]op2_C;
  input \Using_FPGA.Native ;
  input [1:0]Q;
  input \Using_FPGA.Native_0 ;
  input Sext;
  input Shift_Oper;
  input Select_Logic;

  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_102 Logic_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .logic_Res_i(logic_Res_i),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_103 Shift_LUT
       (.Sext(Sext),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_104 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_101
   (Select_Logic_reg,
    op2_C,
    \Using_FPGA.Native ,
    Q,
    \Using_FPGA.Native_0 ,
    Sext,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input [0:0]op2_C;
  input \Using_FPGA.Native ;
  input [1:0]Q;
  input \Using_FPGA.Native_0 ;
  input Sext;
  input Shift_Oper;
  input Select_Logic;

  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19 Logic_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .logic_Res_i(logic_Res_i),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21 Shift_LUT
       (.Sext(Sext),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_71
   (Select_Logic_reg,
    op2_C,
    \Using_FPGA.Native ,
    Q,
    \Using_FPGA.Native_0 ,
    Sext,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input [0:0]op2_C;
  input \Using_FPGA.Native ;
  input [1:0]Q;
  input \Using_FPGA.Native_0 ;
  input Sext;
  input Shift_Oper;
  input Select_Logic;

  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_189 Logic_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .logic_Res_i(logic_Res_i),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_190 Shift_LUT
       (.Sext(Sext),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_191 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_72
   (Select_Logic_reg,
    op2_C,
    \Using_FPGA.Native ,
    Q,
    \Using_FPGA.Native_0 ,
    Sext,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input [0:0]op2_C;
  input \Using_FPGA.Native ;
  input [1:0]Q;
  input \Using_FPGA.Native_0 ;
  input Sext;
  input Shift_Oper;
  input Select_Logic;

  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_186 Logic_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .logic_Res_i(logic_Res_i),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_187 Shift_LUT
       (.Sext(Sext),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_188 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_73
   (Select_Logic_reg,
    op2_C,
    \Using_FPGA.Native ,
    Q,
    \Using_FPGA.Native_0 ,
    Sext,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input [0:0]op2_C;
  input \Using_FPGA.Native ;
  input [1:0]Q;
  input \Using_FPGA.Native_0 ;
  input Sext;
  input Shift_Oper;
  input Select_Logic;

  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_183 Logic_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .logic_Res_i(logic_Res_i),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_184 Shift_LUT
       (.Sext(Sext),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_185 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_74
   (Select_Logic_reg,
    op2_C,
    \Using_FPGA.Native ,
    Q,
    \Using_FPGA.Native_0 ,
    Sext,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input [0:0]op2_C;
  input \Using_FPGA.Native ;
  input [1:0]Q;
  input \Using_FPGA.Native_0 ;
  input Sext;
  input Shift_Oper;
  input Select_Logic;

  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_180 Logic_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .logic_Res_i(logic_Res_i),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_181 Shift_LUT
       (.Sext(Sext),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_182 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_75
   (Select_Logic_reg,
    op2_C,
    \Using_FPGA.Native ,
    Q,
    \Using_FPGA.Native_0 ,
    Sext,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input [0:0]op2_C;
  input \Using_FPGA.Native ;
  input [1:0]Q;
  input \Using_FPGA.Native_0 ;
  input Sext;
  input Shift_Oper;
  input Select_Logic;

  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_177 Logic_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .logic_Res_i(logic_Res_i),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_178 Shift_LUT
       (.Sext(Sext),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_179 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_76
   (Select_Logic_reg,
    op2_C,
    \Using_FPGA.Native ,
    Q,
    \Using_FPGA.Native_0 ,
    Sext,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input [0:0]op2_C;
  input \Using_FPGA.Native ;
  input [1:0]Q;
  input \Using_FPGA.Native_0 ;
  input Sext;
  input Shift_Oper;
  input Select_Logic;

  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_174 Logic_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .logic_Res_i(logic_Res_i),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_175 Shift_LUT
       (.Sext(Sext),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_176 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_77
   (Select_Logic_reg,
    op2_C,
    Op1_Shift,
    Q,
    \Using_FPGA.Native ,
    Sext,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input [0:0]op2_C;
  input Op1_Shift;
  input [1:0]Q;
  input \Using_FPGA.Native ;
  input Sext;
  input Shift_Oper;
  input Select_Logic;

  wire Op1_Shift;
  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire logic_Res_i;
  wire [0:0]op2_C;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_171 Logic_LUT
       (.Op1_Shift(Op1_Shift),
        .Q(Q),
        .logic_Res_i(logic_Res_i),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_172 Shift_LUT
       (.Op1_Shift(Op1_Shift),
        .Sext(Sext),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_173 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_78
   (Select_Logic_reg,
    op2_C,
    \Using_FPGA.Native ,
    Q,
    Op1_Shift,
    Sext,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input [0:0]op2_C;
  input \Using_FPGA.Native ;
  input [1:0]Q;
  input Op1_Shift;
  input Sext;
  input Shift_Oper;
  input Select_Logic;

  wire Op1_Shift;
  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire logic_Res_i;
  wire [0:0]op2_C;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_168 Logic_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .logic_Res_i(logic_Res_i),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_169 Shift_LUT
       (.Op1_Shift(Op1_Shift),
        .Sext(Sext),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_170 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_79
   (Select_Logic_reg,
    op2_C,
    \Using_FPGA.Native ,
    Q,
    \Using_FPGA.Native_0 ,
    Sext,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input [0:0]op2_C;
  input \Using_FPGA.Native ;
  input [1:0]Q;
  input \Using_FPGA.Native_0 ;
  input Sext;
  input Shift_Oper;
  input Select_Logic;

  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_165 Logic_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .logic_Res_i(logic_Res_i),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_166 Shift_LUT
       (.Sext(Sext),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_167 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_80
   (Select_Logic_reg,
    op2_C,
    \Using_FPGA.Native ,
    Q,
    \Using_FPGA.Native_0 ,
    Sext,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input [0:0]op2_C;
  input \Using_FPGA.Native ;
  input [1:0]Q;
  input \Using_FPGA.Native_0 ;
  input Sext;
  input Shift_Oper;
  input Select_Logic;

  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_162 Logic_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .logic_Res_i(logic_Res_i),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_163 Shift_LUT
       (.Sext(Sext),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_164 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_81
   (Select_Logic_reg,
    op2_C,
    \Using_FPGA.Native ,
    Q,
    \Using_FPGA.Native_0 ,
    Sext,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input [0:0]op2_C;
  input \Using_FPGA.Native ;
  input [1:0]Q;
  input \Using_FPGA.Native_0 ;
  input Sext;
  input Shift_Oper;
  input Select_Logic;

  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_159 Logic_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .logic_Res_i(logic_Res_i),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_160 Shift_LUT
       (.Sext(Sext),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_161 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_82
   (Select_Logic_reg,
    op2_C,
    \Using_FPGA.Native ,
    Q,
    \Using_FPGA.Native_0 ,
    Sext,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input [0:0]op2_C;
  input \Using_FPGA.Native ;
  input [1:0]Q;
  input \Using_FPGA.Native_0 ;
  input Sext;
  input Shift_Oper;
  input Select_Logic;

  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_156 Logic_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .logic_Res_i(logic_Res_i),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_157 Shift_LUT
       (.Sext(Sext),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_158 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_83
   (Select_Logic_reg,
    op2_C,
    \Using_FPGA.Native ,
    Q,
    \Using_FPGA.Native_0 ,
    Sext,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input [0:0]op2_C;
  input \Using_FPGA.Native ;
  input [1:0]Q;
  input \Using_FPGA.Native_0 ;
  input Sext;
  input Shift_Oper;
  input Select_Logic;

  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_153 Logic_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .logic_Res_i(logic_Res_i),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_154 Shift_LUT
       (.Sext(Sext),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_155 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_84
   (Select_Logic_reg,
    op2_C,
    \Using_FPGA.Native ,
    Q,
    \Using_FPGA.Native_0 ,
    Sext,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input [0:0]op2_C;
  input \Using_FPGA.Native ;
  input [1:0]Q;
  input \Using_FPGA.Native_0 ;
  input Sext;
  input Shift_Oper;
  input Select_Logic;

  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_150 Logic_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .logic_Res_i(logic_Res_i),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_151 Shift_LUT
       (.Sext(Sext),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_152 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_85
   (Select_Logic_reg,
    op2_C,
    \Using_FPGA.Native ,
    Q,
    \Using_FPGA.Native_0 ,
    Sext,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input [0:0]op2_C;
  input \Using_FPGA.Native ;
  input [1:0]Q;
  input \Using_FPGA.Native_0 ;
  input Sext;
  input Shift_Oper;
  input Select_Logic;

  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_147 Logic_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .logic_Res_i(logic_Res_i),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_148 Shift_LUT
       (.Sext(Sext),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_149 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_86
   (Select_Logic_reg,
    op2_C,
    \Using_FPGA.Native ,
    Q,
    \Using_FPGA.Native_0 ,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input [0:0]op2_C;
  input \Using_FPGA.Native ;
  input [1:0]Q;
  input \Using_FPGA.Native_0 ;
  input Shift_Oper;
  input Select_Logic;

  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_144 Logic_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .logic_Res_i(logic_Res_i),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_145 Shift_LUT
       (.Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_146 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_87
   (Select_Logic_reg,
    op2_C,
    \Using_FPGA.Native ,
    Q,
    \Using_FPGA.Native_0 ,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input [0:0]op2_C;
  input \Using_FPGA.Native ;
  input [1:0]Q;
  input \Using_FPGA.Native_0 ;
  input Shift_Oper;
  input Select_Logic;

  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_141 Logic_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .logic_Res_i(logic_Res_i),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_142 Shift_LUT
       (.Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_143 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_88
   (Select_Logic_reg,
    op2_C,
    \Using_FPGA.Native ,
    Q,
    \Using_FPGA.Native_0 ,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input [0:0]op2_C;
  input \Using_FPGA.Native ;
  input [1:0]Q;
  input \Using_FPGA.Native_0 ;
  input Shift_Oper;
  input Select_Logic;

  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_138 Logic_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .logic_Res_i(logic_Res_i),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_139 Shift_LUT
       (.Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_140 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_89
   (Select_Logic_reg,
    op2_C,
    \Using_FPGA.Native ,
    Q,
    \Using_FPGA.Native_0 ,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input [0:0]op2_C;
  input \Using_FPGA.Native ;
  input [1:0]Q;
  input \Using_FPGA.Native_0 ;
  input Shift_Oper;
  input Select_Logic;

  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_135 Logic_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .logic_Res_i(logic_Res_i),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_136 Shift_LUT
       (.Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_137 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_90
   (Select_Logic_reg,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    Q,
    \Using_FPGA.Native_1 ,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;
  input \Using_FPGA.Native_1 ;
  input Shift_Oper;
  input Select_Logic;

  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire logic_Res_i;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_132 Logic_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .logic_Res_i(logic_Res_i));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_133 Shift_LUT
       (.Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_134 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_91
   (Select_Logic_reg,
    Op2,
    Shifted,
    Q,
    \Using_FPGA.Native ,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input Op2;
  input Shifted;
  input [1:0]Q;
  input \Using_FPGA.Native ;
  input Shift_Oper;
  input Select_Logic;

  wire Op2;
  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Shift_Oper;
  wire Shifted;
  wire \Using_FPGA.Native ;
  wire logic_Res_i;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_129 Logic_LUT
       (.Op2(Op2),
        .Q(Q),
        .Shifted(Shifted),
        .logic_Res_i(logic_Res_i));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_130 Shift_LUT
       (.Shift_Oper(Shift_Oper),
        .Shifted(Shifted),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_131 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_92
   (Select_Logic_reg,
    op2_C,
    \Using_FPGA.Native ,
    Q,
    \Using_FPGA.Native_0 ,
    Sext,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input [0:0]op2_C;
  input \Using_FPGA.Native ;
  input [1:0]Q;
  input \Using_FPGA.Native_0 ;
  input Sext;
  input Shift_Oper;
  input Select_Logic;

  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_126 Logic_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .logic_Res_i(logic_Res_i),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_127 Shift_LUT
       (.Sext(Sext),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_128 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_93
   (Select_Logic_reg,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    Q,
    Shifted,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;
  input Shifted;
  input Shift_Oper;
  input Select_Logic;

  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Shift_Oper;
  wire Shifted;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_123 Logic_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .logic_Res_i(logic_Res_i));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_124 Shift_LUT
       (.Shift_Oper(Shift_Oper),
        .Shifted(Shifted),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_125 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_94
   (Shift_Logic_Res,
    EX_Op2,
    Op1_Logic,
    Q,
    \Using_FPGA.Native ,
    Shift_Oper,
    Select_Logic);
  output Shift_Logic_Res;
  input EX_Op2;
  input Op1_Logic;
  input [1:0]Q;
  input \Using_FPGA.Native ;
  input Shift_Oper;
  input Select_Logic;

  wire EX_Op2;
  wire Op1_Logic;
  wire [1:0]Q;
  wire Select_Logic;
  wire Shift_Logic_Res;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire logic_Res_i;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_120 Logic_LUT
       (.EX_Op2(EX_Op2),
        .Op1_Logic(Op1_Logic),
        .Q(Q),
        .logic_Res_i(logic_Res_i));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_121 Shift_LUT
       (.Op1_Logic(Op1_Logic),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_122 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Shift_Logic_Res(Shift_Logic_Res),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_95
   (Select_Logic_reg,
    op2_C,
    \Using_FPGA.Native ,
    Q,
    \Using_FPGA.Native_0 ,
    Sext,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input [0:0]op2_C;
  input \Using_FPGA.Native ;
  input [1:0]Q;
  input \Using_FPGA.Native_0 ;
  input Sext;
  input Shift_Oper;
  input Select_Logic;

  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_117 Logic_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .logic_Res_i(logic_Res_i),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_118 Shift_LUT
       (.Sext(Sext),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_119 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_96
   (Select_Logic_reg,
    op2_C,
    \Using_FPGA.Native ,
    Q,
    \Using_FPGA.Native_0 ,
    Sext,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input [0:0]op2_C;
  input \Using_FPGA.Native ;
  input [1:0]Q;
  input \Using_FPGA.Native_0 ;
  input Sext;
  input Shift_Oper;
  input Select_Logic;

  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_114 Logic_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .logic_Res_i(logic_Res_i),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_115 Shift_LUT
       (.Sext(Sext),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_116 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_97
   (Select_Logic_reg,
    op2_C,
    \Using_FPGA.Native ,
    Q,
    \Using_FPGA.Native_0 ,
    Sext,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input [0:0]op2_C;
  input \Using_FPGA.Native ;
  input [1:0]Q;
  input \Using_FPGA.Native_0 ;
  input Sext;
  input Shift_Oper;
  input Select_Logic;

  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_111 Logic_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .logic_Res_i(logic_Res_i),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_112 Shift_LUT
       (.Sext(Sext),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_113 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_98
   (Select_Logic_reg,
    op2_C,
    \Using_FPGA.Native ,
    Q,
    \Using_FPGA.Native_0 ,
    Sext,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input [0:0]op2_C;
  input \Using_FPGA.Native ;
  input [1:0]Q;
  input \Using_FPGA.Native_0 ;
  input Sext;
  input Shift_Oper;
  input Select_Logic;

  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_108 Logic_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .logic_Res_i(logic_Res_i),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_109 Shift_LUT
       (.Sext(Sext),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_110 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Bit" *) 
module c2c_gth_in_system_ibert_0_Shift_Logic_Bit_99
   (Select_Logic_reg,
    op2_C,
    \Using_FPGA.Native ,
    Q,
    \Using_FPGA.Native_0 ,
    Sext,
    Shift_Oper,
    Select_Logic);
  output Select_Logic_reg;
  input [0:0]op2_C;
  input \Using_FPGA.Native ;
  input [1:0]Q;
  input \Using_FPGA.Native_0 ;
  input Sext;
  input Shift_Oper;
  input Select_Logic;

  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Sext;
  wire Shift_Oper;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire logic_Res_i;
  wire [0:0]op2_C;
  wire shift_Res;

  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized19_105 Logic_LUT
       (.Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .logic_Res_i(logic_Res_i),
        .op2_C(op2_C));
  c2c_gth_in_system_ibert_0_MB_LUT4__parameterized21_106 Shift_LUT
       (.Sext(Sext),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .shift_Res(shift_Res));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_107 Shift_Logic_Mux
       (.Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .logic_Res_i(logic_Res_i),
        .shift_Res(shift_Res));
endmodule

module c2c_gth_in_system_ibert_0_Shift_Logic_Module
   (Shift_Logic_Res,
    Select_Logic_reg,
    Select_Logic_reg_0,
    Select_Logic_reg_1,
    Select_Logic_reg_2,
    Select_Logic_reg_3,
    Select_Logic_reg_4,
    Select_Logic_reg_5,
    Select_Logic_reg_6,
    Select_Logic_reg_7,
    Select_Logic_reg_8,
    Select_Logic_reg_9,
    Select_Logic_reg_10,
    Select_Logic_reg_11,
    Select_Logic_reg_12,
    Select_Logic_reg_13,
    Select_Logic_reg_14,
    Select_Logic_reg_15,
    Select_Logic_reg_16,
    Select_Logic_reg_17,
    Select_Logic_reg_18,
    Select_Logic_reg_19,
    Select_Logic_reg_20,
    Select_Logic_reg_21,
    Select_Logic_reg_22,
    Select_Logic_reg_23,
    Select_Logic_reg_24,
    Select_Logic_reg_25,
    Select_Logic_reg_26,
    Select_Logic_reg_27,
    Select_Logic_reg_28,
    Select_Logic_reg_29,
    EX_Op2,
    Op1_Logic,
    Q,
    \Using_FPGA.Native ,
    Shift_Oper,
    Select_Logic,
    \Using_FPGA.Native_0 ,
    Shifted,
    Op2,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    op2_C,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 ,
    \Using_FPGA.Native_9 ,
    \Using_FPGA.Native_10 ,
    \Using_FPGA.Native_11 ,
    \Using_FPGA.Native_12 ,
    \Using_FPGA.Native_13 ,
    Op1_Shift,
    \Using_FPGA.Native_14 ,
    \Using_FPGA.Native_15 ,
    \Using_FPGA.Native_16 ,
    \Using_FPGA.Native_17 ,
    \Using_FPGA.Native_18 ,
    \Using_FPGA.Native_19 ,
    \Using_FPGA.Native_20 ,
    \Using_FPGA.Native_21 ,
    \Using_FPGA.Native_22 ,
    \Using_FPGA.Native_23 ,
    \Using_FPGA.Native_24 ,
    \Using_FPGA.Native_25 ,
    \Using_FPGA.Native_26 ,
    \Using_FPGA.Native_27 ,
    \Using_FPGA.Native_28 ,
    \Using_FPGA.Native_29 ,
    \Using_FPGA.Native_30 ,
    Sext16,
    sext8);
  output Shift_Logic_Res;
  output Select_Logic_reg;
  output Select_Logic_reg_0;
  output Select_Logic_reg_1;
  output Select_Logic_reg_2;
  output Select_Logic_reg_3;
  output Select_Logic_reg_4;
  output Select_Logic_reg_5;
  output Select_Logic_reg_6;
  output Select_Logic_reg_7;
  output Select_Logic_reg_8;
  output Select_Logic_reg_9;
  output Select_Logic_reg_10;
  output Select_Logic_reg_11;
  output Select_Logic_reg_12;
  output Select_Logic_reg_13;
  output Select_Logic_reg_14;
  output Select_Logic_reg_15;
  output Select_Logic_reg_16;
  output Select_Logic_reg_17;
  output Select_Logic_reg_18;
  output Select_Logic_reg_19;
  output Select_Logic_reg_20;
  output Select_Logic_reg_21;
  output Select_Logic_reg_22;
  output Select_Logic_reg_23;
  output Select_Logic_reg_24;
  output Select_Logic_reg_25;
  output Select_Logic_reg_26;
  output Select_Logic_reg_27;
  output Select_Logic_reg_28;
  output Select_Logic_reg_29;
  input EX_Op2;
  input Op1_Logic;
  input [1:0]Q;
  input \Using_FPGA.Native ;
  input Shift_Oper;
  input Select_Logic;
  input \Using_FPGA.Native_0 ;
  input Shifted;
  input Op2;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input [27:0]op2_C;
  input \Using_FPGA.Native_4 ;
  input \Using_FPGA.Native_5 ;
  input \Using_FPGA.Native_6 ;
  input \Using_FPGA.Native_7 ;
  input \Using_FPGA.Native_8 ;
  input \Using_FPGA.Native_9 ;
  input \Using_FPGA.Native_10 ;
  input \Using_FPGA.Native_11 ;
  input \Using_FPGA.Native_12 ;
  input \Using_FPGA.Native_13 ;
  input Op1_Shift;
  input \Using_FPGA.Native_14 ;
  input \Using_FPGA.Native_15 ;
  input \Using_FPGA.Native_16 ;
  input \Using_FPGA.Native_17 ;
  input \Using_FPGA.Native_18 ;
  input \Using_FPGA.Native_19 ;
  input \Using_FPGA.Native_20 ;
  input \Using_FPGA.Native_21 ;
  input \Using_FPGA.Native_22 ;
  input \Using_FPGA.Native_23 ;
  input \Using_FPGA.Native_24 ;
  input \Using_FPGA.Native_25 ;
  input \Using_FPGA.Native_26 ;
  input \Using_FPGA.Native_27 ;
  input \Using_FPGA.Native_28 ;
  input \Using_FPGA.Native_29 ;
  input \Using_FPGA.Native_30 ;
  input Sext16;
  input sext8;

  wire EX_Op2;
  wire Op1_Logic;
  wire Op1_Shift;
  wire Op2;
  wire [1:0]Q;
  wire Select_Logic;
  wire Select_Logic_reg;
  wire Select_Logic_reg_0;
  wire Select_Logic_reg_1;
  wire Select_Logic_reg_10;
  wire Select_Logic_reg_11;
  wire Select_Logic_reg_12;
  wire Select_Logic_reg_13;
  wire Select_Logic_reg_14;
  wire Select_Logic_reg_15;
  wire Select_Logic_reg_16;
  wire Select_Logic_reg_17;
  wire Select_Logic_reg_18;
  wire Select_Logic_reg_19;
  wire Select_Logic_reg_2;
  wire Select_Logic_reg_20;
  wire Select_Logic_reg_21;
  wire Select_Logic_reg_22;
  wire Select_Logic_reg_23;
  wire Select_Logic_reg_24;
  wire Select_Logic_reg_25;
  wire Select_Logic_reg_26;
  wire Select_Logic_reg_27;
  wire Select_Logic_reg_28;
  wire Select_Logic_reg_29;
  wire Select_Logic_reg_3;
  wire Select_Logic_reg_4;
  wire Select_Logic_reg_5;
  wire Select_Logic_reg_6;
  wire Select_Logic_reg_7;
  wire Select_Logic_reg_8;
  wire Select_Logic_reg_9;
  wire Sext16;
  wire Shift_Logic_Res;
  wire Shift_Oper;
  wire Shifted;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire \Using_FPGA.Native_11 ;
  wire \Using_FPGA.Native_12 ;
  wire \Using_FPGA.Native_13 ;
  wire \Using_FPGA.Native_14 ;
  wire \Using_FPGA.Native_15 ;
  wire \Using_FPGA.Native_16 ;
  wire \Using_FPGA.Native_17 ;
  wire \Using_FPGA.Native_18 ;
  wire \Using_FPGA.Native_19 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_20 ;
  wire \Using_FPGA.Native_21 ;
  wire \Using_FPGA.Native_22 ;
  wire \Using_FPGA.Native_23 ;
  wire \Using_FPGA.Native_24 ;
  wire \Using_FPGA.Native_25 ;
  wire \Using_FPGA.Native_26 ;
  wire \Using_FPGA.Native_27 ;
  wire \Using_FPGA.Native_28 ;
  wire \Using_FPGA.Native_29 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_30 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \Using_FPGA.Native_9 ;
  wire \Using_FPGA.Native_i_1__0_n_0 ;
  wire \Using_FPGA.Native_i_1_n_0 ;
  wire [27:0]op2_C;
  wire sext8;

  c2c_gth_in_system_ibert_0_Shift_Logic_Bit \Shift_Logic_Bits[0].Shift_Logic_Bit_I 
       (.Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_29),
        .Sext(\Using_FPGA.Native_i_1_n_0 ),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native_29 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_30 ),
        .op2_C(op2_C[27]));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_71 \Shift_Logic_Bits[10].Shift_Logic_Bit_I 
       (.Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_19),
        .Sext(\Using_FPGA.Native_i_1_n_0 ),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native_19 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_20 ),
        .op2_C(op2_C[17]));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_72 \Shift_Logic_Bits[11].Shift_Logic_Bit_I 
       (.Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_18),
        .Sext(\Using_FPGA.Native_i_1_n_0 ),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native_18 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_19 ),
        .op2_C(op2_C[16]));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_73 \Shift_Logic_Bits[12].Shift_Logic_Bit_I 
       (.Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_17),
        .Sext(\Using_FPGA.Native_i_1_n_0 ),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native_17 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_18 ),
        .op2_C(op2_C[15]));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_74 \Shift_Logic_Bits[13].Shift_Logic_Bit_I 
       (.Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_16),
        .Sext(\Using_FPGA.Native_i_1_n_0 ),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native_16 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_17 ),
        .op2_C(op2_C[14]));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_75 \Shift_Logic_Bits[14].Shift_Logic_Bit_I 
       (.Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_15),
        .Sext(\Using_FPGA.Native_i_1_n_0 ),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native_15 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_16 ),
        .op2_C(op2_C[13]));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_76 \Shift_Logic_Bits[15].Shift_Logic_Bit_I 
       (.Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_14),
        .Sext(\Using_FPGA.Native_i_1_n_0 ),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native_14 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_15 ),
        .op2_C(op2_C[12]));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_77 \Shift_Logic_Bits[16].Shift_Logic_Bit_I 
       (.Op1_Shift(Op1_Shift),
        .Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_13),
        .Sext(\Using_FPGA.Native_i_1__0_n_0 ),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native_14 ),
        .op2_C(op2_C[11]));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_78 \Shift_Logic_Bits[17].Shift_Logic_Bit_I 
       (.Op1_Shift(Op1_Shift),
        .Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_12),
        .Sext(\Using_FPGA.Native_i_1__0_n_0 ),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native_13 ),
        .op2_C(op2_C[10]));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_79 \Shift_Logic_Bits[18].Shift_Logic_Bit_I 
       (.Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_11),
        .Sext(\Using_FPGA.Native_i_1__0_n_0 ),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native_12 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_13 ),
        .op2_C(op2_C[9]));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_80 \Shift_Logic_Bits[19].Shift_Logic_Bit_I 
       (.Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_10),
        .Sext(\Using_FPGA.Native_i_1__0_n_0 ),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native_11 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_12 ),
        .op2_C(op2_C[8]));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_81 \Shift_Logic_Bits[1].Shift_Logic_Bit_I 
       (.Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_28),
        .Sext(\Using_FPGA.Native_i_1_n_0 ),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native_28 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_29 ),
        .op2_C(op2_C[26]));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_82 \Shift_Logic_Bits[20].Shift_Logic_Bit_I 
       (.Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_9),
        .Sext(\Using_FPGA.Native_i_1__0_n_0 ),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native_10 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_11 ),
        .op2_C(op2_C[7]));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_83 \Shift_Logic_Bits[21].Shift_Logic_Bit_I 
       (.Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_8),
        .Sext(\Using_FPGA.Native_i_1__0_n_0 ),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native_9 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_10 ),
        .op2_C(op2_C[6]));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_84 \Shift_Logic_Bits[22].Shift_Logic_Bit_I 
       (.Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_7),
        .Sext(\Using_FPGA.Native_i_1__0_n_0 ),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native_8 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_9 ),
        .op2_C(op2_C[5]));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_85 \Shift_Logic_Bits[23].Shift_Logic_Bit_I 
       (.Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_6),
        .Sext(\Using_FPGA.Native_i_1__0_n_0 ),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native_7 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_8 ),
        .op2_C(op2_C[4]));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_86 \Shift_Logic_Bits[24].Shift_Logic_Bit_I 
       (.Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_5),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native_6 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_7 ),
        .op2_C(op2_C[3]));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_87 \Shift_Logic_Bits[25].Shift_Logic_Bit_I 
       (.Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_4),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native_5 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_6 ),
        .op2_C(op2_C[2]));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_88 \Shift_Logic_Bits[26].Shift_Logic_Bit_I 
       (.Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_3),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native_4 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_5 ),
        .op2_C(op2_C[1]));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_89 \Shift_Logic_Bits[27].Shift_Logic_Bit_I 
       (.Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_2),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native_3 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_4 ),
        .op2_C(op2_C[0]));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_90 \Shift_Logic_Bits[28].Shift_Logic_Bit_I 
       (.Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_1),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native_2 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_3 ));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_91 \Shift_Logic_Bits[29].Shift_Logic_Bit_I 
       (.Op2(Op2),
        .Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_0),
        .Shift_Oper(Shift_Oper),
        .Shifted(Shifted),
        .\Using_FPGA.Native (\Using_FPGA.Native_1 ));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_92 \Shift_Logic_Bits[2].Shift_Logic_Bit_I 
       (.Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_27),
        .Sext(\Using_FPGA.Native_i_1_n_0 ),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native_27 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_28 ),
        .op2_C(op2_C[25]));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_93 \Shift_Logic_Bits[30].Shift_Logic_Bit_I 
       (.Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg),
        .Shift_Oper(Shift_Oper),
        .Shifted(Shifted),
        .\Using_FPGA.Native (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_94 \Shift_Logic_Bits[31].Shift_Logic_Bit_I 
       (.EX_Op2(EX_Op2),
        .Op1_Logic(Op1_Logic),
        .Q(Q),
        .Select_Logic(Select_Logic),
        .Shift_Logic_Res(Shift_Logic_Res),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native ));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_95 \Shift_Logic_Bits[3].Shift_Logic_Bit_I 
       (.Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_26),
        .Sext(\Using_FPGA.Native_i_1_n_0 ),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native_26 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_27 ),
        .op2_C(op2_C[24]));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_96 \Shift_Logic_Bits[4].Shift_Logic_Bit_I 
       (.Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_25),
        .Sext(\Using_FPGA.Native_i_1_n_0 ),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native_25 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_26 ),
        .op2_C(op2_C[23]));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_97 \Shift_Logic_Bits[5].Shift_Logic_Bit_I 
       (.Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_24),
        .Sext(\Using_FPGA.Native_i_1_n_0 ),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native_24 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_25 ),
        .op2_C(op2_C[22]));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_98 \Shift_Logic_Bits[6].Shift_Logic_Bit_I 
       (.Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_23),
        .Sext(\Using_FPGA.Native_i_1_n_0 ),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native_23 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_24 ),
        .op2_C(op2_C[21]));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_99 \Shift_Logic_Bits[7].Shift_Logic_Bit_I 
       (.Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_22),
        .Sext(\Using_FPGA.Native_i_1_n_0 ),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native_22 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_23 ),
        .op2_C(op2_C[20]));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_100 \Shift_Logic_Bits[8].Shift_Logic_Bit_I 
       (.Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_21),
        .Sext(\Using_FPGA.Native_i_1_n_0 ),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native_21 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_22 ),
        .op2_C(op2_C[19]));
  c2c_gth_in_system_ibert_0_Shift_Logic_Bit_101 \Shift_Logic_Bits[9].Shift_Logic_Bit_I 
       (.Q(Q),
        .Select_Logic(Select_Logic),
        .Select_Logic_reg(Select_Logic_reg_20),
        .Sext(\Using_FPGA.Native_i_1_n_0 ),
        .Shift_Oper(Shift_Oper),
        .\Using_FPGA.Native (\Using_FPGA.Native_20 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_21 ),
        .op2_C(op2_C[18]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT4 #(
    .INIT(16'hB888)) 
    \Using_FPGA.Native_i_1 
       (.I0(Op1_Shift),
        .I1(Sext16),
        .I2(sext8),
        .I3(\Using_FPGA.Native_6 ),
        .O(\Using_FPGA.Native_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \Using_FPGA.Native_i_1__0 
       (.I0(\Using_FPGA.Native_6 ),
        .I1(sext8),
        .I2(Sext16),
        .O(\Using_FPGA.Native_i_1__0_n_0 ));
endmodule

module c2c_gth_in_system_ibert_0_Zero_Detect
   (Reg_zero,
    Reg_Test_Equal,
    \Zero_Detecting[0].nibble_Zero_reg ,
    reg_Test_Equal_N,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 ,
    \Using_FPGA.Native_9 ,
    \Using_FPGA.Native_10 ,
    \Using_FPGA.Native_11 ,
    \Using_FPGA.Native_12 ,
    \Using_FPGA.Native_13 ,
    \Using_FPGA.Native_14 ,
    \Using_FPGA.Native_15 ,
    \Using_FPGA.Native_16 ,
    \Using_FPGA.Native_17 ,
    \Using_FPGA.Native_18 ,
    \Using_FPGA.Native_19 ,
    \Using_FPGA.Native_20 ,
    \Using_FPGA.Native_21 ,
    \Using_FPGA.Native_22 ,
    \Using_FPGA.Native_23 ,
    \Using_FPGA.Native_24 ,
    \Using_FPGA.Native_25 ,
    \Using_FPGA.Native_26 ,
    \Using_FPGA.Native_27 ,
    \Using_FPGA.Native_28 ,
    lopt,
    lopt_1,
    lopt_2);
  output Reg_zero;
  input Reg_Test_Equal;
  input \Zero_Detecting[0].nibble_Zero_reg ;
  input reg_Test_Equal_N;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;
  input \Using_FPGA.Native_5 ;
  input \Using_FPGA.Native_6 ;
  input \Using_FPGA.Native_7 ;
  input \Using_FPGA.Native_8 ;
  input \Using_FPGA.Native_9 ;
  input \Using_FPGA.Native_10 ;
  input \Using_FPGA.Native_11 ;
  input \Using_FPGA.Native_12 ;
  input \Using_FPGA.Native_13 ;
  input \Using_FPGA.Native_14 ;
  input \Using_FPGA.Native_15 ;
  input \Using_FPGA.Native_16 ;
  input \Using_FPGA.Native_17 ;
  input \Using_FPGA.Native_18 ;
  input \Using_FPGA.Native_19 ;
  input \Using_FPGA.Native_20 ;
  input \Using_FPGA.Native_21 ;
  input \Using_FPGA.Native_22 ;
  input \Using_FPGA.Native_23 ;
  input \Using_FPGA.Native_24 ;
  input \Using_FPGA.Native_25 ;
  input \Using_FPGA.Native_26 ;
  input \Using_FPGA.Native_27 ;
  input \Using_FPGA.Native_28 ;
  output lopt;
  input lopt_1;
  input lopt_2;

  wire Reg_Test_Equal;
  wire Reg_zero;
  wire S;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire \Using_FPGA.Native_11 ;
  wire \Using_FPGA.Native_12 ;
  wire \Using_FPGA.Native_13 ;
  wire \Using_FPGA.Native_14 ;
  wire \Using_FPGA.Native_15 ;
  wire \Using_FPGA.Native_16 ;
  wire \Using_FPGA.Native_17 ;
  wire \Using_FPGA.Native_18 ;
  wire \Using_FPGA.Native_19 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_20 ;
  wire \Using_FPGA.Native_21 ;
  wire \Using_FPGA.Native_22 ;
  wire \Using_FPGA.Native_23 ;
  wire \Using_FPGA.Native_24 ;
  wire \Using_FPGA.Native_25 ;
  wire \Using_FPGA.Native_26 ;
  wire \Using_FPGA.Native_27 ;
  wire \Using_FPGA.Native_28 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \Using_FPGA.Native_9 ;
  wire \Zero_Detecting[0].nibble_Zero_reg ;
  wire \Zero_Detecting[2].nibble_Zero_reg ;
  wire \Zero_Detecting[3].nibble_Zero_reg ;
  wire \Zero_Detecting[4].nibble_Zero_reg ;
  wire \Zero_Detecting[5].nibble_Zero_reg ;
  wire \^lopt ;
  wire \^lopt_1 ;
  wire lopt_10;
  wire lopt_11;
  wire \^lopt_2 ;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire reg_Test_Equal_N;
  wire zero_CI_0;
  wire zero_CI_1;
  wire zero_CI_2;
  wire zero_CI_3;
  wire zero_CI_4;
  wire zero_CI_5;

  assign lopt = lopt_5;
  assign lopt_6 = lopt_1;
  assign lopt_7 = lopt_2;
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_64 Part_Of_Zero_Carry_Start
       (.Reg_Test_Equal(Reg_Test_Equal),
        .lopt(\^lopt ),
        .lopt_1(reg_Test_Equal_N),
        .lopt_10(lopt_11),
        .lopt_11(lopt_6),
        .lopt_12(lopt_7),
        .lopt_13(\Zero_Detecting[5].nibble_Zero_reg ),
        .lopt_14(\Zero_Detecting[4].nibble_Zero_reg ),
        .lopt_15(\Zero_Detecting[3].nibble_Zero_reg ),
        .lopt_2(\Zero_Detecting[0].nibble_Zero_reg ),
        .lopt_3(\^lopt_1 ),
        .lopt_4(S),
        .lopt_5(\^lopt_2 ),
        .lopt_6(\Zero_Detecting[2].nibble_Zero_reg ),
        .lopt_7(lopt_8),
        .lopt_8(lopt_9),
        .lopt_9(lopt_10),
        .zero_CI_0(zero_CI_0));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_65 \Zero_Detecting[0].I_Part_Of_Zero_Detect 
       (.\Zero_Detecting[0].nibble_Zero_reg (\Zero_Detecting[0].nibble_Zero_reg ),
        .lopt(\^lopt ),
        .reg_Test_Equal_N(reg_Test_Equal_N),
        .zero_CI_0(zero_CI_0),
        .zero_CI_1(zero_CI_1));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_66 \Zero_Detecting[1].I_Part_Of_Zero_Detect 
       (.S(S),
        .lopt(\^lopt_1 ),
        .reg_Test_Equal_N(reg_Test_Equal_N),
        .zero_CI_1(zero_CI_1),
        .zero_CI_2(zero_CI_2));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_67 \Zero_Detecting[2].I_Part_Of_Zero_Detect 
       (.\Zero_Detecting[2].nibble_Zero_reg (\Zero_Detecting[2].nibble_Zero_reg ),
        .lopt(\^lopt_2 ),
        .reg_Test_Equal_N(reg_Test_Equal_N),
        .zero_CI_2(zero_CI_2),
        .zero_CI_3(zero_CI_3));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_68 \Zero_Detecting[3].I_Part_Of_Zero_Detect 
       (.\Zero_Detecting[3].nibble_Zero_reg (\Zero_Detecting[3].nibble_Zero_reg ),
        .lopt(lopt_3),
        .lopt_1(\Zero_Detecting[4].nibble_Zero_reg ),
        .lopt_10(lopt_11),
        .lopt_2(lopt_4),
        .lopt_3(\Zero_Detecting[5].nibble_Zero_reg ),
        .lopt_4(lopt_5),
        .lopt_5(lopt_6),
        .lopt_6(lopt_7),
        .lopt_7(lopt_8),
        .lopt_8(lopt_9),
        .lopt_9(lopt_10),
        .reg_Test_Equal_N(reg_Test_Equal_N),
        .zero_CI_3(zero_CI_3),
        .zero_CI_4(zero_CI_4));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_69 \Zero_Detecting[4].I_Part_Of_Zero_Detect 
       (.\Zero_Detecting[4].nibble_Zero_reg (\Zero_Detecting[4].nibble_Zero_reg ),
        .lopt(lopt_3),
        .reg_Test_Equal_N(reg_Test_Equal_N),
        .zero_CI_4(zero_CI_4),
        .zero_CI_5(zero_CI_5));
  c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_70 \Zero_Detecting[5].I_Part_Of_Zero_Detect 
       (.Reg_zero(Reg_zero),
        .\Zero_Detecting[5].nibble_Zero_reg (\Zero_Detecting[5].nibble_Zero_reg ),
        .lopt(lopt_4),
        .reg_Test_Equal_N(reg_Test_Equal_N),
        .zero_CI_5(zero_CI_5));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \nibble_Zero0_inferred__0/i_ 
       (.I0(\Using_FPGA.Native ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_2 ),
        .I4(\Using_FPGA.Native_3 ),
        .I5(\Using_FPGA.Native_4 ),
        .O(S));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \nibble_Zero0_inferred__1/i_ 
       (.I0(\Using_FPGA.Native_5 ),
        .I1(\Using_FPGA.Native_6 ),
        .I2(\Using_FPGA.Native_7 ),
        .I3(\Using_FPGA.Native_8 ),
        .I4(\Using_FPGA.Native_9 ),
        .I5(\Using_FPGA.Native_10 ),
        .O(\Zero_Detecting[2].nibble_Zero_reg ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \nibble_Zero0_inferred__2/i_ 
       (.I0(\Using_FPGA.Native_11 ),
        .I1(\Using_FPGA.Native_12 ),
        .I2(\Using_FPGA.Native_13 ),
        .I3(\Using_FPGA.Native_14 ),
        .I4(\Using_FPGA.Native_15 ),
        .I5(\Using_FPGA.Native_16 ),
        .O(\Zero_Detecting[3].nibble_Zero_reg ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \nibble_Zero0_inferred__3/i_ 
       (.I0(\Using_FPGA.Native_17 ),
        .I1(\Using_FPGA.Native_18 ),
        .I2(\Using_FPGA.Native_19 ),
        .I3(\Using_FPGA.Native_20 ),
        .I4(\Using_FPGA.Native_21 ),
        .I5(\Using_FPGA.Native_22 ),
        .O(\Zero_Detecting[4].nibble_Zero_reg ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \nibble_Zero0_inferred__4/i_ 
       (.I0(\Using_FPGA.Native_23 ),
        .I1(\Using_FPGA.Native_24 ),
        .I2(\Using_FPGA.Native_25 ),
        .I3(\Using_FPGA.Native_26 ),
        .I4(\Using_FPGA.Native_27 ),
        .I5(\Using_FPGA.Native_28 ),
        .O(\Zero_Detecting[5].nibble_Zero_reg ));
endmodule

(* ARB_INC = "4'b1000" *) (* ARB_REPORT = "4'b0100" *) (* ARB_START = "4'b0001" *) 
(* ARB_WAIT = "4'b0010" *) (* C_ADDR_WIDTH = "17" *) (* C_DATA_WIDTH = "16" *) 
(* C_NUM_CLIENTS = "3" *) (* DRP_DONE = "7'b1000000" *) (* DRP_MODIFY = "7'b0001000" *) 
(* DRP_READ = "7'b0000010" *) (* DRP_READ_ACK = "7'b0000100" *) (* DRP_WAIT = "7'b0000001" *) 
(* DRP_WRITE = "7'b0010000" *) (* DRP_WRITE_ACK = "7'b0100000" *) 
module c2c_gth_in_system_ibert_0_ibert_lib_v1_0_7_drp_arbiter
   (DCLK_I,
    RESET_I,
    DEN_USR_I,
    DWE_USR_I,
    DADDR_USR_I,
    DI_USR_I,
    DO_USR_O,
    DRDY_USR_O,
    DEN_O,
    DWE_O,
    DADDR_O,
    DI_O,
    DO_I,
    DRDY_I);
  input DCLK_I;
  input RESET_I;
  input [2:0]DEN_USR_I;
  input [2:0]DWE_USR_I;
  input [50:0]DADDR_USR_I;
  input [47:0]DI_USR_I;
  output [47:0]DO_USR_O;
  output [2:0]DRDY_USR_O;
  output DEN_O;
  output DWE_O;
  output [16:0]DADDR_O;
  output [15:0]DI_O;
  input [15:0]DO_I;
  input DRDY_I;

  wire CEB2;
  wire [16:0]DADDR_O;
  wire \DADDR_O[16]_i_1_n_0 ;
  wire [50:0]DADDR_USR_I;
  wire DCLK_I;
  wire DEN_O;
  wire DEN_O_i_1_n_0;
  wire DEN_O_i_2_n_0;
  wire [2:0]DEN_USR_I;
  wire [15:0]DI_O;
  wire \DI_O[15]_i_1_n_0 ;
  wire [47:0]DI_USR_I;
  wire [15:0]DO_I;
  wire [47:0]DO_USR_O;
  wire [47:32]DO_USR_O0;
  wire DRDY_I;
  wire [2:0]DRDY_USR_O;
  wire \DRDY_USR_O[0]_i_1_n_0 ;
  wire \DRDY_USR_O[0]_i_2_n_0 ;
  wire \DRDY_USR_O[1]_i_1_n_0 ;
  wire \DRDY_USR_O[2]_i_1_n_0 ;
  wire \DRDY_USR_O[2]_i_2_n_0 ;
  wire DWE_O;
  wire [2:0]DWE_USR_I;
  wire RESET_I;
  wire [50:0]addr_i;
  wire [3:0]arb_state;
  wire \arb_state_reg_n_0_[0] ;
  wire \arb_state_reg_n_0_[1] ;
  wire \arb_state_reg_n_0_[2] ;
  wire \arb_state_reg_n_0_[3] ;
  wire daddr;
  wire [16:0]daddr0;
  wire \daddr_reg_n_0_[0] ;
  wire \daddr_reg_n_0_[10] ;
  wire \daddr_reg_n_0_[11] ;
  wire \daddr_reg_n_0_[12] ;
  wire \daddr_reg_n_0_[13] ;
  wire \daddr_reg_n_0_[14] ;
  wire \daddr_reg_n_0_[15] ;
  wire \daddr_reg_n_0_[16] ;
  wire \daddr_reg_n_0_[1] ;
  wire \daddr_reg_n_0_[2] ;
  wire \daddr_reg_n_0_[3] ;
  wire \daddr_reg_n_0_[4] ;
  wire \daddr_reg_n_0_[5] ;
  wire \daddr_reg_n_0_[6] ;
  wire \daddr_reg_n_0_[7] ;
  wire \daddr_reg_n_0_[8] ;
  wire \daddr_reg_n_0_[9] ;
  wire [47:0]data_i;
  wire [15:0]di;
  wire di0;
  wire [15:0]di0__0;
  wire [5:4]di1;
  wire do_r;
  wire done_i_1_n_0;
  wire done_reg_n_0;
  wire [6:0]drp_state;
  wire \drp_state[0]_i_2_n_0 ;
  wire \drp_state[1]_i_2_n_0 ;
  wire \drp_state[2]_i_2_n_0 ;
  wire \drp_state[4]_i_2_n_0 ;
  wire \drp_state[5]_i_2_n_0 ;
  wire \drp_state[6]_i_2_n_0 ;
  wire \drp_state[6]_i_3_n_0 ;
  wire \drp_state[6]_i_4_n_0 ;
  wire \drp_state_reg_n_0_[0] ;
  wire \drp_state_reg_n_0_[1] ;
  wire \drp_state_reg_n_0_[2] ;
  wire \drp_state_reg_n_0_[4] ;
  wire \drp_state_reg_n_0_[5] ;
  wire \drp_state_reg_n_0_[6] ;
  wire [2:0]en;
  wire \en[0]_i_1_n_0 ;
  wire \en[1]_i_1_n_0 ;
  wire \en[2]_i_1_n_0 ;
  wire \idx[0]__0_i_1_n_0 ;
  wire \idx[1]__0_i_2_n_0 ;
  wire [47:15]p_0_in;
  wire rd1;
  wire rd_i_1_n_0;
  wire rd_reg_n_0;
  wire [7:0]timeout_cntr;
  wire \timeout_cntr[5]_i_2_n_0 ;
  wire \timeout_cntr[7]_i_1_n_0 ;
  wire \timeout_cntr[7]_i_3_n_0 ;
  wire \timeout_cntr[7]_i_4_n_0 ;
  wire \timeout_cntr[7]_i_5_n_0 ;
  wire \timeout_cntr_reg_n_0_[0] ;
  wire \timeout_cntr_reg_n_0_[1] ;
  wire \timeout_cntr_reg_n_0_[2] ;
  wire \timeout_cntr_reg_n_0_[3] ;
  wire \timeout_cntr_reg_n_0_[4] ;
  wire \timeout_cntr_reg_n_0_[5] ;
  wire \timeout_cntr_reg_n_0_[6] ;
  wire \timeout_cntr_reg_n_0_[7] ;
  wire [2:0]we;
  wire \we[0]_i_2_n_0 ;
  wire \we[1]_i_2_n_0 ;
  wire \we[2]_i_2_n_0 ;
  wire \we_reg_n_0_[0] ;
  wire \we_reg_n_0_[1] ;
  wire \we_reg_n_0_[2] ;
  wire wr;
  wire wr_i_2_n_0;
  wire wr_reg_n_0;

  LUT6 #(
    .INIT(64'h0000000000000014)) 
    \DADDR_O[16]_i_1 
       (.I0(\drp_state_reg_n_0_[6] ),
        .I1(\drp_state_reg_n_0_[4] ),
        .I2(\drp_state_reg_n_0_[1] ),
        .I3(\drp_state_reg_n_0_[0] ),
        .I4(\drp_state_reg_n_0_[5] ),
        .I5(\drp_state_reg_n_0_[2] ),
        .O(\DADDR_O[16]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[0] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[0] ),
        .Q(DADDR_O[0]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[10] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[10] ),
        .Q(DADDR_O[10]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[11] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[11] ),
        .Q(DADDR_O[11]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[12] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[12] ),
        .Q(DADDR_O[12]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[13] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[13] ),
        .Q(DADDR_O[13]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[14] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[14] ),
        .Q(DADDR_O[14]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[15] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[15] ),
        .Q(DADDR_O[15]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[16] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[16] ),
        .Q(DADDR_O[16]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[1] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[1] ),
        .Q(DADDR_O[1]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[2] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[2] ),
        .Q(DADDR_O[2]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[3] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[3] ),
        .Q(DADDR_O[3]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[4] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[4] ),
        .Q(DADDR_O[4]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[5] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[5] ),
        .Q(DADDR_O[5]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[6] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[6] ),
        .Q(DADDR_O[6]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[7] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[7] ),
        .Q(DADDR_O[7]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[8] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[8] ),
        .Q(DADDR_O[8]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[9] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[9] ),
        .Q(DADDR_O[9]),
        .R(RESET_I));
  LUT6 #(
    .INIT(64'h0000000000010106)) 
    DEN_O_i_1
       (.I0(\drp_state_reg_n_0_[2] ),
        .I1(\drp_state_reg_n_0_[5] ),
        .I2(\drp_state_reg_n_0_[6] ),
        .I3(\drp_state_reg_n_0_[4] ),
        .I4(\drp_state_reg_n_0_[1] ),
        .I5(\drp_state_reg_n_0_[0] ),
        .O(DEN_O_i_1_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    DEN_O_i_2
       (.I0(\drp_state_reg_n_0_[5] ),
        .I1(\drp_state_reg_n_0_[2] ),
        .O(DEN_O_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    DEN_O_reg
       (.C(DCLK_I),
        .CE(DEN_O_i_1_n_0),
        .D(DEN_O_i_2_n_0),
        .Q(DEN_O),
        .R(RESET_I));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \DI_O[15]_i_1 
       (.I0(\drp_state_reg_n_0_[6] ),
        .I1(\drp_state_reg_n_0_[4] ),
        .I2(\drp_state_reg_n_0_[2] ),
        .I3(\drp_state_reg_n_0_[5] ),
        .I4(\drp_state_reg_n_0_[0] ),
        .I5(\drp_state_reg_n_0_[1] ),
        .O(\DI_O[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[0] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[0]),
        .Q(DI_O[0]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[10] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[10]),
        .Q(DI_O[10]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[11] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[11]),
        .Q(DI_O[11]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[12] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[12]),
        .Q(DI_O[12]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[13] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[13]),
        .Q(DI_O[13]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[14] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[14]),
        .Q(DI_O[14]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[15] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[15]),
        .Q(DI_O[15]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[1] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[1]),
        .Q(DI_O[1]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[2] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[2]),
        .Q(DI_O[2]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[3] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[3]),
        .Q(DI_O[3]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[4] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[4]),
        .Q(DI_O[4]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[5] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[5]),
        .Q(DI_O[5]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[6] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[6]),
        .Q(DI_O[6]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[7] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[7]),
        .Q(DI_O[7]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[8] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[8]),
        .Q(DI_O[8]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[9] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[9]),
        .Q(DI_O[9]),
        .R(RESET_I));
  LUT6 #(
    .INIT(64'h0000000000000100)) 
    \DO_USR_O[15]_i_1 
       (.I0(\arb_state_reg_n_0_[3] ),
        .I1(\arb_state_reg_n_0_[1] ),
        .I2(\arb_state_reg_n_0_[0] ),
        .I3(\arb_state_reg_n_0_[2] ),
        .I4(di1[5]),
        .I5(di1[4]),
        .O(p_0_in[15]));
  LUT6 #(
    .INIT(64'h0000010000000000)) 
    \DO_USR_O[31]_i_1 
       (.I0(\arb_state_reg_n_0_[3] ),
        .I1(\arb_state_reg_n_0_[1] ),
        .I2(\arb_state_reg_n_0_[0] ),
        .I3(\arb_state_reg_n_0_[2] ),
        .I4(di1[5]),
        .I5(di1[4]),
        .O(p_0_in[31]));
  LUT6 #(
    .INIT(64'h0000010000000000)) 
    \DO_USR_O[47]_i_1 
       (.I0(\arb_state_reg_n_0_[3] ),
        .I1(\arb_state_reg_n_0_[1] ),
        .I2(\arb_state_reg_n_0_[0] ),
        .I3(\arb_state_reg_n_0_[2] ),
        .I4(di1[4]),
        .I5(di1[5]),
        .O(p_0_in[47]));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[0] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[32]),
        .Q(DO_USR_O[0]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[10] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[42]),
        .Q(DO_USR_O[10]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[11] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[43]),
        .Q(DO_USR_O[11]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[12] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[44]),
        .Q(DO_USR_O[12]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[13] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[45]),
        .Q(DO_USR_O[13]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[14] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[46]),
        .Q(DO_USR_O[14]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[15] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[47]),
        .Q(DO_USR_O[15]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[16] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[32]),
        .Q(DO_USR_O[16]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[17] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[33]),
        .Q(DO_USR_O[17]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[18] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[34]),
        .Q(DO_USR_O[18]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[19] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[35]),
        .Q(DO_USR_O[19]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[1] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[33]),
        .Q(DO_USR_O[1]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[20] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[36]),
        .Q(DO_USR_O[20]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[21] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[37]),
        .Q(DO_USR_O[21]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[22] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[38]),
        .Q(DO_USR_O[22]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[23] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[39]),
        .Q(DO_USR_O[23]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[24] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[40]),
        .Q(DO_USR_O[24]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[25] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[41]),
        .Q(DO_USR_O[25]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[26] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[42]),
        .Q(DO_USR_O[26]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[27] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[43]),
        .Q(DO_USR_O[27]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[28] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[44]),
        .Q(DO_USR_O[28]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[29] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[45]),
        .Q(DO_USR_O[29]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[2] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[34]),
        .Q(DO_USR_O[2]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[30] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[46]),
        .Q(DO_USR_O[30]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[31] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[47]),
        .Q(DO_USR_O[31]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[32] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[32]),
        .Q(DO_USR_O[32]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[33] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[33]),
        .Q(DO_USR_O[33]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[34] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[34]),
        .Q(DO_USR_O[34]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[35] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[35]),
        .Q(DO_USR_O[35]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[36] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[36]),
        .Q(DO_USR_O[36]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[37] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[37]),
        .Q(DO_USR_O[37]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[38] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[38]),
        .Q(DO_USR_O[38]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[39] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[39]),
        .Q(DO_USR_O[39]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[3] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[35]),
        .Q(DO_USR_O[3]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[40] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[40]),
        .Q(DO_USR_O[40]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[41] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[41]),
        .Q(DO_USR_O[41]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[42] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[42]),
        .Q(DO_USR_O[42]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[43] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[43]),
        .Q(DO_USR_O[43]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[44] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[44]),
        .Q(DO_USR_O[44]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[45] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[45]),
        .Q(DO_USR_O[45]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[46] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[46]),
        .Q(DO_USR_O[46]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[47] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[47]),
        .Q(DO_USR_O[47]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[4] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[36]),
        .Q(DO_USR_O[4]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[5] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[37]),
        .Q(DO_USR_O[5]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[6] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[38]),
        .Q(DO_USR_O[6]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[7] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[39]),
        .Q(DO_USR_O[7]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[8] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[40]),
        .Q(DO_USR_O[8]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[9] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[41]),
        .Q(DO_USR_O[9]),
        .R(RESET_I));
  LUT6 #(
    .INIT(64'hFEFFFFFF00100000)) 
    \DRDY_USR_O[0]_i_1 
       (.I0(\arb_state_reg_n_0_[1] ),
        .I1(\arb_state_reg_n_0_[0] ),
        .I2(\arb_state_reg_n_0_[2] ),
        .I3(\arb_state_reg_n_0_[3] ),
        .I4(\DRDY_USR_O[0]_i_2_n_0 ),
        .I5(DRDY_USR_O[0]),
        .O(\DRDY_USR_O[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \DRDY_USR_O[0]_i_2 
       (.I0(di1[5]),
        .I1(di1[4]),
        .O(\DRDY_USR_O[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEFFFFFF00100000)) 
    \DRDY_USR_O[1]_i_1 
       (.I0(\arb_state_reg_n_0_[1] ),
        .I1(\arb_state_reg_n_0_[0] ),
        .I2(\arb_state_reg_n_0_[2] ),
        .I3(\arb_state_reg_n_0_[3] ),
        .I4(\idx[1]__0_i_2_n_0 ),
        .I5(DRDY_USR_O[1]),
        .O(\DRDY_USR_O[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFEFFFFFF00100000)) 
    \DRDY_USR_O[2]_i_1 
       (.I0(\arb_state_reg_n_0_[1] ),
        .I1(\arb_state_reg_n_0_[0] ),
        .I2(\arb_state_reg_n_0_[2] ),
        .I3(\arb_state_reg_n_0_[3] ),
        .I4(\DRDY_USR_O[2]_i_2_n_0 ),
        .I5(DRDY_USR_O[2]),
        .O(\DRDY_USR_O[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \DRDY_USR_O[2]_i_2 
       (.I0(di1[5]),
        .I1(di1[4]),
        .O(\DRDY_USR_O[2]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \DRDY_USR_O_reg[0] 
       (.C(DCLK_I),
        .CE(1'b1),
        .D(\DRDY_USR_O[0]_i_1_n_0 ),
        .Q(DRDY_USR_O[0]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DRDY_USR_O_reg[1] 
       (.C(DCLK_I),
        .CE(1'b1),
        .D(\DRDY_USR_O[1]_i_1_n_0 ),
        .Q(DRDY_USR_O[1]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DRDY_USR_O_reg[2] 
       (.C(DCLK_I),
        .CE(1'b1),
        .D(\DRDY_USR_O[2]_i_1_n_0 ),
        .Q(DRDY_USR_O[2]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    DWE_O_reg
       (.C(DCLK_I),
        .CE(DEN_O_i_1_n_0),
        .D(\drp_state_reg_n_0_[4] ),
        .Q(DWE_O),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[0] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[0]),
        .Q(addr_i[0]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[10] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[10]),
        .Q(addr_i[10]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[11] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[11]),
        .Q(addr_i[11]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[12] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[12]),
        .Q(addr_i[12]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[13] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[13]),
        .Q(addr_i[13]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[14] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[14]),
        .Q(addr_i[14]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[15] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[15]),
        .Q(addr_i[15]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[16] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[16]),
        .Q(addr_i[16]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[17] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[17]),
        .Q(addr_i[17]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[18] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[18]),
        .Q(addr_i[18]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[19] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[19]),
        .Q(addr_i[19]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[1] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[1]),
        .Q(addr_i[1]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[20] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[20]),
        .Q(addr_i[20]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[21] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[21]),
        .Q(addr_i[21]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[22] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[22]),
        .Q(addr_i[22]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[23] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[23]),
        .Q(addr_i[23]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[24] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[24]),
        .Q(addr_i[24]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[25] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[25]),
        .Q(addr_i[25]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[26] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[26]),
        .Q(addr_i[26]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[27] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[27]),
        .Q(addr_i[27]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[28] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[28]),
        .Q(addr_i[28]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[29] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[29]),
        .Q(addr_i[29]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[2] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[2]),
        .Q(addr_i[2]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[30] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[30]),
        .Q(addr_i[30]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[31] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[31]),
        .Q(addr_i[31]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[32] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[32]),
        .Q(addr_i[32]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[33] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[33]),
        .Q(addr_i[33]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[34] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[34]),
        .Q(addr_i[34]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[35] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[35]),
        .Q(addr_i[35]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[36] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[36]),
        .Q(addr_i[36]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[37] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[37]),
        .Q(addr_i[37]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[38] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[38]),
        .Q(addr_i[38]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[39] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[39]),
        .Q(addr_i[39]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[3] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[3]),
        .Q(addr_i[3]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[40] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[40]),
        .Q(addr_i[40]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[41] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[41]),
        .Q(addr_i[41]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[42] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[42]),
        .Q(addr_i[42]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[43] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[43]),
        .Q(addr_i[43]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[44] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[44]),
        .Q(addr_i[44]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[45] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[45]),
        .Q(addr_i[45]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[46] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[46]),
        .Q(addr_i[46]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[47] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[47]),
        .Q(addr_i[47]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[48] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[48]),
        .Q(addr_i[48]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[49] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[49]),
        .Q(addr_i[49]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[4] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[4]),
        .Q(addr_i[4]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[50] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[50]),
        .Q(addr_i[50]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[5] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[5]),
        .Q(addr_i[5]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[6] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[6]),
        .Q(addr_i[6]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[7] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[7]),
        .Q(addr_i[7]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[8] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[8]),
        .Q(addr_i[8]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[9] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[9]),
        .Q(addr_i[9]),
        .R(RESET_I));
  LUT4 #(
    .INIT(16'hFEEB)) 
    \arb_state[0]_i_1 
       (.I0(\arb_state_reg_n_0_[3] ),
        .I1(\arb_state_reg_n_0_[0] ),
        .I2(\arb_state_reg_n_0_[2] ),
        .I3(\arb_state_reg_n_0_[1] ),
        .O(arb_state[0]));
  LUT6 #(
    .INIT(64'h0011010000000100)) 
    \arb_state[1]_i_1 
       (.I0(\arb_state_reg_n_0_[2] ),
        .I1(\arb_state_reg_n_0_[3] ),
        .I2(done_reg_n_0),
        .I3(\arb_state_reg_n_0_[1] ),
        .I4(\arb_state_reg_n_0_[0] ),
        .I5(di0),
        .O(arb_state[1]));
  LUT5 #(
    .INIT(32'h00000020)) 
    \arb_state[2]_i_1 
       (.I0(\arb_state_reg_n_0_[1] ),
        .I1(\arb_state_reg_n_0_[2] ),
        .I2(done_reg_n_0),
        .I3(\arb_state_reg_n_0_[3] ),
        .I4(\arb_state_reg_n_0_[0] ),
        .O(arb_state[2]));
  LUT5 #(
    .INIT(32'h00100110)) 
    \arb_state[3]_i_1 
       (.I0(\arb_state_reg_n_0_[3] ),
        .I1(\arb_state_reg_n_0_[1] ),
        .I2(\arb_state_reg_n_0_[2] ),
        .I3(\arb_state_reg_n_0_[0] ),
        .I4(di0),
        .O(arb_state[3]));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \arb_state[3]_i_2 
       (.I0(en[2]),
        .I1(di1[5]),
        .I2(en[1]),
        .I3(di1[4]),
        .I4(en[0]),
        .O(di0));
  FDSE #(
    .INIT(1'b1)) 
    \arb_state_reg[0] 
       (.C(DCLK_I),
        .CE(1'b1),
        .D(arb_state[0]),
        .Q(\arb_state_reg_n_0_[0] ),
        .S(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \arb_state_reg[1] 
       (.C(DCLK_I),
        .CE(1'b1),
        .D(arb_state[1]),
        .Q(\arb_state_reg_n_0_[1] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \arb_state_reg[2] 
       (.C(DCLK_I),
        .CE(1'b1),
        .D(arb_state[2]),
        .Q(\arb_state_reg_n_0_[2] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \arb_state_reg[3] 
       (.C(DCLK_I),
        .CE(1'b1),
        .D(arb_state[3]),
        .Q(\arb_state_reg_n_0_[3] ),
        .R(RESET_I));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[0]_i_1 
       (.I0(addr_i[17]),
        .I1(di1[4]),
        .I2(addr_i[34]),
        .I3(di1[5]),
        .I4(addr_i[0]),
        .O(daddr0[0]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[10]_i_1 
       (.I0(addr_i[27]),
        .I1(di1[4]),
        .I2(addr_i[44]),
        .I3(di1[5]),
        .I4(addr_i[10]),
        .O(daddr0[10]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[11]_i_1 
       (.I0(addr_i[28]),
        .I1(di1[4]),
        .I2(addr_i[45]),
        .I3(di1[5]),
        .I4(addr_i[11]),
        .O(daddr0[11]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[12]_i_1 
       (.I0(addr_i[29]),
        .I1(di1[4]),
        .I2(addr_i[46]),
        .I3(di1[5]),
        .I4(addr_i[12]),
        .O(daddr0[12]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[13]_i_1 
       (.I0(addr_i[30]),
        .I1(di1[4]),
        .I2(addr_i[47]),
        .I3(di1[5]),
        .I4(addr_i[13]),
        .O(daddr0[13]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[14]_i_1 
       (.I0(addr_i[31]),
        .I1(di1[4]),
        .I2(addr_i[48]),
        .I3(di1[5]),
        .I4(addr_i[14]),
        .O(daddr0[14]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[15]_i_1 
       (.I0(addr_i[32]),
        .I1(di1[4]),
        .I2(addr_i[49]),
        .I3(di1[5]),
        .I4(addr_i[15]),
        .O(daddr0[15]));
  LUT5 #(
    .INIT(32'h00000020)) 
    \daddr[16]_i_1 
       (.I0(\arb_state_reg_n_0_[0] ),
        .I1(\arb_state_reg_n_0_[2] ),
        .I2(di0),
        .I3(\arb_state_reg_n_0_[1] ),
        .I4(\arb_state_reg_n_0_[3] ),
        .O(daddr));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[16]_i_2 
       (.I0(addr_i[33]),
        .I1(di1[4]),
        .I2(addr_i[50]),
        .I3(di1[5]),
        .I4(addr_i[16]),
        .O(daddr0[16]));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[1]_i_1 
       (.I0(addr_i[18]),
        .I1(di1[4]),
        .I2(addr_i[35]),
        .I3(di1[5]),
        .I4(addr_i[1]),
        .O(daddr0[1]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[2]_i_1 
       (.I0(addr_i[19]),
        .I1(di1[4]),
        .I2(addr_i[36]),
        .I3(di1[5]),
        .I4(addr_i[2]),
        .O(daddr0[2]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[3]_i_1 
       (.I0(addr_i[20]),
        .I1(di1[4]),
        .I2(addr_i[37]),
        .I3(di1[5]),
        .I4(addr_i[3]),
        .O(daddr0[3]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[4]_i_1 
       (.I0(addr_i[21]),
        .I1(di1[4]),
        .I2(addr_i[38]),
        .I3(di1[5]),
        .I4(addr_i[4]),
        .O(daddr0[4]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[5]_i_1 
       (.I0(addr_i[22]),
        .I1(di1[4]),
        .I2(addr_i[39]),
        .I3(di1[5]),
        .I4(addr_i[5]),
        .O(daddr0[5]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[6]_i_1 
       (.I0(addr_i[23]),
        .I1(di1[4]),
        .I2(addr_i[40]),
        .I3(di1[5]),
        .I4(addr_i[6]),
        .O(daddr0[6]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[7]_i_1 
       (.I0(addr_i[24]),
        .I1(di1[4]),
        .I2(addr_i[41]),
        .I3(di1[5]),
        .I4(addr_i[7]),
        .O(daddr0[7]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[8]_i_1 
       (.I0(addr_i[25]),
        .I1(di1[4]),
        .I2(addr_i[42]),
        .I3(di1[5]),
        .I4(addr_i[8]),
        .O(daddr0[8]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[9]_i_1 
       (.I0(addr_i[26]),
        .I1(di1[4]),
        .I2(addr_i[43]),
        .I3(di1[5]),
        .I4(addr_i[9]),
        .O(daddr0[9]));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[0] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[0]),
        .Q(\daddr_reg_n_0_[0] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[10] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[10]),
        .Q(\daddr_reg_n_0_[10] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[11] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[11]),
        .Q(\daddr_reg_n_0_[11] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[12] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[12]),
        .Q(\daddr_reg_n_0_[12] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[13] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[13]),
        .Q(\daddr_reg_n_0_[13] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[14] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[14]),
        .Q(\daddr_reg_n_0_[14] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[15] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[15]),
        .Q(\daddr_reg_n_0_[15] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[16] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[16]),
        .Q(\daddr_reg_n_0_[16] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[1] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[1]),
        .Q(\daddr_reg_n_0_[1] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[2] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[2]),
        .Q(\daddr_reg_n_0_[2] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[3] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[3]),
        .Q(\daddr_reg_n_0_[3] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[4] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[4]),
        .Q(\daddr_reg_n_0_[4] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[5] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[5]),
        .Q(\daddr_reg_n_0_[5] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[6] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[6]),
        .Q(\daddr_reg_n_0_[6] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[7] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[7]),
        .Q(\daddr_reg_n_0_[7] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[8] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[8]),
        .Q(\daddr_reg_n_0_[8] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[9] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[9]),
        .Q(\daddr_reg_n_0_[9] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[0] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[0]),
        .Q(data_i[0]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[10] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[10]),
        .Q(data_i[10]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[11] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[11]),
        .Q(data_i[11]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[12] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[12]),
        .Q(data_i[12]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[13] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[13]),
        .Q(data_i[13]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[14] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[14]),
        .Q(data_i[14]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[15] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[15]),
        .Q(data_i[15]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[16] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[16]),
        .Q(data_i[16]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[17] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[17]),
        .Q(data_i[17]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[18] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[18]),
        .Q(data_i[18]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[19] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[19]),
        .Q(data_i[19]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[1] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[1]),
        .Q(data_i[1]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[20] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[20]),
        .Q(data_i[20]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[21] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[21]),
        .Q(data_i[21]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[22] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[22]),
        .Q(data_i[22]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[23] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[23]),
        .Q(data_i[23]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[24] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[24]),
        .Q(data_i[24]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[25] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[25]),
        .Q(data_i[25]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[26] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[26]),
        .Q(data_i[26]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[27] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[27]),
        .Q(data_i[27]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[28] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[28]),
        .Q(data_i[28]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[29] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[29]),
        .Q(data_i[29]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[2] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[2]),
        .Q(data_i[2]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[30] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[30]),
        .Q(data_i[30]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[31] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[31]),
        .Q(data_i[31]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[32] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[32]),
        .Q(data_i[32]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[33] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[33]),
        .Q(data_i[33]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[34] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[34]),
        .Q(data_i[34]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[35] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[35]),
        .Q(data_i[35]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[36] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[36]),
        .Q(data_i[36]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[37] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[37]),
        .Q(data_i[37]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[38] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[38]),
        .Q(data_i[38]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[39] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[39]),
        .Q(data_i[39]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[3] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[3]),
        .Q(data_i[3]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[40] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[40]),
        .Q(data_i[40]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[41] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[41]),
        .Q(data_i[41]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[42] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[42]),
        .Q(data_i[42]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[43] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[43]),
        .Q(data_i[43]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[44] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[44]),
        .Q(data_i[44]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[45] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[45]),
        .Q(data_i[45]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[46] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[46]),
        .Q(data_i[46]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[47] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[47]),
        .Q(data_i[47]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[4] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[4]),
        .Q(data_i[4]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[5] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[5]),
        .Q(data_i[5]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[6] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[6]),
        .Q(data_i[6]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[7] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[7]),
        .Q(data_i[7]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[8] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[8]),
        .Q(data_i[8]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[9] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[9]),
        .Q(data_i[9]),
        .R(RESET_I));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[0]_i_1 
       (.I0(data_i[16]),
        .I1(di1[4]),
        .I2(data_i[32]),
        .I3(di1[5]),
        .I4(data_i[0]),
        .O(di0__0[0]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[10]_i_1 
       (.I0(data_i[26]),
        .I1(di1[4]),
        .I2(data_i[42]),
        .I3(di1[5]),
        .I4(data_i[10]),
        .O(di0__0[10]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[11]_i_1 
       (.I0(data_i[27]),
        .I1(di1[4]),
        .I2(data_i[43]),
        .I3(di1[5]),
        .I4(data_i[11]),
        .O(di0__0[11]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[12]_i_1 
       (.I0(data_i[28]),
        .I1(di1[4]),
        .I2(data_i[44]),
        .I3(di1[5]),
        .I4(data_i[12]),
        .O(di0__0[12]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[13]_i_1 
       (.I0(data_i[29]),
        .I1(di1[4]),
        .I2(data_i[45]),
        .I3(di1[5]),
        .I4(data_i[13]),
        .O(di0__0[13]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[14]_i_1 
       (.I0(data_i[30]),
        .I1(di1[4]),
        .I2(data_i[46]),
        .I3(di1[5]),
        .I4(data_i[14]),
        .O(di0__0[14]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[15]_i_1 
       (.I0(data_i[31]),
        .I1(di1[4]),
        .I2(data_i[47]),
        .I3(di1[5]),
        .I4(data_i[15]),
        .O(di0__0[15]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[1]_i_1 
       (.I0(data_i[17]),
        .I1(di1[4]),
        .I2(data_i[33]),
        .I3(di1[5]),
        .I4(data_i[1]),
        .O(di0__0[1]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[2]_i_1 
       (.I0(data_i[18]),
        .I1(di1[4]),
        .I2(data_i[34]),
        .I3(di1[5]),
        .I4(data_i[2]),
        .O(di0__0[2]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[3]_i_1 
       (.I0(data_i[19]),
        .I1(di1[4]),
        .I2(data_i[35]),
        .I3(di1[5]),
        .I4(data_i[3]),
        .O(di0__0[3]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[4]_i_1 
       (.I0(data_i[20]),
        .I1(di1[4]),
        .I2(data_i[36]),
        .I3(di1[5]),
        .I4(data_i[4]),
        .O(di0__0[4]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[5]_i_1 
       (.I0(data_i[21]),
        .I1(di1[4]),
        .I2(data_i[37]),
        .I3(di1[5]),
        .I4(data_i[5]),
        .O(di0__0[5]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[6]_i_1 
       (.I0(data_i[22]),
        .I1(di1[4]),
        .I2(data_i[38]),
        .I3(di1[5]),
        .I4(data_i[6]),
        .O(di0__0[6]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[7]_i_1 
       (.I0(data_i[23]),
        .I1(di1[4]),
        .I2(data_i[39]),
        .I3(di1[5]),
        .I4(data_i[7]),
        .O(di0__0[7]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[8]_i_1 
       (.I0(data_i[24]),
        .I1(di1[4]),
        .I2(data_i[40]),
        .I3(di1[5]),
        .I4(data_i[8]),
        .O(di0__0[8]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[9]_i_1 
       (.I0(data_i[25]),
        .I1(di1[4]),
        .I2(data_i[41]),
        .I3(di1[5]),
        .I4(data_i[9]),
        .O(di0__0[9]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[0] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[0]),
        .Q(di[0]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[10] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[10]),
        .Q(di[10]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[11] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[11]),
        .Q(di[11]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[12] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[12]),
        .Q(di[12]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[13] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[13]),
        .Q(di[13]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[14] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[14]),
        .Q(di[14]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[15] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[15]),
        .Q(di[15]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[1] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[1]),
        .Q(di[1]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[2] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[2]),
        .Q(di[2]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[3] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[3]),
        .Q(di[3]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[4] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[4]),
        .Q(di[4]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[5] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[5]),
        .Q(di[5]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[6] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[6]),
        .Q(di[6]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[7] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[7]),
        .Q(di[7]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[8] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[8]),
        .Q(di[8]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[9] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[9]),
        .Q(di[9]),
        .R(RESET_I));
  LUT4 #(
    .INIT(16'h0800)) 
    \do_r[15]_i_1 
       (.I0(\drp_state[6]_i_2_n_0 ),
        .I1(\drp_state_reg_n_0_[2] ),
        .I2(\drp_state_reg_n_0_[5] ),
        .I3(\drp_state[6]_i_3_n_0 ),
        .O(do_r));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[0] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[0]),
        .Q(DO_USR_O0[32]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[10] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[10]),
        .Q(DO_USR_O0[42]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[11] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[11]),
        .Q(DO_USR_O0[43]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[12] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[12]),
        .Q(DO_USR_O0[44]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[13] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[13]),
        .Q(DO_USR_O0[45]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[14] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[14]),
        .Q(DO_USR_O0[46]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[15] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[15]),
        .Q(DO_USR_O0[47]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[1] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[1]),
        .Q(DO_USR_O0[33]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[2] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[2]),
        .Q(DO_USR_O0[34]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[3] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[3]),
        .Q(DO_USR_O0[35]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[4] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[4]),
        .Q(DO_USR_O0[36]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[5] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[5]),
        .Q(DO_USR_O0[37]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[6] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[6]),
        .Q(DO_USR_O0[38]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[7] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[7]),
        .Q(DO_USR_O0[39]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[8] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[8]),
        .Q(DO_USR_O0[40]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[9] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[9]),
        .Q(DO_USR_O0[41]),
        .R(RESET_I));
  LUT5 #(
    .INIT(32'h88BF8880)) 
    done_i_1
       (.I0(\drp_state[4]_i_2_n_0 ),
        .I1(\drp_state[6]_i_3_n_0 ),
        .I2(\timeout_cntr[7]_i_3_n_0 ),
        .I3(\timeout_cntr[7]_i_4_n_0 ),
        .I4(done_reg_n_0),
        .O(done_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    done_reg
       (.C(DCLK_I),
        .CE(1'b1),
        .D(done_i_1_n_0),
        .Q(done_reg_n_0),
        .R(RESET_I));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEEA)) 
    \drp_state[0]_i_1 
       (.I0(\drp_state_reg_n_0_[6] ),
        .I1(\drp_state_reg_n_0_[2] ),
        .I2(\drp_state_reg_n_0_[5] ),
        .I3(\drp_state_reg_n_0_[0] ),
        .I4(\drp_state_reg_n_0_[1] ),
        .I5(\drp_state[0]_i_2_n_0 ),
        .O(drp_state[0]));
  LUT6 #(
    .INIT(64'hFF00EE11FF00EE13)) 
    \drp_state[0]_i_2 
       (.I0(\drp_state_reg_n_0_[0] ),
        .I1(\drp_state[1]_i_2_n_0 ),
        .I2(wr_reg_n_0),
        .I3(\drp_state_reg_n_0_[4] ),
        .I4(\drp_state_reg_n_0_[1] ),
        .I5(rd_reg_n_0),
        .O(\drp_state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000040)) 
    \drp_state[1]_i_1 
       (.I0(\drp_state[1]_i_2_n_0 ),
        .I1(rd_reg_n_0),
        .I2(\drp_state_reg_n_0_[0] ),
        .I3(\drp_state_reg_n_0_[1] ),
        .I4(\drp_state_reg_n_0_[4] ),
        .I5(\drp_state_reg_n_0_[6] ),
        .O(drp_state[1]));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \drp_state[1]_i_2 
       (.I0(\drp_state_reg_n_0_[2] ),
        .I1(\drp_state_reg_n_0_[5] ),
        .O(\drp_state[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAEAAAAAAAAAA)) 
    \drp_state[2]_i_1 
       (.I0(\drp_state[2]_i_2_n_0 ),
        .I1(\drp_state[5]_i_2_n_0 ),
        .I2(DRDY_I),
        .I3(\drp_state_reg_n_0_[2] ),
        .I4(\drp_state_reg_n_0_[5] ),
        .I5(\drp_state[6]_i_2_n_0 ),
        .O(drp_state[2]));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    \drp_state[2]_i_2 
       (.I0(\drp_state_reg_n_0_[2] ),
        .I1(\drp_state_reg_n_0_[5] ),
        .I2(\drp_state_reg_n_0_[1] ),
        .I3(\drp_state_reg_n_0_[0] ),
        .I4(\drp_state_reg_n_0_[6] ),
        .I5(\drp_state_reg_n_0_[4] ),
        .O(\drp_state[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    \drp_state[4]_i_1 
       (.I0(\drp_state_reg_n_0_[2] ),
        .I1(\drp_state_reg_n_0_[5] ),
        .I2(rd_reg_n_0),
        .I3(\drp_state_reg_n_0_[0] ),
        .I4(wr_reg_n_0),
        .I5(\drp_state[4]_i_2_n_0 ),
        .O(drp_state[4]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \drp_state[4]_i_2 
       (.I0(\drp_state_reg_n_0_[6] ),
        .I1(\drp_state_reg_n_0_[4] ),
        .I2(\drp_state_reg_n_0_[1] ),
        .O(\drp_state[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAEAAAAAAAAAA)) 
    \drp_state[5]_i_1 
       (.I0(\DI_O[15]_i_1_n_0 ),
        .I1(\drp_state[5]_i_2_n_0 ),
        .I2(DRDY_I),
        .I3(\drp_state_reg_n_0_[5] ),
        .I4(\drp_state_reg_n_0_[2] ),
        .I5(\drp_state[6]_i_2_n_0 ),
        .O(drp_state[5]));
  LUT3 #(
    .INIT(8'hDF)) 
    \drp_state[5]_i_2 
       (.I0(\timeout_cntr_reg_n_0_[6] ),
        .I1(\timeout_cntr[7]_i_5_n_0 ),
        .I2(\timeout_cntr_reg_n_0_[7] ),
        .O(\drp_state[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT4 #(
    .INIT(16'h6000)) 
    \drp_state[6]_i_1 
       (.I0(\drp_state_reg_n_0_[2] ),
        .I1(\drp_state_reg_n_0_[5] ),
        .I2(\drp_state[6]_i_2_n_0 ),
        .I3(\drp_state[6]_i_3_n_0 ),
        .O(drp_state[6]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \drp_state[6]_i_2 
       (.I0(\drp_state_reg_n_0_[6] ),
        .I1(\drp_state_reg_n_0_[4] ),
        .I2(\drp_state_reg_n_0_[1] ),
        .I3(\drp_state_reg_n_0_[0] ),
        .O(\drp_state[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF80000000)) 
    \drp_state[6]_i_3 
       (.I0(\drp_state[6]_i_4_n_0 ),
        .I1(\timeout_cntr_reg_n_0_[7] ),
        .I2(\timeout_cntr_reg_n_0_[6] ),
        .I3(\timeout_cntr_reg_n_0_[5] ),
        .I4(\timeout_cntr_reg_n_0_[4] ),
        .I5(DRDY_I),
        .O(\drp_state[6]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \drp_state[6]_i_4 
       (.I0(\timeout_cntr_reg_n_0_[1] ),
        .I1(\timeout_cntr_reg_n_0_[0] ),
        .I2(\timeout_cntr_reg_n_0_[3] ),
        .I3(\timeout_cntr_reg_n_0_[2] ),
        .O(\drp_state[6]_i_4_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \drp_state_reg[0] 
       (.C(DCLK_I),
        .CE(1'b1),
        .D(drp_state[0]),
        .Q(\drp_state_reg_n_0_[0] ),
        .S(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \drp_state_reg[1] 
       (.C(DCLK_I),
        .CE(1'b1),
        .D(drp_state[1]),
        .Q(\drp_state_reg_n_0_[1] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \drp_state_reg[2] 
       (.C(DCLK_I),
        .CE(1'b1),
        .D(drp_state[2]),
        .Q(\drp_state_reg_n_0_[2] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \drp_state_reg[4] 
       (.C(DCLK_I),
        .CE(1'b1),
        .D(drp_state[4]),
        .Q(\drp_state_reg_n_0_[4] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \drp_state_reg[5] 
       (.C(DCLK_I),
        .CE(1'b1),
        .D(drp_state[5]),
        .Q(\drp_state_reg_n_0_[5] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \drp_state_reg[6] 
       (.C(DCLK_I),
        .CE(1'b1),
        .D(drp_state[6]),
        .Q(\drp_state_reg_n_0_[6] ),
        .R(RESET_I));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT4 #(
    .INIT(16'hEF00)) 
    \en[0]_i_1 
       (.I0(di1[4]),
        .I1(di1[5]),
        .I2(done_reg_n_0),
        .I3(DEN_USR_I[0]),
        .O(\en[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT4 #(
    .INIT(16'hBF00)) 
    \en[1]_i_1 
       (.I0(di1[5]),
        .I1(di1[4]),
        .I2(done_reg_n_0),
        .I3(DEN_USR_I[1]),
        .O(\en[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT4 #(
    .INIT(16'hBF00)) 
    \en[2]_i_1 
       (.I0(di1[4]),
        .I1(di1[5]),
        .I2(done_reg_n_0),
        .I3(DEN_USR_I[2]),
        .O(\en[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \en_reg[0] 
       (.C(DCLK_I),
        .CE(we[0]),
        .D(\en[0]_i_1_n_0 ),
        .Q(en[0]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \en_reg[1] 
       (.C(DCLK_I),
        .CE(we[1]),
        .D(\en[1]_i_1_n_0 ),
        .Q(en[1]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \en_reg[2] 
       (.C(DCLK_I),
        .CE(we[2]),
        .D(\en[2]_i_1_n_0 ),
        .Q(en[2]),
        .R(RESET_I));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \idx[0]__0_i_1 
       (.I0(di1[4]),
        .I1(di1[5]),
        .O(\idx[0]__0_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0010)) 
    \idx[1]__0_i_1 
       (.I0(\arb_state_reg_n_0_[2] ),
        .I1(\arb_state_reg_n_0_[1] ),
        .I2(\arb_state_reg_n_0_[3] ),
        .I3(\arb_state_reg_n_0_[0] ),
        .O(CEB2));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \idx[1]__0_i_2 
       (.I0(di1[4]),
        .I1(di1[5]),
        .O(\idx[1]__0_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \idx_reg[0]__0 
       (.C(DCLK_I),
        .CE(CEB2),
        .D(\idx[0]__0_i_1_n_0 ),
        .Q(di1[4]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \idx_reg[1]__0 
       (.C(DCLK_I),
        .CE(CEB2),
        .D(\idx[1]__0_i_2_n_0 ),
        .Q(di1[5]),
        .R(RESET_I));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'h04)) 
    rd_i_1
       (.I0(rd1),
        .I1(di0),
        .I2(\arb_state_reg_n_0_[1] ),
        .O(rd_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rd_reg
       (.C(DCLK_I),
        .CE(wr),
        .D(rd_i_1_n_0),
        .Q(rd_reg_n_0),
        .R(RESET_I));
  LUT3 #(
    .INIT(8'h0E)) 
    \timeout_cntr[0]_i_1 
       (.I0(\drp_state_reg_n_0_[5] ),
        .I1(\drp_state_reg_n_0_[2] ),
        .I2(\timeout_cntr_reg_n_0_[0] ),
        .O(timeout_cntr[0]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT4 #(
    .INIT(16'h0EE0)) 
    \timeout_cntr[1]_i_1 
       (.I0(\drp_state_reg_n_0_[2] ),
        .I1(\drp_state_reg_n_0_[5] ),
        .I2(\timeout_cntr_reg_n_0_[0] ),
        .I3(\timeout_cntr_reg_n_0_[1] ),
        .O(timeout_cntr[1]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT5 #(
    .INIT(32'h77708880)) 
    \timeout_cntr[2]_i_1 
       (.I0(\timeout_cntr_reg_n_0_[0] ),
        .I1(\timeout_cntr_reg_n_0_[1] ),
        .I2(\drp_state_reg_n_0_[5] ),
        .I3(\drp_state_reg_n_0_[2] ),
        .I4(\timeout_cntr_reg_n_0_[2] ),
        .O(timeout_cntr[2]));
  LUT6 #(
    .INIT(64'h7F7F7F0080808000)) 
    \timeout_cntr[3]_i_1 
       (.I0(\timeout_cntr_reg_n_0_[1] ),
        .I1(\timeout_cntr_reg_n_0_[0] ),
        .I2(\timeout_cntr_reg_n_0_[2] ),
        .I3(\drp_state_reg_n_0_[5] ),
        .I4(\drp_state_reg_n_0_[2] ),
        .I5(\timeout_cntr_reg_n_0_[3] ),
        .O(timeout_cntr[3]));
  LUT6 #(
    .INIT(64'h7FFF000080000000)) 
    \timeout_cntr[4]_i_1 
       (.I0(\timeout_cntr_reg_n_0_[2] ),
        .I1(\timeout_cntr_reg_n_0_[0] ),
        .I2(\timeout_cntr_reg_n_0_[1] ),
        .I3(\timeout_cntr_reg_n_0_[3] ),
        .I4(\drp_state[1]_i_2_n_0 ),
        .I5(\timeout_cntr_reg_n_0_[4] ),
        .O(timeout_cntr[4]));
  LUT6 #(
    .INIT(64'h7FFF000080000000)) 
    \timeout_cntr[5]_i_1 
       (.I0(\timeout_cntr_reg_n_0_[3] ),
        .I1(\timeout_cntr[5]_i_2_n_0 ),
        .I2(\timeout_cntr_reg_n_0_[2] ),
        .I3(\timeout_cntr_reg_n_0_[4] ),
        .I4(\drp_state[1]_i_2_n_0 ),
        .I5(\timeout_cntr_reg_n_0_[5] ),
        .O(timeout_cntr[5]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \timeout_cntr[5]_i_2 
       (.I0(\timeout_cntr_reg_n_0_[0] ),
        .I1(\timeout_cntr_reg_n_0_[1] ),
        .O(\timeout_cntr[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT4 #(
    .INIT(16'hA854)) 
    \timeout_cntr[6]_i_1 
       (.I0(\timeout_cntr[7]_i_5_n_0 ),
        .I1(\drp_state_reg_n_0_[5] ),
        .I2(\drp_state_reg_n_0_[2] ),
        .I3(\timeout_cntr_reg_n_0_[6] ),
        .O(timeout_cntr[6]));
  LUT6 #(
    .INIT(64'h0000FFFF0000FF40)) 
    \timeout_cntr[7]_i_1 
       (.I0(\drp_state[1]_i_2_n_0 ),
        .I1(\drp_state_reg_n_0_[0] ),
        .I2(\drp_state[4]_i_2_n_0 ),
        .I3(\timeout_cntr[7]_i_3_n_0 ),
        .I4(RESET_I),
        .I5(\timeout_cntr[7]_i_4_n_0 ),
        .O(\timeout_cntr[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT5 #(
    .INIT(32'hBBB04440)) 
    \timeout_cntr[7]_i_2 
       (.I0(\timeout_cntr[7]_i_5_n_0 ),
        .I1(\timeout_cntr_reg_n_0_[6] ),
        .I2(\drp_state_reg_n_0_[5] ),
        .I3(\drp_state_reg_n_0_[2] ),
        .I4(\timeout_cntr_reg_n_0_[7] ),
        .O(timeout_cntr[7]));
  LUT6 #(
    .INIT(64'h0000000100010000)) 
    \timeout_cntr[7]_i_3 
       (.I0(\drp_state_reg_n_0_[0] ),
        .I1(\drp_state_reg_n_0_[1] ),
        .I2(\drp_state_reg_n_0_[4] ),
        .I3(\drp_state_reg_n_0_[6] ),
        .I4(\drp_state_reg_n_0_[5] ),
        .I5(\drp_state_reg_n_0_[2] ),
        .O(\timeout_cntr[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000100010100)) 
    \timeout_cntr[7]_i_4 
       (.I0(\drp_state_reg_n_0_[2] ),
        .I1(\drp_state_reg_n_0_[5] ),
        .I2(\drp_state_reg_n_0_[0] ),
        .I3(\drp_state_reg_n_0_[1] ),
        .I4(\drp_state_reg_n_0_[4] ),
        .I5(\drp_state_reg_n_0_[6] ),
        .O(\timeout_cntr[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \timeout_cntr[7]_i_5 
       (.I0(\timeout_cntr_reg_n_0_[4] ),
        .I1(\timeout_cntr_reg_n_0_[2] ),
        .I2(\timeout_cntr_reg_n_0_[0] ),
        .I3(\timeout_cntr_reg_n_0_[1] ),
        .I4(\timeout_cntr_reg_n_0_[3] ),
        .I5(\timeout_cntr_reg_n_0_[5] ),
        .O(\timeout_cntr[7]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[0] 
       (.C(DCLK_I),
        .CE(\timeout_cntr[7]_i_1_n_0 ),
        .D(timeout_cntr[0]),
        .Q(\timeout_cntr_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[1] 
       (.C(DCLK_I),
        .CE(\timeout_cntr[7]_i_1_n_0 ),
        .D(timeout_cntr[1]),
        .Q(\timeout_cntr_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[2] 
       (.C(DCLK_I),
        .CE(\timeout_cntr[7]_i_1_n_0 ),
        .D(timeout_cntr[2]),
        .Q(\timeout_cntr_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[3] 
       (.C(DCLK_I),
        .CE(\timeout_cntr[7]_i_1_n_0 ),
        .D(timeout_cntr[3]),
        .Q(\timeout_cntr_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[4] 
       (.C(DCLK_I),
        .CE(\timeout_cntr[7]_i_1_n_0 ),
        .D(timeout_cntr[4]),
        .Q(\timeout_cntr_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[5] 
       (.C(DCLK_I),
        .CE(\timeout_cntr[7]_i_1_n_0 ),
        .D(timeout_cntr[5]),
        .Q(\timeout_cntr_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[6] 
       (.C(DCLK_I),
        .CE(\timeout_cntr[7]_i_1_n_0 ),
        .D(timeout_cntr[6]),
        .Q(\timeout_cntr_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[7] 
       (.C(DCLK_I),
        .CE(\timeout_cntr[7]_i_1_n_0 ),
        .D(timeout_cntr[7]),
        .Q(\timeout_cntr_reg_n_0_[7] ),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFF10)) 
    \we[0]_i_1 
       (.I0(di1[4]),
        .I1(di1[5]),
        .I2(done_reg_n_0),
        .I3(DEN_USR_I[0]),
        .O(we[0]));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT4 #(
    .INIT(16'hEF00)) 
    \we[0]_i_2 
       (.I0(di1[4]),
        .I1(di1[5]),
        .I2(done_reg_n_0),
        .I3(DWE_USR_I[0]),
        .O(\we[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFF40)) 
    \we[1]_i_1 
       (.I0(di1[5]),
        .I1(di1[4]),
        .I2(done_reg_n_0),
        .I3(DEN_USR_I[1]),
        .O(we[1]));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT4 #(
    .INIT(16'hBF00)) 
    \we[1]_i_2 
       (.I0(di1[5]),
        .I1(di1[4]),
        .I2(done_reg_n_0),
        .I3(DWE_USR_I[1]),
        .O(\we[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFF40)) 
    \we[2]_i_1 
       (.I0(di1[4]),
        .I1(di1[5]),
        .I2(done_reg_n_0),
        .I3(DEN_USR_I[2]),
        .O(we[2]));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT4 #(
    .INIT(16'hBF00)) 
    \we[2]_i_2 
       (.I0(di1[4]),
        .I1(di1[5]),
        .I2(done_reg_n_0),
        .I3(DWE_USR_I[2]),
        .O(\we[2]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \we_reg[0] 
       (.C(DCLK_I),
        .CE(we[0]),
        .D(\we[0]_i_2_n_0 ),
        .Q(\we_reg_n_0_[0] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \we_reg[1] 
       (.C(DCLK_I),
        .CE(we[1]),
        .D(\we[1]_i_2_n_0 ),
        .Q(\we_reg_n_0_[1] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \we_reg[2] 
       (.C(DCLK_I),
        .CE(we[2]),
        .D(\we[2]_i_2_n_0 ),
        .Q(\we_reg_n_0_[2] ),
        .R(RESET_I));
  LUT4 #(
    .INIT(16'h0006)) 
    wr_i_1
       (.I0(\arb_state_reg_n_0_[1] ),
        .I1(\arb_state_reg_n_0_[0] ),
        .I2(\arb_state_reg_n_0_[3] ),
        .I3(\arb_state_reg_n_0_[2] ),
        .O(wr));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'h08)) 
    wr_i_2
       (.I0(rd1),
        .I1(di0),
        .I2(\arb_state_reg_n_0_[1] ),
        .O(wr_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    wr_i_3
       (.I0(\we_reg_n_0_[2] ),
        .I1(di1[5]),
        .I2(\we_reg_n_0_[1] ),
        .I3(di1[4]),
        .I4(\we_reg_n_0_[0] ),
        .O(rd1));
  FDRE #(
    .INIT(1'b0)) 
    wr_reg
       (.C(DCLK_I),
        .CE(wr),
        .D(wr_i_2_n_0),
        .Q(wr_reg_n_0),
        .R(RESET_I));
endmodule

(* ARB_INC = "4'b1000" *) (* ARB_REPORT = "4'b0100" *) (* ARB_START = "4'b0001" *) 
(* ARB_WAIT = "4'b0010" *) (* C_ADDR_WIDTH = "17" *) (* C_DATA_WIDTH = "16" *) 
(* C_NUM_CLIENTS = "3" *) (* DRP_DONE = "7'b1000000" *) (* DRP_MODIFY = "7'b0001000" *) 
(* DRP_READ = "7'b0000010" *) (* DRP_READ_ACK = "7'b0000100" *) (* DRP_WAIT = "7'b0000001" *) 
(* DRP_WRITE = "7'b0010000" *) (* DRP_WRITE_ACK = "7'b0100000" *) (* ORIG_REF_NAME = "ibert_lib_v1_0_7_drp_arbiter" *) 
module c2c_gth_in_system_ibert_0_ibert_lib_v1_0_7_drp_arbiter__1
   (DCLK_I,
    RESET_I,
    DEN_USR_I,
    DWE_USR_I,
    DADDR_USR_I,
    DI_USR_I,
    DO_USR_O,
    DRDY_USR_O,
    DEN_O,
    DWE_O,
    DADDR_O,
    DI_O,
    DO_I,
    DRDY_I);
  input DCLK_I;
  input RESET_I;
  input [2:0]DEN_USR_I;
  input [2:0]DWE_USR_I;
  input [50:0]DADDR_USR_I;
  input [47:0]DI_USR_I;
  output [47:0]DO_USR_O;
  output [2:0]DRDY_USR_O;
  output DEN_O;
  output DWE_O;
  output [16:0]DADDR_O;
  output [15:0]DI_O;
  input [15:0]DO_I;
  input DRDY_I;

  wire CEB2;
  wire [16:0]DADDR_O;
  wire \DADDR_O[16]_i_1_n_0 ;
  wire [50:0]DADDR_USR_I;
  wire DCLK_I;
  wire DEN_O;
  wire DEN_O_i_1_n_0;
  wire DEN_O_i_2_n_0;
  wire [2:0]DEN_USR_I;
  wire [15:0]DI_O;
  wire \DI_O[15]_i_1_n_0 ;
  wire [47:0]DI_USR_I;
  wire [15:0]DO_I;
  wire [47:0]DO_USR_O;
  wire [47:32]DO_USR_O0;
  wire DRDY_I;
  wire [2:0]DRDY_USR_O;
  wire \DRDY_USR_O[0]_i_1_n_0 ;
  wire \DRDY_USR_O[0]_i_2_n_0 ;
  wire \DRDY_USR_O[1]_i_1_n_0 ;
  wire \DRDY_USR_O[2]_i_1_n_0 ;
  wire \DRDY_USR_O[2]_i_2_n_0 ;
  wire DWE_O;
  wire [2:0]DWE_USR_I;
  wire RESET_I;
  wire [50:0]addr_i;
  wire [3:0]arb_state;
  wire \arb_state_reg_n_0_[0] ;
  wire \arb_state_reg_n_0_[1] ;
  wire \arb_state_reg_n_0_[2] ;
  wire \arb_state_reg_n_0_[3] ;
  wire daddr;
  wire [16:0]daddr0;
  wire \daddr_reg_n_0_[0] ;
  wire \daddr_reg_n_0_[10] ;
  wire \daddr_reg_n_0_[11] ;
  wire \daddr_reg_n_0_[12] ;
  wire \daddr_reg_n_0_[13] ;
  wire \daddr_reg_n_0_[14] ;
  wire \daddr_reg_n_0_[15] ;
  wire \daddr_reg_n_0_[16] ;
  wire \daddr_reg_n_0_[1] ;
  wire \daddr_reg_n_0_[2] ;
  wire \daddr_reg_n_0_[3] ;
  wire \daddr_reg_n_0_[4] ;
  wire \daddr_reg_n_0_[5] ;
  wire \daddr_reg_n_0_[6] ;
  wire \daddr_reg_n_0_[7] ;
  wire \daddr_reg_n_0_[8] ;
  wire \daddr_reg_n_0_[9] ;
  wire [47:0]data_i;
  wire [15:0]di;
  wire di0;
  wire [15:0]di0__0;
  wire [5:4]di1;
  wire do_r;
  wire done_i_1_n_0;
  wire done_reg_n_0;
  wire [6:0]drp_state;
  wire \drp_state[0]_i_2_n_0 ;
  wire \drp_state[1]_i_2_n_0 ;
  wire \drp_state[2]_i_2_n_0 ;
  wire \drp_state[4]_i_2_n_0 ;
  wire \drp_state[5]_i_2_n_0 ;
  wire \drp_state[6]_i_2_n_0 ;
  wire \drp_state[6]_i_3_n_0 ;
  wire \drp_state[6]_i_4_n_0 ;
  wire \drp_state_reg_n_0_[0] ;
  wire \drp_state_reg_n_0_[1] ;
  wire \drp_state_reg_n_0_[2] ;
  wire \drp_state_reg_n_0_[4] ;
  wire \drp_state_reg_n_0_[5] ;
  wire \drp_state_reg_n_0_[6] ;
  wire [2:0]en;
  wire \en[0]_i_1_n_0 ;
  wire \en[1]_i_1_n_0 ;
  wire \en[2]_i_1_n_0 ;
  wire \idx[0]__0_i_1_n_0 ;
  wire \idx[1]__0_i_2_n_0 ;
  wire [47:15]p_0_in;
  wire rd1;
  wire rd_i_1_n_0;
  wire rd_reg_n_0;
  wire [7:0]timeout_cntr;
  wire \timeout_cntr[5]_i_2_n_0 ;
  wire \timeout_cntr[7]_i_1_n_0 ;
  wire \timeout_cntr[7]_i_3_n_0 ;
  wire \timeout_cntr[7]_i_4_n_0 ;
  wire \timeout_cntr[7]_i_5_n_0 ;
  wire \timeout_cntr_reg_n_0_[0] ;
  wire \timeout_cntr_reg_n_0_[1] ;
  wire \timeout_cntr_reg_n_0_[2] ;
  wire \timeout_cntr_reg_n_0_[3] ;
  wire \timeout_cntr_reg_n_0_[4] ;
  wire \timeout_cntr_reg_n_0_[5] ;
  wire \timeout_cntr_reg_n_0_[6] ;
  wire \timeout_cntr_reg_n_0_[7] ;
  wire [2:0]we;
  wire \we[0]_i_2_n_0 ;
  wire \we[1]_i_2_n_0 ;
  wire \we[2]_i_2_n_0 ;
  wire \we_reg_n_0_[0] ;
  wire \we_reg_n_0_[1] ;
  wire \we_reg_n_0_[2] ;
  wire wr;
  wire wr_i_2_n_0;
  wire wr_reg_n_0;

  LUT6 #(
    .INIT(64'h0000000000000014)) 
    \DADDR_O[16]_i_1 
       (.I0(\drp_state_reg_n_0_[6] ),
        .I1(\drp_state_reg_n_0_[4] ),
        .I2(\drp_state_reg_n_0_[1] ),
        .I3(\drp_state_reg_n_0_[0] ),
        .I4(\drp_state_reg_n_0_[5] ),
        .I5(\drp_state_reg_n_0_[2] ),
        .O(\DADDR_O[16]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[0] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[0] ),
        .Q(DADDR_O[0]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[10] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[10] ),
        .Q(DADDR_O[10]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[11] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[11] ),
        .Q(DADDR_O[11]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[12] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[12] ),
        .Q(DADDR_O[12]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[13] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[13] ),
        .Q(DADDR_O[13]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[14] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[14] ),
        .Q(DADDR_O[14]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[15] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[15] ),
        .Q(DADDR_O[15]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[16] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[16] ),
        .Q(DADDR_O[16]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[1] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[1] ),
        .Q(DADDR_O[1]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[2] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[2] ),
        .Q(DADDR_O[2]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[3] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[3] ),
        .Q(DADDR_O[3]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[4] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[4] ),
        .Q(DADDR_O[4]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[5] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[5] ),
        .Q(DADDR_O[5]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[6] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[6] ),
        .Q(DADDR_O[6]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[7] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[7] ),
        .Q(DADDR_O[7]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[8] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[8] ),
        .Q(DADDR_O[8]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[9] 
       (.C(DCLK_I),
        .CE(\DADDR_O[16]_i_1_n_0 ),
        .D(\daddr_reg_n_0_[9] ),
        .Q(DADDR_O[9]),
        .R(RESET_I));
  LUT6 #(
    .INIT(64'h0000000000010106)) 
    DEN_O_i_1
       (.I0(\drp_state_reg_n_0_[2] ),
        .I1(\drp_state_reg_n_0_[5] ),
        .I2(\drp_state_reg_n_0_[6] ),
        .I3(\drp_state_reg_n_0_[4] ),
        .I4(\drp_state_reg_n_0_[1] ),
        .I5(\drp_state_reg_n_0_[0] ),
        .O(DEN_O_i_1_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    DEN_O_i_2
       (.I0(\drp_state_reg_n_0_[5] ),
        .I1(\drp_state_reg_n_0_[2] ),
        .O(DEN_O_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    DEN_O_reg
       (.C(DCLK_I),
        .CE(DEN_O_i_1_n_0),
        .D(DEN_O_i_2_n_0),
        .Q(DEN_O),
        .R(RESET_I));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \DI_O[15]_i_1 
       (.I0(\drp_state_reg_n_0_[6] ),
        .I1(\drp_state_reg_n_0_[4] ),
        .I2(\drp_state_reg_n_0_[2] ),
        .I3(\drp_state_reg_n_0_[5] ),
        .I4(\drp_state_reg_n_0_[0] ),
        .I5(\drp_state_reg_n_0_[1] ),
        .O(\DI_O[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[0] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[0]),
        .Q(DI_O[0]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[10] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[10]),
        .Q(DI_O[10]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[11] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[11]),
        .Q(DI_O[11]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[12] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[12]),
        .Q(DI_O[12]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[13] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[13]),
        .Q(DI_O[13]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[14] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[14]),
        .Q(DI_O[14]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[15] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[15]),
        .Q(DI_O[15]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[1] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[1]),
        .Q(DI_O[1]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[2] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[2]),
        .Q(DI_O[2]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[3] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[3]),
        .Q(DI_O[3]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[4] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[4]),
        .Q(DI_O[4]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[5] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[5]),
        .Q(DI_O[5]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[6] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[6]),
        .Q(DI_O[6]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[7] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[7]),
        .Q(DI_O[7]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[8] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[8]),
        .Q(DI_O[8]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[9] 
       (.C(DCLK_I),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(di[9]),
        .Q(DI_O[9]),
        .R(RESET_I));
  LUT6 #(
    .INIT(64'h0000000000000100)) 
    \DO_USR_O[15]_i_1 
       (.I0(\arb_state_reg_n_0_[3] ),
        .I1(\arb_state_reg_n_0_[1] ),
        .I2(\arb_state_reg_n_0_[0] ),
        .I3(\arb_state_reg_n_0_[2] ),
        .I4(di1[5]),
        .I5(di1[4]),
        .O(p_0_in[15]));
  LUT6 #(
    .INIT(64'h0000010000000000)) 
    \DO_USR_O[31]_i_1 
       (.I0(\arb_state_reg_n_0_[3] ),
        .I1(\arb_state_reg_n_0_[1] ),
        .I2(\arb_state_reg_n_0_[0] ),
        .I3(\arb_state_reg_n_0_[2] ),
        .I4(di1[5]),
        .I5(di1[4]),
        .O(p_0_in[31]));
  LUT6 #(
    .INIT(64'h0000010000000000)) 
    \DO_USR_O[47]_i_1 
       (.I0(\arb_state_reg_n_0_[3] ),
        .I1(\arb_state_reg_n_0_[1] ),
        .I2(\arb_state_reg_n_0_[0] ),
        .I3(\arb_state_reg_n_0_[2] ),
        .I4(di1[4]),
        .I5(di1[5]),
        .O(p_0_in[47]));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[0] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[32]),
        .Q(DO_USR_O[0]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[10] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[42]),
        .Q(DO_USR_O[10]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[11] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[43]),
        .Q(DO_USR_O[11]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[12] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[44]),
        .Q(DO_USR_O[12]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[13] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[45]),
        .Q(DO_USR_O[13]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[14] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[46]),
        .Q(DO_USR_O[14]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[15] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[47]),
        .Q(DO_USR_O[15]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[16] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[32]),
        .Q(DO_USR_O[16]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[17] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[33]),
        .Q(DO_USR_O[17]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[18] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[34]),
        .Q(DO_USR_O[18]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[19] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[35]),
        .Q(DO_USR_O[19]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[1] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[33]),
        .Q(DO_USR_O[1]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[20] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[36]),
        .Q(DO_USR_O[20]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[21] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[37]),
        .Q(DO_USR_O[21]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[22] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[38]),
        .Q(DO_USR_O[22]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[23] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[39]),
        .Q(DO_USR_O[23]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[24] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[40]),
        .Q(DO_USR_O[24]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[25] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[41]),
        .Q(DO_USR_O[25]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[26] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[42]),
        .Q(DO_USR_O[26]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[27] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[43]),
        .Q(DO_USR_O[27]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[28] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[44]),
        .Q(DO_USR_O[28]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[29] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[45]),
        .Q(DO_USR_O[29]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[2] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[34]),
        .Q(DO_USR_O[2]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[30] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[46]),
        .Q(DO_USR_O[30]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[31] 
       (.C(DCLK_I),
        .CE(p_0_in[31]),
        .D(DO_USR_O0[47]),
        .Q(DO_USR_O[31]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[32] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[32]),
        .Q(DO_USR_O[32]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[33] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[33]),
        .Q(DO_USR_O[33]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[34] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[34]),
        .Q(DO_USR_O[34]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[35] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[35]),
        .Q(DO_USR_O[35]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[36] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[36]),
        .Q(DO_USR_O[36]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[37] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[37]),
        .Q(DO_USR_O[37]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[38] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[38]),
        .Q(DO_USR_O[38]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[39] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[39]),
        .Q(DO_USR_O[39]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[3] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[35]),
        .Q(DO_USR_O[3]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[40] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[40]),
        .Q(DO_USR_O[40]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[41] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[41]),
        .Q(DO_USR_O[41]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[42] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[42]),
        .Q(DO_USR_O[42]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[43] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[43]),
        .Q(DO_USR_O[43]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[44] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[44]),
        .Q(DO_USR_O[44]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[45] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[45]),
        .Q(DO_USR_O[45]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[46] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[46]),
        .Q(DO_USR_O[46]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[47] 
       (.C(DCLK_I),
        .CE(p_0_in[47]),
        .D(DO_USR_O0[47]),
        .Q(DO_USR_O[47]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[4] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[36]),
        .Q(DO_USR_O[4]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[5] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[37]),
        .Q(DO_USR_O[5]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[6] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[38]),
        .Q(DO_USR_O[6]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[7] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[39]),
        .Q(DO_USR_O[7]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[8] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[40]),
        .Q(DO_USR_O[8]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[9] 
       (.C(DCLK_I),
        .CE(p_0_in[15]),
        .D(DO_USR_O0[41]),
        .Q(DO_USR_O[9]),
        .R(RESET_I));
  LUT6 #(
    .INIT(64'hFEFFFFFF00100000)) 
    \DRDY_USR_O[0]_i_1 
       (.I0(\arb_state_reg_n_0_[1] ),
        .I1(\arb_state_reg_n_0_[0] ),
        .I2(\arb_state_reg_n_0_[2] ),
        .I3(\arb_state_reg_n_0_[3] ),
        .I4(\DRDY_USR_O[0]_i_2_n_0 ),
        .I5(DRDY_USR_O[0]),
        .O(\DRDY_USR_O[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \DRDY_USR_O[0]_i_2 
       (.I0(di1[5]),
        .I1(di1[4]),
        .O(\DRDY_USR_O[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEFFFFFF00100000)) 
    \DRDY_USR_O[1]_i_1 
       (.I0(\arb_state_reg_n_0_[1] ),
        .I1(\arb_state_reg_n_0_[0] ),
        .I2(\arb_state_reg_n_0_[2] ),
        .I3(\arb_state_reg_n_0_[3] ),
        .I4(\idx[1]__0_i_2_n_0 ),
        .I5(DRDY_USR_O[1]),
        .O(\DRDY_USR_O[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFEFFFFFF00100000)) 
    \DRDY_USR_O[2]_i_1 
       (.I0(\arb_state_reg_n_0_[1] ),
        .I1(\arb_state_reg_n_0_[0] ),
        .I2(\arb_state_reg_n_0_[2] ),
        .I3(\arb_state_reg_n_0_[3] ),
        .I4(\DRDY_USR_O[2]_i_2_n_0 ),
        .I5(DRDY_USR_O[2]),
        .O(\DRDY_USR_O[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \DRDY_USR_O[2]_i_2 
       (.I0(di1[5]),
        .I1(di1[4]),
        .O(\DRDY_USR_O[2]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \DRDY_USR_O_reg[0] 
       (.C(DCLK_I),
        .CE(1'b1),
        .D(\DRDY_USR_O[0]_i_1_n_0 ),
        .Q(DRDY_USR_O[0]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DRDY_USR_O_reg[1] 
       (.C(DCLK_I),
        .CE(1'b1),
        .D(\DRDY_USR_O[1]_i_1_n_0 ),
        .Q(DRDY_USR_O[1]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \DRDY_USR_O_reg[2] 
       (.C(DCLK_I),
        .CE(1'b1),
        .D(\DRDY_USR_O[2]_i_1_n_0 ),
        .Q(DRDY_USR_O[2]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    DWE_O_reg
       (.C(DCLK_I),
        .CE(DEN_O_i_1_n_0),
        .D(\drp_state_reg_n_0_[4] ),
        .Q(DWE_O),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[0] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[0]),
        .Q(addr_i[0]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[10] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[10]),
        .Q(addr_i[10]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[11] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[11]),
        .Q(addr_i[11]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[12] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[12]),
        .Q(addr_i[12]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[13] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[13]),
        .Q(addr_i[13]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[14] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[14]),
        .Q(addr_i[14]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[15] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[15]),
        .Q(addr_i[15]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[16] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[16]),
        .Q(addr_i[16]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[17] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[17]),
        .Q(addr_i[17]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[18] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[18]),
        .Q(addr_i[18]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[19] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[19]),
        .Q(addr_i[19]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[1] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[1]),
        .Q(addr_i[1]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[20] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[20]),
        .Q(addr_i[20]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[21] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[21]),
        .Q(addr_i[21]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[22] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[22]),
        .Q(addr_i[22]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[23] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[23]),
        .Q(addr_i[23]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[24] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[24]),
        .Q(addr_i[24]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[25] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[25]),
        .Q(addr_i[25]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[26] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[26]),
        .Q(addr_i[26]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[27] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[27]),
        .Q(addr_i[27]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[28] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[28]),
        .Q(addr_i[28]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[29] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[29]),
        .Q(addr_i[29]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[2] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[2]),
        .Q(addr_i[2]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[30] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[30]),
        .Q(addr_i[30]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[31] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[31]),
        .Q(addr_i[31]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[32] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[32]),
        .Q(addr_i[32]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[33] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DADDR_USR_I[33]),
        .Q(addr_i[33]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[34] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[34]),
        .Q(addr_i[34]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[35] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[35]),
        .Q(addr_i[35]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[36] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[36]),
        .Q(addr_i[36]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[37] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[37]),
        .Q(addr_i[37]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[38] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[38]),
        .Q(addr_i[38]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[39] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[39]),
        .Q(addr_i[39]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[3] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[3]),
        .Q(addr_i[3]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[40] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[40]),
        .Q(addr_i[40]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[41] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[41]),
        .Q(addr_i[41]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[42] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[42]),
        .Q(addr_i[42]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[43] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[43]),
        .Q(addr_i[43]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[44] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[44]),
        .Q(addr_i[44]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[45] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[45]),
        .Q(addr_i[45]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[46] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[46]),
        .Q(addr_i[46]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[47] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[47]),
        .Q(addr_i[47]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[48] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[48]),
        .Q(addr_i[48]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[49] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[49]),
        .Q(addr_i[49]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[4] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[4]),
        .Q(addr_i[4]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[50] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DADDR_USR_I[50]),
        .Q(addr_i[50]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[5] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[5]),
        .Q(addr_i[5]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[6] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[6]),
        .Q(addr_i[6]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[7] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[7]),
        .Q(addr_i[7]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[8] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[8]),
        .Q(addr_i[8]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[9] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DADDR_USR_I[9]),
        .Q(addr_i[9]),
        .R(RESET_I));
  LUT4 #(
    .INIT(16'hFEEB)) 
    \arb_state[0]_i_1 
       (.I0(\arb_state_reg_n_0_[3] ),
        .I1(\arb_state_reg_n_0_[0] ),
        .I2(\arb_state_reg_n_0_[2] ),
        .I3(\arb_state_reg_n_0_[1] ),
        .O(arb_state[0]));
  LUT6 #(
    .INIT(64'h0011010000000100)) 
    \arb_state[1]_i_1 
       (.I0(\arb_state_reg_n_0_[2] ),
        .I1(\arb_state_reg_n_0_[3] ),
        .I2(done_reg_n_0),
        .I3(\arb_state_reg_n_0_[1] ),
        .I4(\arb_state_reg_n_0_[0] ),
        .I5(di0),
        .O(arb_state[1]));
  LUT5 #(
    .INIT(32'h00000020)) 
    \arb_state[2]_i_1 
       (.I0(\arb_state_reg_n_0_[1] ),
        .I1(\arb_state_reg_n_0_[2] ),
        .I2(done_reg_n_0),
        .I3(\arb_state_reg_n_0_[3] ),
        .I4(\arb_state_reg_n_0_[0] ),
        .O(arb_state[2]));
  LUT5 #(
    .INIT(32'h00100110)) 
    \arb_state[3]_i_1 
       (.I0(\arb_state_reg_n_0_[3] ),
        .I1(\arb_state_reg_n_0_[1] ),
        .I2(\arb_state_reg_n_0_[2] ),
        .I3(\arb_state_reg_n_0_[0] ),
        .I4(di0),
        .O(arb_state[3]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \arb_state[3]_i_2 
       (.I0(en[2]),
        .I1(di1[5]),
        .I2(en[1]),
        .I3(di1[4]),
        .I4(en[0]),
        .O(di0));
  FDSE #(
    .INIT(1'b1)) 
    \arb_state_reg[0] 
       (.C(DCLK_I),
        .CE(1'b1),
        .D(arb_state[0]),
        .Q(\arb_state_reg_n_0_[0] ),
        .S(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \arb_state_reg[1] 
       (.C(DCLK_I),
        .CE(1'b1),
        .D(arb_state[1]),
        .Q(\arb_state_reg_n_0_[1] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \arb_state_reg[2] 
       (.C(DCLK_I),
        .CE(1'b1),
        .D(arb_state[2]),
        .Q(\arb_state_reg_n_0_[2] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \arb_state_reg[3] 
       (.C(DCLK_I),
        .CE(1'b1),
        .D(arb_state[3]),
        .Q(\arb_state_reg_n_0_[3] ),
        .R(RESET_I));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[0]_i_1 
       (.I0(addr_i[17]),
        .I1(di1[4]),
        .I2(addr_i[34]),
        .I3(di1[5]),
        .I4(addr_i[0]),
        .O(daddr0[0]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[10]_i_1 
       (.I0(addr_i[27]),
        .I1(di1[4]),
        .I2(addr_i[44]),
        .I3(di1[5]),
        .I4(addr_i[10]),
        .O(daddr0[10]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[11]_i_1 
       (.I0(addr_i[28]),
        .I1(di1[4]),
        .I2(addr_i[45]),
        .I3(di1[5]),
        .I4(addr_i[11]),
        .O(daddr0[11]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[12]_i_1 
       (.I0(addr_i[29]),
        .I1(di1[4]),
        .I2(addr_i[46]),
        .I3(di1[5]),
        .I4(addr_i[12]),
        .O(daddr0[12]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[13]_i_1 
       (.I0(addr_i[30]),
        .I1(di1[4]),
        .I2(addr_i[47]),
        .I3(di1[5]),
        .I4(addr_i[13]),
        .O(daddr0[13]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[14]_i_1 
       (.I0(addr_i[31]),
        .I1(di1[4]),
        .I2(addr_i[48]),
        .I3(di1[5]),
        .I4(addr_i[14]),
        .O(daddr0[14]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[15]_i_1 
       (.I0(addr_i[32]),
        .I1(di1[4]),
        .I2(addr_i[49]),
        .I3(di1[5]),
        .I4(addr_i[15]),
        .O(daddr0[15]));
  LUT5 #(
    .INIT(32'h00000020)) 
    \daddr[16]_i_1 
       (.I0(\arb_state_reg_n_0_[0] ),
        .I1(\arb_state_reg_n_0_[2] ),
        .I2(di0),
        .I3(\arb_state_reg_n_0_[1] ),
        .I4(\arb_state_reg_n_0_[3] ),
        .O(daddr));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[16]_i_2 
       (.I0(addr_i[33]),
        .I1(di1[4]),
        .I2(addr_i[50]),
        .I3(di1[5]),
        .I4(addr_i[16]),
        .O(daddr0[16]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[1]_i_1 
       (.I0(addr_i[18]),
        .I1(di1[4]),
        .I2(addr_i[35]),
        .I3(di1[5]),
        .I4(addr_i[1]),
        .O(daddr0[1]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[2]_i_1 
       (.I0(addr_i[19]),
        .I1(di1[4]),
        .I2(addr_i[36]),
        .I3(di1[5]),
        .I4(addr_i[2]),
        .O(daddr0[2]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[3]_i_1 
       (.I0(addr_i[20]),
        .I1(di1[4]),
        .I2(addr_i[37]),
        .I3(di1[5]),
        .I4(addr_i[3]),
        .O(daddr0[3]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[4]_i_1 
       (.I0(addr_i[21]),
        .I1(di1[4]),
        .I2(addr_i[38]),
        .I3(di1[5]),
        .I4(addr_i[4]),
        .O(daddr0[4]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[5]_i_1 
       (.I0(addr_i[22]),
        .I1(di1[4]),
        .I2(addr_i[39]),
        .I3(di1[5]),
        .I4(addr_i[5]),
        .O(daddr0[5]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[6]_i_1 
       (.I0(addr_i[23]),
        .I1(di1[4]),
        .I2(addr_i[40]),
        .I3(di1[5]),
        .I4(addr_i[6]),
        .O(daddr0[6]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[7]_i_1 
       (.I0(addr_i[24]),
        .I1(di1[4]),
        .I2(addr_i[41]),
        .I3(di1[5]),
        .I4(addr_i[7]),
        .O(daddr0[7]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[8]_i_1 
       (.I0(addr_i[25]),
        .I1(di1[4]),
        .I2(addr_i[42]),
        .I3(di1[5]),
        .I4(addr_i[8]),
        .O(daddr0[8]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \daddr[9]_i_1 
       (.I0(addr_i[26]),
        .I1(di1[4]),
        .I2(addr_i[43]),
        .I3(di1[5]),
        .I4(addr_i[9]),
        .O(daddr0[9]));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[0] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[0]),
        .Q(\daddr_reg_n_0_[0] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[10] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[10]),
        .Q(\daddr_reg_n_0_[10] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[11] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[11]),
        .Q(\daddr_reg_n_0_[11] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[12] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[12]),
        .Q(\daddr_reg_n_0_[12] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[13] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[13]),
        .Q(\daddr_reg_n_0_[13] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[14] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[14]),
        .Q(\daddr_reg_n_0_[14] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[15] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[15]),
        .Q(\daddr_reg_n_0_[15] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[16] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[16]),
        .Q(\daddr_reg_n_0_[16] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[1] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[1]),
        .Q(\daddr_reg_n_0_[1] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[2] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[2]),
        .Q(\daddr_reg_n_0_[2] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[3] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[3]),
        .Q(\daddr_reg_n_0_[3] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[4] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[4]),
        .Q(\daddr_reg_n_0_[4] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[5] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[5]),
        .Q(\daddr_reg_n_0_[5] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[6] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[6]),
        .Q(\daddr_reg_n_0_[6] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[7] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[7]),
        .Q(\daddr_reg_n_0_[7] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[8] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[8]),
        .Q(\daddr_reg_n_0_[8] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[9] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(daddr0[9]),
        .Q(\daddr_reg_n_0_[9] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[0] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[0]),
        .Q(data_i[0]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[10] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[10]),
        .Q(data_i[10]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[11] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[11]),
        .Q(data_i[11]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[12] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[12]),
        .Q(data_i[12]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[13] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[13]),
        .Q(data_i[13]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[14] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[14]),
        .Q(data_i[14]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[15] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[15]),
        .Q(data_i[15]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[16] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[16]),
        .Q(data_i[16]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[17] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[17]),
        .Q(data_i[17]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[18] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[18]),
        .Q(data_i[18]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[19] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[19]),
        .Q(data_i[19]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[1] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[1]),
        .Q(data_i[1]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[20] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[20]),
        .Q(data_i[20]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[21] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[21]),
        .Q(data_i[21]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[22] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[22]),
        .Q(data_i[22]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[23] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[23]),
        .Q(data_i[23]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[24] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[24]),
        .Q(data_i[24]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[25] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[25]),
        .Q(data_i[25]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[26] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[26]),
        .Q(data_i[26]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[27] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[27]),
        .Q(data_i[27]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[28] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[28]),
        .Q(data_i[28]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[29] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[29]),
        .Q(data_i[29]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[2] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[2]),
        .Q(data_i[2]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[30] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[30]),
        .Q(data_i[30]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[31] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[1]),
        .D(DI_USR_I[31]),
        .Q(data_i[31]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[32] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[32]),
        .Q(data_i[32]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[33] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[33]),
        .Q(data_i[33]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[34] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[34]),
        .Q(data_i[34]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[35] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[35]),
        .Q(data_i[35]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[36] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[36]),
        .Q(data_i[36]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[37] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[37]),
        .Q(data_i[37]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[38] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[38]),
        .Q(data_i[38]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[39] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[39]),
        .Q(data_i[39]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[3] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[3]),
        .Q(data_i[3]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[40] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[40]),
        .Q(data_i[40]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[41] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[41]),
        .Q(data_i[41]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[42] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[42]),
        .Q(data_i[42]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[43] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[43]),
        .Q(data_i[43]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[44] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[44]),
        .Q(data_i[44]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[45] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[45]),
        .Q(data_i[45]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[46] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[46]),
        .Q(data_i[46]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[47] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[2]),
        .D(DI_USR_I[47]),
        .Q(data_i[47]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[4] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[4]),
        .Q(data_i[4]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[5] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[5]),
        .Q(data_i[5]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[6] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[6]),
        .Q(data_i[6]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[7] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[7]),
        .Q(data_i[7]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[8] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[8]),
        .Q(data_i[8]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[9] 
       (.C(DCLK_I),
        .CE(DEN_USR_I[0]),
        .D(DI_USR_I[9]),
        .Q(data_i[9]),
        .R(RESET_I));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[0]_i_1 
       (.I0(data_i[16]),
        .I1(di1[4]),
        .I2(data_i[32]),
        .I3(di1[5]),
        .I4(data_i[0]),
        .O(di0__0[0]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[10]_i_1 
       (.I0(data_i[26]),
        .I1(di1[4]),
        .I2(data_i[42]),
        .I3(di1[5]),
        .I4(data_i[10]),
        .O(di0__0[10]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[11]_i_1 
       (.I0(data_i[27]),
        .I1(di1[4]),
        .I2(data_i[43]),
        .I3(di1[5]),
        .I4(data_i[11]),
        .O(di0__0[11]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[12]_i_1 
       (.I0(data_i[28]),
        .I1(di1[4]),
        .I2(data_i[44]),
        .I3(di1[5]),
        .I4(data_i[12]),
        .O(di0__0[12]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[13]_i_1 
       (.I0(data_i[29]),
        .I1(di1[4]),
        .I2(data_i[45]),
        .I3(di1[5]),
        .I4(data_i[13]),
        .O(di0__0[13]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[14]_i_1 
       (.I0(data_i[30]),
        .I1(di1[4]),
        .I2(data_i[46]),
        .I3(di1[5]),
        .I4(data_i[14]),
        .O(di0__0[14]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[15]_i_1 
       (.I0(data_i[31]),
        .I1(di1[4]),
        .I2(data_i[47]),
        .I3(di1[5]),
        .I4(data_i[15]),
        .O(di0__0[15]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[1]_i_1 
       (.I0(data_i[17]),
        .I1(di1[4]),
        .I2(data_i[33]),
        .I3(di1[5]),
        .I4(data_i[1]),
        .O(di0__0[1]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[2]_i_1 
       (.I0(data_i[18]),
        .I1(di1[4]),
        .I2(data_i[34]),
        .I3(di1[5]),
        .I4(data_i[2]),
        .O(di0__0[2]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[3]_i_1 
       (.I0(data_i[19]),
        .I1(di1[4]),
        .I2(data_i[35]),
        .I3(di1[5]),
        .I4(data_i[3]),
        .O(di0__0[3]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[4]_i_1 
       (.I0(data_i[20]),
        .I1(di1[4]),
        .I2(data_i[36]),
        .I3(di1[5]),
        .I4(data_i[4]),
        .O(di0__0[4]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[5]_i_1 
       (.I0(data_i[21]),
        .I1(di1[4]),
        .I2(data_i[37]),
        .I3(di1[5]),
        .I4(data_i[5]),
        .O(di0__0[5]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[6]_i_1 
       (.I0(data_i[22]),
        .I1(di1[4]),
        .I2(data_i[38]),
        .I3(di1[5]),
        .I4(data_i[6]),
        .O(di0__0[6]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[7]_i_1 
       (.I0(data_i[23]),
        .I1(di1[4]),
        .I2(data_i[39]),
        .I3(di1[5]),
        .I4(data_i[7]),
        .O(di0__0[7]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[8]_i_1 
       (.I0(data_i[24]),
        .I1(di1[4]),
        .I2(data_i[40]),
        .I3(di1[5]),
        .I4(data_i[8]),
        .O(di0__0[8]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di[9]_i_1 
       (.I0(data_i[25]),
        .I1(di1[4]),
        .I2(data_i[41]),
        .I3(di1[5]),
        .I4(data_i[9]),
        .O(di0__0[9]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[0] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[0]),
        .Q(di[0]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[10] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[10]),
        .Q(di[10]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[11] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[11]),
        .Q(di[11]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[12] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[12]),
        .Q(di[12]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[13] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[13]),
        .Q(di[13]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[14] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[14]),
        .Q(di[14]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[15] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[15]),
        .Q(di[15]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[1] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[1]),
        .Q(di[1]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[2] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[2]),
        .Q(di[2]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[3] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[3]),
        .Q(di[3]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[4] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[4]),
        .Q(di[4]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[5] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[5]),
        .Q(di[5]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[6] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[6]),
        .Q(di[6]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[7] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[7]),
        .Q(di[7]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[8] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[8]),
        .Q(di[8]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[9] 
       (.C(DCLK_I),
        .CE(daddr),
        .D(di0__0[9]),
        .Q(di[9]),
        .R(RESET_I));
  LUT4 #(
    .INIT(16'h0800)) 
    \do_r[15]_i_1 
       (.I0(\drp_state[6]_i_2_n_0 ),
        .I1(\drp_state_reg_n_0_[2] ),
        .I2(\drp_state_reg_n_0_[5] ),
        .I3(\drp_state[6]_i_3_n_0 ),
        .O(do_r));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[0] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[0]),
        .Q(DO_USR_O0[32]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[10] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[10]),
        .Q(DO_USR_O0[42]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[11] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[11]),
        .Q(DO_USR_O0[43]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[12] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[12]),
        .Q(DO_USR_O0[44]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[13] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[13]),
        .Q(DO_USR_O0[45]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[14] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[14]),
        .Q(DO_USR_O0[46]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[15] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[15]),
        .Q(DO_USR_O0[47]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[1] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[1]),
        .Q(DO_USR_O0[33]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[2] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[2]),
        .Q(DO_USR_O0[34]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[3] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[3]),
        .Q(DO_USR_O0[35]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[4] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[4]),
        .Q(DO_USR_O0[36]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[5] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[5]),
        .Q(DO_USR_O0[37]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[6] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[6]),
        .Q(DO_USR_O0[38]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[7] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[7]),
        .Q(DO_USR_O0[39]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[8] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[8]),
        .Q(DO_USR_O0[40]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[9] 
       (.C(DCLK_I),
        .CE(do_r),
        .D(DO_I[9]),
        .Q(DO_USR_O0[41]),
        .R(RESET_I));
  LUT5 #(
    .INIT(32'h88BF8880)) 
    done_i_1
       (.I0(\drp_state[4]_i_2_n_0 ),
        .I1(\drp_state[6]_i_3_n_0 ),
        .I2(\timeout_cntr[7]_i_3_n_0 ),
        .I3(\timeout_cntr[7]_i_4_n_0 ),
        .I4(done_reg_n_0),
        .O(done_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    done_reg
       (.C(DCLK_I),
        .CE(1'b1),
        .D(done_i_1_n_0),
        .Q(done_reg_n_0),
        .R(RESET_I));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEEA)) 
    \drp_state[0]_i_1 
       (.I0(\drp_state_reg_n_0_[6] ),
        .I1(\drp_state_reg_n_0_[2] ),
        .I2(\drp_state_reg_n_0_[5] ),
        .I3(\drp_state_reg_n_0_[0] ),
        .I4(\drp_state_reg_n_0_[1] ),
        .I5(\drp_state[0]_i_2_n_0 ),
        .O(drp_state[0]));
  LUT6 #(
    .INIT(64'hFF00EE11FF00EE13)) 
    \drp_state[0]_i_2 
       (.I0(\drp_state_reg_n_0_[0] ),
        .I1(\drp_state[1]_i_2_n_0 ),
        .I2(wr_reg_n_0),
        .I3(\drp_state_reg_n_0_[4] ),
        .I4(\drp_state_reg_n_0_[1] ),
        .I5(rd_reg_n_0),
        .O(\drp_state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000040)) 
    \drp_state[1]_i_1 
       (.I0(\drp_state[1]_i_2_n_0 ),
        .I1(rd_reg_n_0),
        .I2(\drp_state_reg_n_0_[0] ),
        .I3(\drp_state_reg_n_0_[1] ),
        .I4(\drp_state_reg_n_0_[4] ),
        .I5(\drp_state_reg_n_0_[6] ),
        .O(drp_state[1]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \drp_state[1]_i_2 
       (.I0(\drp_state_reg_n_0_[2] ),
        .I1(\drp_state_reg_n_0_[5] ),
        .O(\drp_state[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAEAAAAAAAAAA)) 
    \drp_state[2]_i_1 
       (.I0(\drp_state[2]_i_2_n_0 ),
        .I1(\drp_state[5]_i_2_n_0 ),
        .I2(DRDY_I),
        .I3(\drp_state_reg_n_0_[2] ),
        .I4(\drp_state_reg_n_0_[5] ),
        .I5(\drp_state[6]_i_2_n_0 ),
        .O(drp_state[2]));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    \drp_state[2]_i_2 
       (.I0(\drp_state_reg_n_0_[2] ),
        .I1(\drp_state_reg_n_0_[5] ),
        .I2(\drp_state_reg_n_0_[1] ),
        .I3(\drp_state_reg_n_0_[0] ),
        .I4(\drp_state_reg_n_0_[6] ),
        .I5(\drp_state_reg_n_0_[4] ),
        .O(\drp_state[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    \drp_state[4]_i_1 
       (.I0(\drp_state_reg_n_0_[2] ),
        .I1(\drp_state_reg_n_0_[5] ),
        .I2(rd_reg_n_0),
        .I3(\drp_state_reg_n_0_[0] ),
        .I4(wr_reg_n_0),
        .I5(\drp_state[4]_i_2_n_0 ),
        .O(drp_state[4]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \drp_state[4]_i_2 
       (.I0(\drp_state_reg_n_0_[6] ),
        .I1(\drp_state_reg_n_0_[4] ),
        .I2(\drp_state_reg_n_0_[1] ),
        .O(\drp_state[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAEAAAAAAAAAA)) 
    \drp_state[5]_i_1 
       (.I0(\DI_O[15]_i_1_n_0 ),
        .I1(\drp_state[5]_i_2_n_0 ),
        .I2(DRDY_I),
        .I3(\drp_state_reg_n_0_[5] ),
        .I4(\drp_state_reg_n_0_[2] ),
        .I5(\drp_state[6]_i_2_n_0 ),
        .O(drp_state[5]));
  LUT3 #(
    .INIT(8'hDF)) 
    \drp_state[5]_i_2 
       (.I0(\timeout_cntr_reg_n_0_[6] ),
        .I1(\timeout_cntr[7]_i_5_n_0 ),
        .I2(\timeout_cntr_reg_n_0_[7] ),
        .O(\drp_state[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT4 #(
    .INIT(16'h6000)) 
    \drp_state[6]_i_1 
       (.I0(\drp_state_reg_n_0_[2] ),
        .I1(\drp_state_reg_n_0_[5] ),
        .I2(\drp_state[6]_i_2_n_0 ),
        .I3(\drp_state[6]_i_3_n_0 ),
        .O(drp_state[6]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \drp_state[6]_i_2 
       (.I0(\drp_state_reg_n_0_[6] ),
        .I1(\drp_state_reg_n_0_[4] ),
        .I2(\drp_state_reg_n_0_[1] ),
        .I3(\drp_state_reg_n_0_[0] ),
        .O(\drp_state[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF80000000)) 
    \drp_state[6]_i_3 
       (.I0(\drp_state[6]_i_4_n_0 ),
        .I1(\timeout_cntr_reg_n_0_[7] ),
        .I2(\timeout_cntr_reg_n_0_[6] ),
        .I3(\timeout_cntr_reg_n_0_[5] ),
        .I4(\timeout_cntr_reg_n_0_[4] ),
        .I5(DRDY_I),
        .O(\drp_state[6]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \drp_state[6]_i_4 
       (.I0(\timeout_cntr_reg_n_0_[1] ),
        .I1(\timeout_cntr_reg_n_0_[0] ),
        .I2(\timeout_cntr_reg_n_0_[3] ),
        .I3(\timeout_cntr_reg_n_0_[2] ),
        .O(\drp_state[6]_i_4_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \drp_state_reg[0] 
       (.C(DCLK_I),
        .CE(1'b1),
        .D(drp_state[0]),
        .Q(\drp_state_reg_n_0_[0] ),
        .S(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \drp_state_reg[1] 
       (.C(DCLK_I),
        .CE(1'b1),
        .D(drp_state[1]),
        .Q(\drp_state_reg_n_0_[1] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \drp_state_reg[2] 
       (.C(DCLK_I),
        .CE(1'b1),
        .D(drp_state[2]),
        .Q(\drp_state_reg_n_0_[2] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \drp_state_reg[4] 
       (.C(DCLK_I),
        .CE(1'b1),
        .D(drp_state[4]),
        .Q(\drp_state_reg_n_0_[4] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \drp_state_reg[5] 
       (.C(DCLK_I),
        .CE(1'b1),
        .D(drp_state[5]),
        .Q(\drp_state_reg_n_0_[5] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \drp_state_reg[6] 
       (.C(DCLK_I),
        .CE(1'b1),
        .D(drp_state[6]),
        .Q(\drp_state_reg_n_0_[6] ),
        .R(RESET_I));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT4 #(
    .INIT(16'hEF00)) 
    \en[0]_i_1 
       (.I0(di1[4]),
        .I1(di1[5]),
        .I2(done_reg_n_0),
        .I3(DEN_USR_I[0]),
        .O(\en[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT4 #(
    .INIT(16'hBF00)) 
    \en[1]_i_1 
       (.I0(di1[5]),
        .I1(di1[4]),
        .I2(done_reg_n_0),
        .I3(DEN_USR_I[1]),
        .O(\en[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT4 #(
    .INIT(16'hBF00)) 
    \en[2]_i_1 
       (.I0(di1[4]),
        .I1(di1[5]),
        .I2(done_reg_n_0),
        .I3(DEN_USR_I[2]),
        .O(\en[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \en_reg[0] 
       (.C(DCLK_I),
        .CE(we[0]),
        .D(\en[0]_i_1_n_0 ),
        .Q(en[0]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \en_reg[1] 
       (.C(DCLK_I),
        .CE(we[1]),
        .D(\en[1]_i_1_n_0 ),
        .Q(en[1]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \en_reg[2] 
       (.C(DCLK_I),
        .CE(we[2]),
        .D(\en[2]_i_1_n_0 ),
        .Q(en[2]),
        .R(RESET_I));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \idx[0]__0_i_1 
       (.I0(di1[4]),
        .I1(di1[5]),
        .O(\idx[0]__0_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0010)) 
    \idx[1]__0_i_1 
       (.I0(\arb_state_reg_n_0_[2] ),
        .I1(\arb_state_reg_n_0_[1] ),
        .I2(\arb_state_reg_n_0_[3] ),
        .I3(\arb_state_reg_n_0_[0] ),
        .O(CEB2));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \idx[1]__0_i_2 
       (.I0(di1[4]),
        .I1(di1[5]),
        .O(\idx[1]__0_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \idx_reg[0]__0 
       (.C(DCLK_I),
        .CE(CEB2),
        .D(\idx[0]__0_i_1_n_0 ),
        .Q(di1[4]),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \idx_reg[1]__0 
       (.C(DCLK_I),
        .CE(CEB2),
        .D(\idx[1]__0_i_2_n_0 ),
        .Q(di1[5]),
        .R(RESET_I));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'h04)) 
    rd_i_1
       (.I0(rd1),
        .I1(di0),
        .I2(\arb_state_reg_n_0_[1] ),
        .O(rd_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rd_reg
       (.C(DCLK_I),
        .CE(wr),
        .D(rd_i_1_n_0),
        .Q(rd_reg_n_0),
        .R(RESET_I));
  LUT3 #(
    .INIT(8'h0E)) 
    \timeout_cntr[0]_i_1 
       (.I0(\drp_state_reg_n_0_[5] ),
        .I1(\drp_state_reg_n_0_[2] ),
        .I2(\timeout_cntr_reg_n_0_[0] ),
        .O(timeout_cntr[0]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'h0EE0)) 
    \timeout_cntr[1]_i_1 
       (.I0(\drp_state_reg_n_0_[2] ),
        .I1(\drp_state_reg_n_0_[5] ),
        .I2(\timeout_cntr_reg_n_0_[0] ),
        .I3(\timeout_cntr_reg_n_0_[1] ),
        .O(timeout_cntr[1]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT5 #(
    .INIT(32'h77708880)) 
    \timeout_cntr[2]_i_1 
       (.I0(\timeout_cntr_reg_n_0_[0] ),
        .I1(\timeout_cntr_reg_n_0_[1] ),
        .I2(\drp_state_reg_n_0_[5] ),
        .I3(\drp_state_reg_n_0_[2] ),
        .I4(\timeout_cntr_reg_n_0_[2] ),
        .O(timeout_cntr[2]));
  LUT6 #(
    .INIT(64'h7F7F7F0080808000)) 
    \timeout_cntr[3]_i_1 
       (.I0(\timeout_cntr_reg_n_0_[1] ),
        .I1(\timeout_cntr_reg_n_0_[0] ),
        .I2(\timeout_cntr_reg_n_0_[2] ),
        .I3(\drp_state_reg_n_0_[5] ),
        .I4(\drp_state_reg_n_0_[2] ),
        .I5(\timeout_cntr_reg_n_0_[3] ),
        .O(timeout_cntr[3]));
  LUT6 #(
    .INIT(64'h7FFF000080000000)) 
    \timeout_cntr[4]_i_1 
       (.I0(\timeout_cntr_reg_n_0_[2] ),
        .I1(\timeout_cntr_reg_n_0_[0] ),
        .I2(\timeout_cntr_reg_n_0_[1] ),
        .I3(\timeout_cntr_reg_n_0_[3] ),
        .I4(\drp_state[1]_i_2_n_0 ),
        .I5(\timeout_cntr_reg_n_0_[4] ),
        .O(timeout_cntr[4]));
  LUT6 #(
    .INIT(64'h7FFF000080000000)) 
    \timeout_cntr[5]_i_1 
       (.I0(\timeout_cntr_reg_n_0_[3] ),
        .I1(\timeout_cntr[5]_i_2_n_0 ),
        .I2(\timeout_cntr_reg_n_0_[2] ),
        .I3(\timeout_cntr_reg_n_0_[4] ),
        .I4(\drp_state[1]_i_2_n_0 ),
        .I5(\timeout_cntr_reg_n_0_[5] ),
        .O(timeout_cntr[5]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \timeout_cntr[5]_i_2 
       (.I0(\timeout_cntr_reg_n_0_[0] ),
        .I1(\timeout_cntr_reg_n_0_[1] ),
        .O(\timeout_cntr[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'hA854)) 
    \timeout_cntr[6]_i_1 
       (.I0(\timeout_cntr[7]_i_5_n_0 ),
        .I1(\drp_state_reg_n_0_[5] ),
        .I2(\drp_state_reg_n_0_[2] ),
        .I3(\timeout_cntr_reg_n_0_[6] ),
        .O(timeout_cntr[6]));
  LUT6 #(
    .INIT(64'h0000FFFF0000FF40)) 
    \timeout_cntr[7]_i_1 
       (.I0(\drp_state[1]_i_2_n_0 ),
        .I1(\drp_state_reg_n_0_[0] ),
        .I2(\drp_state[4]_i_2_n_0 ),
        .I3(\timeout_cntr[7]_i_3_n_0 ),
        .I4(RESET_I),
        .I5(\timeout_cntr[7]_i_4_n_0 ),
        .O(\timeout_cntr[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT5 #(
    .INIT(32'hBBB04440)) 
    \timeout_cntr[7]_i_2 
       (.I0(\timeout_cntr[7]_i_5_n_0 ),
        .I1(\timeout_cntr_reg_n_0_[6] ),
        .I2(\drp_state_reg_n_0_[5] ),
        .I3(\drp_state_reg_n_0_[2] ),
        .I4(\timeout_cntr_reg_n_0_[7] ),
        .O(timeout_cntr[7]));
  LUT6 #(
    .INIT(64'h0000000100010000)) 
    \timeout_cntr[7]_i_3 
       (.I0(\drp_state_reg_n_0_[0] ),
        .I1(\drp_state_reg_n_0_[1] ),
        .I2(\drp_state_reg_n_0_[4] ),
        .I3(\drp_state_reg_n_0_[6] ),
        .I4(\drp_state_reg_n_0_[5] ),
        .I5(\drp_state_reg_n_0_[2] ),
        .O(\timeout_cntr[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000100010100)) 
    \timeout_cntr[7]_i_4 
       (.I0(\drp_state_reg_n_0_[2] ),
        .I1(\drp_state_reg_n_0_[5] ),
        .I2(\drp_state_reg_n_0_[0] ),
        .I3(\drp_state_reg_n_0_[1] ),
        .I4(\drp_state_reg_n_0_[4] ),
        .I5(\drp_state_reg_n_0_[6] ),
        .O(\timeout_cntr[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \timeout_cntr[7]_i_5 
       (.I0(\timeout_cntr_reg_n_0_[4] ),
        .I1(\timeout_cntr_reg_n_0_[2] ),
        .I2(\timeout_cntr_reg_n_0_[0] ),
        .I3(\timeout_cntr_reg_n_0_[1] ),
        .I4(\timeout_cntr_reg_n_0_[3] ),
        .I5(\timeout_cntr_reg_n_0_[5] ),
        .O(\timeout_cntr[7]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[0] 
       (.C(DCLK_I),
        .CE(\timeout_cntr[7]_i_1_n_0 ),
        .D(timeout_cntr[0]),
        .Q(\timeout_cntr_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[1] 
       (.C(DCLK_I),
        .CE(\timeout_cntr[7]_i_1_n_0 ),
        .D(timeout_cntr[1]),
        .Q(\timeout_cntr_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[2] 
       (.C(DCLK_I),
        .CE(\timeout_cntr[7]_i_1_n_0 ),
        .D(timeout_cntr[2]),
        .Q(\timeout_cntr_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[3] 
       (.C(DCLK_I),
        .CE(\timeout_cntr[7]_i_1_n_0 ),
        .D(timeout_cntr[3]),
        .Q(\timeout_cntr_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[4] 
       (.C(DCLK_I),
        .CE(\timeout_cntr[7]_i_1_n_0 ),
        .D(timeout_cntr[4]),
        .Q(\timeout_cntr_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[5] 
       (.C(DCLK_I),
        .CE(\timeout_cntr[7]_i_1_n_0 ),
        .D(timeout_cntr[5]),
        .Q(\timeout_cntr_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[6] 
       (.C(DCLK_I),
        .CE(\timeout_cntr[7]_i_1_n_0 ),
        .D(timeout_cntr[6]),
        .Q(\timeout_cntr_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[7] 
       (.C(DCLK_I),
        .CE(\timeout_cntr[7]_i_1_n_0 ),
        .D(timeout_cntr[7]),
        .Q(\timeout_cntr_reg_n_0_[7] ),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFF10)) 
    \we[0]_i_1 
       (.I0(di1[4]),
        .I1(di1[5]),
        .I2(done_reg_n_0),
        .I3(DEN_USR_I[0]),
        .O(we[0]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT4 #(
    .INIT(16'hEF00)) 
    \we[0]_i_2 
       (.I0(di1[4]),
        .I1(di1[5]),
        .I2(done_reg_n_0),
        .I3(DWE_USR_I[0]),
        .O(\we[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFF40)) 
    \we[1]_i_1 
       (.I0(di1[5]),
        .I1(di1[4]),
        .I2(done_reg_n_0),
        .I3(DEN_USR_I[1]),
        .O(we[1]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT4 #(
    .INIT(16'hBF00)) 
    \we[1]_i_2 
       (.I0(di1[5]),
        .I1(di1[4]),
        .I2(done_reg_n_0),
        .I3(DWE_USR_I[1]),
        .O(\we[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFF40)) 
    \we[2]_i_1 
       (.I0(di1[4]),
        .I1(di1[5]),
        .I2(done_reg_n_0),
        .I3(DEN_USR_I[2]),
        .O(we[2]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT4 #(
    .INIT(16'hBF00)) 
    \we[2]_i_2 
       (.I0(di1[4]),
        .I1(di1[5]),
        .I2(done_reg_n_0),
        .I3(DWE_USR_I[2]),
        .O(\we[2]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \we_reg[0] 
       (.C(DCLK_I),
        .CE(we[0]),
        .D(\we[0]_i_2_n_0 ),
        .Q(\we_reg_n_0_[0] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \we_reg[1] 
       (.C(DCLK_I),
        .CE(we[1]),
        .D(\we[1]_i_2_n_0 ),
        .Q(\we_reg_n_0_[1] ),
        .R(RESET_I));
  FDRE #(
    .INIT(1'b0)) 
    \we_reg[2] 
       (.C(DCLK_I),
        .CE(we[2]),
        .D(\we[2]_i_2_n_0 ),
        .Q(\we_reg_n_0_[2] ),
        .R(RESET_I));
  LUT4 #(
    .INIT(16'h0006)) 
    wr_i_1
       (.I0(\arb_state_reg_n_0_[1] ),
        .I1(\arb_state_reg_n_0_[0] ),
        .I2(\arb_state_reg_n_0_[3] ),
        .I3(\arb_state_reg_n_0_[2] ),
        .O(wr));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'h08)) 
    wr_i_2
       (.I0(rd1),
        .I1(di0),
        .I2(\arb_state_reg_n_0_[1] ),
        .O(wr_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    wr_i_3
       (.I0(\we_reg_n_0_[2] ),
        .I1(di1[5]),
        .I2(\we_reg_n_0_[1] ),
        .I3(di1[4]),
        .I4(\we_reg_n_0_[0] ),
        .O(rd1));
  FDRE #(
    .INIT(1'b0)) 
    wr_reg
       (.C(DCLK_I),
        .CE(wr),
        .D(wr_i_2_n_0),
        .Q(wr_reg_n_0),
        .R(RESET_I));
endmodule

(* C_NUM_CLIENTS = "2" *) (* C_SLAVE_LSB_IDX = "18" *) (* C_SLAVE_MSB_IDX = "26" *) 
module c2c_gth_in_system_ibert_0_ibert_lib_v1_0_7_mbio2xsdb
   (rst_i,
    clk_i,
    mb_den_i,
    mb_rden_i,
    mb_wren_i,
    mb_addr_i,
    mb_di_i,
    mb_rdy_o,
    mb_do_o,
    den_o,
    dwe_o,
    daddr_o,
    di_o,
    do_i,
    drdy_i);
  input rst_i;
  input clk_i;
  input mb_den_i;
  input mb_rden_i;
  input mb_wren_i;
  input [31:0]mb_addr_i;
  input [31:0]mb_di_i;
  output mb_rdy_o;
  output [31:0]mb_do_o;
  output [1:0]den_o;
  output [1:0]dwe_o;
  output [33:0]daddr_o;
  output [31:0]di_o;
  input [31:0]do_i;
  input [1:0]drdy_i;

  wire \<const0> ;
  wire \SLAVE_SEL[1].sel_r[1]_i_2_n_0 ;
  wire clk_i;
  wire [16:0]\^daddr_o ;
  wire [1:0]den_o;
  wire [15:0]\^di_o ;
  wire [31:0]do_i;
  wire [1:0]drdy_i;
  wire [1:0]dwe_o;
  wire [31:0]mb_addr_i;
  wire mb_den_i;
  wire [31:0]mb_di_i;
  wire [15:0]\^mb_do_o ;
  wire \mb_do_o[0]_i_1_n_0 ;
  wire \mb_do_o[10]_i_1_n_0 ;
  wire \mb_do_o[11]_i_1_n_0 ;
  wire \mb_do_o[12]_i_1_n_0 ;
  wire \mb_do_o[13]_i_1_n_0 ;
  wire \mb_do_o[14]_i_1_n_0 ;
  wire \mb_do_o[15]_i_1_n_0 ;
  wire \mb_do_o[1]_i_1_n_0 ;
  wire \mb_do_o[2]_i_1_n_0 ;
  wire \mb_do_o[3]_i_1_n_0 ;
  wire \mb_do_o[4]_i_1_n_0 ;
  wire \mb_do_o[5]_i_1_n_0 ;
  wire \mb_do_o[6]_i_1_n_0 ;
  wire \mb_do_o[7]_i_1_n_0 ;
  wire \mb_do_o[8]_i_1_n_0 ;
  wire \mb_do_o[9]_i_1_n_0 ;
  wire mb_rdy_o;
  wire mb_rdy_o_i_1_n_0;
  wire mb_wren_i;
  wire p_1_out;
  wire p_2_out;
  wire p_4_out;
  wire p_5_out;
  wire rst_i;
  wire \sel_bits[0]_i_1_n_0 ;
  wire \sel_bits_reg_n_0_[0] ;

  assign daddr_o[33:17] = \^daddr_o [16:0];
  assign daddr_o[16:0] = \^daddr_o [16:0];
  assign di_o[31:16] = \^di_o [15:0];
  assign di_o[15:0] = \^di_o [15:0];
  assign mb_do_o[31] = \<const0> ;
  assign mb_do_o[30] = \<const0> ;
  assign mb_do_o[29] = \<const0> ;
  assign mb_do_o[28] = \<const0> ;
  assign mb_do_o[27] = \<const0> ;
  assign mb_do_o[26] = \<const0> ;
  assign mb_do_o[25] = \<const0> ;
  assign mb_do_o[24] = \<const0> ;
  assign mb_do_o[23] = \<const0> ;
  assign mb_do_o[22] = \<const0> ;
  assign mb_do_o[21] = \<const0> ;
  assign mb_do_o[20] = \<const0> ;
  assign mb_do_o[19] = \<const0> ;
  assign mb_do_o[18] = \<const0> ;
  assign mb_do_o[17] = \<const0> ;
  assign mb_do_o[16] = \<const0> ;
  assign mb_do_o[15:0] = \^mb_do_o [15:0];
  GND GND
       (.G(\<const0> ));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'h00100000)) 
    \SLAVE_SEL[0].sel_r[0]_i_1 
       (.I0(mb_addr_i[20]),
        .I1(mb_addr_i[27]),
        .I2(\SLAVE_SEL[1].sel_r[1]_i_2_n_0 ),
        .I3(mb_addr_i[28]),
        .I4(mb_den_i),
        .O(p_5_out));
  FDRE #(
    .INIT(1'b0)) 
    \SLAVE_SEL[0].sel_r_reg[0] 
       (.C(clk_i),
        .CE(1'b1),
        .D(p_5_out),
        .Q(den_o[0]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h00100000)) 
    \SLAVE_SEL[0].we_r[0]_i_1 
       (.I0(mb_addr_i[20]),
        .I1(mb_addr_i[27]),
        .I2(\SLAVE_SEL[1].sel_r[1]_i_2_n_0 ),
        .I3(mb_addr_i[28]),
        .I4(mb_wren_i),
        .O(p_4_out));
  FDRE #(
    .INIT(1'b0)) 
    \SLAVE_SEL[0].we_r_reg[0] 
       (.C(clk_i),
        .CE(1'b1),
        .D(p_4_out),
        .Q(dwe_o[0]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'h00200000)) 
    \SLAVE_SEL[1].sel_r[1]_i_1 
       (.I0(mb_addr_i[20]),
        .I1(mb_addr_i[27]),
        .I2(\SLAVE_SEL[1].sel_r[1]_i_2_n_0 ),
        .I3(mb_addr_i[28]),
        .I4(mb_den_i),
        .O(p_2_out));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \SLAVE_SEL[1].sel_r[1]_i_2 
       (.I0(mb_addr_i[25]),
        .I1(mb_addr_i[24]),
        .I2(mb_addr_i[21]),
        .I3(mb_addr_i[22]),
        .I4(mb_addr_i[23]),
        .I5(mb_addr_i[26]),
        .O(\SLAVE_SEL[1].sel_r[1]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \SLAVE_SEL[1].sel_r_reg[1] 
       (.C(clk_i),
        .CE(1'b1),
        .D(p_2_out),
        .Q(den_o[1]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h00200000)) 
    \SLAVE_SEL[1].we_r[1]_i_1 
       (.I0(mb_addr_i[20]),
        .I1(mb_addr_i[27]),
        .I2(\SLAVE_SEL[1].sel_r[1]_i_2_n_0 ),
        .I3(mb_addr_i[28]),
        .I4(mb_wren_i),
        .O(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \SLAVE_SEL[1].we_r_reg[1] 
       (.C(clk_i),
        .CE(1'b1),
        .D(p_1_out),
        .Q(dwe_o[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mb_addr_r_reg[0] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_addr_i[2]),
        .Q(\^daddr_o [0]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_addr_r_reg[10] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_addr_i[12]),
        .Q(\^daddr_o [10]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_addr_r_reg[11] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_addr_i[13]),
        .Q(\^daddr_o [11]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_addr_r_reg[12] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_addr_i[14]),
        .Q(\^daddr_o [12]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_addr_r_reg[13] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_addr_i[15]),
        .Q(\^daddr_o [13]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_addr_r_reg[14] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_addr_i[16]),
        .Q(\^daddr_o [14]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_addr_r_reg[15] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_addr_i[17]),
        .Q(\^daddr_o [15]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_addr_r_reg[16] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_addr_i[18]),
        .Q(\^daddr_o [16]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_addr_r_reg[1] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_addr_i[3]),
        .Q(\^daddr_o [1]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_addr_r_reg[2] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_addr_i[4]),
        .Q(\^daddr_o [2]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_addr_r_reg[3] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_addr_i[5]),
        .Q(\^daddr_o [3]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_addr_r_reg[4] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_addr_i[6]),
        .Q(\^daddr_o [4]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_addr_r_reg[5] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_addr_i[7]),
        .Q(\^daddr_o [5]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_addr_r_reg[6] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_addr_i[8]),
        .Q(\^daddr_o [6]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_addr_r_reg[7] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_addr_i[9]),
        .Q(\^daddr_o [7]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_addr_r_reg[8] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_addr_i[10]),
        .Q(\^daddr_o [8]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_addr_r_reg[9] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_addr_i[11]),
        .Q(\^daddr_o [9]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_di_r_reg[0] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_di_i[0]),
        .Q(\^di_o [0]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_di_r_reg[10] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_di_i[10]),
        .Q(\^di_o [10]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_di_r_reg[11] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_di_i[11]),
        .Q(\^di_o [11]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_di_r_reg[12] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_di_i[12]),
        .Q(\^di_o [12]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_di_r_reg[13] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_di_i[13]),
        .Q(\^di_o [13]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_di_r_reg[14] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_di_i[14]),
        .Q(\^di_o [14]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_di_r_reg[15] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_di_i[15]),
        .Q(\^di_o [15]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_di_r_reg[1] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_di_i[1]),
        .Q(\^di_o [1]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_di_r_reg[2] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_di_i[2]),
        .Q(\^di_o [2]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_di_r_reg[3] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_di_i[3]),
        .Q(\^di_o [3]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_di_r_reg[4] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_di_i[4]),
        .Q(\^di_o [4]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_di_r_reg[5] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_di_i[5]),
        .Q(\^di_o [5]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_di_r_reg[6] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_di_i[6]),
        .Q(\^di_o [6]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_di_r_reg[7] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_di_i[7]),
        .Q(\^di_o [7]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_di_r_reg[8] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_di_i[8]),
        .Q(\^di_o [8]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_di_r_reg[9] 
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_di_i[9]),
        .Q(\^di_o [9]),
        .R(rst_i));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mb_do_o[0]_i_1 
       (.I0(do_i[16]),
        .I1(\sel_bits_reg_n_0_[0] ),
        .I2(do_i[0]),
        .O(\mb_do_o[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mb_do_o[10]_i_1 
       (.I0(do_i[26]),
        .I1(\sel_bits_reg_n_0_[0] ),
        .I2(do_i[10]),
        .O(\mb_do_o[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mb_do_o[11]_i_1 
       (.I0(do_i[27]),
        .I1(\sel_bits_reg_n_0_[0] ),
        .I2(do_i[11]),
        .O(\mb_do_o[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mb_do_o[12]_i_1 
       (.I0(do_i[28]),
        .I1(\sel_bits_reg_n_0_[0] ),
        .I2(do_i[12]),
        .O(\mb_do_o[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mb_do_o[13]_i_1 
       (.I0(do_i[29]),
        .I1(\sel_bits_reg_n_0_[0] ),
        .I2(do_i[13]),
        .O(\mb_do_o[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mb_do_o[14]_i_1 
       (.I0(do_i[30]),
        .I1(\sel_bits_reg_n_0_[0] ),
        .I2(do_i[14]),
        .O(\mb_do_o[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mb_do_o[15]_i_1 
       (.I0(do_i[31]),
        .I1(\sel_bits_reg_n_0_[0] ),
        .I2(do_i[15]),
        .O(\mb_do_o[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mb_do_o[1]_i_1 
       (.I0(do_i[17]),
        .I1(\sel_bits_reg_n_0_[0] ),
        .I2(do_i[1]),
        .O(\mb_do_o[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mb_do_o[2]_i_1 
       (.I0(do_i[18]),
        .I1(\sel_bits_reg_n_0_[0] ),
        .I2(do_i[2]),
        .O(\mb_do_o[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mb_do_o[3]_i_1 
       (.I0(do_i[19]),
        .I1(\sel_bits_reg_n_0_[0] ),
        .I2(do_i[3]),
        .O(\mb_do_o[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mb_do_o[4]_i_1 
       (.I0(do_i[20]),
        .I1(\sel_bits_reg_n_0_[0] ),
        .I2(do_i[4]),
        .O(\mb_do_o[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mb_do_o[5]_i_1 
       (.I0(do_i[21]),
        .I1(\sel_bits_reg_n_0_[0] ),
        .I2(do_i[5]),
        .O(\mb_do_o[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mb_do_o[6]_i_1 
       (.I0(do_i[22]),
        .I1(\sel_bits_reg_n_0_[0] ),
        .I2(do_i[6]),
        .O(\mb_do_o[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mb_do_o[7]_i_1 
       (.I0(do_i[23]),
        .I1(\sel_bits_reg_n_0_[0] ),
        .I2(do_i[7]),
        .O(\mb_do_o[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mb_do_o[8]_i_1 
       (.I0(do_i[24]),
        .I1(\sel_bits_reg_n_0_[0] ),
        .I2(do_i[8]),
        .O(\mb_do_o[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mb_do_o[9]_i_1 
       (.I0(do_i[25]),
        .I1(\sel_bits_reg_n_0_[0] ),
        .I2(do_i[9]),
        .O(\mb_do_o[9]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mb_do_o_reg[0] 
       (.C(clk_i),
        .CE(1'b1),
        .D(\mb_do_o[0]_i_1_n_0 ),
        .Q(\^mb_do_o [0]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_do_o_reg[10] 
       (.C(clk_i),
        .CE(1'b1),
        .D(\mb_do_o[10]_i_1_n_0 ),
        .Q(\^mb_do_o [10]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_do_o_reg[11] 
       (.C(clk_i),
        .CE(1'b1),
        .D(\mb_do_o[11]_i_1_n_0 ),
        .Q(\^mb_do_o [11]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_do_o_reg[12] 
       (.C(clk_i),
        .CE(1'b1),
        .D(\mb_do_o[12]_i_1_n_0 ),
        .Q(\^mb_do_o [12]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_do_o_reg[13] 
       (.C(clk_i),
        .CE(1'b1),
        .D(\mb_do_o[13]_i_1_n_0 ),
        .Q(\^mb_do_o [13]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_do_o_reg[14] 
       (.C(clk_i),
        .CE(1'b1),
        .D(\mb_do_o[14]_i_1_n_0 ),
        .Q(\^mb_do_o [14]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_do_o_reg[15] 
       (.C(clk_i),
        .CE(1'b1),
        .D(\mb_do_o[15]_i_1_n_0 ),
        .Q(\^mb_do_o [15]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_do_o_reg[1] 
       (.C(clk_i),
        .CE(1'b1),
        .D(\mb_do_o[1]_i_1_n_0 ),
        .Q(\^mb_do_o [1]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_do_o_reg[2] 
       (.C(clk_i),
        .CE(1'b1),
        .D(\mb_do_o[2]_i_1_n_0 ),
        .Q(\^mb_do_o [2]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_do_o_reg[3] 
       (.C(clk_i),
        .CE(1'b1),
        .D(\mb_do_o[3]_i_1_n_0 ),
        .Q(\^mb_do_o [3]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_do_o_reg[4] 
       (.C(clk_i),
        .CE(1'b1),
        .D(\mb_do_o[4]_i_1_n_0 ),
        .Q(\^mb_do_o [4]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_do_o_reg[5] 
       (.C(clk_i),
        .CE(1'b1),
        .D(\mb_do_o[5]_i_1_n_0 ),
        .Q(\^mb_do_o [5]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_do_o_reg[6] 
       (.C(clk_i),
        .CE(1'b1),
        .D(\mb_do_o[6]_i_1_n_0 ),
        .Q(\^mb_do_o [6]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_do_o_reg[7] 
       (.C(clk_i),
        .CE(1'b1),
        .D(\mb_do_o[7]_i_1_n_0 ),
        .Q(\^mb_do_o [7]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_do_o_reg[8] 
       (.C(clk_i),
        .CE(1'b1),
        .D(\mb_do_o[8]_i_1_n_0 ),
        .Q(\^mb_do_o [8]),
        .R(rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \mb_do_o_reg[9] 
       (.C(clk_i),
        .CE(1'b1),
        .D(\mb_do_o[9]_i_1_n_0 ),
        .Q(\^mb_do_o [9]),
        .R(rst_i));
  LUT2 #(
    .INIT(4'hE)) 
    mb_rdy_o_i_1
       (.I0(drdy_i[0]),
        .I1(drdy_i[1]),
        .O(mb_rdy_o_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    mb_rdy_o_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(mb_rdy_o_i_1_n_0),
        .Q(mb_rdy_o),
        .R(rst_i));
  LUT4 #(
    .INIT(16'hFB08)) 
    \sel_bits[0]_i_1 
       (.I0(mb_addr_i[20]),
        .I1(mb_den_i),
        .I2(rst_i),
        .I3(\sel_bits_reg_n_0_[0] ),
        .O(\sel_bits[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sel_bits_reg[0] 
       (.C(clk_i),
        .CE(1'b1),
        .D(\sel_bits[0]_i_1_n_0 ),
        .Q(\sel_bits_reg_n_0_[0] ),
        .R(1'b0));
endmodule

module c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_drp_syncronizer
   (drpen_o,
    CLK,
    drpclk_i,
    drp_den_o);
  output drpen_o;
  input CLK;
  input drpclk_i;
  input drp_den_o;

  wire CLK;
  wire dest_ack;
  wire dest_ack_i_1_n_0;
  wire dest_ack_sync1;
  wire dest_ack_sync2;
  wire drp_den_o;
  wire drpclk_i;
  wire drpen_o;
  wire gen_posedge;
  wire source_sig_hold;
  wire source_sig_hold_i_1_n_0;
  wire source_sig_hold_sync1;
  wire source_sig_hold_sync2;
  wire source_sig_hold_sync3;

  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    dest_ack_i_1
       (.I0(dest_ack),
        .I1(source_sig_hold_sync3),
        .I2(source_sig_hold_sync2),
        .O(dest_ack_i_1_n_0));
  FDRE dest_ack_reg
       (.C(drpclk_i),
        .CE(1'b1),
        .D(dest_ack_i_1_n_0),
        .Q(dest_ack),
        .R(1'b0));
  FDRE dest_ack_sync1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(dest_ack),
        .Q(dest_ack_sync1),
        .R(1'b0));
  FDRE dest_ack_sync2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(dest_ack_sync1),
        .Q(dest_ack_sync2),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h2)) 
    dest_sig_o_i_1
       (.I0(source_sig_hold_sync2),
        .I1(source_sig_hold_sync3),
        .O(gen_posedge));
  FDRE dest_sig_o_reg
       (.C(drpclk_i),
        .CE(1'b1),
        .D(gen_posedge),
        .Q(drpen_o),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hF4)) 
    source_sig_hold_i_1
       (.I0(dest_ack_sync2),
        .I1(source_sig_hold),
        .I2(drp_den_o),
        .O(source_sig_hold_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_reg
       (.C(CLK),
        .CE(1'b1),
        .D(source_sig_hold_i_1_n_0),
        .Q(source_sig_hold),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync1_reg
       (.C(drpclk_i),
        .CE(1'b1),
        .D(source_sig_hold),
        .Q(source_sig_hold_sync1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync2_reg
       (.C(drpclk_i),
        .CE(1'b1),
        .D(source_sig_hold_sync1),
        .Q(source_sig_hold_sync2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync3_reg
       (.C(drpclk_i),
        .CE(1'b1),
        .D(source_sig_hold_sync2),
        .Q(source_sig_hold_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "in_system_ibert_v1_0_11_drp_syncronizer" *) 
module c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_drp_syncronizer_725
   (drp_drdy_i,
    drpclk_i,
    CLK,
    drprdy_i);
  output drp_drdy_i;
  input drpclk_i;
  input CLK;
  input drprdy_i;

  wire CLK;
  wire dest_ack_i_1__1_n_0;
  wire dest_ack_reg_n_0;
  wire dest_ack_sync1_reg_n_0;
  wire dest_ack_sync2_reg_n_0;
  wire drp_drdy_i;
  wire drpclk_i;
  wire drprdy_i;
  wire gen_posedge;
  wire source_sig_hold_i_1__1_n_0;
  wire source_sig_hold_reg_n_0;
  wire source_sig_hold_sync1_reg_n_0;
  wire source_sig_hold_sync2;
  wire source_sig_hold_sync3;

  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    dest_ack_i_1__1
       (.I0(dest_ack_reg_n_0),
        .I1(source_sig_hold_sync3),
        .I2(source_sig_hold_sync2),
        .O(dest_ack_i_1__1_n_0));
  FDRE dest_ack_reg
       (.C(CLK),
        .CE(1'b1),
        .D(dest_ack_i_1__1_n_0),
        .Q(dest_ack_reg_n_0),
        .R(1'b0));
  FDRE dest_ack_sync1_reg
       (.C(drpclk_i),
        .CE(1'b1),
        .D(dest_ack_reg_n_0),
        .Q(dest_ack_sync1_reg_n_0),
        .R(1'b0));
  FDRE dest_ack_sync2_reg
       (.C(drpclk_i),
        .CE(1'b1),
        .D(dest_ack_sync1_reg_n_0),
        .Q(dest_ack_sync2_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h2)) 
    dest_sig_o_i_1__1
       (.I0(source_sig_hold_sync2),
        .I1(source_sig_hold_sync3),
        .O(gen_posedge));
  FDRE dest_sig_o_reg
       (.C(CLK),
        .CE(1'b1),
        .D(gen_posedge),
        .Q(drp_drdy_i),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hF4)) 
    source_sig_hold_i_1__1
       (.I0(dest_ack_sync2_reg_n_0),
        .I1(source_sig_hold_reg_n_0),
        .I2(drprdy_i),
        .O(source_sig_hold_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_reg
       (.C(drpclk_i),
        .CE(1'b1),
        .D(source_sig_hold_i_1__1_n_0),
        .Q(source_sig_hold_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(source_sig_hold_reg_n_0),
        .Q(source_sig_hold_sync1_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(source_sig_hold_sync1_reg_n_0),
        .Q(source_sig_hold_sync2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync3_reg
       (.C(CLK),
        .CE(1'b1),
        .D(source_sig_hold_sync2),
        .Q(source_sig_hold_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "in_system_ibert_v1_0_11_drp_syncronizer" *) 
module c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_drp_syncronizer_726
   (drpwe_o,
    CLK,
    drpclk_i,
    drp_dwe_o);
  output drpwe_o;
  input CLK;
  input drpclk_i;
  input drp_dwe_o;

  wire CLK;
  wire dest_ack_i_1__0_n_0;
  wire dest_ack_reg_n_0;
  wire dest_ack_sync1_reg_n_0;
  wire dest_ack_sync2_reg_n_0;
  wire drp_dwe_o;
  wire drpclk_i;
  wire drpwe_o;
  wire gen_posedge;
  wire source_sig_hold_i_1__0_n_0;
  wire source_sig_hold_reg_n_0;
  wire source_sig_hold_sync1_reg_n_0;
  wire source_sig_hold_sync2;
  wire source_sig_hold_sync3;

  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    dest_ack_i_1__0
       (.I0(dest_ack_reg_n_0),
        .I1(source_sig_hold_sync3),
        .I2(source_sig_hold_sync2),
        .O(dest_ack_i_1__0_n_0));
  FDRE dest_ack_reg
       (.C(drpclk_i),
        .CE(1'b1),
        .D(dest_ack_i_1__0_n_0),
        .Q(dest_ack_reg_n_0),
        .R(1'b0));
  FDRE dest_ack_sync1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(dest_ack_reg_n_0),
        .Q(dest_ack_sync1_reg_n_0),
        .R(1'b0));
  FDRE dest_ack_sync2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(dest_ack_sync1_reg_n_0),
        .Q(dest_ack_sync2_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h2)) 
    dest_sig_o_i_1__0
       (.I0(source_sig_hold_sync2),
        .I1(source_sig_hold_sync3),
        .O(gen_posedge));
  FDRE dest_sig_o_reg
       (.C(drpclk_i),
        .CE(1'b1),
        .D(gen_posedge),
        .Q(drpwe_o),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hF4)) 
    source_sig_hold_i_1__0
       (.I0(dest_ack_sync2_reg_n_0),
        .I1(source_sig_hold_reg_n_0),
        .I2(drp_dwe_o),
        .O(source_sig_hold_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_reg
       (.C(CLK),
        .CE(1'b1),
        .D(source_sig_hold_i_1__0_n_0),
        .Q(source_sig_hold_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync1_reg
       (.C(drpclk_i),
        .CE(1'b1),
        .D(source_sig_hold_reg_n_0),
        .Q(source_sig_hold_sync1_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync2_reg
       (.C(drpclk_i),
        .CE(1'b1),
        .D(source_sig_hold_sync1_reg_n_0),
        .Q(source_sig_hold_sync2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync3_reg
       (.C(drpclk_i),
        .CE(1'b1),
        .D(source_sig_hold_sync2),
        .Q(source_sig_hold_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "in_system_ibert_v1_0_11_drp_syncronizer" *) 
module c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_drp_syncronizer_727
   (DEN_USR_I,
    sl_iport_i,
    clk_i);
  output [0:0]DEN_USR_I;
  input [1:0]sl_iport_i;
  input clk_i;

  wire [0:0]DEN_USR_I;
  wire clk_i;
  wire dest_ack_i_1__0_n_0;
  wire dest_ack_reg_n_0;
  wire dest_ack_sync1_reg_n_0;
  wire dest_ack_sync2_reg_n_0;
  wire gen_posedge;
  wire [1:0]sl_iport_i;
  wire source_sig_hold_i_1__0_n_0;
  wire source_sig_hold_reg_n_0;
  wire source_sig_hold_sync1_reg_n_0;
  wire source_sig_hold_sync2;
  wire source_sig_hold_sync3;

  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    dest_ack_i_1__0
       (.I0(dest_ack_reg_n_0),
        .I1(source_sig_hold_sync3),
        .I2(source_sig_hold_sync2),
        .O(dest_ack_i_1__0_n_0));
  FDRE dest_ack_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(dest_ack_i_1__0_n_0),
        .Q(dest_ack_reg_n_0),
        .R(1'b0));
  FDRE dest_ack_sync1_reg
       (.C(sl_iport_i[0]),
        .CE(1'b1),
        .D(dest_ack_reg_n_0),
        .Q(dest_ack_sync1_reg_n_0),
        .R(1'b0));
  FDRE dest_ack_sync2_reg
       (.C(sl_iport_i[0]),
        .CE(1'b1),
        .D(dest_ack_sync1_reg_n_0),
        .Q(dest_ack_sync2_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT2 #(
    .INIT(4'h2)) 
    dest_sig_o_i_1__0
       (.I0(source_sig_hold_sync2),
        .I1(source_sig_hold_sync3),
        .O(gen_posedge));
  FDRE dest_sig_o_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(gen_posedge),
        .Q(DEN_USR_I),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hF4)) 
    source_sig_hold_i_1__0
       (.I0(dest_ack_sync2_reg_n_0),
        .I1(source_sig_hold_reg_n_0),
        .I2(sl_iport_i[1]),
        .O(source_sig_hold_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_reg
       (.C(sl_iport_i[0]),
        .CE(1'b1),
        .D(source_sig_hold_i_1__0_n_0),
        .Q(source_sig_hold_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync1_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(source_sig_hold_reg_n_0),
        .Q(source_sig_hold_sync1_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync2_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(source_sig_hold_sync1_reg_n_0),
        .Q(source_sig_hold_sync2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync3_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(source_sig_hold_sync2),
        .Q(source_sig_hold_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "in_system_ibert_v1_0_11_drp_syncronizer" *) 
module c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_drp_syncronizer_728
   (dest_sig_o_reg_0,
    sl_iport_i,
    clk_i);
  output [0:0]dest_sig_o_reg_0;
  input [1:0]sl_iport_i;
  input clk_i;

  wire clk_i;
  wire dest_ack;
  wire dest_ack_i_1_n_0;
  wire dest_ack_sync1;
  wire dest_ack_sync2;
  wire [0:0]dest_sig_o_reg_0;
  wire gen_posedge;
  wire [1:0]sl_iport_i;
  wire source_sig_hold;
  wire source_sig_hold_i_1_n_0;
  wire source_sig_hold_sync1;
  wire source_sig_hold_sync2;
  wire source_sig_hold_sync3;

  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    dest_ack_i_1
       (.I0(dest_ack),
        .I1(source_sig_hold_sync3),
        .I2(source_sig_hold_sync2),
        .O(dest_ack_i_1_n_0));
  FDRE dest_ack_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(dest_ack_i_1_n_0),
        .Q(dest_ack),
        .R(1'b0));
  FDRE dest_ack_sync1_reg
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(dest_ack),
        .Q(dest_ack_sync1),
        .R(1'b0));
  FDRE dest_ack_sync2_reg
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(dest_ack_sync1),
        .Q(dest_ack_sync2),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT2 #(
    .INIT(4'h2)) 
    dest_sig_o_i_1
       (.I0(source_sig_hold_sync2),
        .I1(source_sig_hold_sync3),
        .O(gen_posedge));
  FDRE dest_sig_o_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(gen_posedge),
        .Q(dest_sig_o_reg_0),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hF4)) 
    source_sig_hold_i_1
       (.I0(dest_ack_sync2),
        .I1(source_sig_hold),
        .I2(sl_iport_i[0]),
        .O(source_sig_hold_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_reg
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(source_sig_hold_i_1_n_0),
        .Q(source_sig_hold),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync1_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(source_sig_hold),
        .Q(source_sig_hold_sync1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync2_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(source_sig_hold_sync1),
        .Q(source_sig_hold_sync2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync3_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(source_sig_hold_sync2),
        .Q(source_sig_hold_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "in_system_ibert_v1_0_11_drp_syncronizer" *) 
module c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_drp_syncronizer_729
   (DWE_USR_I,
    sl_iport_i,
    clk_i);
  output [0:0]DWE_USR_I;
  input [1:0]sl_iport_i;
  input clk_i;

  wire [0:0]DWE_USR_I;
  wire clk_i;
  wire dest_ack_i_1__1_n_0;
  wire dest_ack_reg_n_0;
  wire dest_ack_sync1_reg_n_0;
  wire dest_ack_sync2_reg_n_0;
  wire gen_posedge;
  wire [1:0]sl_iport_i;
  wire source_sig_hold_i_1__1_n_0;
  wire source_sig_hold_reg_n_0;
  wire source_sig_hold_sync1_reg_n_0;
  wire source_sig_hold_sync2;
  wire source_sig_hold_sync3;

  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    dest_ack_i_1__1
       (.I0(dest_ack_reg_n_0),
        .I1(source_sig_hold_sync3),
        .I2(source_sig_hold_sync2),
        .O(dest_ack_i_1__1_n_0));
  FDRE dest_ack_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(dest_ack_i_1__1_n_0),
        .Q(dest_ack_reg_n_0),
        .R(1'b0));
  FDRE dest_ack_sync1_reg
       (.C(sl_iport_i[0]),
        .CE(1'b1),
        .D(dest_ack_reg_n_0),
        .Q(dest_ack_sync1_reg_n_0),
        .R(1'b0));
  FDRE dest_ack_sync2_reg
       (.C(sl_iport_i[0]),
        .CE(1'b1),
        .D(dest_ack_sync1_reg_n_0),
        .Q(dest_ack_sync2_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT2 #(
    .INIT(4'h2)) 
    dest_sig_o_i_1__1
       (.I0(source_sig_hold_sync2),
        .I1(source_sig_hold_sync3),
        .O(gen_posedge));
  FDRE dest_sig_o_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(gen_posedge),
        .Q(DWE_USR_I),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hF4)) 
    source_sig_hold_i_1__1
       (.I0(dest_ack_sync2_reg_n_0),
        .I1(source_sig_hold_reg_n_0),
        .I2(sl_iport_i[1]),
        .O(source_sig_hold_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_reg
       (.C(sl_iport_i[0]),
        .CE(1'b1),
        .D(source_sig_hold_i_1__1_n_0),
        .Q(source_sig_hold_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync1_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(source_sig_hold_reg_n_0),
        .Q(source_sig_hold_sync1_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync2_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(source_sig_hold_sync1_reg_n_0),
        .Q(source_sig_hold_sync2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync3_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(source_sig_hold_sync2),
        .Q(source_sig_hold_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "in_system_ibert_v1_0_11_drp_syncronizer" *) 
module c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_drp_syncronizer_730
   (sl_oport_o,
    clk_i,
    sl_iport_i,
    DRDY_USR_O);
  output [0:0]sl_oport_o;
  input clk_i;
  input [0:0]sl_iport_i;
  input [0:0]DRDY_USR_O;

  wire [0:0]DRDY_USR_O;
  wire clk_i;
  wire dest_ack_i_1__2_n_0;
  wire dest_ack_reg_n_0;
  wire dest_ack_sync1_reg_n_0;
  wire dest_ack_sync2_reg_n_0;
  wire gen_posedge;
  wire [0:0]sl_iport_i;
  wire [0:0]sl_oport_o;
  wire source_sig_hold_i_1__2_n_0;
  wire source_sig_hold_reg_n_0;
  wire source_sig_hold_sync1_reg_n_0;
  wire source_sig_hold_sync2;
  wire source_sig_hold_sync3;

  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    dest_ack_i_1__2
       (.I0(dest_ack_reg_n_0),
        .I1(source_sig_hold_sync3),
        .I2(source_sig_hold_sync2),
        .O(dest_ack_i_1__2_n_0));
  FDRE dest_ack_reg
       (.C(sl_iport_i),
        .CE(1'b1),
        .D(dest_ack_i_1__2_n_0),
        .Q(dest_ack_reg_n_0),
        .R(1'b0));
  FDRE dest_ack_sync1_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(dest_ack_reg_n_0),
        .Q(dest_ack_sync1_reg_n_0),
        .R(1'b0));
  FDRE dest_ack_sync2_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(dest_ack_sync1_reg_n_0),
        .Q(dest_ack_sync2_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT2 #(
    .INIT(4'h2)) 
    dest_sig_o_i_1__2
       (.I0(source_sig_hold_sync2),
        .I1(source_sig_hold_sync3),
        .O(gen_posedge));
  FDRE dest_sig_o_reg
       (.C(sl_iport_i),
        .CE(1'b1),
        .D(gen_posedge),
        .Q(sl_oport_o),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hF4)) 
    source_sig_hold_i_1__2
       (.I0(dest_ack_sync2_reg_n_0),
        .I1(source_sig_hold_reg_n_0),
        .I2(DRDY_USR_O),
        .O(source_sig_hold_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(source_sig_hold_i_1__2_n_0),
        .Q(source_sig_hold_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync1_reg
       (.C(sl_iport_i),
        .CE(1'b1),
        .D(source_sig_hold_reg_n_0),
        .Q(source_sig_hold_sync1_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync2_reg
       (.C(sl_iport_i),
        .CE(1'b1),
        .D(source_sig_hold_sync1_reg_n_0),
        .Q(source_sig_hold_sync2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync3_reg
       (.C(sl_iport_i),
        .CE(1'b1),
        .D(source_sig_hold_sync2),
        .Q(source_sig_hold_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "in_system_ibert_v1_0_11_drp_syncronizer" *) 
module c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_drp_syncronizer_738
   (drpen_o,
    CLK,
    drpclk_i,
    drp_den_o);
  output drpen_o;
  input CLK;
  input drpclk_i;
  input drp_den_o;

  wire CLK;
  wire dest_ack;
  wire dest_ack_i_1_n_0;
  wire dest_ack_sync1;
  wire dest_ack_sync2;
  wire drp_den_o;
  wire drpclk_i;
  wire drpen_o;
  wire gen_posedge;
  wire source_sig_hold;
  wire source_sig_hold_i_1_n_0;
  wire source_sig_hold_sync1;
  wire source_sig_hold_sync2;
  wire source_sig_hold_sync3;

  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    dest_ack_i_1
       (.I0(dest_ack),
        .I1(source_sig_hold_sync3),
        .I2(source_sig_hold_sync2),
        .O(dest_ack_i_1_n_0));
  FDRE dest_ack_reg
       (.C(drpclk_i),
        .CE(1'b1),
        .D(dest_ack_i_1_n_0),
        .Q(dest_ack),
        .R(1'b0));
  FDRE dest_ack_sync1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(dest_ack),
        .Q(dest_ack_sync1),
        .R(1'b0));
  FDRE dest_ack_sync2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(dest_ack_sync1),
        .Q(dest_ack_sync2),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT2 #(
    .INIT(4'h2)) 
    dest_sig_o_i_1
       (.I0(source_sig_hold_sync2),
        .I1(source_sig_hold_sync3),
        .O(gen_posedge));
  FDRE dest_sig_o_reg
       (.C(drpclk_i),
        .CE(1'b1),
        .D(gen_posedge),
        .Q(drpen_o),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hF4)) 
    source_sig_hold_i_1
       (.I0(dest_ack_sync2),
        .I1(source_sig_hold),
        .I2(drp_den_o),
        .O(source_sig_hold_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_reg
       (.C(CLK),
        .CE(1'b1),
        .D(source_sig_hold_i_1_n_0),
        .Q(source_sig_hold),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync1_reg
       (.C(drpclk_i),
        .CE(1'b1),
        .D(source_sig_hold),
        .Q(source_sig_hold_sync1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync2_reg
       (.C(drpclk_i),
        .CE(1'b1),
        .D(source_sig_hold_sync1),
        .Q(source_sig_hold_sync2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync3_reg
       (.C(drpclk_i),
        .CE(1'b1),
        .D(source_sig_hold_sync2),
        .Q(source_sig_hold_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "in_system_ibert_v1_0_11_drp_syncronizer" *) 
module c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_drp_syncronizer_739
   (drp_drdy_i,
    drpclk_i,
    CLK,
    drprdy_i);
  output drp_drdy_i;
  input drpclk_i;
  input CLK;
  input drprdy_i;

  wire CLK;
  wire dest_ack_i_1__1_n_0;
  wire dest_ack_reg_n_0;
  wire dest_ack_sync1_reg_n_0;
  wire dest_ack_sync2_reg_n_0;
  wire drp_drdy_i;
  wire drpclk_i;
  wire drprdy_i;
  wire gen_posedge;
  wire source_sig_hold_i_1__1_n_0;
  wire source_sig_hold_reg_n_0;
  wire source_sig_hold_sync1_reg_n_0;
  wire source_sig_hold_sync2;
  wire source_sig_hold_sync3;

  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    dest_ack_i_1__1
       (.I0(dest_ack_reg_n_0),
        .I1(source_sig_hold_sync3),
        .I2(source_sig_hold_sync2),
        .O(dest_ack_i_1__1_n_0));
  FDRE dest_ack_reg
       (.C(CLK),
        .CE(1'b1),
        .D(dest_ack_i_1__1_n_0),
        .Q(dest_ack_reg_n_0),
        .R(1'b0));
  FDRE dest_ack_sync1_reg
       (.C(drpclk_i),
        .CE(1'b1),
        .D(dest_ack_reg_n_0),
        .Q(dest_ack_sync1_reg_n_0),
        .R(1'b0));
  FDRE dest_ack_sync2_reg
       (.C(drpclk_i),
        .CE(1'b1),
        .D(dest_ack_sync1_reg_n_0),
        .Q(dest_ack_sync2_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT2 #(
    .INIT(4'h2)) 
    dest_sig_o_i_1__1
       (.I0(source_sig_hold_sync2),
        .I1(source_sig_hold_sync3),
        .O(gen_posedge));
  FDRE dest_sig_o_reg
       (.C(CLK),
        .CE(1'b1),
        .D(gen_posedge),
        .Q(drp_drdy_i),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hF4)) 
    source_sig_hold_i_1__1
       (.I0(dest_ack_sync2_reg_n_0),
        .I1(source_sig_hold_reg_n_0),
        .I2(drprdy_i),
        .O(source_sig_hold_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_reg
       (.C(drpclk_i),
        .CE(1'b1),
        .D(source_sig_hold_i_1__1_n_0),
        .Q(source_sig_hold_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(source_sig_hold_reg_n_0),
        .Q(source_sig_hold_sync1_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(source_sig_hold_sync1_reg_n_0),
        .Q(source_sig_hold_sync2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync3_reg
       (.C(CLK),
        .CE(1'b1),
        .D(source_sig_hold_sync2),
        .Q(source_sig_hold_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "in_system_ibert_v1_0_11_drp_syncronizer" *) 
module c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_drp_syncronizer_740
   (drpwe_o,
    CLK,
    drpclk_i,
    drp_dwe_o);
  output drpwe_o;
  input CLK;
  input drpclk_i;
  input drp_dwe_o;

  wire CLK;
  wire dest_ack_i_1__0_n_0;
  wire dest_ack_reg_n_0;
  wire dest_ack_sync1_reg_n_0;
  wire dest_ack_sync2_reg_n_0;
  wire drp_dwe_o;
  wire drpclk_i;
  wire drpwe_o;
  wire gen_posedge;
  wire source_sig_hold_i_1__0_n_0;
  wire source_sig_hold_reg_n_0;
  wire source_sig_hold_sync1_reg_n_0;
  wire source_sig_hold_sync2;
  wire source_sig_hold_sync3;

  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    dest_ack_i_1__0
       (.I0(dest_ack_reg_n_0),
        .I1(source_sig_hold_sync3),
        .I2(source_sig_hold_sync2),
        .O(dest_ack_i_1__0_n_0));
  FDRE dest_ack_reg
       (.C(drpclk_i),
        .CE(1'b1),
        .D(dest_ack_i_1__0_n_0),
        .Q(dest_ack_reg_n_0),
        .R(1'b0));
  FDRE dest_ack_sync1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(dest_ack_reg_n_0),
        .Q(dest_ack_sync1_reg_n_0),
        .R(1'b0));
  FDRE dest_ack_sync2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(dest_ack_sync1_reg_n_0),
        .Q(dest_ack_sync2_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT2 #(
    .INIT(4'h2)) 
    dest_sig_o_i_1__0
       (.I0(source_sig_hold_sync2),
        .I1(source_sig_hold_sync3),
        .O(gen_posedge));
  FDRE dest_sig_o_reg
       (.C(drpclk_i),
        .CE(1'b1),
        .D(gen_posedge),
        .Q(drpwe_o),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hF4)) 
    source_sig_hold_i_1__0
       (.I0(dest_ack_sync2_reg_n_0),
        .I1(source_sig_hold_reg_n_0),
        .I2(drp_dwe_o),
        .O(source_sig_hold_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_reg
       (.C(CLK),
        .CE(1'b1),
        .D(source_sig_hold_i_1__0_n_0),
        .Q(source_sig_hold_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync1_reg
       (.C(drpclk_i),
        .CE(1'b1),
        .D(source_sig_hold_reg_n_0),
        .Q(source_sig_hold_sync1_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync2_reg
       (.C(drpclk_i),
        .CE(1'b1),
        .D(source_sig_hold_sync1_reg_n_0),
        .Q(source_sig_hold_sync2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync3_reg
       (.C(drpclk_i),
        .CE(1'b1),
        .D(source_sig_hold_sync2),
        .Q(source_sig_hold_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "in_system_ibert_v1_0_11_drp_syncronizer" *) 
module c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_drp_syncronizer_751
   (DEN_USR_I,
    sl_iport_i,
    clk_i);
  output [0:0]DEN_USR_I;
  input [1:0]sl_iport_i;
  input clk_i;

  wire [0:0]DEN_USR_I;
  wire clk_i;
  wire dest_ack_i_1__0_n_0;
  wire dest_ack_reg_n_0;
  wire dest_ack_sync1_reg_n_0;
  wire dest_ack_sync2_reg_n_0;
  wire gen_posedge;
  wire [1:0]sl_iport_i;
  wire source_sig_hold_i_1__0_n_0;
  wire source_sig_hold_reg_n_0;
  wire source_sig_hold_sync1_reg_n_0;
  wire source_sig_hold_sync2;
  wire source_sig_hold_sync3;

  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    dest_ack_i_1__0
       (.I0(dest_ack_reg_n_0),
        .I1(source_sig_hold_sync3),
        .I2(source_sig_hold_sync2),
        .O(dest_ack_i_1__0_n_0));
  FDRE dest_ack_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(dest_ack_i_1__0_n_0),
        .Q(dest_ack_reg_n_0),
        .R(1'b0));
  FDRE dest_ack_sync1_reg
       (.C(sl_iport_i[0]),
        .CE(1'b1),
        .D(dest_ack_reg_n_0),
        .Q(dest_ack_sync1_reg_n_0),
        .R(1'b0));
  FDRE dest_ack_sync2_reg
       (.C(sl_iport_i[0]),
        .CE(1'b1),
        .D(dest_ack_sync1_reg_n_0),
        .Q(dest_ack_sync2_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT2 #(
    .INIT(4'h2)) 
    dest_sig_o_i_1__0
       (.I0(source_sig_hold_sync2),
        .I1(source_sig_hold_sync3),
        .O(gen_posedge));
  FDRE dest_sig_o_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(gen_posedge),
        .Q(DEN_USR_I),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hF4)) 
    source_sig_hold_i_1__0
       (.I0(dest_ack_sync2_reg_n_0),
        .I1(source_sig_hold_reg_n_0),
        .I2(sl_iport_i[1]),
        .O(source_sig_hold_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_reg
       (.C(sl_iport_i[0]),
        .CE(1'b1),
        .D(source_sig_hold_i_1__0_n_0),
        .Q(source_sig_hold_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync1_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(source_sig_hold_reg_n_0),
        .Q(source_sig_hold_sync1_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync2_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(source_sig_hold_sync1_reg_n_0),
        .Q(source_sig_hold_sync2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync3_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(source_sig_hold_sync2),
        .Q(source_sig_hold_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "in_system_ibert_v1_0_11_drp_syncronizer" *) 
module c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_drp_syncronizer_752
   (dest_sig_o_reg_0,
    sl_iport_i,
    clk_i);
  output [0:0]dest_sig_o_reg_0;
  input [1:0]sl_iport_i;
  input clk_i;

  wire clk_i;
  wire dest_ack;
  wire dest_ack_i_1_n_0;
  wire dest_ack_sync1;
  wire dest_ack_sync2;
  wire [0:0]dest_sig_o_reg_0;
  wire gen_posedge;
  wire [1:0]sl_iport_i;
  wire source_sig_hold;
  wire source_sig_hold_i_1_n_0;
  wire source_sig_hold_sync1;
  wire source_sig_hold_sync2;
  wire source_sig_hold_sync3;

  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    dest_ack_i_1
       (.I0(dest_ack),
        .I1(source_sig_hold_sync3),
        .I2(source_sig_hold_sync2),
        .O(dest_ack_i_1_n_0));
  FDRE dest_ack_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(dest_ack_i_1_n_0),
        .Q(dest_ack),
        .R(1'b0));
  FDRE dest_ack_sync1_reg
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(dest_ack),
        .Q(dest_ack_sync1),
        .R(1'b0));
  FDRE dest_ack_sync2_reg
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(dest_ack_sync1),
        .Q(dest_ack_sync2),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT2 #(
    .INIT(4'h2)) 
    dest_sig_o_i_1
       (.I0(source_sig_hold_sync2),
        .I1(source_sig_hold_sync3),
        .O(gen_posedge));
  FDRE dest_sig_o_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(gen_posedge),
        .Q(dest_sig_o_reg_0),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hF4)) 
    source_sig_hold_i_1
       (.I0(dest_ack_sync2),
        .I1(source_sig_hold),
        .I2(sl_iport_i[0]),
        .O(source_sig_hold_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_reg
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(source_sig_hold_i_1_n_0),
        .Q(source_sig_hold),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync1_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(source_sig_hold),
        .Q(source_sig_hold_sync1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync2_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(source_sig_hold_sync1),
        .Q(source_sig_hold_sync2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync3_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(source_sig_hold_sync2),
        .Q(source_sig_hold_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "in_system_ibert_v1_0_11_drp_syncronizer" *) 
module c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_drp_syncronizer_753
   (DWE_USR_I,
    sl_iport_i,
    clk_i);
  output [0:0]DWE_USR_I;
  input [1:0]sl_iport_i;
  input clk_i;

  wire [0:0]DWE_USR_I;
  wire clk_i;
  wire dest_ack_i_1__1_n_0;
  wire dest_ack_reg_n_0;
  wire dest_ack_sync1_reg_n_0;
  wire dest_ack_sync2_reg_n_0;
  wire gen_posedge;
  wire [1:0]sl_iport_i;
  wire source_sig_hold_i_1__1_n_0;
  wire source_sig_hold_reg_n_0;
  wire source_sig_hold_sync1_reg_n_0;
  wire source_sig_hold_sync2;
  wire source_sig_hold_sync3;

  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    dest_ack_i_1__1
       (.I0(dest_ack_reg_n_0),
        .I1(source_sig_hold_sync3),
        .I2(source_sig_hold_sync2),
        .O(dest_ack_i_1__1_n_0));
  FDRE dest_ack_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(dest_ack_i_1__1_n_0),
        .Q(dest_ack_reg_n_0),
        .R(1'b0));
  FDRE dest_ack_sync1_reg
       (.C(sl_iport_i[0]),
        .CE(1'b1),
        .D(dest_ack_reg_n_0),
        .Q(dest_ack_sync1_reg_n_0),
        .R(1'b0));
  FDRE dest_ack_sync2_reg
       (.C(sl_iport_i[0]),
        .CE(1'b1),
        .D(dest_ack_sync1_reg_n_0),
        .Q(dest_ack_sync2_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT2 #(
    .INIT(4'h2)) 
    dest_sig_o_i_1__1
       (.I0(source_sig_hold_sync2),
        .I1(source_sig_hold_sync3),
        .O(gen_posedge));
  FDRE dest_sig_o_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(gen_posedge),
        .Q(DWE_USR_I),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hF4)) 
    source_sig_hold_i_1__1
       (.I0(dest_ack_sync2_reg_n_0),
        .I1(source_sig_hold_reg_n_0),
        .I2(sl_iport_i[1]),
        .O(source_sig_hold_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_reg
       (.C(sl_iport_i[0]),
        .CE(1'b1),
        .D(source_sig_hold_i_1__1_n_0),
        .Q(source_sig_hold_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync1_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(source_sig_hold_reg_n_0),
        .Q(source_sig_hold_sync1_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync2_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(source_sig_hold_sync1_reg_n_0),
        .Q(source_sig_hold_sync2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync3_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(source_sig_hold_sync2),
        .Q(source_sig_hold_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "in_system_ibert_v1_0_11_drp_syncronizer" *) 
module c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_drp_syncronizer_754
   (sl_oport_o,
    clk_i,
    sl_iport_i,
    DRDY_USR_O);
  output [0:0]sl_oport_o;
  input clk_i;
  input [0:0]sl_iport_i;
  input [0:0]DRDY_USR_O;

  wire [0:0]DRDY_USR_O;
  wire clk_i;
  wire dest_ack_i_1__2_n_0;
  wire dest_ack_reg_n_0;
  wire dest_ack_sync1_reg_n_0;
  wire dest_ack_sync2_reg_n_0;
  wire gen_posedge;
  wire [0:0]sl_iport_i;
  wire [0:0]sl_oport_o;
  wire source_sig_hold_i_1__2_n_0;
  wire source_sig_hold_reg_n_0;
  wire source_sig_hold_sync1_reg_n_0;
  wire source_sig_hold_sync2;
  wire source_sig_hold_sync3;

  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    dest_ack_i_1__2
       (.I0(dest_ack_reg_n_0),
        .I1(source_sig_hold_sync3),
        .I2(source_sig_hold_sync2),
        .O(dest_ack_i_1__2_n_0));
  FDRE dest_ack_reg
       (.C(sl_iport_i),
        .CE(1'b1),
        .D(dest_ack_i_1__2_n_0),
        .Q(dest_ack_reg_n_0),
        .R(1'b0));
  FDRE dest_ack_sync1_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(dest_ack_reg_n_0),
        .Q(dest_ack_sync1_reg_n_0),
        .R(1'b0));
  FDRE dest_ack_sync2_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(dest_ack_sync1_reg_n_0),
        .Q(dest_ack_sync2_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT2 #(
    .INIT(4'h2)) 
    dest_sig_o_i_1__2
       (.I0(source_sig_hold_sync2),
        .I1(source_sig_hold_sync3),
        .O(gen_posedge));
  FDRE dest_sig_o_reg
       (.C(sl_iport_i),
        .CE(1'b1),
        .D(gen_posedge),
        .Q(sl_oport_o),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hF4)) 
    source_sig_hold_i_1__2
       (.I0(dest_ack_sync2_reg_n_0),
        .I1(source_sig_hold_reg_n_0),
        .I2(DRDY_USR_O),
        .O(source_sig_hold_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_reg
       (.C(clk_i),
        .CE(1'b1),
        .D(source_sig_hold_i_1__2_n_0),
        .Q(source_sig_hold_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync1_reg
       (.C(sl_iport_i),
        .CE(1'b1),
        .D(source_sig_hold_reg_n_0),
        .Q(source_sig_hold_sync1_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync2_reg
       (.C(sl_iport_i),
        .CE(1'b1),
        .D(source_sig_hold_sync1_reg_n_0),
        .Q(source_sig_hold_sync2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    source_sig_hold_sync3_reg
       (.C(sl_iport_i),
        .CE(1'b1),
        .D(source_sig_hold_sync2),
        .Q(source_sig_hold_sync3),
        .R(1'b0));
endmodule

(* C_ARBITER_USER_PORTS = "2" *) (* C_CORE_INFO1 = "128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) (* C_CORE_INFO2 = "128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
(* C_CORE_MAJOR_VER = "3" *) (* C_CORE_MINOR_VER = "0" *) (* C_CORE_TYPE = "16'b0000000000000100" *) 
(* C_CSE_DRV_VER = "16'b0000000000000001" *) (* C_GT_COORDINATE = "16'b0000000000011000" *) (* C_MAJOR_VERSION = "2013" *) 
(* C_MINOR_VERSION = "3" *) (* C_NEXT_SLAVE = "1" *) (* C_NUM_GT = "2" *) 
(* C_PIPE_IFACE = "1" *) (* C_QUAD_NUMBER = "16'b0000000011100110" *) (* C_USE_TEST_REG = "1" *) 
(* C_XSDB_SLAVE_TYPE = "16'b0000010000010010" *) (* LC_AWIDTH = "17" *) (* LC_DWIDTH = "16" *) 
(* LC_D_ZERO = "16'b0000000000000000" *) (* LC_LSB_AWIDTH = "11" *) 
module c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_gthe4_channel_regs
   (rxlpmen_i,
    rxrate_i,
    txdiffctrl_i,
    txpostcursor_i,
    txprecursor_i,
    eyescanreset_out_o,
    rxlpmen_out_o,
    rxlpmen_ovrd_o,
    rxrate_out_o,
    rxrate_ovrd_o,
    txdiffctrl_out_o,
    txdiffctrl_ovrd_o,
    txpostcursor_out_o,
    txpostcursor_ovrd_o,
    txprecursor_out_o,
    txprecursor_ovrd_o,
    mb_reset_o,
    clk_i,
    drp_daddr_o,
    drp_dclk_o,
    drp_den_o,
    drp_dwe_o,
    drp_di_o,
    drp_drdy_i,
    drp_do_i,
    s_dclk_o,
    sl_oport_o,
    reg_rst_i,
    den_usr_i,
    dwe_usr_i,
    daddr_usr_i,
    di_usr_i,
    do_usr_o,
    drdy_usr_o,
    sl_iport_i);
  input rxlpmen_i;
  input [2:0]rxrate_i;
  input [4:0]txdiffctrl_i;
  input [4:0]txpostcursor_i;
  input [4:0]txprecursor_i;
  output eyescanreset_out_o;
  output rxlpmen_out_o;
  output rxlpmen_ovrd_o;
  output [2:0]rxrate_out_o;
  output rxrate_ovrd_o;
  output [4:0]txdiffctrl_out_o;
  output txdiffctrl_ovrd_o;
  output [4:0]txpostcursor_out_o;
  output txpostcursor_ovrd_o;
  output [4:0]txprecursor_out_o;
  output txprecursor_ovrd_o;
  output mb_reset_o;
  input clk_i;
  output [9:0]drp_daddr_o;
  output drp_dclk_o;
  output drp_den_o;
  output drp_dwe_o;
  output [15:0]drp_di_o;
  input drp_drdy_i;
  input [15:0]drp_do_i;
  output s_dclk_o;
  output [16:0]sl_oport_o;
  input reg_rst_i;
  input [1:0]den_usr_i;
  input [1:0]dwe_usr_i;
  input [33:0]daddr_usr_i;
  input [31:0]di_usr_i;
  output [31:0]do_usr_o;
  output [1:0]drdy_usr_o;
  input [36:0]sl_iport_i;

  wire clk_i;
  wire [33:0]daddr_usr_i;
  wire [1:0]den_usr_i;
  wire [31:0]di_usr_i;
  wire [31:0]do_usr_o;
  wire [1:0]drdy_usr_o;
  wire [9:0]drp_daddr_o;
  wire drp_den_o;
  wire [15:0]drp_di_o;
  wire [15:0]drp_do_i;
  wire drp_drdy_i;
  wire drp_dwe_o;
  wire drp_range;
  wire drp_range_den0;
  wire drp_range_den_i_1_n_0;
  wire drp_range_dly;
  wire [1:0]dwe_usr_i;
  wire eyescanreset_out_o;
  wire isAddrRange01_in;
  wire mb_reset_o;
  wire p_0_in;
  wire [15:0]ram_do;
  wire ram_range;
  wire ram_range00_in;
  wire ram_range_dly;
  wire ram_range_dly_den;
  wire ram_range_dly_den0;
  wire ram_range_dly_i_2_n_0;
  wire ram_range_dly_i_3_n_0;
  wire ram_range_dly_i_4_n_0;
  wire [15:0]regSlaveDo;
  wire \regSlaveDo[0]_i_6_n_0 ;
  wire \regSlaveDo[15]_i_3_n_0 ;
  wire \regSlaveDo[15]_i_4_n_0 ;
  wire \regSlaveDo[15]_i_7_n_0 ;
  wire \regSlaveDo[15]_i_8_n_0 ;
  wire \regSlaveDo[15]_i_9_n_0 ;
  wire \regSlaveDo[1]_i_2_n_0 ;
  wire \regSlaveDo[1]_i_4_n_0 ;
  wire \regSlaveDo[5]_i_3_n_0 ;
  wire \regSlaveDo[5]_i_6_n_0 ;
  wire \regSlaveDo[5]_i_7_n_0 ;
  wire \regSlaveDo[7]_i_6_n_0 ;
  wire \regSlaveDo[7]_i_7_n_0 ;
  wire reg_401_n_0;
  wire reg_401_n_1;
  wire reg_401_n_10;
  wire reg_401_n_11;
  wire reg_401_n_12;
  wire reg_401_n_13;
  wire reg_401_n_14;
  wire reg_401_n_15;
  wire reg_401_n_16;
  wire reg_401_n_17;
  wire reg_401_n_18;
  wire reg_401_n_19;
  wire reg_401_n_2;
  wire reg_401_n_20;
  wire reg_401_n_22;
  wire reg_401_n_3;
  wire reg_401_n_4;
  wire reg_401_n_5;
  wire reg_401_n_7;
  wire reg_401_n_8;
  wire reg_401_n_9;
  wire reg_402_n_0;
  wire reg_402_n_1;
  wire reg_402_n_11;
  wire reg_402_n_16;
  wire reg_402_n_17;
  wire reg_402_n_2;
  wire reg_402_n_3;
  wire reg_402_n_4;
  wire reg_402_n_5;
  wire reg_402_n_6;
  wire reg_402_n_7;
  wire reg_402_n_8;
  wire reg_406_n_0;
  wire reg_415_n_0;
  wire reg_415_n_1;
  wire reg_415_n_2;
  wire reg_417_n_0;
  wire reg_417_n_11;
  wire reg_417_n_12;
  wire reg_417_n_13;
  wire reg_417_n_14;
  wire reg_417_n_15;
  wire reg_417_n_16;
  wire reg_417_n_17;
  wire reg_417_n_18;
  wire reg_417_n_19;
  wire reg_417_n_2;
  wire reg_417_n_20;
  wire reg_417_n_21;
  wire reg_417_n_22;
  wire reg_417_n_23;
  wire reg_417_n_24;
  wire reg_417_n_3;
  wire reg_417_n_4;
  wire reg_41a_n_0;
  wire reg_41a_n_1;
  wire reg_41a_n_12;
  wire reg_41a_n_13;
  wire reg_41a_n_14;
  wire reg_41a_n_15;
  wire reg_41a_n_16;
  wire reg_41a_n_2;
  wire reg_41a_n_3;
  wire reg_41a_n_4;
  wire reg_41a_n_5;
  wire reg_41b_n_0;
  wire reg_41b_n_1;
  wire reg_41b_n_10;
  wire reg_41b_n_17;
  wire reg_41b_n_18;
  wire reg_41b_n_19;
  wire reg_41b_n_2;
  wire reg_41b_n_20;
  wire reg_41b_n_3;
  wire reg_41b_n_4;
  wire reg_41b_n_5;
  wire reg_41b_n_6;
  wire reg_41b_n_7;
  wire reg_41b_n_8;
  wire reg_41b_n_9;
  wire reg_420_n_0;
  wire reg_420_n_1;
  wire reg_420_n_2;
  wire reg_420_n_3;
  wire reg_420_n_4;
  wire reg_420_n_5;
  wire reg_420_n_6;
  wire reg_420_n_7;
  wire reg_420_n_8;
  wire reg_420_n_9;
  wire reg_421_n_0;
  wire reg_421_n_1;
  wire reg_421_n_2;
  wire reg_421_n_3;
  wire reg_421_n_4;
  wire reg_422_n_0;
  wire reg_422_n_1;
  wire reg_422_n_10;
  wire reg_422_n_11;
  wire reg_422_n_12;
  wire reg_422_n_13;
  wire reg_422_n_14;
  wire reg_422_n_15;
  wire reg_422_n_2;
  wire reg_422_n_3;
  wire reg_422_n_4;
  wire reg_422_n_5;
  wire reg_422_n_6;
  wire reg_422_n_7;
  wire reg_422_n_8;
  wire reg_422_n_9;
  wire reg_rst_i;
  wire rxlpmen_i;
  wire rxlpmen_out_o;
  wire rxlpmen_ovrd_o;
  wire [2:0]rxrate_i;
  wire [2:0]rxrate_out_o;
  wire rxrate_ovrd_o;
  wire [16:10]s_daddr;
  wire s_dclk_o;
  wire s_den;
  wire \s_den_dly_reg_n_0_[0] ;
  wire \s_den_dly_reg_n_0_[1] ;
  wire [15:0]s_do;
  wire s_drdy;
  wire s_dwe;
  wire [0:0]s_dwe_dly;
  wire s_rst;
  wire [36:0]sl_iport_i;
  wire [36:0]sl_iport_int;
  wire sl_iport_sync_2;
  wire sl_iport_sync_3;
  wire [16:0]sl_oport_int;
  wire [16:0]sl_oport_o;
  wire [4:0]txdiffctrl_i;
  wire [4:0]txdiffctrl_out_o;
  wire txdiffctrl_ovrd_o;
  wire [4:0]txpostcursor_i;
  wire [4:0]txpostcursor_out_o;
  wire txpostcursor_ovrd_o;
  wire [4:0]txprecursor_i;
  wire [4:0]txprecursor_out_o;
  wire txprecursor_ovrd_o;
  wire u_arb_n_50;
  wire NLW_myram_reg_bram_0_CASOUTDBITERR_UNCONNECTED;
  wire NLW_myram_reg_bram_0_CASOUTSBITERR_UNCONNECTED;
  wire NLW_myram_reg_bram_0_DBITERR_UNCONNECTED;
  wire NLW_myram_reg_bram_0_SBITERR_UNCONNECTED;
  wire [31:0]NLW_myram_reg_bram_0_CASDOUTA_UNCONNECTED;
  wire [31:0]NLW_myram_reg_bram_0_CASDOUTB_UNCONNECTED;
  wire [3:0]NLW_myram_reg_bram_0_CASDOUTPA_UNCONNECTED;
  wire [3:0]NLW_myram_reg_bram_0_CASDOUTPB_UNCONNECTED;
  wire [31:16]NLW_myram_reg_bram_0_DOUTADOUT_UNCONNECTED;
  wire [31:0]NLW_myram_reg_bram_0_DOUTBDOUT_UNCONNECTED;
  wire [3:0]NLW_myram_reg_bram_0_DOUTPADOUTP_UNCONNECTED;
  wire [3:0]NLW_myram_reg_bram_0_DOUTPBDOUTP_UNCONNECTED;
  wire [7:0]NLW_myram_reg_bram_0_ECCPARITY_UNCONNECTED;
  wire [8:0]NLW_myram_reg_bram_0_RDADDRECC_UNCONNECTED;

  assign drp_dclk_o = s_dclk_o;
  (* C_BUILD_REVISION = "0" *) 
  (* C_CORE_INFO1 = "128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_CORE_INFO2 = "128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_CORE_MAJOR_VER = "3" *) 
  (* C_CORE_MINOR_VER = "0" *) 
  (* C_CORE_TYPE = "16'b0000000000000100" *) 
  (* C_CSE_DRV_VER = "16'b0000000000000001" *) 
  (* C_MAJOR_VERSION = "2013" *) 
  (* C_MINOR_VERSION = "3" *) 
  (* C_NEXT_SLAVE = "1" *) 
  (* C_PIPE_IFACE = "1" *) 
  (* C_USE_TEST_REG = "1" *) 
  (* C_XDEVICEFAMILY = "virtex7" *) 
  (* C_XSDB_SLAVE_TYPE = "16'b0000010000010010" *) 
  (* DONT_TOUCH *) 
  (* KEEP_HIERARCHY = "yes" *) 
  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_xsdbs U_XSDB_SLAVE
       (.s_daddr_o({s_daddr,drp_daddr_o}),
        .s_dclk_o(s_dclk_o),
        .s_den_o(s_den),
        .s_di_o(drp_di_o),
        .s_do_i(s_do),
        .s_drdy_i(s_drdy),
        .s_dwe_o(s_dwe),
        .s_rst_o(s_rst),
        .sl_iport_i({sl_iport_int[36:2],clk_i,sl_iport_int[0]}),
        .sl_oport_o(sl_oport_int));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_1
       (.I0(ram_do[15]),
        .I1(ram_range_dly),
        .I2(drp_do_i[15]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[15]),
        .O(s_do[15]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_10
       (.I0(ram_do[6]),
        .I1(ram_range_dly),
        .I2(drp_do_i[6]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[6]),
        .O(s_do[6]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_11
       (.I0(ram_do[5]),
        .I1(ram_range_dly),
        .I2(drp_do_i[5]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[5]),
        .O(s_do[5]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_12
       (.I0(ram_do[4]),
        .I1(ram_range_dly),
        .I2(drp_do_i[4]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[4]),
        .O(s_do[4]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_13
       (.I0(ram_do[3]),
        .I1(ram_range_dly),
        .I2(drp_do_i[3]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[3]),
        .O(s_do[3]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_14
       (.I0(ram_do[2]),
        .I1(ram_range_dly),
        .I2(drp_do_i[2]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[2]),
        .O(s_do[2]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_15
       (.I0(ram_do[1]),
        .I1(ram_range_dly),
        .I2(drp_do_i[1]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[1]),
        .O(s_do[1]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_16
       (.I0(ram_do[0]),
        .I1(ram_range_dly),
        .I2(drp_do_i[0]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[0]),
        .O(s_do[0]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'hEF40)) 
    U_XSDB_SLAVE_i_17
       (.I0(ram_range_dly),
        .I1(drp_drdy_i),
        .I2(drp_range_dly),
        .I3(p_0_in),
        .O(s_drdy));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_2
       (.I0(ram_do[14]),
        .I1(ram_range_dly),
        .I2(drp_do_i[14]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[14]),
        .O(s_do[14]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_3
       (.I0(ram_do[13]),
        .I1(ram_range_dly),
        .I2(drp_do_i[13]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[13]),
        .O(s_do[13]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_4
       (.I0(ram_do[12]),
        .I1(ram_range_dly),
        .I2(drp_do_i[12]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[12]),
        .O(s_do[12]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_5
       (.I0(ram_do[11]),
        .I1(ram_range_dly),
        .I2(drp_do_i[11]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[11]),
        .O(s_do[11]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_6
       (.I0(ram_do[10]),
        .I1(ram_range_dly),
        .I2(drp_do_i[10]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[10]),
        .O(s_do[10]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_7
       (.I0(ram_do[9]),
        .I1(ram_range_dly),
        .I2(drp_do_i[9]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[9]),
        .O(s_do[9]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_8
       (.I0(ram_do[8]),
        .I1(ram_range_dly),
        .I2(drp_do_i[8]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[8]),
        .O(s_do[8]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_9
       (.I0(ram_do[7]),
        .I1(ram_range_dly),
        .I2(drp_do_i[7]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[7]),
        .O(s_do[7]));
  LUT1 #(
    .INIT(2'h1)) 
    drp_range_den_i_1
       (.I0(s_rst),
        .O(drp_range_den_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    drp_range_den_i_2
       (.I0(drp_range_dly),
        .I1(\s_den_dly_reg_n_0_[0] ),
        .O(drp_range_den0));
  FDRE drp_range_den_reg
       (.C(s_dclk_o),
        .CE(drp_range_den_i_1_n_0),
        .D(drp_range_den0),
        .Q(drp_den_o),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h1)) 
    drp_range_dly_i_1
       (.I0(ram_range00_in),
        .I1(s_daddr[10]),
        .O(drp_range));
  FDRE drp_range_dly_reg
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(drp_range),
        .Q(drp_range_dly),
        .R(s_rst));
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d16" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* RDADDR_COLLISION_HWCONFIG = "PERFORMANCE" *) 
  (* RTL_RAM_BITS = "32608" *) 
  (* RTL_RAM_NAME = "myram" *) 
  (* RTL_RAM_TYPE = "RAM_SP" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "2047" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "15" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "2047" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "15" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(0),
    .DOB_REG(0),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("FALSE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(0)) 
    myram_reg_bram_0
       (.ADDRARDADDR({s_daddr[10],drp_daddr_o,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b0),
        .ADDRENB(1'b0),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINB({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINPA({1'b0,1'b0,1'b0,1'b0}),
        .CASDINPB({1'b0,1'b0,1'b0,1'b0}),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(NLW_myram_reg_bram_0_CASDOUTA_UNCONNECTED[31:0]),
        .CASDOUTB(NLW_myram_reg_bram_0_CASDOUTB_UNCONNECTED[31:0]),
        .CASDOUTPA(NLW_myram_reg_bram_0_CASDOUTPA_UNCONNECTED[3:0]),
        .CASDOUTPB(NLW_myram_reg_bram_0_CASDOUTPB_UNCONNECTED[3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(NLW_myram_reg_bram_0_CASOUTDBITERR_UNCONNECTED),
        .CASOUTSBITERR(NLW_myram_reg_bram_0_CASOUTSBITERR_UNCONNECTED),
        .CLKARDCLK(s_dclk_o),
        .CLKBWRCLK(1'b0),
        .DBITERR(NLW_myram_reg_bram_0_DBITERR_UNCONNECTED),
        .DINADIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,drp_di_o}),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DINPADINP({1'b0,1'b0,1'b0,1'b0}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT({NLW_myram_reg_bram_0_DOUTADOUT_UNCONNECTED[31:16],ram_do}),
        .DOUTBDOUT(NLW_myram_reg_bram_0_DOUTBDOUT_UNCONNECTED[31:0]),
        .DOUTPADOUTP(NLW_myram_reg_bram_0_DOUTPADOUTP_UNCONNECTED[3:0]),
        .DOUTPBDOUTP(NLW_myram_reg_bram_0_DOUTPBDOUTP_UNCONNECTED[3:0]),
        .ECCPARITY(NLW_myram_reg_bram_0_ECCPARITY_UNCONNECTED[7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(ram_range_dly_den),
        .ENBWREN(1'b0),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(NLW_myram_reg_bram_0_RDADDRECC_UNCONNECTED[8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(NLW_myram_reg_bram_0_SBITERR_UNCONNECTED),
        .SLEEP(1'b0),
        .WEA({drp_dwe_o,drp_dwe_o,drp_dwe_o,drp_dwe_o}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ram_range_dly_den_i_1
       (.I0(ram_range_dly),
        .I1(\s_den_dly_reg_n_0_[0] ),
        .O(ram_range_dly_den0));
  FDRE ram_range_dly_den_reg
       (.C(s_dclk_o),
        .CE(drp_range_den_i_1_n_0),
        .D(ram_range_dly_den0),
        .Q(ram_range_dly_den),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h00E0)) 
    ram_range_dly_i_1
       (.I0(ram_range_dly_i_2_n_0),
        .I1(ram_range_dly_i_3_n_0),
        .I2(s_daddr[11]),
        .I3(ram_range_dly_i_4_n_0),
        .O(ram_range));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    ram_range_dly_i_2
       (.I0(s_daddr[10]),
        .I1(drp_daddr_o[7]),
        .I2(drp_daddr_o[5]),
        .I3(drp_daddr_o[8]),
        .I4(s_daddr[11]),
        .O(ram_range_dly_i_2_n_0));
  LUT6 #(
    .INIT(64'h7F7F7FFF7FFF7FFF)) 
    ram_range_dly_i_3
       (.I0(drp_daddr_o[9]),
        .I1(drp_daddr_o[4]),
        .I2(drp_daddr_o[6]),
        .I3(drp_daddr_o[3]),
        .I4(drp_daddr_o[1]),
        .I5(drp_daddr_o[2]),
        .O(ram_range_dly_i_3_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    ram_range_dly_i_4
       (.I0(s_daddr[16]),
        .I1(s_daddr[12]),
        .I2(s_daddr[13]),
        .I3(s_daddr[15]),
        .I4(s_daddr[14]),
        .O(ram_range_dly_i_4_n_0));
  FDRE ram_range_dly_reg
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(ram_range),
        .Q(ram_range_dly),
        .R(s_rst));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \regSlaveDo[0]_i_6 
       (.I0(drp_daddr_o[0]),
        .I1(drp_daddr_o[5]),
        .O(\regSlaveDo[0]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'hA888)) 
    \regSlaveDo[15]_i_3 
       (.I0(\regSlaveDo[15]_i_7_n_0 ),
        .I1(drp_daddr_o[5]),
        .I2(drp_daddr_o[0]),
        .I3(drp_daddr_o[1]),
        .O(\regSlaveDo[15]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'h0222)) 
    \regSlaveDo[15]_i_4 
       (.I0(\regSlaveDo[15]_i_7_n_0 ),
        .I1(drp_daddr_o[5]),
        .I2(drp_daddr_o[0]),
        .I3(drp_daddr_o[1]),
        .O(\regSlaveDo[15]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \regSlaveDo[15]_i_7 
       (.I0(drp_daddr_o[1]),
        .I1(drp_daddr_o[5]),
        .I2(drp_daddr_o[6]),
        .I3(drp_daddr_o[2]),
        .I4(drp_daddr_o[4]),
        .I5(drp_daddr_o[3]),
        .O(\regSlaveDo[15]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \regSlaveDo[15]_i_8 
       (.I0(drp_daddr_o[3]),
        .I1(drp_daddr_o[6]),
        .I2(drp_daddr_o[4]),
        .I3(drp_daddr_o[2]),
        .O(\regSlaveDo[15]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT5 #(
    .INIT(32'h08000000)) 
    \regSlaveDo[15]_i_9 
       (.I0(drp_daddr_o[4]),
        .I1(drp_daddr_o[0]),
        .I2(drp_daddr_o[5]),
        .I3(drp_daddr_o[2]),
        .I4(drp_daddr_o[1]),
        .O(\regSlaveDo[15]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT5 #(
    .INIT(32'h00080000)) 
    \regSlaveDo[1]_i_2 
       (.I0(drp_daddr_o[4]),
        .I1(drp_daddr_o[6]),
        .I2(drp_daddr_o[2]),
        .I3(drp_daddr_o[3]),
        .I4(\regSlaveDo[1]_i_4_n_0 ),
        .O(\regSlaveDo[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \regSlaveDo[1]_i_4 
       (.I0(drp_daddr_o[1]),
        .I1(drp_daddr_o[5]),
        .I2(drp_daddr_o[0]),
        .O(\regSlaveDo[1]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT5 #(
    .INIT(32'h00020000)) 
    \regSlaveDo[5]_i_3 
       (.I0(drp_daddr_o[2]),
        .I1(drp_daddr_o[6]),
        .I2(drp_daddr_o[3]),
        .I3(drp_daddr_o[4]),
        .I4(\regSlaveDo[5]_i_7_n_0 ),
        .O(\regSlaveDo[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0800000000000000)) 
    \regSlaveDo[5]_i_6 
       (.I0(drp_daddr_o[1]),
        .I1(drp_daddr_o[2]),
        .I2(drp_daddr_o[5]),
        .I3(drp_daddr_o[0]),
        .I4(drp_daddr_o[4]),
        .I5(\regSlaveDo[7]_i_6_n_0 ),
        .O(\regSlaveDo[5]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \regSlaveDo[5]_i_7 
       (.I0(drp_daddr_o[1]),
        .I1(drp_daddr_o[5]),
        .I2(drp_daddr_o[0]),
        .O(\regSlaveDo[5]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \regSlaveDo[7]_i_6 
       (.I0(drp_daddr_o[6]),
        .I1(drp_daddr_o[3]),
        .O(\regSlaveDo[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \regSlaveDo[7]_i_7 
       (.I0(drp_daddr_o[2]),
        .I1(drp_daddr_o[4]),
        .O(\regSlaveDo[7]_i_7_n_0 ));
  FDRE \regSlaveDo_reg[0] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_41b_n_0),
        .Q(regSlaveDo[0]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[10] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_401_n_12),
        .Q(regSlaveDo[10]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[11] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_401_n_13),
        .Q(regSlaveDo[11]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[12] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_401_n_14),
        .Q(regSlaveDo[12]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[13] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_401_n_15),
        .Q(regSlaveDo[13]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[14] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_401_n_16),
        .Q(regSlaveDo[14]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[15] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_41b_n_19),
        .Q(regSlaveDo[15]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[1] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_41b_n_3),
        .Q(regSlaveDo[1]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[2] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_41b_n_17),
        .Q(regSlaveDo[2]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[3] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_401_n_7),
        .Q(regSlaveDo[3]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[4] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_401_n_8),
        .Q(regSlaveDo[4]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[5] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_41b_n_18),
        .Q(regSlaveDo[5]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[6] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_41b_n_1),
        .Q(regSlaveDo[6]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[7] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_41b_n_2),
        .Q(regSlaveDo[7]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[8] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_401_n_10),
        .Q(regSlaveDo[8]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[9] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_401_n_11),
        .Q(regSlaveDo[9]),
        .R(reg_401_n_1));
  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_741 reg_401
       (.D(drp_di_o),
        .\G_1PIPE_IFACE.s_daddr_r_reg[0] (reg_401_n_4),
        .\G_1PIPE_IFACE.s_daddr_r_reg[10] (reg_401_n_3),
        .\G_1PIPE_IFACE.s_daddr_r_reg[5] (reg_401_n_0),
        .\G_1PIPE_IFACE.s_daddr_r_reg[7] (reg_401_n_5),
        .\G_1PIPE_IFACE.s_daddr_r_reg[9] (reg_401_n_1),
        .\G_1PIPE_IFACE.s_dwe_r_reg (reg_401_n_2),
        .Q({reg_41a_n_2,reg_41a_n_3,reg_41a_n_4,reg_41a_n_5,txpostcursor_out_o[4:2],reg_41a_n_12,reg_41a_n_13}),
        .ram_range00_in(ram_range00_in),
        .\regSlaveDo[14]_i_2 ({reg_420_n_2,reg_420_n_3,reg_420_n_4,reg_420_n_5,reg_420_n_6,reg_420_n_7,reg_420_n_8,reg_420_n_9}),
        .\regSlaveDo_reg[10] (reg_417_n_20),
        .\regSlaveDo_reg[11] (reg_417_n_21),
        .\regSlaveDo_reg[12] (reg_417_n_22),
        .\regSlaveDo_reg[13] (reg_417_n_23),
        .\regSlaveDo_reg[14] (\regSlaveDo[15]_i_4_n_0 ),
        .\regSlaveDo_reg[14]_0 (\regSlaveDo[15]_i_3_n_0 ),
        .\regSlaveDo_reg[14]_1 ({reg_41b_n_4,reg_41b_n_5,reg_41b_n_6,reg_41b_n_7,reg_41b_n_8,reg_41b_n_9,reg_41b_n_10,txprecursor_out_o[4:3]}),
        .\regSlaveDo_reg[14]_2 (\regSlaveDo[15]_i_8_n_0 ),
        .\regSlaveDo_reg[14]_3 ({reg_402_n_2,reg_402_n_3,reg_402_n_4,reg_402_n_5,reg_402_n_6,reg_402_n_7,reg_402_n_8,rxlpmen_out_o,reg_402_n_11,rxrate_ovrd_o}),
        .\regSlaveDo_reg[14]_4 (reg_41a_n_0),
        .\regSlaveDo_reg[14]_5 ({reg_422_n_4,reg_422_n_5,reg_422_n_6,reg_422_n_7,reg_422_n_8,reg_422_n_9,reg_422_n_10,reg_422_n_13}),
        .\regSlaveDo_reg[14]_6 (reg_422_n_0),
        .\regSlaveDo_reg[14]_7 (reg_417_n_24),
        .\regSlaveDo_reg[3] (reg_417_n_16),
        .\regSlaveDo_reg[3]_0 (reg_421_n_2),
        .\regSlaveDo_reg[4] (reg_417_n_17),
        .\regSlaveDo_reg[4]_0 (reg_421_n_3),
        .\regSlaveDo_reg[8] (reg_417_n_18),
        .\regSlaveDo_reg[9] (reg_417_n_19),
        .reg_rst_i(reg_rst_i),
        .s_daddr_o({s_daddr,drp_daddr_o}),
        .s_dclk_o(s_dclk_o),
        .s_dwe_o(s_dwe),
        .\xsdb_reg_reg[0] (reg_417_n_2),
        .\xsdb_reg_reg[0]_0 (reg_417_n_14),
        .\xsdb_reg_reg[10] (reg_401_n_12),
        .\xsdb_reg_reg[11] (reg_401_n_13),
        .\xsdb_reg_reg[12] (reg_401_n_14),
        .\xsdb_reg_reg[13] (reg_401_n_15),
        .\xsdb_reg_reg[14] (reg_401_n_16),
        .\xsdb_reg_reg[15] ({reg_401_n_17,reg_401_n_18,reg_401_n_19,reg_401_n_20,eyescanreset_out_o,reg_401_n_22}),
        .\xsdb_reg_reg[3] (reg_401_n_7),
        .\xsdb_reg_reg[4] (reg_401_n_8),
        .\xsdb_reg_reg[5] (reg_401_n_9),
        .\xsdb_reg_reg[8] (reg_401_n_10),
        .\xsdb_reg_reg[9] (reg_401_n_11));
  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized0_742 reg_402
       (.D(drp_di_o),
        .Q({reg_402_n_1,reg_402_n_2,reg_402_n_3,reg_402_n_4,reg_402_n_5,reg_402_n_6,reg_402_n_7,reg_402_n_8,rxlpmen_ovrd_o,rxlpmen_out_o,reg_402_n_11,rxrate_ovrd_o,rxrate_out_o}),
        .\regSlaveDo_reg[0] (reg_421_n_4),
        .\regSlaveDo_reg[7] (\regSlaveDo[7]_i_7_n_0 ),
        .\regSlaveDo_reg[7]_0 ({reg_401_n_18,reg_401_n_19}),
        .reg_rst_i(reg_rst_i),
        .s_daddr_o({drp_daddr_o[5],drp_daddr_o[1:0]}),
        .s_dclk_o(s_dclk_o),
        .\xsdb_reg_reg[0] (reg_402_n_0),
        .\xsdb_reg_reg[0]_0 (reg_417_n_2),
        .\xsdb_reg_reg[0]_1 (reg_41a_n_0),
        .\xsdb_reg_reg[0]_2 (reg_401_n_1),
        .\xsdb_reg_reg[0]_3 (reg_401_n_2),
        .\xsdb_reg_reg[0]_4 (reg_401_n_3),
        .\xsdb_reg_reg[0]_5 (reg_401_n_4),
        .\xsdb_reg_reg[6] (reg_402_n_16),
        .\xsdb_reg_reg[7] (reg_402_n_17));
  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized1_743 reg_406
       (.\regSlaveDo_reg[5] (reg_41a_n_0),
        .rxlpmen_i(rxlpmen_i),
        .s_daddr_o({drp_daddr_o[6],drp_daddr_o[4:2]}),
        .s_dclk_o(s_dclk_o),
        .\xsdb_reg_reg[5] (reg_406_n_0));
  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized2_744 reg_415
       (.\G_1PIPE_IFACE.s_daddr_r_reg[4] (reg_415_n_1),
        .Q(reg_417_n_11),
        .\regSlaveDo_reg[0] (\regSlaveDo[0]_i_6_n_0 ),
        .\regSlaveDo_reg[0]_0 (reg_401_n_22),
        .\regSlaveDo_reg[1] (reg_421_n_1),
        .\regSlaveDo_reg[1]_0 (reg_422_n_2),
        .\regSlaveDo_reg[1]_1 (\regSlaveDo[7]_i_6_n_0 ),
        .rxrate_i(rxrate_i),
        .s_daddr_o({drp_daddr_o[5:4],drp_daddr_o[2:0]}),
        .s_dclk_o(s_dclk_o),
        .\xsdb_reg_reg[0] (reg_415_n_0),
        .\xsdb_reg_reg[2] (reg_415_n_2));
  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized3_745 reg_417
       (.D(drp_di_o),
        .\G_1PIPE_IFACE.s_daddr_r_reg[5] (reg_417_n_14),
        .\G_1PIPE_IFACE.s_daddr_r_reg[6] (reg_417_n_2),
        .\G_1PIPE_IFACE.s_daddr_r_reg[6]_0 (reg_417_n_16),
        .\G_1PIPE_IFACE.s_daddr_r_reg[6]_1 (reg_417_n_17),
        .\G_1PIPE_IFACE.s_daddr_r_reg[6]_2 (reg_417_n_18),
        .\G_1PIPE_IFACE.s_daddr_r_reg[6]_3 (reg_417_n_19),
        .\G_1PIPE_IFACE.s_daddr_r_reg[6]_4 (reg_417_n_20),
        .\G_1PIPE_IFACE.s_daddr_r_reg[6]_5 (reg_417_n_21),
        .\G_1PIPE_IFACE.s_daddr_r_reg[6]_6 (reg_417_n_22),
        .\G_1PIPE_IFACE.s_daddr_r_reg[6]_7 (reg_417_n_23),
        .\G_1PIPE_IFACE.s_daddr_r_reg[6]_8 (reg_417_n_24),
        .\G_1PIPE_IFACE.s_daddr_r_reg[9] (reg_417_n_0),
        .Q({reg_422_n_11,reg_422_n_12,mb_reset_o}),
        .isAddrRange01_in(isAddrRange01_in),
        .ram_range00_in(ram_range00_in),
        .\regSlaveDo_reg[14] (\regSlaveDo[15]_i_9_n_0 ),
        .\regSlaveDo_reg[15] (\regSlaveDo[15]_i_8_n_0 ),
        .\regSlaveDo_reg[15]_0 (reg_401_n_0),
        .\regSlaveDo_reg[15]_1 (reg_401_n_17),
        .\regSlaveDo_reg[2] (\regSlaveDo[7]_i_6_n_0 ),
        .\regSlaveDo_reg[2]_0 (reg_41b_n_20),
        .\regSlaveDo_reg[2]_1 (reg_415_n_2),
        .\regSlaveDo_reg[7] (reg_422_n_0),
        .reg_rst_i(reg_rst_i),
        .s_daddr_o({s_daddr[10],drp_daddr_o}),
        .s_dclk_o(s_dclk_o),
        .s_dwe_o(s_dwe),
        .\xsdb_reg_reg[0] (reg_417_n_3),
        .\xsdb_reg_reg[0]_0 (reg_401_n_1),
        .\xsdb_reg_reg[0]_1 (reg_401_n_5),
        .\xsdb_reg_reg[15] (reg_417_n_13),
        .\xsdb_reg_reg[2] (reg_417_n_15),
        .\xsdb_reg_reg[6] (reg_417_n_4),
        .\xsdb_reg_reg[7] (reg_417_n_12),
        .\xsdb_reg_reg[9] ({txdiffctrl_ovrd_o,txdiffctrl_out_o,reg_417_n_11}));
  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized4_746 reg_41a
       (.\G_1PIPE_IFACE.s_daddr_r_reg[0] (reg_41a_n_0),
        .Q({reg_41a_n_1,reg_41a_n_2,reg_41a_n_3,reg_41a_n_4,reg_41a_n_5,txpostcursor_out_o,txpostcursor_ovrd_o,reg_41a_n_12,reg_41a_n_13,reg_41a_n_14,reg_41a_n_15,reg_41a_n_16}),
        .isAddrRange01_in(isAddrRange01_in),
        .ram_range00_in(ram_range00_in),
        .reg_rst_i(reg_rst_i),
        .s_daddr_o(drp_daddr_o[6:0]),
        .s_dclk_o(s_dclk_o),
        .s_di_o(drp_di_o),
        .s_dwe_o(s_dwe),
        .\xsdb_reg_reg[0] (reg_401_n_1),
        .\xsdb_reg_reg[0]_0 (reg_417_n_0));
  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized5_747 reg_41b
       (.\G_1PIPE_IFACE.s_daddr_r_reg[5] (reg_41b_n_20),
        .Q({reg_41b_n_4,reg_41b_n_5,reg_41b_n_6,reg_41b_n_7,reg_41b_n_8,reg_41b_n_9,reg_41b_n_10,txprecursor_ovrd_o,txprecursor_out_o}),
        .isAddrRange01_in(isAddrRange01_in),
        .ram_range00_in(ram_range00_in),
        .\regSlaveDo_reg[0] (reg_415_n_0),
        .\regSlaveDo_reg[0]_0 (reg_402_n_0),
        .\regSlaveDo_reg[0]_1 (reg_417_n_3),
        .\regSlaveDo_reg[15] (\regSlaveDo[15]_i_3_n_0 ),
        .\regSlaveDo_reg[15]_0 ({reg_41a_n_1,txpostcursor_out_o[1:0],txpostcursor_ovrd_o,reg_41a_n_14,reg_41a_n_15,reg_41a_n_16}),
        .\regSlaveDo_reg[15]_1 (\regSlaveDo[15]_i_4_n_0 ),
        .\regSlaveDo_reg[15]_2 (reg_422_n_1),
        .\regSlaveDo_reg[15]_3 (reg_417_n_13),
        .\regSlaveDo_reg[1] (\regSlaveDo[1]_i_2_n_0 ),
        .\regSlaveDo_reg[1]_0 (reg_415_n_1),
        .\regSlaveDo_reg[2] (reg_421_n_0),
        .\regSlaveDo_reg[2]_0 (reg_417_n_15),
        .\regSlaveDo_reg[5] (\regSlaveDo[5]_i_3_n_0 ),
        .\regSlaveDo_reg[5]_0 (reg_401_n_9),
        .\regSlaveDo_reg[5]_1 (reg_406_n_0),
        .\regSlaveDo_reg[5]_2 (\regSlaveDo[5]_i_6_n_0 ),
        .\regSlaveDo_reg[6] (reg_420_n_0),
        .\regSlaveDo_reg[6]_0 (reg_402_n_16),
        .\regSlaveDo_reg[6]_1 (reg_417_n_4),
        .\regSlaveDo_reg[7] (\regSlaveDo[7]_i_6_n_0 ),
        .\regSlaveDo_reg[7]_0 (reg_420_n_1),
        .\regSlaveDo_reg[7]_1 (reg_402_n_17),
        .\regSlaveDo_reg[7]_2 (reg_417_n_12),
        .\regSlaveDo_reg[7]_3 (\regSlaveDo[15]_i_7_n_0 ),
        .reg_rst_i(reg_rst_i),
        .s_daddr_o(drp_daddr_o[6:0]),
        .s_dclk_o(s_dclk_o),
        .s_di_o(drp_di_o),
        .s_dwe_o(s_dwe),
        .txdiffctrl_out_o(txdiffctrl_out_o[1]),
        .\xsdb_reg_reg[0] (reg_41b_n_0),
        .\xsdb_reg_reg[0]_0 (reg_401_n_1),
        .\xsdb_reg_reg[0]_1 (reg_417_n_0),
        .\xsdb_reg_reg[15] (reg_41b_n_19),
        .\xsdb_reg_reg[1] (reg_41b_n_3),
        .\xsdb_reg_reg[2] (reg_41b_n_17),
        .\xsdb_reg_reg[5] (reg_41b_n_18),
        .\xsdb_reg_reg[6] (reg_41b_n_1),
        .\xsdb_reg_reg[7] (reg_41b_n_2));
  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized6_748 reg_420
       (.D({txpostcursor_i,txdiffctrl_i}),
        .\G_1PIPE_IFACE.s_daddr_r_reg[2] (reg_420_n_0),
        .\G_1PIPE_IFACE.s_daddr_r_reg[2]_0 (reg_420_n_1),
        .Q({reg_420_n_2,reg_420_n_3,reg_420_n_4,reg_420_n_5,reg_420_n_6,reg_420_n_7,reg_420_n_8,reg_420_n_9}),
        .s_daddr_o({drp_daddr_o[5:4],drp_daddr_o[2:0]}),
        .s_dclk_o(s_dclk_o));
  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized7_749 reg_421
       (.\G_1PIPE_IFACE.s_daddr_r_reg[4] (reg_421_n_0),
        .Q({reg_422_n_14,reg_422_n_15}),
        .\regSlaveDo[2]_i_2 ({reg_401_n_20,eyescanreset_out_o}),
        .\regSlaveDo_reg[2] (\regSlaveDo[5]_i_7_n_0 ),
        .\regSlaveDo_reg[2]_0 (reg_422_n_3),
        .\regSlaveDo_reg[2]_1 (\regSlaveDo[7]_i_6_n_0 ),
        .s_daddr_o({drp_daddr_o[5:4],drp_daddr_o[2:0]}),
        .s_dclk_o(s_dclk_o),
        .txprecursor_i(txprecursor_i),
        .\xsdb_reg_reg[0] (reg_421_n_4),
        .\xsdb_reg_reg[1] (reg_421_n_1),
        .\xsdb_reg_reg[3] (reg_421_n_2),
        .\xsdb_reg_reg[4] (reg_421_n_3));
  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized8_750 reg_422
       (.\G_1PIPE_IFACE.s_daddr_r_reg[0] (reg_422_n_0),
        .Q({reg_402_n_1,rxrate_out_o[2:1]}),
        .\regSlaveDo_reg[15] (\regSlaveDo[15]_i_8_n_0 ),
        .reg_rst_i(reg_rst_i),
        .s_daddr_o({drp_daddr_o[5],drp_daddr_o[1:0]}),
        .s_dclk_o(s_dclk_o),
        .s_di_o(drp_di_o),
        .\xsdb_reg_reg[0] (reg_417_n_2),
        .\xsdb_reg_reg[0]_0 (reg_401_n_1),
        .\xsdb_reg_reg[0]_1 (reg_401_n_2),
        .\xsdb_reg_reg[0]_2 (reg_401_n_3),
        .\xsdb_reg_reg[0]_3 (reg_401_n_4),
        .\xsdb_reg_reg[14] ({reg_422_n_4,reg_422_n_5,reg_422_n_6,reg_422_n_7,reg_422_n_8,reg_422_n_9,reg_422_n_10,reg_422_n_11,reg_422_n_12,reg_422_n_13,reg_422_n_14,reg_422_n_15,mb_reset_o}),
        .\xsdb_reg_reg[15] (reg_422_n_1),
        .\xsdb_reg_reg[1] (reg_422_n_2),
        .\xsdb_reg_reg[2] (reg_422_n_3));
  FDRE \s_den_dly_reg[0] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(s_den),
        .Q(\s_den_dly_reg_n_0_[0] ),
        .R(s_rst));
  FDRE \s_den_dly_reg[1] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(\s_den_dly_reg_n_0_[0] ),
        .Q(\s_den_dly_reg_n_0_[1] ),
        .R(s_rst));
  FDRE \s_den_dly_reg[2] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(\s_den_dly_reg_n_0_[1] ),
        .Q(p_0_in),
        .R(s_rst));
  FDRE \s_dwe_dly_reg[0] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(s_dwe),
        .Q(s_dwe_dly),
        .R(s_rst));
  FDRE \s_dwe_dly_reg[1] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(s_dwe_dly),
        .Q(drp_dwe_o),
        .R(s_rst));
  c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_drp_syncronizer_751 sl_iport_en_sync
       (.DEN_USR_I(sl_iport_sync_2),
        .clk_i(clk_i),
        .sl_iport_i(sl_iport_i[2:1]));
  c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_drp_syncronizer_752 sl_iport_rst_sync
       (.clk_i(clk_i),
        .dest_sig_o_reg_0(sl_iport_int[0]),
        .sl_iport_i(sl_iport_i[1:0]));
  c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_drp_syncronizer_753 sl_iport_we_sync
       (.DWE_USR_I(sl_iport_sync_3),
        .clk_i(clk_i),
        .sl_iport_i({sl_iport_i[3],sl_iport_i[1]}));
  c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_drp_syncronizer_754 sl_oport_rdy_sync
       (.DRDY_USR_O(u_arb_n_50),
        .clk_i(clk_i),
        .sl_iport_i(sl_iport_i[1]),
        .sl_oport_o(sl_oport_o[0]));
  (* ARB_INC = "4'b1000" *) 
  (* ARB_REPORT = "4'b0100" *) 
  (* ARB_START = "4'b0001" *) 
  (* ARB_WAIT = "4'b0010" *) 
  (* C_ADDR_WIDTH = "17" *) 
  (* C_DATA_WIDTH = "16" *) 
  (* C_NUM_CLIENTS = "3" *) 
  (* DRP_DONE = "7'b1000000" *) 
  (* DRP_MODIFY = "7'b0001000" *) 
  (* DRP_READ = "7'b0000010" *) 
  (* DRP_READ_ACK = "7'b0000100" *) 
  (* DRP_WAIT = "7'b0000001" *) 
  (* DRP_WRITE = "7'b0010000" *) 
  (* DRP_WRITE_ACK = "7'b0100000" *) 
  (* KEEP_HIERARCHY = "yes" *) 
  c2c_gth_in_system_ibert_0_ibert_lib_v1_0_7_drp_arbiter__1 u_arb
       (.DADDR_O(sl_iport_int[20:4]),
        .DADDR_USR_I({daddr_usr_i,sl_iport_i[20:4]}),
        .DCLK_I(clk_i),
        .DEN_O(sl_iport_int[2]),
        .DEN_USR_I({den_usr_i,sl_iport_sync_2}),
        .DI_O(sl_iport_int[36:21]),
        .DI_USR_I({di_usr_i,sl_iport_i[36:21]}),
        .DO_I(sl_oport_int[16:1]),
        .DO_USR_O({do_usr_o,sl_oport_o[16:1]}),
        .DRDY_I(sl_oport_int[0]),
        .DRDY_USR_O({drdy_usr_o,u_arb_n_50}),
        .DWE_O(sl_iport_int[3]),
        .DWE_USR_I({dwe_usr_i,sl_iport_sync_3}),
        .RESET_I(1'b0));
endmodule

(* C_ARBITER_USER_PORTS = "2" *) (* C_CORE_INFO1 = "128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) (* C_CORE_INFO2 = "128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
(* C_CORE_MAJOR_VER = "3" *) (* C_CORE_MINOR_VER = "0" *) (* C_CORE_TYPE = "16'b0000000000000100" *) 
(* C_CSE_DRV_VER = "16'b0000000000000001" *) (* C_GT_COORDINATE = "16'b0000000000011001" *) (* C_MAJOR_VERSION = "2013" *) 
(* C_MINOR_VERSION = "3" *) (* C_NEXT_SLAVE = "0" *) (* C_NUM_GT = "2" *) 
(* C_PIPE_IFACE = "1" *) (* C_QUAD_NUMBER = "16'b0000000011100110" *) (* C_USE_TEST_REG = "1" *) 
(* C_XSDB_SLAVE_TYPE = "16'b0000010000010010" *) (* LC_AWIDTH = "17" *) (* LC_DWIDTH = "16" *) 
(* LC_D_ZERO = "16'b0000000000000000" *) (* LC_LSB_AWIDTH = "11" *) (* ORIG_REF_NAME = "in_system_ibert_v1_0_11_gthe4_channel_regs" *) 
module c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_gthe4_channel_regs__parameterized0
   (rxlpmen_i,
    rxrate_i,
    txdiffctrl_i,
    txpostcursor_i,
    txprecursor_i,
    eyescanreset_out_o,
    rxlpmen_out_o,
    rxlpmen_ovrd_o,
    rxrate_out_o,
    rxrate_ovrd_o,
    txdiffctrl_out_o,
    txdiffctrl_ovrd_o,
    txpostcursor_out_o,
    txpostcursor_ovrd_o,
    txprecursor_out_o,
    txprecursor_ovrd_o,
    mb_reset_o,
    clk_i,
    drp_daddr_o,
    drp_dclk_o,
    drp_den_o,
    drp_dwe_o,
    drp_di_o,
    drp_drdy_i,
    drp_do_i,
    s_dclk_o,
    sl_oport_o,
    reg_rst_i,
    den_usr_i,
    dwe_usr_i,
    daddr_usr_i,
    di_usr_i,
    do_usr_o,
    drdy_usr_o,
    sl_iport_i);
  input rxlpmen_i;
  input [2:0]rxrate_i;
  input [4:0]txdiffctrl_i;
  input [4:0]txpostcursor_i;
  input [4:0]txprecursor_i;
  output eyescanreset_out_o;
  output rxlpmen_out_o;
  output rxlpmen_ovrd_o;
  output [2:0]rxrate_out_o;
  output rxrate_ovrd_o;
  output [4:0]txdiffctrl_out_o;
  output txdiffctrl_ovrd_o;
  output [4:0]txpostcursor_out_o;
  output txpostcursor_ovrd_o;
  output [4:0]txprecursor_out_o;
  output txprecursor_ovrd_o;
  output mb_reset_o;
  input clk_i;
  output [9:0]drp_daddr_o;
  output drp_dclk_o;
  output drp_den_o;
  output drp_dwe_o;
  output [15:0]drp_di_o;
  input drp_drdy_i;
  input [15:0]drp_do_i;
  output s_dclk_o;
  output [16:0]sl_oport_o;
  input reg_rst_i;
  input [1:0]den_usr_i;
  input [1:0]dwe_usr_i;
  input [33:0]daddr_usr_i;
  input [31:0]di_usr_i;
  output [31:0]do_usr_o;
  output [1:0]drdy_usr_o;
  input [36:0]sl_iport_i;

  wire clk_i;
  wire [33:0]daddr_usr_i;
  wire [1:0]den_usr_i;
  wire [31:0]di_usr_i;
  wire [31:0]do_usr_o;
  wire [1:0]drdy_usr_o;
  wire [9:0]drp_daddr_o;
  wire drp_den_o;
  wire [15:0]drp_di_o;
  wire [15:0]drp_do_i;
  wire drp_drdy_i;
  wire drp_dwe_o;
  wire drp_range;
  wire drp_range_den0;
  wire drp_range_den_i_1_n_0;
  wire drp_range_dly;
  wire [1:0]dwe_usr_i;
  wire eyescanreset_out_o;
  wire isAddrRange01_in;
  wire mb_reset_o;
  wire p_0_in;
  wire [15:0]ram_do;
  wire ram_range;
  wire ram_range00_in;
  wire ram_range_dly;
  wire ram_range_dly_den;
  wire ram_range_dly_den0;
  wire ram_range_dly_i_2_n_0;
  wire ram_range_dly_i_3_n_0;
  wire ram_range_dly_i_4_n_0;
  wire [15:0]regSlaveDo;
  wire \regSlaveDo[0]_i_2_n_0 ;
  wire \regSlaveDo[0]_i_4_n_0 ;
  wire \regSlaveDo[15]_i_3_n_0 ;
  wire \regSlaveDo[15]_i_4_n_0 ;
  wire \regSlaveDo[15]_i_7_n_0 ;
  wire \regSlaveDo[15]_i_8_n_0 ;
  wire \regSlaveDo[1]_i_2_n_0 ;
  wire \regSlaveDo[1]_i_4_n_0 ;
  wire \regSlaveDo[2]_i_6_n_0 ;
  wire \regSlaveDo[5]_i_4_n_0 ;
  wire reg_401_n_0;
  wire reg_401_n_1;
  wire reg_401_n_10;
  wire reg_401_n_11;
  wire reg_401_n_12;
  wire reg_401_n_13;
  wire reg_401_n_14;
  wire reg_401_n_15;
  wire reg_401_n_16;
  wire reg_401_n_17;
  wire reg_401_n_18;
  wire reg_401_n_19;
  wire reg_401_n_2;
  wire reg_401_n_20;
  wire reg_401_n_21;
  wire reg_401_n_3;
  wire reg_401_n_4;
  wire reg_401_n_5;
  wire reg_401_n_7;
  wire reg_401_n_8;
  wire reg_401_n_9;
  wire reg_402_n_0;
  wire reg_402_n_1;
  wire reg_402_n_11;
  wire reg_402_n_16;
  wire reg_402_n_2;
  wire reg_402_n_3;
  wire reg_402_n_4;
  wire reg_402_n_5;
  wire reg_402_n_6;
  wire reg_402_n_7;
  wire reg_402_n_8;
  wire reg_406_n_0;
  wire reg_415_n_0;
  wire reg_415_n_1;
  wire reg_415_n_2;
  wire reg_417_n_0;
  wire reg_417_n_10;
  wire reg_417_n_11;
  wire reg_417_n_12;
  wire reg_417_n_13;
  wire reg_417_n_14;
  wire reg_417_n_15;
  wire reg_417_n_16;
  wire reg_417_n_17;
  wire reg_417_n_18;
  wire reg_417_n_19;
  wire reg_417_n_2;
  wire reg_417_n_20;
  wire reg_417_n_21;
  wire reg_417_n_22;
  wire reg_417_n_23;
  wire reg_417_n_24;
  wire reg_417_n_25;
  wire reg_417_n_3;
  wire reg_41a_n_0;
  wire reg_41a_n_1;
  wire reg_41a_n_12;
  wire reg_41a_n_13;
  wire reg_41a_n_14;
  wire reg_41a_n_15;
  wire reg_41a_n_16;
  wire reg_41a_n_2;
  wire reg_41a_n_3;
  wire reg_41a_n_4;
  wire reg_41a_n_5;
  wire reg_41b_n_0;
  wire reg_41b_n_1;
  wire reg_41b_n_14;
  wire reg_41b_n_15;
  wire reg_41b_n_16;
  wire reg_41b_n_17;
  wire reg_41b_n_18;
  wire reg_41b_n_19;
  wire reg_41b_n_2;
  wire reg_41b_n_20;
  wire reg_41b_n_3;
  wire reg_41b_n_4;
  wire reg_41b_n_5;
  wire reg_41b_n_6;
  wire reg_41b_n_7;
  wire reg_420_n_0;
  wire reg_420_n_1;
  wire reg_420_n_2;
  wire reg_420_n_3;
  wire reg_420_n_4;
  wire reg_420_n_5;
  wire reg_420_n_6;
  wire reg_420_n_7;
  wire reg_420_n_8;
  wire reg_420_n_9;
  wire reg_421_n_0;
  wire reg_421_n_1;
  wire reg_421_n_2;
  wire reg_421_n_3;
  wire reg_421_n_4;
  wire reg_422_n_0;
  wire reg_422_n_1;
  wire reg_422_n_10;
  wire reg_422_n_11;
  wire reg_422_n_12;
  wire reg_422_n_13;
  wire reg_422_n_14;
  wire reg_422_n_16;
  wire reg_422_n_17;
  wire reg_422_n_2;
  wire reg_422_n_3;
  wire reg_422_n_4;
  wire reg_422_n_5;
  wire reg_422_n_6;
  wire reg_422_n_7;
  wire reg_422_n_8;
  wire reg_422_n_9;
  wire reg_rst_i;
  wire rxlpmen_i;
  wire rxlpmen_out_o;
  wire rxlpmen_ovrd_o;
  wire [2:0]rxrate_i;
  wire [2:0]rxrate_out_o;
  wire rxrate_ovrd_o;
  wire [16:10]s_daddr;
  wire s_dclk_o;
  wire s_den;
  wire \s_den_dly_reg_n_0_[0] ;
  wire \s_den_dly_reg_n_0_[1] ;
  wire [15:0]s_do;
  wire s_drdy;
  wire s_dwe;
  wire [0:0]s_dwe_dly;
  wire s_rst;
  wire [36:0]sl_iport_i;
  wire [36:0]sl_iport_int;
  wire sl_iport_sync_2;
  wire sl_iport_sync_3;
  wire [16:0]sl_oport_int;
  wire [16:0]sl_oport_o;
  wire [4:0]txdiffctrl_i;
  wire [4:0]txdiffctrl_out_o;
  wire txdiffctrl_ovrd_o;
  wire [4:0]txpostcursor_i;
  wire [4:0]txpostcursor_out_o;
  wire txpostcursor_ovrd_o;
  wire [4:0]txprecursor_i;
  wire [4:0]txprecursor_out_o;
  wire txprecursor_ovrd_o;
  wire u_arb_n_50;
  wire NLW_myram_reg_bram_0_CASOUTDBITERR_UNCONNECTED;
  wire NLW_myram_reg_bram_0_CASOUTSBITERR_UNCONNECTED;
  wire NLW_myram_reg_bram_0_DBITERR_UNCONNECTED;
  wire NLW_myram_reg_bram_0_SBITERR_UNCONNECTED;
  wire [31:0]NLW_myram_reg_bram_0_CASDOUTA_UNCONNECTED;
  wire [31:0]NLW_myram_reg_bram_0_CASDOUTB_UNCONNECTED;
  wire [3:0]NLW_myram_reg_bram_0_CASDOUTPA_UNCONNECTED;
  wire [3:0]NLW_myram_reg_bram_0_CASDOUTPB_UNCONNECTED;
  wire [31:16]NLW_myram_reg_bram_0_DOUTADOUT_UNCONNECTED;
  wire [31:0]NLW_myram_reg_bram_0_DOUTBDOUT_UNCONNECTED;
  wire [3:0]NLW_myram_reg_bram_0_DOUTPADOUTP_UNCONNECTED;
  wire [3:0]NLW_myram_reg_bram_0_DOUTPBDOUTP_UNCONNECTED;
  wire [7:0]NLW_myram_reg_bram_0_ECCPARITY_UNCONNECTED;
  wire [8:0]NLW_myram_reg_bram_0_RDADDRECC_UNCONNECTED;

  assign drp_dclk_o = s_dclk_o;
  (* C_BUILD_REVISION = "0" *) 
  (* C_CORE_INFO1 = "128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_CORE_INFO2 = "128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_CORE_MAJOR_VER = "3" *) 
  (* C_CORE_MINOR_VER = "0" *) 
  (* C_CORE_TYPE = "16'b0000000000000100" *) 
  (* C_CSE_DRV_VER = "16'b0000000000000001" *) 
  (* C_MAJOR_VERSION = "2013" *) 
  (* C_MINOR_VERSION = "3" *) 
  (* C_NEXT_SLAVE = "0" *) 
  (* C_PIPE_IFACE = "1" *) 
  (* C_USE_TEST_REG = "1" *) 
  (* C_XDEVICEFAMILY = "virtex7" *) 
  (* C_XSDB_SLAVE_TYPE = "16'b0000010000010010" *) 
  (* DONT_TOUCH *) 
  (* KEEP_HIERARCHY = "yes" *) 
  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_xsdbs__parameterized0 U_XSDB_SLAVE
       (.s_daddr_o({s_daddr,drp_daddr_o}),
        .s_dclk_o(s_dclk_o),
        .s_den_o(s_den),
        .s_di_o(drp_di_o),
        .s_do_i(s_do),
        .s_drdy_i(s_drdy),
        .s_dwe_o(s_dwe),
        .s_rst_o(s_rst),
        .sl_iport_i({sl_iport_int[36:2],clk_i,sl_iport_int[0]}),
        .sl_oport_o(sl_oport_int));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_1
       (.I0(ram_do[15]),
        .I1(ram_range_dly),
        .I2(drp_do_i[15]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[15]),
        .O(s_do[15]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_10
       (.I0(ram_do[6]),
        .I1(ram_range_dly),
        .I2(drp_do_i[6]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[6]),
        .O(s_do[6]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_11
       (.I0(ram_do[5]),
        .I1(ram_range_dly),
        .I2(drp_do_i[5]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[5]),
        .O(s_do[5]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_12
       (.I0(ram_do[4]),
        .I1(ram_range_dly),
        .I2(drp_do_i[4]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[4]),
        .O(s_do[4]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_13
       (.I0(ram_do[3]),
        .I1(ram_range_dly),
        .I2(drp_do_i[3]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[3]),
        .O(s_do[3]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_14
       (.I0(ram_do[2]),
        .I1(ram_range_dly),
        .I2(drp_do_i[2]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[2]),
        .O(s_do[2]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_15
       (.I0(ram_do[1]),
        .I1(ram_range_dly),
        .I2(drp_do_i[1]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[1]),
        .O(s_do[1]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_16
       (.I0(ram_do[0]),
        .I1(ram_range_dly),
        .I2(drp_do_i[0]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[0]),
        .O(s_do[0]));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT4 #(
    .INIT(16'hEF40)) 
    U_XSDB_SLAVE_i_17
       (.I0(ram_range_dly),
        .I1(drp_drdy_i),
        .I2(drp_range_dly),
        .I3(p_0_in),
        .O(s_drdy));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_2
       (.I0(ram_do[14]),
        .I1(ram_range_dly),
        .I2(drp_do_i[14]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[14]),
        .O(s_do[14]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_3
       (.I0(ram_do[13]),
        .I1(ram_range_dly),
        .I2(drp_do_i[13]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[13]),
        .O(s_do[13]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_4
       (.I0(ram_do[12]),
        .I1(ram_range_dly),
        .I2(drp_do_i[12]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[12]),
        .O(s_do[12]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_5
       (.I0(ram_do[11]),
        .I1(ram_range_dly),
        .I2(drp_do_i[11]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[11]),
        .O(s_do[11]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_6
       (.I0(ram_do[10]),
        .I1(ram_range_dly),
        .I2(drp_do_i[10]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[10]),
        .O(s_do[10]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_7
       (.I0(ram_do[9]),
        .I1(ram_range_dly),
        .I2(drp_do_i[9]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[9]),
        .O(s_do[9]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_8
       (.I0(ram_do[8]),
        .I1(ram_range_dly),
        .I2(drp_do_i[8]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[8]),
        .O(s_do[8]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    U_XSDB_SLAVE_i_9
       (.I0(ram_do[7]),
        .I1(ram_range_dly),
        .I2(drp_do_i[7]),
        .I3(drp_range_dly),
        .I4(regSlaveDo[7]),
        .O(s_do[7]));
  LUT1 #(
    .INIT(2'h1)) 
    drp_range_den_i_1
       (.I0(s_rst),
        .O(drp_range_den_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    drp_range_den_i_2
       (.I0(drp_range_dly),
        .I1(\s_den_dly_reg_n_0_[0] ),
        .O(drp_range_den0));
  FDRE drp_range_den_reg
       (.C(s_dclk_o),
        .CE(drp_range_den_i_1_n_0),
        .D(drp_range_den0),
        .Q(drp_den_o),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h1)) 
    drp_range_dly_i_1
       (.I0(ram_range00_in),
        .I1(s_daddr[10]),
        .O(drp_range));
  FDRE drp_range_dly_reg
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(drp_range),
        .Q(drp_range_dly),
        .R(s_rst));
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d16" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* RDADDR_COLLISION_HWCONFIG = "PERFORMANCE" *) 
  (* RTL_RAM_BITS = "32608" *) 
  (* RTL_RAM_NAME = "myram" *) 
  (* RTL_RAM_TYPE = "RAM_SP" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "2047" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "15" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "2047" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "15" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(0),
    .DOB_REG(0),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("FALSE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(0)) 
    myram_reg_bram_0
       (.ADDRARDADDR({s_daddr[10],drp_daddr_o,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b0),
        .ADDRENB(1'b0),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINB({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINPA({1'b0,1'b0,1'b0,1'b0}),
        .CASDINPB({1'b0,1'b0,1'b0,1'b0}),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(NLW_myram_reg_bram_0_CASDOUTA_UNCONNECTED[31:0]),
        .CASDOUTB(NLW_myram_reg_bram_0_CASDOUTB_UNCONNECTED[31:0]),
        .CASDOUTPA(NLW_myram_reg_bram_0_CASDOUTPA_UNCONNECTED[3:0]),
        .CASDOUTPB(NLW_myram_reg_bram_0_CASDOUTPB_UNCONNECTED[3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(NLW_myram_reg_bram_0_CASOUTDBITERR_UNCONNECTED),
        .CASOUTSBITERR(NLW_myram_reg_bram_0_CASOUTSBITERR_UNCONNECTED),
        .CLKARDCLK(s_dclk_o),
        .CLKBWRCLK(1'b0),
        .DBITERR(NLW_myram_reg_bram_0_DBITERR_UNCONNECTED),
        .DINADIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,drp_di_o}),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DINPADINP({1'b0,1'b0,1'b0,1'b0}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT({NLW_myram_reg_bram_0_DOUTADOUT_UNCONNECTED[31:16],ram_do}),
        .DOUTBDOUT(NLW_myram_reg_bram_0_DOUTBDOUT_UNCONNECTED[31:0]),
        .DOUTPADOUTP(NLW_myram_reg_bram_0_DOUTPADOUTP_UNCONNECTED[3:0]),
        .DOUTPBDOUTP(NLW_myram_reg_bram_0_DOUTPBDOUTP_UNCONNECTED[3:0]),
        .ECCPARITY(NLW_myram_reg_bram_0_ECCPARITY_UNCONNECTED[7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(ram_range_dly_den),
        .ENBWREN(1'b0),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(NLW_myram_reg_bram_0_RDADDRECC_UNCONNECTED[8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(NLW_myram_reg_bram_0_SBITERR_UNCONNECTED),
        .SLEEP(1'b0),
        .WEA({drp_dwe_o,drp_dwe_o,drp_dwe_o,drp_dwe_o}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ram_range_dly_den_i_1
       (.I0(ram_range_dly),
        .I1(\s_den_dly_reg_n_0_[0] ),
        .O(ram_range_dly_den0));
  FDRE ram_range_dly_den_reg
       (.C(s_dclk_o),
        .CE(drp_range_den_i_1_n_0),
        .D(ram_range_dly_den0),
        .Q(ram_range_dly_den),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000EFFF0000)) 
    ram_range_dly_i_1
       (.I0(ram_range_dly_i_2_n_0),
        .I1(ram_range_dly_i_3_n_0),
        .I2(drp_daddr_o[9]),
        .I3(drp_daddr_o[8]),
        .I4(s_daddr[11]),
        .I5(ram_range_dly_i_4_n_0),
        .O(ram_range));
  LUT6 #(
    .INIT(64'h3FFF3FFF7FFFFFFF)) 
    ram_range_dly_i_2
       (.I0(drp_daddr_o[1]),
        .I1(drp_daddr_o[7]),
        .I2(drp_daddr_o[5]),
        .I3(s_daddr[10]),
        .I4(drp_daddr_o[2]),
        .I5(drp_daddr_o[3]),
        .O(ram_range_dly_i_2_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    ram_range_dly_i_3
       (.I0(drp_daddr_o[4]),
        .I1(drp_daddr_o[6]),
        .O(ram_range_dly_i_3_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    ram_range_dly_i_4
       (.I0(s_daddr[16]),
        .I1(s_daddr[12]),
        .I2(s_daddr[13]),
        .I3(s_daddr[15]),
        .I4(s_daddr[14]),
        .O(ram_range_dly_i_4_n_0));
  FDRE ram_range_dly_reg
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(ram_range),
        .Q(ram_range_dly),
        .R(s_rst));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT5 #(
    .INIT(32'h20000000)) 
    \regSlaveDo[0]_i_2 
       (.I0(drp_daddr_o[1]),
        .I1(drp_daddr_o[5]),
        .I2(drp_daddr_o[0]),
        .I3(drp_daddr_o[4]),
        .I4(\regSlaveDo[15]_i_8_n_0 ),
        .O(\regSlaveDo[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \regSlaveDo[0]_i_4 
       (.I0(drp_daddr_o[3]),
        .I1(drp_daddr_o[6]),
        .I2(drp_daddr_o[4]),
        .I3(drp_daddr_o[2]),
        .O(\regSlaveDo[0]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT4 #(
    .INIT(16'hA888)) 
    \regSlaveDo[15]_i_3 
       (.I0(\regSlaveDo[15]_i_7_n_0 ),
        .I1(drp_daddr_o[5]),
        .I2(drp_daddr_o[0]),
        .I3(drp_daddr_o[1]),
        .O(\regSlaveDo[15]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT4 #(
    .INIT(16'h0222)) 
    \regSlaveDo[15]_i_4 
       (.I0(\regSlaveDo[15]_i_7_n_0 ),
        .I1(drp_daddr_o[5]),
        .I2(drp_daddr_o[0]),
        .I3(drp_daddr_o[1]),
        .O(\regSlaveDo[15]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \regSlaveDo[15]_i_7 
       (.I0(drp_daddr_o[1]),
        .I1(drp_daddr_o[5]),
        .I2(drp_daddr_o[6]),
        .I3(drp_daddr_o[2]),
        .I4(drp_daddr_o[4]),
        .I5(drp_daddr_o[3]),
        .O(\regSlaveDo[15]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \regSlaveDo[15]_i_8 
       (.I0(drp_daddr_o[3]),
        .I1(drp_daddr_o[6]),
        .I2(drp_daddr_o[2]),
        .O(\regSlaveDo[15]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    \regSlaveDo[1]_i_2 
       (.I0(drp_daddr_o[4]),
        .I1(drp_daddr_o[6]),
        .I2(\regSlaveDo[1]_i_4_n_0 ),
        .I3(drp_daddr_o[0]),
        .I4(drp_daddr_o[2]),
        .I5(drp_daddr_o[3]),
        .O(\regSlaveDo[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \regSlaveDo[1]_i_4 
       (.I0(drp_daddr_o[5]),
        .I1(drp_daddr_o[1]),
        .O(\regSlaveDo[1]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \regSlaveDo[2]_i_6 
       (.I0(drp_daddr_o[5]),
        .I1(drp_daddr_o[0]),
        .I2(drp_daddr_o[4]),
        .O(\regSlaveDo[2]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \regSlaveDo[5]_i_4 
       (.I0(drp_daddr_o[1]),
        .I1(drp_daddr_o[5]),
        .I2(drp_daddr_o[0]),
        .O(\regSlaveDo[5]_i_4_n_0 ));
  FDRE \regSlaveDo_reg[0] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_417_n_12),
        .Q(regSlaveDo[0]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[10] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_401_n_11),
        .Q(regSlaveDo[10]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[11] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_401_n_12),
        .Q(regSlaveDo[11]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[12] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_401_n_13),
        .Q(regSlaveDo[12]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[13] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_401_n_14),
        .Q(regSlaveDo[13]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[14] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_401_n_15),
        .Q(regSlaveDo[14]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[15] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_41b_n_16),
        .Q(regSlaveDo[15]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[1] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_41b_n_0),
        .Q(regSlaveDo[1]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[2] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_41b_n_14),
        .Q(regSlaveDo[2]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[3] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_401_n_7),
        .Q(regSlaveDo[3]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[4] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_401_n_8),
        .Q(regSlaveDo[4]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[5] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_41b_n_15),
        .Q(regSlaveDo[5]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[6] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_41b_n_20),
        .Q(regSlaveDo[6]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[7] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_41b_n_19),
        .Q(regSlaveDo[7]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[8] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_401_n_9),
        .Q(regSlaveDo[8]),
        .R(reg_401_n_1));
  FDRE \regSlaveDo_reg[9] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(reg_401_n_10),
        .Q(regSlaveDo[9]),
        .R(reg_401_n_1));
  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg reg_401
       (.D(drp_di_o),
        .\G_1PIPE_IFACE.s_daddr_r_reg[0] (reg_401_n_4),
        .\G_1PIPE_IFACE.s_daddr_r_reg[10] (reg_401_n_3),
        .\G_1PIPE_IFACE.s_daddr_r_reg[5] (reg_401_n_0),
        .\G_1PIPE_IFACE.s_daddr_r_reg[7] (reg_401_n_5),
        .\G_1PIPE_IFACE.s_daddr_r_reg[9] (reg_401_n_1),
        .\G_1PIPE_IFACE.s_dwe_r_reg (reg_401_n_2),
        .Q({reg_41a_n_2,reg_41a_n_3,reg_41a_n_4,reg_41a_n_5,txpostcursor_out_o[4:2],reg_41a_n_12,reg_41a_n_13}),
        .ram_range00_in(ram_range00_in),
        .\regSlaveDo[14]_i_2 ({reg_420_n_2,reg_420_n_3,reg_420_n_4,reg_420_n_5,reg_420_n_6,reg_420_n_7,reg_420_n_8,reg_420_n_9}),
        .\regSlaveDo_reg[10] (reg_417_n_21),
        .\regSlaveDo_reg[11] (reg_417_n_22),
        .\regSlaveDo_reg[12] (reg_417_n_23),
        .\regSlaveDo_reg[13] (reg_417_n_24),
        .\regSlaveDo_reg[14] (\regSlaveDo[15]_i_4_n_0 ),
        .\regSlaveDo_reg[14]_0 (\regSlaveDo[15]_i_3_n_0 ),
        .\regSlaveDo_reg[14]_1 ({reg_41b_n_1,reg_41b_n_2,reg_41b_n_3,reg_41b_n_4,reg_41b_n_5,reg_41b_n_6,reg_41b_n_7,txprecursor_out_o[4:3]}),
        .\regSlaveDo_reg[14]_2 (\regSlaveDo[0]_i_4_n_0 ),
        .\regSlaveDo_reg[14]_3 ({reg_402_n_2,reg_402_n_3,reg_402_n_4,reg_402_n_5,reg_402_n_6,reg_402_n_7,reg_402_n_8,reg_402_n_11,rxrate_ovrd_o,rxrate_out_o[0]}),
        .\regSlaveDo_reg[14]_4 (reg_41a_n_0),
        .\regSlaveDo_reg[14]_5 ({reg_422_n_4,reg_422_n_5,reg_422_n_6,reg_422_n_7,reg_422_n_8,reg_422_n_9,reg_422_n_10}),
        .\regSlaveDo_reg[14]_6 (reg_422_n_0),
        .\regSlaveDo_reg[14]_7 (reg_417_n_25),
        .\regSlaveDo_reg[3] (reg_417_n_16),
        .\regSlaveDo_reg[3]_0 (reg_421_n_2),
        .\regSlaveDo_reg[4] (reg_417_n_17),
        .\regSlaveDo_reg[4]_0 (reg_421_n_3),
        .\regSlaveDo_reg[8] (reg_417_n_19),
        .\regSlaveDo_reg[9] (reg_417_n_20),
        .reg_rst_i(reg_rst_i),
        .s_daddr_o({s_daddr,drp_daddr_o}),
        .s_dclk_o(s_dclk_o),
        .s_dwe_o(s_dwe),
        .\xsdb_reg_reg[0] (reg_401_n_16),
        .\xsdb_reg_reg[0]_0 (reg_417_n_2),
        .\xsdb_reg_reg[0]_1 (reg_417_n_14),
        .\xsdb_reg_reg[10] (reg_401_n_11),
        .\xsdb_reg_reg[11] (reg_401_n_12),
        .\xsdb_reg_reg[12] (reg_401_n_13),
        .\xsdb_reg_reg[13] (reg_401_n_14),
        .\xsdb_reg_reg[14] (reg_401_n_15),
        .\xsdb_reg_reg[15] ({reg_401_n_18,reg_401_n_19,reg_401_n_20,reg_401_n_21,eyescanreset_out_o}),
        .\xsdb_reg_reg[3] (reg_401_n_7),
        .\xsdb_reg_reg[4] (reg_401_n_8),
        .\xsdb_reg_reg[5] (reg_401_n_17),
        .\xsdb_reg_reg[8] (reg_401_n_9),
        .\xsdb_reg_reg[9] (reg_401_n_10));
  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized0 reg_402
       (.D(drp_di_o),
        .Q({reg_402_n_1,reg_402_n_2,reg_402_n_3,reg_402_n_4,reg_402_n_5,reg_402_n_6,reg_402_n_7,reg_402_n_8,rxlpmen_ovrd_o,rxlpmen_out_o,reg_402_n_11,rxrate_ovrd_o,rxrate_out_o}),
        .\regSlaveDo_reg[7] (reg_401_n_0),
        .\regSlaveDo_reg[7]_0 ({reg_401_n_19,reg_401_n_20}),
        .reg_rst_i(reg_rst_i),
        .s_daddr_o({drp_daddr_o[4],drp_daddr_o[2]}),
        .s_dclk_o(s_dclk_o),
        .\xsdb_reg_reg[0] (reg_417_n_2),
        .\xsdb_reg_reg[0]_0 (reg_41a_n_0),
        .\xsdb_reg_reg[0]_1 (reg_401_n_1),
        .\xsdb_reg_reg[0]_2 (reg_401_n_2),
        .\xsdb_reg_reg[0]_3 (reg_401_n_3),
        .\xsdb_reg_reg[0]_4 (reg_401_n_4),
        .\xsdb_reg_reg[6] (reg_402_n_0),
        .\xsdb_reg_reg[7] (reg_402_n_16));
  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized1 reg_406
       (.rxlpmen_i(rxlpmen_i),
        .s_dclk_o(s_dclk_o),
        .\xsdb_reg_reg[5] (reg_406_n_0));
  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized2 reg_415
       (.\G_1PIPE_IFACE.s_daddr_r_reg[5] (reg_415_n_1),
        .Q(reg_417_n_10),
        .\regSlaveDo_reg[0] (\regSlaveDo[15]_i_8_n_0 ),
        .\regSlaveDo_reg[1] (reg_421_n_1),
        .\regSlaveDo_reg[1]_0 (reg_422_n_16),
        .\regSlaveDo_reg[1]_1 (\regSlaveDo[0]_i_4_n_0 ),
        .rxrate_i(rxrate_i),
        .s_daddr_o({drp_daddr_o[5:4],drp_daddr_o[1:0]}),
        .s_dclk_o(s_dclk_o),
        .\xsdb_reg_reg[1] (reg_415_n_0),
        .\xsdb_reg_reg[2] (reg_415_n_2));
  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized3 reg_417
       (.D(drp_di_o),
        .\G_1PIPE_IFACE.s_daddr_r_reg[4] (reg_417_n_16),
        .\G_1PIPE_IFACE.s_daddr_r_reg[4]_0 (reg_417_n_17),
        .\G_1PIPE_IFACE.s_daddr_r_reg[4]_1 (reg_417_n_19),
        .\G_1PIPE_IFACE.s_daddr_r_reg[4]_2 (reg_417_n_20),
        .\G_1PIPE_IFACE.s_daddr_r_reg[4]_3 (reg_417_n_21),
        .\G_1PIPE_IFACE.s_daddr_r_reg[4]_4 (reg_417_n_22),
        .\G_1PIPE_IFACE.s_daddr_r_reg[4]_5 (reg_417_n_23),
        .\G_1PIPE_IFACE.s_daddr_r_reg[4]_6 (reg_417_n_24),
        .\G_1PIPE_IFACE.s_daddr_r_reg[4]_7 (reg_417_n_25),
        .\G_1PIPE_IFACE.s_daddr_r_reg[5] (reg_417_n_14),
        .\G_1PIPE_IFACE.s_daddr_r_reg[6] (reg_417_n_2),
        .\G_1PIPE_IFACE.s_daddr_r_reg[9] (reg_417_n_0),
        .Q({txdiffctrl_ovrd_o,txdiffctrl_out_o,reg_417_n_10}),
        .isAddrRange01_in(isAddrRange01_in),
        .ram_range00_in(ram_range00_in),
        .\regSlaveDo_reg[0] (\regSlaveDo[0]_i_2_n_0 ),
        .\regSlaveDo_reg[0]_0 (reg_41b_n_18),
        .\regSlaveDo_reg[0]_1 (\regSlaveDo[0]_i_4_n_0 ),
        .\regSlaveDo_reg[0]_2 (reg_422_n_3),
        .\regSlaveDo_reg[0]_3 (reg_415_n_1),
        .\regSlaveDo_reg[14] (\regSlaveDo[15]_i_8_n_0 ),
        .\regSlaveDo_reg[15] (reg_401_n_0),
        .\regSlaveDo_reg[15]_0 (reg_401_n_18),
        .\regSlaveDo_reg[2] (reg_415_n_2),
        .\regSlaveDo_reg[2]_0 (\regSlaveDo[2]_i_6_n_0 ),
        .\regSlaveDo_reg[5] (reg_41b_n_17),
        .\regSlaveDo_reg[5]_0 (reg_406_n_0),
        .\regSlaveDo_reg[5]_1 (reg_41a_n_0),
        .\regSlaveDo_reg[7] (reg_422_n_0),
        .\regSlaveDo_reg[7]_0 ({reg_422_n_11,reg_422_n_12}),
        .reg_rst_i(reg_rst_i),
        .s_daddr_o({s_daddr[10],drp_daddr_o}),
        .s_dclk_o(s_dclk_o),
        .s_dwe_o(s_dwe),
        .\xsdb_reg_reg[0] (reg_417_n_12),
        .\xsdb_reg_reg[0]_0 (reg_401_n_1),
        .\xsdb_reg_reg[0]_1 (reg_401_n_5),
        .\xsdb_reg_reg[15] (reg_417_n_13),
        .\xsdb_reg_reg[2] (reg_417_n_15),
        .\xsdb_reg_reg[5] (reg_417_n_18),
        .\xsdb_reg_reg[6] (reg_417_n_3),
        .\xsdb_reg_reg[7] (reg_417_n_11));
  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized4 reg_41a
       (.\G_1PIPE_IFACE.s_daddr_r_reg[0] (reg_41a_n_0),
        .Q({reg_41a_n_1,reg_41a_n_2,reg_41a_n_3,reg_41a_n_4,reg_41a_n_5,txpostcursor_out_o,txpostcursor_ovrd_o,reg_41a_n_12,reg_41a_n_13,reg_41a_n_14,reg_41a_n_15,reg_41a_n_16}),
        .isAddrRange01_in(isAddrRange01_in),
        .ram_range00_in(ram_range00_in),
        .reg_rst_i(reg_rst_i),
        .s_daddr_o(drp_daddr_o[6:0]),
        .s_dclk_o(s_dclk_o),
        .s_di_o(drp_di_o),
        .s_dwe_o(s_dwe),
        .\xsdb_reg_reg[0] (reg_401_n_1),
        .\xsdb_reg_reg[0]_0 (reg_417_n_0));
  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized5 reg_41b
       (.\G_1PIPE_IFACE.s_daddr_r_reg[4] (reg_41b_n_17),
        .\G_1PIPE_IFACE.s_daddr_r_reg[6] (reg_41b_n_19),
        .\G_1PIPE_IFACE.s_daddr_r_reg[6]_0 (reg_41b_n_20),
        .Q({reg_41b_n_1,reg_41b_n_2,reg_41b_n_3,reg_41b_n_4,reg_41b_n_5,reg_41b_n_6,reg_41b_n_7,txprecursor_ovrd_o,txprecursor_out_o}),
        .isAddrRange01_in(isAddrRange01_in),
        .ram_range00_in(ram_range00_in),
        .\regSlaveDo_reg[15] (\regSlaveDo[15]_i_3_n_0 ),
        .\regSlaveDo_reg[15]_0 ({reg_41a_n_1,txpostcursor_out_o[1:0],txpostcursor_ovrd_o,reg_41a_n_14,reg_41a_n_15,reg_41a_n_16}),
        .\regSlaveDo_reg[15]_1 (\regSlaveDo[15]_i_4_n_0 ),
        .\regSlaveDo_reg[15]_2 (reg_422_n_2),
        .\regSlaveDo_reg[15]_3 (reg_417_n_13),
        .\regSlaveDo_reg[1] (\regSlaveDo[1]_i_2_n_0 ),
        .\regSlaveDo_reg[1]_0 (reg_415_n_0),
        .\regSlaveDo_reg[2] (reg_421_n_0),
        .\regSlaveDo_reg[2]_0 (reg_417_n_15),
        .\regSlaveDo_reg[5] (reg_422_n_1),
        .\regSlaveDo_reg[5]_0 (reg_417_n_18),
        .\regSlaveDo_reg[6] (reg_420_n_0),
        .\regSlaveDo_reg[6]_0 (reg_402_n_0),
        .\regSlaveDo_reg[6]_1 (reg_417_n_3),
        .\regSlaveDo_reg[7] (\regSlaveDo[15]_i_7_n_0 ),
        .\regSlaveDo_reg[7]_0 (reg_420_n_1),
        .\regSlaveDo_reg[7]_1 (reg_402_n_16),
        .\regSlaveDo_reg[7]_2 (reg_417_n_11),
        .reg_rst_i(reg_rst_i),
        .s_daddr_o(drp_daddr_o[6:0]),
        .s_dclk_o(s_dclk_o),
        .s_di_o(drp_di_o),
        .s_dwe_o(s_dwe),
        .\xsdb_reg_reg[0] (reg_41b_n_18),
        .\xsdb_reg_reg[0]_0 (reg_401_n_1),
        .\xsdb_reg_reg[0]_1 (reg_417_n_0),
        .\xsdb_reg_reg[15] (reg_41b_n_16),
        .\xsdb_reg_reg[1] (reg_41b_n_0),
        .\xsdb_reg_reg[2] (reg_41b_n_14),
        .\xsdb_reg_reg[5] (reg_41b_n_15));
  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized6 reg_420
       (.D({txpostcursor_i,txdiffctrl_i}),
        .\G_1PIPE_IFACE.s_daddr_r_reg[2] (reg_420_n_0),
        .\G_1PIPE_IFACE.s_daddr_r_reg[2]_0 (reg_420_n_1),
        .Q({reg_420_n_2,reg_420_n_3,reg_420_n_4,reg_420_n_5,reg_420_n_6,reg_420_n_7,reg_420_n_8,reg_420_n_9}),
        .s_daddr_o({drp_daddr_o[5:4],drp_daddr_o[2:0]}),
        .s_dclk_o(s_dclk_o));
  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized7 reg_421
       (.\G_1PIPE_IFACE.s_daddr_r_reg[4] (reg_421_n_0),
        .Q({reg_422_n_13,reg_422_n_14}),
        .\regSlaveDo[2]_i_2 ({reg_401_n_21,eyescanreset_out_o}),
        .\regSlaveDo_reg[2] (\regSlaveDo[15]_i_8_n_0 ),
        .\regSlaveDo_reg[2]_0 (\regSlaveDo[5]_i_4_n_0 ),
        .\regSlaveDo_reg[2]_1 (reg_422_n_17),
        .\regSlaveDo_reg[2]_2 (\regSlaveDo[0]_i_4_n_0 ),
        .s_daddr_o({drp_daddr_o[5:4],drp_daddr_o[1:0]}),
        .s_dclk_o(s_dclk_o),
        .txprecursor_i(txprecursor_i),
        .\xsdb_reg_reg[0] (reg_421_n_4),
        .\xsdb_reg_reg[1] (reg_421_n_1),
        .\xsdb_reg_reg[3] (reg_421_n_2),
        .\xsdb_reg_reg[4] (reg_421_n_3));
  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized8 reg_422
       (.\G_1PIPE_IFACE.s_daddr_r_reg[0] (reg_422_n_0),
        .\G_1PIPE_IFACE.s_daddr_r_reg[4] (reg_422_n_1),
        .\G_1PIPE_IFACE.s_daddr_r_reg[5] (reg_422_n_3),
        .Q({reg_402_n_1,rxlpmen_out_o,rxrate_out_o[2:1]}),
        .\regSlaveDo_reg[0] (reg_421_n_4),
        .\regSlaveDo_reg[0]_0 (reg_401_n_16),
        .\regSlaveDo_reg[15] (\regSlaveDo[0]_i_4_n_0 ),
        .\regSlaveDo_reg[5] (\regSlaveDo[15]_i_8_n_0 ),
        .\regSlaveDo_reg[5]_0 (\regSlaveDo[5]_i_4_n_0 ),
        .\regSlaveDo_reg[5]_1 (reg_401_n_17),
        .reg_rst_i(reg_rst_i),
        .s_daddr_o({drp_daddr_o[5:4],drp_daddr_o[1:0]}),
        .s_dclk_o(s_dclk_o),
        .s_di_o(drp_di_o),
        .\xsdb_reg_reg[0] (reg_417_n_2),
        .\xsdb_reg_reg[0]_0 (reg_401_n_1),
        .\xsdb_reg_reg[0]_1 (reg_401_n_2),
        .\xsdb_reg_reg[0]_2 (reg_401_n_3),
        .\xsdb_reg_reg[0]_3 (reg_401_n_4),
        .\xsdb_reg_reg[14] ({reg_422_n_4,reg_422_n_5,reg_422_n_6,reg_422_n_7,reg_422_n_8,reg_422_n_9,reg_422_n_10,reg_422_n_11,reg_422_n_12,reg_422_n_13,reg_422_n_14,mb_reset_o}),
        .\xsdb_reg_reg[15] (reg_422_n_2),
        .\xsdb_reg_reg[1] (reg_422_n_16),
        .\xsdb_reg_reg[2] (reg_422_n_17));
  FDRE \s_den_dly_reg[0] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(s_den),
        .Q(\s_den_dly_reg_n_0_[0] ),
        .R(s_rst));
  FDRE \s_den_dly_reg[1] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(\s_den_dly_reg_n_0_[0] ),
        .Q(\s_den_dly_reg_n_0_[1] ),
        .R(s_rst));
  FDRE \s_den_dly_reg[2] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(\s_den_dly_reg_n_0_[1] ),
        .Q(p_0_in),
        .R(s_rst));
  FDRE \s_dwe_dly_reg[0] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(s_dwe),
        .Q(s_dwe_dly),
        .R(s_rst));
  FDRE \s_dwe_dly_reg[1] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(s_dwe_dly),
        .Q(drp_dwe_o),
        .R(s_rst));
  c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_drp_syncronizer_727 sl_iport_en_sync
       (.DEN_USR_I(sl_iport_sync_2),
        .clk_i(clk_i),
        .sl_iport_i(sl_iport_i[2:1]));
  c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_drp_syncronizer_728 sl_iport_rst_sync
       (.clk_i(clk_i),
        .dest_sig_o_reg_0(sl_iport_int[0]),
        .sl_iport_i(sl_iport_i[1:0]));
  c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_drp_syncronizer_729 sl_iport_we_sync
       (.DWE_USR_I(sl_iport_sync_3),
        .clk_i(clk_i),
        .sl_iport_i({sl_iport_i[3],sl_iport_i[1]}));
  c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_drp_syncronizer_730 sl_oport_rdy_sync
       (.DRDY_USR_O(u_arb_n_50),
        .clk_i(clk_i),
        .sl_iport_i(sl_iport_i[1]),
        .sl_oport_o(sl_oport_o[0]));
  (* ARB_INC = "4'b1000" *) 
  (* ARB_REPORT = "4'b0100" *) 
  (* ARB_START = "4'b0001" *) 
  (* ARB_WAIT = "4'b0010" *) 
  (* C_ADDR_WIDTH = "17" *) 
  (* C_DATA_WIDTH = "16" *) 
  (* C_NUM_CLIENTS = "3" *) 
  (* DRP_DONE = "7'b1000000" *) 
  (* DRP_MODIFY = "7'b0001000" *) 
  (* DRP_READ = "7'b0000010" *) 
  (* DRP_READ_ACK = "7'b0000100" *) 
  (* DRP_WAIT = "7'b0000001" *) 
  (* DRP_WRITE = "7'b0010000" *) 
  (* DRP_WRITE_ACK = "7'b0100000" *) 
  (* KEEP_HIERARCHY = "yes" *) 
  c2c_gth_in_system_ibert_0_ibert_lib_v1_0_7_drp_arbiter u_arb
       (.DADDR_O(sl_iport_int[20:4]),
        .DADDR_USR_I({daddr_usr_i,sl_iport_i[20:4]}),
        .DCLK_I(clk_i),
        .DEN_O(sl_iport_int[2]),
        .DEN_USR_I({den_usr_i,sl_iport_sync_2}),
        .DI_O(sl_iport_int[36:21]),
        .DI_USR_I({di_usr_i,sl_iport_i[36:21]}),
        .DO_I(sl_oport_int[16:1]),
        .DO_USR_O({do_usr_o,sl_oport_o[16:1]}),
        .DRDY_I(sl_oport_int[0]),
        .DRDY_USR_O({drdy_usr_o,u_arb_n_50}),
        .DWE_O(sl_iport_int[3]),
        .DWE_USR_I({dwe_usr_i,sl_iport_sync_3}),
        .RESET_I(1'b0));
endmodule

(* C_ARBITER_USER_PORTS = "2" *) (* C_BUILD_REVISION = "0" *) (* C_CORE_MAJOR_VER = "3" *) 
(* C_CORE_MINOR_VER = "0" *) (* C_ENABLE_INPUT_PORTS = "1" *) (* C_GT_COORDINATE = "16'b0000000000011000" *) 
(* C_GT_TYPE = "GTHE4" *) (* C_NEXT_SLAVE = "1" *) (* C_NUM_GT = "2" *) 
(* C_QUAD_NUMBER = "16'b0000000011100110" *) 
module c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_gthe4_channel_slave
   (drpclk_o,
    drpen_o,
    drpwe_o,
    drpaddr_o,
    drpdi_o,
    eyescanreset_o,
    rxrate_o,
    txdiffctrl_o,
    txprecursor_o,
    txpostcursor_o,
    rxlpmen_o,
    mb_reset_o,
    sl_oport_o,
    sl_iport_i,
    drprdy_i,
    drpdo_i,
    drpclk_i,
    rxrate_i,
    txdiffctrl_i,
    txprecursor_i,
    txpostcursor_i,
    rxlpmen_i,
    mb_den_i,
    mb_dwe_i,
    mb_daddr_i,
    mb_di_i,
    rxoutclk_i,
    clk_i,
    mb_do_o,
    mb_drdy_o);
  output drpclk_o;
  output drpen_o;
  output drpwe_o;
  output [9:0]drpaddr_o;
  output [15:0]drpdi_o;
  output eyescanreset_o;
  output [2:0]rxrate_o;
  output [4:0]txdiffctrl_o;
  output [4:0]txprecursor_o;
  output [4:0]txpostcursor_o;
  output rxlpmen_o;
  output mb_reset_o;
  output [16:0]sl_oport_o;
  input [36:0]sl_iport_i;
  input drprdy_i;
  input [15:0]drpdo_i;
  input drpclk_i;
  input [2:0]rxrate_i;
  input [4:0]txdiffctrl_i;
  input [4:0]txprecursor_i;
  input [4:0]txpostcursor_i;
  input rxlpmen_i;
  input mb_den_i;
  input mb_dwe_i;
  input [16:0]mb_daddr_i;
  input [15:0]mb_di_i;
  input rxoutclk_i;
  input clk_i;
  output [15:0]mb_do_o;
  output mb_drdy_o;

  wire clk_i;
  wire drp_den_reg;
  wire drp_drdy_reg;
  wire drp_dwe_reg;
  wire [9:0]drpaddr_o;
  wire drpclk_i;
  wire [15:0]drpdi_o;
  wire [15:0]drpdo_i;
  wire drpen_o;
  wire drprdy_i;
  wire drpwe_o;
  wire eyescanreset_o;
  wire [16:0]mb_daddr_i;
  wire mb_den_i;
  wire [15:0]mb_di_i;
  wire [15:0]mb_do_o;
  wire mb_drdy_o;
  wire mb_dwe_i;
  wire mb_reset_o;
  wire reg_rst_reg;
  wire rxlpmen_i;
  wire rxlpmen_int;
  wire rxlpmen_out_reg;
  wire rxlpmen_ovrd_reg;
  (* async_reg = "true" *) wire rxlpmen_sync1;
  (* async_reg = "true" *) wire rxlpmen_sync2;
  wire rxoutclk_i;
  wire [2:0]rxrate_i;
  wire [2:0]rxrate_out_reg;
  wire rxrate_ovrd_reg;
  wire [2:0]rxrate_reg;
  (* async_reg = "true" *) wire [2:0]rxrate_reg_sync1;
  (* async_reg = "true" *) wire [2:0]rxrate_reg_sync2;
  (* async_reg = "true" *) wire [2:0]rxrate_sync1;
  (* async_reg = "true" *) wire [2:0]rxrate_sync2;
  wire s_dclk;
  wire [36:0]sl_iport_i;
  wire [16:0]sl_oport_o;
  wire [4:0]txdiffctrl_i;
  wire [4:0]txdiffctrl_o;
  wire [4:0]txdiffctrl_out_reg;
  wire txdiffctrl_ovrd_reg;
  (* async_reg = "true" *) wire [4:0]txdiffctrl_sync1;
  (* async_reg = "true" *) wire [4:0]txdiffctrl_sync2;
  wire [4:0]txpostcursor_i;
  wire [4:0]txpostcursor_o;
  wire [4:0]txpostcursor_out_reg;
  wire txpostcursor_ovrd_reg;
  (* async_reg = "true" *) wire [4:0]txpostcursor_sync1;
  (* async_reg = "true" *) wire [4:0]txpostcursor_sync2;
  wire [4:0]txprecursor_i;
  wire [4:0]txprecursor_o;
  wire [4:0]txprecursor_out_reg;
  wire txprecursor_ovrd_reg;
  (* async_reg = "true" *) wire [4:0]txprecursor_sync1;
  (* async_reg = "true" *) wire [4:0]txprecursor_sync2;
  wire NLW_i_regs_drp_dclk_o_UNCONNECTED;
  wire [31:16]NLW_i_regs_do_usr_o_UNCONNECTED;
  wire [1:1]NLW_i_regs_drdy_usr_o_UNCONNECTED;

  assign drpclk_o = drpclk_i;
  assign rxlpmen_o = rxlpmen_int;
  assign rxrate_o[2:0] = rxrate_reg;
  c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_drp_syncronizer_738 \drp_syncronizer.drpen_sync 
       (.CLK(s_dclk),
        .drp_den_o(drp_den_reg),
        .drpclk_i(drpclk_i),
        .drpen_o(drpen_o));
  c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_drp_syncronizer_739 \drp_syncronizer.drprdy_sync 
       (.CLK(s_dclk),
        .drp_drdy_i(drp_drdy_reg),
        .drpclk_i(drpclk_i),
        .drprdy_i(drprdy_i));
  c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_drp_syncronizer_740 \drp_syncronizer.drpwe_sync 
       (.CLK(s_dclk),
        .drp_dwe_o(drp_dwe_reg),
        .drpclk_i(drpclk_i),
        .drpwe_o(drpwe_o));
  (* C_ARBITER_USER_PORTS = "2" *) 
  (* C_CORE_INFO1 = "128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_CORE_INFO2 = "128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_CORE_MAJOR_VER = "3" *) 
  (* C_CORE_MINOR_VER = "0" *) 
  (* C_CORE_TYPE = "16'b0000000000000100" *) 
  (* C_CSE_DRV_VER = "16'b0000000000000001" *) 
  (* C_GT_COORDINATE = "16'b0000000000011000" *) 
  (* C_MAJOR_VERSION = "2013" *) 
  (* C_MINOR_VERSION = "3" *) 
  (* C_NEXT_SLAVE = "1" *) 
  (* C_NUM_GT = "2" *) 
  (* C_PIPE_IFACE = "1" *) 
  (* C_QUAD_NUMBER = "16'b0000000011100110" *) 
  (* C_USE_TEST_REG = "1" *) 
  (* C_XSDB_SLAVE_TYPE = "16'b0000010000010010" *) 
  (* KEEP_HIERARCHY = "yes" *) 
  (* LC_AWIDTH = "17" *) 
  (* LC_DWIDTH = "16" *) 
  (* LC_D_ZERO = "16'b0000000000000000" *) 
  (* LC_LSB_AWIDTH = "11" *) 
  c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_gthe4_channel_regs i_regs
       (.clk_i(clk_i),
        .daddr_usr_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,mb_daddr_i}),
        .den_usr_i({1'b0,mb_den_i}),
        .di_usr_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,mb_di_i}),
        .do_usr_o({NLW_i_regs_do_usr_o_UNCONNECTED[31:16],mb_do_o}),
        .drdy_usr_o({NLW_i_regs_drdy_usr_o_UNCONNECTED[1],mb_drdy_o}),
        .drp_daddr_o(drpaddr_o),
        .drp_dclk_o(NLW_i_regs_drp_dclk_o_UNCONNECTED),
        .drp_den_o(drp_den_reg),
        .drp_di_o(drpdi_o),
        .drp_do_i(drpdo_i),
        .drp_drdy_i(drp_drdy_reg),
        .drp_dwe_o(drp_dwe_reg),
        .dwe_usr_i({1'b0,mb_dwe_i}),
        .eyescanreset_out_o(eyescanreset_o),
        .mb_reset_o(mb_reset_o),
        .reg_rst_i(reg_rst_reg),
        .rxlpmen_i(rxlpmen_sync2),
        .rxlpmen_out_o(rxlpmen_out_reg),
        .rxlpmen_ovrd_o(rxlpmen_ovrd_reg),
        .rxrate_i(rxrate_reg_sync2),
        .rxrate_out_o(rxrate_out_reg),
        .rxrate_ovrd_o(rxrate_ovrd_reg),
        .s_dclk_o(s_dclk),
        .sl_iport_i(sl_iport_i),
        .sl_oport_o(sl_oport_o),
        .txdiffctrl_i(txdiffctrl_o),
        .txdiffctrl_out_o(txdiffctrl_out_reg),
        .txdiffctrl_ovrd_o(txdiffctrl_ovrd_reg),
        .txpostcursor_i(txpostcursor_o),
        .txpostcursor_out_o(txpostcursor_out_reg),
        .txpostcursor_ovrd_o(txpostcursor_ovrd_reg),
        .txprecursor_i(txprecursor_o),
        .txprecursor_out_o(txprecursor_out_reg),
        .txprecursor_ovrd_o(txprecursor_ovrd_reg));
  FDRE #(
    .INIT(1'b1)) 
    reg_rst_reg_reg
       (.C(drpclk_i),
        .CE(1'b1),
        .D(1'b0),
        .Q(reg_rst_reg),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    rxlpmen_int_inferred_i_1
       (.I0(rxlpmen_out_reg),
        .I1(rxlpmen_ovrd_reg),
        .I2(rxlpmen_i),
        .O(rxlpmen_int));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE rxlpmen_sync1_reg
       (.C(s_dclk),
        .CE(1'b1),
        .D(rxlpmen_int),
        .Q(rxlpmen_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE rxlpmen_sync2_reg
       (.C(s_dclk),
        .CE(1'b1),
        .D(rxlpmen_sync1),
        .Q(rxlpmen_sync2),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    rxrate_reg_inferred_i_1
       (.I0(rxrate_sync2[2]),
        .I1(rxrate_ovrd_reg),
        .I2(rxrate_i[2]),
        .O(rxrate_reg[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    rxrate_reg_inferred_i_2
       (.I0(rxrate_sync2[1]),
        .I1(rxrate_ovrd_reg),
        .I2(rxrate_i[1]),
        .O(rxrate_reg[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    rxrate_reg_inferred_i_3
       (.I0(rxrate_sync2[0]),
        .I1(rxrate_ovrd_reg),
        .I2(rxrate_i[0]),
        .O(rxrate_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \rxrate_reg_sync1_reg[0] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(rxrate_reg[0]),
        .Q(rxrate_reg_sync1[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \rxrate_reg_sync1_reg[1] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(rxrate_reg[1]),
        .Q(rxrate_reg_sync1[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \rxrate_reg_sync1_reg[2] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(rxrate_reg[2]),
        .Q(rxrate_reg_sync1[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \rxrate_reg_sync2_reg[0] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(rxrate_reg_sync1[0]),
        .Q(rxrate_reg_sync2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \rxrate_reg_sync2_reg[1] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(rxrate_reg_sync1[1]),
        .Q(rxrate_reg_sync2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \rxrate_reg_sync2_reg[2] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(rxrate_reg_sync1[2]),
        .Q(rxrate_reg_sync2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \rxrate_sync1_reg[0] 
       (.C(rxoutclk_i),
        .CE(1'b1),
        .D(rxrate_out_reg[0]),
        .Q(rxrate_sync1[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \rxrate_sync1_reg[1] 
       (.C(rxoutclk_i),
        .CE(1'b1),
        .D(rxrate_out_reg[1]),
        .Q(rxrate_sync1[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \rxrate_sync1_reg[2] 
       (.C(rxoutclk_i),
        .CE(1'b1),
        .D(rxrate_out_reg[2]),
        .Q(rxrate_sync1[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \rxrate_sync2_reg[0] 
       (.C(rxoutclk_i),
        .CE(1'b1),
        .D(rxrate_sync1[0]),
        .Q(rxrate_sync2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \rxrate_sync2_reg[1] 
       (.C(rxoutclk_i),
        .CE(1'b1),
        .D(rxrate_sync1[1]),
        .Q(rxrate_sync2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \rxrate_sync2_reg[2] 
       (.C(rxoutclk_i),
        .CE(1'b1),
        .D(rxrate_sync1[2]),
        .Q(rxrate_sync2[2]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \txdiffctrl_o[0]_INST_0 
       (.I0(txdiffctrl_out_reg[0]),
        .I1(txdiffctrl_ovrd_reg),
        .I2(txdiffctrl_sync2[0]),
        .O(txdiffctrl_o[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    \txdiffctrl_o[1]_INST_0 
       (.I0(txdiffctrl_out_reg[1]),
        .I1(txdiffctrl_ovrd_reg),
        .I2(txdiffctrl_sync2[1]),
        .O(txdiffctrl_o[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    \txdiffctrl_o[2]_INST_0 
       (.I0(txdiffctrl_out_reg[2]),
        .I1(txdiffctrl_ovrd_reg),
        .I2(txdiffctrl_sync2[2]),
        .O(txdiffctrl_o[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    \txdiffctrl_o[3]_INST_0 
       (.I0(txdiffctrl_out_reg[3]),
        .I1(txdiffctrl_ovrd_reg),
        .I2(txdiffctrl_sync2[3]),
        .O(txdiffctrl_o[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    \txdiffctrl_o[4]_INST_0 
       (.I0(txdiffctrl_out_reg[4]),
        .I1(txdiffctrl_ovrd_reg),
        .I2(txdiffctrl_sync2[4]),
        .O(txdiffctrl_o[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txdiffctrl_sync1_reg[0] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txdiffctrl_i[0]),
        .Q(txdiffctrl_sync1[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txdiffctrl_sync1_reg[1] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txdiffctrl_i[1]),
        .Q(txdiffctrl_sync1[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txdiffctrl_sync1_reg[2] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txdiffctrl_i[2]),
        .Q(txdiffctrl_sync1[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txdiffctrl_sync1_reg[3] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txdiffctrl_i[3]),
        .Q(txdiffctrl_sync1[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txdiffctrl_sync1_reg[4] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txdiffctrl_i[4]),
        .Q(txdiffctrl_sync1[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txdiffctrl_sync2_reg[0] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txdiffctrl_sync1[0]),
        .Q(txdiffctrl_sync2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txdiffctrl_sync2_reg[1] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txdiffctrl_sync1[1]),
        .Q(txdiffctrl_sync2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txdiffctrl_sync2_reg[2] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txdiffctrl_sync1[2]),
        .Q(txdiffctrl_sync2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txdiffctrl_sync2_reg[3] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txdiffctrl_sync1[3]),
        .Q(txdiffctrl_sync2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txdiffctrl_sync2_reg[4] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txdiffctrl_sync1[4]),
        .Q(txdiffctrl_sync2[4]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \txpostcursor_o[0]_INST_0 
       (.I0(txpostcursor_out_reg[0]),
        .I1(txpostcursor_ovrd_reg),
        .I2(txpostcursor_sync2[0]),
        .O(txpostcursor_o[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    \txpostcursor_o[1]_INST_0 
       (.I0(txpostcursor_out_reg[1]),
        .I1(txpostcursor_ovrd_reg),
        .I2(txpostcursor_sync2[1]),
        .O(txpostcursor_o[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    \txpostcursor_o[2]_INST_0 
       (.I0(txpostcursor_out_reg[2]),
        .I1(txpostcursor_ovrd_reg),
        .I2(txpostcursor_sync2[2]),
        .O(txpostcursor_o[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    \txpostcursor_o[3]_INST_0 
       (.I0(txpostcursor_out_reg[3]),
        .I1(txpostcursor_ovrd_reg),
        .I2(txpostcursor_sync2[3]),
        .O(txpostcursor_o[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    \txpostcursor_o[4]_INST_0 
       (.I0(txpostcursor_out_reg[4]),
        .I1(txpostcursor_ovrd_reg),
        .I2(txpostcursor_sync2[4]),
        .O(txpostcursor_o[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txpostcursor_sync1_reg[0] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txpostcursor_i[0]),
        .Q(txpostcursor_sync1[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txpostcursor_sync1_reg[1] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txpostcursor_i[1]),
        .Q(txpostcursor_sync1[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txpostcursor_sync1_reg[2] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txpostcursor_i[2]),
        .Q(txpostcursor_sync1[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txpostcursor_sync1_reg[3] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txpostcursor_i[3]),
        .Q(txpostcursor_sync1[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txpostcursor_sync1_reg[4] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txpostcursor_i[4]),
        .Q(txpostcursor_sync1[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txpostcursor_sync2_reg[0] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txpostcursor_sync1[0]),
        .Q(txpostcursor_sync2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txpostcursor_sync2_reg[1] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txpostcursor_sync1[1]),
        .Q(txpostcursor_sync2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txpostcursor_sync2_reg[2] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txpostcursor_sync1[2]),
        .Q(txpostcursor_sync2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txpostcursor_sync2_reg[3] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txpostcursor_sync1[3]),
        .Q(txpostcursor_sync2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txpostcursor_sync2_reg[4] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txpostcursor_sync1[4]),
        .Q(txpostcursor_sync2[4]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \txprecursor_o[0]_INST_0 
       (.I0(txprecursor_out_reg[0]),
        .I1(txprecursor_ovrd_reg),
        .I2(txprecursor_sync2[0]),
        .O(txprecursor_o[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    \txprecursor_o[1]_INST_0 
       (.I0(txprecursor_out_reg[1]),
        .I1(txprecursor_ovrd_reg),
        .I2(txprecursor_sync2[1]),
        .O(txprecursor_o[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    \txprecursor_o[2]_INST_0 
       (.I0(txprecursor_out_reg[2]),
        .I1(txprecursor_ovrd_reg),
        .I2(txprecursor_sync2[2]),
        .O(txprecursor_o[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    \txprecursor_o[3]_INST_0 
       (.I0(txprecursor_out_reg[3]),
        .I1(txprecursor_ovrd_reg),
        .I2(txprecursor_sync2[3]),
        .O(txprecursor_o[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    \txprecursor_o[4]_INST_0 
       (.I0(txprecursor_out_reg[4]),
        .I1(txprecursor_ovrd_reg),
        .I2(txprecursor_sync2[4]),
        .O(txprecursor_o[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txprecursor_sync1_reg[0] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txprecursor_i[0]),
        .Q(txprecursor_sync1[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txprecursor_sync1_reg[1] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txprecursor_i[1]),
        .Q(txprecursor_sync1[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txprecursor_sync1_reg[2] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txprecursor_i[2]),
        .Q(txprecursor_sync1[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txprecursor_sync1_reg[3] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txprecursor_i[3]),
        .Q(txprecursor_sync1[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txprecursor_sync1_reg[4] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txprecursor_i[4]),
        .Q(txprecursor_sync1[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txprecursor_sync2_reg[0] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txprecursor_sync1[0]),
        .Q(txprecursor_sync2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txprecursor_sync2_reg[1] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txprecursor_sync1[1]),
        .Q(txprecursor_sync2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txprecursor_sync2_reg[2] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txprecursor_sync1[2]),
        .Q(txprecursor_sync2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txprecursor_sync2_reg[3] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txprecursor_sync1[3]),
        .Q(txprecursor_sync2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txprecursor_sync2_reg[4] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txprecursor_sync1[4]),
        .Q(txprecursor_sync2[4]),
        .R(1'b0));
endmodule

(* C_ARBITER_USER_PORTS = "2" *) (* C_BUILD_REVISION = "0" *) (* C_CORE_MAJOR_VER = "3" *) 
(* C_CORE_MINOR_VER = "0" *) (* C_ENABLE_INPUT_PORTS = "1" *) (* C_GT_COORDINATE = "16'b0000000000011001" *) 
(* C_GT_TYPE = "GTHE4" *) (* C_NEXT_SLAVE = "0" *) (* C_NUM_GT = "2" *) 
(* C_QUAD_NUMBER = "16'b0000000011100110" *) (* ORIG_REF_NAME = "in_system_ibert_v1_0_11_gthe4_channel_slave" *) 
module c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_gthe4_channel_slave__parameterized0
   (drpclk_o,
    drpen_o,
    drpwe_o,
    drpaddr_o,
    drpdi_o,
    eyescanreset_o,
    rxrate_o,
    txdiffctrl_o,
    txprecursor_o,
    txpostcursor_o,
    rxlpmen_o,
    mb_reset_o,
    sl_oport_o,
    sl_iport_i,
    drprdy_i,
    drpdo_i,
    drpclk_i,
    rxrate_i,
    txdiffctrl_i,
    txprecursor_i,
    txpostcursor_i,
    rxlpmen_i,
    mb_den_i,
    mb_dwe_i,
    mb_daddr_i,
    mb_di_i,
    rxoutclk_i,
    clk_i,
    mb_do_o,
    mb_drdy_o);
  output drpclk_o;
  output drpen_o;
  output drpwe_o;
  output [9:0]drpaddr_o;
  output [15:0]drpdi_o;
  output eyescanreset_o;
  output [2:0]rxrate_o;
  output [4:0]txdiffctrl_o;
  output [4:0]txprecursor_o;
  output [4:0]txpostcursor_o;
  output rxlpmen_o;
  output mb_reset_o;
  output [16:0]sl_oport_o;
  input [36:0]sl_iport_i;
  input drprdy_i;
  input [15:0]drpdo_i;
  input drpclk_i;
  input [2:0]rxrate_i;
  input [4:0]txdiffctrl_i;
  input [4:0]txprecursor_i;
  input [4:0]txpostcursor_i;
  input rxlpmen_i;
  input mb_den_i;
  input mb_dwe_i;
  input [16:0]mb_daddr_i;
  input [15:0]mb_di_i;
  input rxoutclk_i;
  input clk_i;
  output [15:0]mb_do_o;
  output mb_drdy_o;

  wire clk_i;
  wire drp_den_reg;
  wire drp_drdy_reg;
  wire drp_dwe_reg;
  wire [9:0]drpaddr_o;
  wire drpclk_i;
  wire [15:0]drpdi_o;
  wire [15:0]drpdo_i;
  wire drpen_o;
  wire drprdy_i;
  wire drpwe_o;
  wire eyescanreset_o;
  wire [16:0]mb_daddr_i;
  wire mb_den_i;
  wire [15:0]mb_di_i;
  wire [15:0]mb_do_o;
  wire mb_drdy_o;
  wire mb_dwe_i;
  wire mb_reset_o;
  wire reg_rst_reg;
  wire rxlpmen_i;
  wire rxlpmen_int;
  wire rxlpmen_out_reg;
  wire rxlpmen_ovrd_reg;
  (* async_reg = "true" *) wire rxlpmen_sync1;
  (* async_reg = "true" *) wire rxlpmen_sync2;
  wire rxoutclk_i;
  wire [2:0]rxrate_i;
  wire [2:0]rxrate_out_reg;
  wire rxrate_ovrd_reg;
  wire [2:0]rxrate_reg;
  (* async_reg = "true" *) wire [2:0]rxrate_reg_sync1;
  (* async_reg = "true" *) wire [2:0]rxrate_reg_sync2;
  (* async_reg = "true" *) wire [2:0]rxrate_sync1;
  (* async_reg = "true" *) wire [2:0]rxrate_sync2;
  wire s_dclk;
  wire [36:0]sl_iport_i;
  wire [16:0]sl_oport_o;
  wire [4:0]txdiffctrl_i;
  wire [4:0]txdiffctrl_o;
  wire [4:0]txdiffctrl_out_reg;
  wire txdiffctrl_ovrd_reg;
  (* async_reg = "true" *) wire [4:0]txdiffctrl_sync1;
  (* async_reg = "true" *) wire [4:0]txdiffctrl_sync2;
  wire [4:0]txpostcursor_i;
  wire [4:0]txpostcursor_o;
  wire [4:0]txpostcursor_out_reg;
  wire txpostcursor_ovrd_reg;
  (* async_reg = "true" *) wire [4:0]txpostcursor_sync1;
  (* async_reg = "true" *) wire [4:0]txpostcursor_sync2;
  wire [4:0]txprecursor_i;
  wire [4:0]txprecursor_o;
  wire [4:0]txprecursor_out_reg;
  wire txprecursor_ovrd_reg;
  (* async_reg = "true" *) wire [4:0]txprecursor_sync1;
  (* async_reg = "true" *) wire [4:0]txprecursor_sync2;
  wire NLW_i_regs_drp_dclk_o_UNCONNECTED;
  wire [31:16]NLW_i_regs_do_usr_o_UNCONNECTED;
  wire [1:1]NLW_i_regs_drdy_usr_o_UNCONNECTED;

  assign drpclk_o = drpclk_i;
  assign rxlpmen_o = rxlpmen_int;
  assign rxrate_o[2:0] = rxrate_reg;
  c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_drp_syncronizer \drp_syncronizer.drpen_sync 
       (.CLK(s_dclk),
        .drp_den_o(drp_den_reg),
        .drpclk_i(drpclk_i),
        .drpen_o(drpen_o));
  c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_drp_syncronizer_725 \drp_syncronizer.drprdy_sync 
       (.CLK(s_dclk),
        .drp_drdy_i(drp_drdy_reg),
        .drpclk_i(drpclk_i),
        .drprdy_i(drprdy_i));
  c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_drp_syncronizer_726 \drp_syncronizer.drpwe_sync 
       (.CLK(s_dclk),
        .drp_dwe_o(drp_dwe_reg),
        .drpclk_i(drpclk_i),
        .drpwe_o(drpwe_o));
  (* C_ARBITER_USER_PORTS = "2" *) 
  (* C_CORE_INFO1 = "128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_CORE_INFO2 = "128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_CORE_MAJOR_VER = "3" *) 
  (* C_CORE_MINOR_VER = "0" *) 
  (* C_CORE_TYPE = "16'b0000000000000100" *) 
  (* C_CSE_DRV_VER = "16'b0000000000000001" *) 
  (* C_GT_COORDINATE = "16'b0000000000011001" *) 
  (* C_MAJOR_VERSION = "2013" *) 
  (* C_MINOR_VERSION = "3" *) 
  (* C_NEXT_SLAVE = "0" *) 
  (* C_NUM_GT = "2" *) 
  (* C_PIPE_IFACE = "1" *) 
  (* C_QUAD_NUMBER = "16'b0000000011100110" *) 
  (* C_USE_TEST_REG = "1" *) 
  (* C_XSDB_SLAVE_TYPE = "16'b0000010000010010" *) 
  (* KEEP_HIERARCHY = "yes" *) 
  (* LC_AWIDTH = "17" *) 
  (* LC_DWIDTH = "16" *) 
  (* LC_D_ZERO = "16'b0000000000000000" *) 
  (* LC_LSB_AWIDTH = "11" *) 
  c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_gthe4_channel_regs__parameterized0 i_regs
       (.clk_i(clk_i),
        .daddr_usr_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,mb_daddr_i}),
        .den_usr_i({1'b0,mb_den_i}),
        .di_usr_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,mb_di_i}),
        .do_usr_o({NLW_i_regs_do_usr_o_UNCONNECTED[31:16],mb_do_o}),
        .drdy_usr_o({NLW_i_regs_drdy_usr_o_UNCONNECTED[1],mb_drdy_o}),
        .drp_daddr_o(drpaddr_o),
        .drp_dclk_o(NLW_i_regs_drp_dclk_o_UNCONNECTED),
        .drp_den_o(drp_den_reg),
        .drp_di_o(drpdi_o),
        .drp_do_i(drpdo_i),
        .drp_drdy_i(drp_drdy_reg),
        .drp_dwe_o(drp_dwe_reg),
        .dwe_usr_i({1'b0,mb_dwe_i}),
        .eyescanreset_out_o(eyescanreset_o),
        .mb_reset_o(mb_reset_o),
        .reg_rst_i(reg_rst_reg),
        .rxlpmen_i(rxlpmen_sync2),
        .rxlpmen_out_o(rxlpmen_out_reg),
        .rxlpmen_ovrd_o(rxlpmen_ovrd_reg),
        .rxrate_i(rxrate_reg_sync2),
        .rxrate_out_o(rxrate_out_reg),
        .rxrate_ovrd_o(rxrate_ovrd_reg),
        .s_dclk_o(s_dclk),
        .sl_iport_i(sl_iport_i),
        .sl_oport_o(sl_oport_o),
        .txdiffctrl_i(txdiffctrl_o),
        .txdiffctrl_out_o(txdiffctrl_out_reg),
        .txdiffctrl_ovrd_o(txdiffctrl_ovrd_reg),
        .txpostcursor_i(txpostcursor_o),
        .txpostcursor_out_o(txpostcursor_out_reg),
        .txpostcursor_ovrd_o(txpostcursor_ovrd_reg),
        .txprecursor_i(txprecursor_o),
        .txprecursor_out_o(txprecursor_out_reg),
        .txprecursor_ovrd_o(txprecursor_ovrd_reg));
  FDRE #(
    .INIT(1'b1)) 
    reg_rst_reg_reg
       (.C(drpclk_i),
        .CE(1'b1),
        .D(1'b0),
        .Q(reg_rst_reg),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    rxlpmen_int_inferred_i_1
       (.I0(rxlpmen_out_reg),
        .I1(rxlpmen_ovrd_reg),
        .I2(rxlpmen_i),
        .O(rxlpmen_int));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE rxlpmen_sync1_reg
       (.C(s_dclk),
        .CE(1'b1),
        .D(rxlpmen_int),
        .Q(rxlpmen_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE rxlpmen_sync2_reg
       (.C(s_dclk),
        .CE(1'b1),
        .D(rxlpmen_sync1),
        .Q(rxlpmen_sync2),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    rxrate_reg_inferred_i_1
       (.I0(rxrate_sync2[2]),
        .I1(rxrate_ovrd_reg),
        .I2(rxrate_i[2]),
        .O(rxrate_reg[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    rxrate_reg_inferred_i_2
       (.I0(rxrate_sync2[1]),
        .I1(rxrate_ovrd_reg),
        .I2(rxrate_i[1]),
        .O(rxrate_reg[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    rxrate_reg_inferred_i_3
       (.I0(rxrate_sync2[0]),
        .I1(rxrate_ovrd_reg),
        .I2(rxrate_i[0]),
        .O(rxrate_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \rxrate_reg_sync1_reg[0] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(rxrate_reg[0]),
        .Q(rxrate_reg_sync1[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \rxrate_reg_sync1_reg[1] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(rxrate_reg[1]),
        .Q(rxrate_reg_sync1[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \rxrate_reg_sync1_reg[2] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(rxrate_reg[2]),
        .Q(rxrate_reg_sync1[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \rxrate_reg_sync2_reg[0] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(rxrate_reg_sync1[0]),
        .Q(rxrate_reg_sync2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \rxrate_reg_sync2_reg[1] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(rxrate_reg_sync1[1]),
        .Q(rxrate_reg_sync2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \rxrate_reg_sync2_reg[2] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(rxrate_reg_sync1[2]),
        .Q(rxrate_reg_sync2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \rxrate_sync1_reg[0] 
       (.C(rxoutclk_i),
        .CE(1'b1),
        .D(rxrate_out_reg[0]),
        .Q(rxrate_sync1[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \rxrate_sync1_reg[1] 
       (.C(rxoutclk_i),
        .CE(1'b1),
        .D(rxrate_out_reg[1]),
        .Q(rxrate_sync1[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \rxrate_sync1_reg[2] 
       (.C(rxoutclk_i),
        .CE(1'b1),
        .D(rxrate_out_reg[2]),
        .Q(rxrate_sync1[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \rxrate_sync2_reg[0] 
       (.C(rxoutclk_i),
        .CE(1'b1),
        .D(rxrate_sync1[0]),
        .Q(rxrate_sync2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \rxrate_sync2_reg[1] 
       (.C(rxoutclk_i),
        .CE(1'b1),
        .D(rxrate_sync1[1]),
        .Q(rxrate_sync2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \rxrate_sync2_reg[2] 
       (.C(rxoutclk_i),
        .CE(1'b1),
        .D(rxrate_sync1[2]),
        .Q(rxrate_sync2[2]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \txdiffctrl_o[0]_INST_0 
       (.I0(txdiffctrl_out_reg[0]),
        .I1(txdiffctrl_ovrd_reg),
        .I2(txdiffctrl_sync2[0]),
        .O(txdiffctrl_o[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    \txdiffctrl_o[1]_INST_0 
       (.I0(txdiffctrl_out_reg[1]),
        .I1(txdiffctrl_ovrd_reg),
        .I2(txdiffctrl_sync2[1]),
        .O(txdiffctrl_o[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    \txdiffctrl_o[2]_INST_0 
       (.I0(txdiffctrl_out_reg[2]),
        .I1(txdiffctrl_ovrd_reg),
        .I2(txdiffctrl_sync2[2]),
        .O(txdiffctrl_o[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    \txdiffctrl_o[3]_INST_0 
       (.I0(txdiffctrl_out_reg[3]),
        .I1(txdiffctrl_ovrd_reg),
        .I2(txdiffctrl_sync2[3]),
        .O(txdiffctrl_o[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    \txdiffctrl_o[4]_INST_0 
       (.I0(txdiffctrl_out_reg[4]),
        .I1(txdiffctrl_ovrd_reg),
        .I2(txdiffctrl_sync2[4]),
        .O(txdiffctrl_o[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txdiffctrl_sync1_reg[0] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txdiffctrl_i[0]),
        .Q(txdiffctrl_sync1[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txdiffctrl_sync1_reg[1] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txdiffctrl_i[1]),
        .Q(txdiffctrl_sync1[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txdiffctrl_sync1_reg[2] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txdiffctrl_i[2]),
        .Q(txdiffctrl_sync1[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txdiffctrl_sync1_reg[3] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txdiffctrl_i[3]),
        .Q(txdiffctrl_sync1[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txdiffctrl_sync1_reg[4] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txdiffctrl_i[4]),
        .Q(txdiffctrl_sync1[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txdiffctrl_sync2_reg[0] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txdiffctrl_sync1[0]),
        .Q(txdiffctrl_sync2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txdiffctrl_sync2_reg[1] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txdiffctrl_sync1[1]),
        .Q(txdiffctrl_sync2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txdiffctrl_sync2_reg[2] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txdiffctrl_sync1[2]),
        .Q(txdiffctrl_sync2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txdiffctrl_sync2_reg[3] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txdiffctrl_sync1[3]),
        .Q(txdiffctrl_sync2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txdiffctrl_sync2_reg[4] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txdiffctrl_sync1[4]),
        .Q(txdiffctrl_sync2[4]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \txpostcursor_o[0]_INST_0 
       (.I0(txpostcursor_out_reg[0]),
        .I1(txpostcursor_ovrd_reg),
        .I2(txpostcursor_sync2[0]),
        .O(txpostcursor_o[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    \txpostcursor_o[1]_INST_0 
       (.I0(txpostcursor_out_reg[1]),
        .I1(txpostcursor_ovrd_reg),
        .I2(txpostcursor_sync2[1]),
        .O(txpostcursor_o[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    \txpostcursor_o[2]_INST_0 
       (.I0(txpostcursor_out_reg[2]),
        .I1(txpostcursor_ovrd_reg),
        .I2(txpostcursor_sync2[2]),
        .O(txpostcursor_o[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    \txpostcursor_o[3]_INST_0 
       (.I0(txpostcursor_out_reg[3]),
        .I1(txpostcursor_ovrd_reg),
        .I2(txpostcursor_sync2[3]),
        .O(txpostcursor_o[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    \txpostcursor_o[4]_INST_0 
       (.I0(txpostcursor_out_reg[4]),
        .I1(txpostcursor_ovrd_reg),
        .I2(txpostcursor_sync2[4]),
        .O(txpostcursor_o[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txpostcursor_sync1_reg[0] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txpostcursor_i[0]),
        .Q(txpostcursor_sync1[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txpostcursor_sync1_reg[1] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txpostcursor_i[1]),
        .Q(txpostcursor_sync1[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txpostcursor_sync1_reg[2] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txpostcursor_i[2]),
        .Q(txpostcursor_sync1[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txpostcursor_sync1_reg[3] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txpostcursor_i[3]),
        .Q(txpostcursor_sync1[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txpostcursor_sync1_reg[4] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txpostcursor_i[4]),
        .Q(txpostcursor_sync1[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txpostcursor_sync2_reg[0] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txpostcursor_sync1[0]),
        .Q(txpostcursor_sync2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txpostcursor_sync2_reg[1] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txpostcursor_sync1[1]),
        .Q(txpostcursor_sync2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txpostcursor_sync2_reg[2] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txpostcursor_sync1[2]),
        .Q(txpostcursor_sync2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txpostcursor_sync2_reg[3] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txpostcursor_sync1[3]),
        .Q(txpostcursor_sync2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txpostcursor_sync2_reg[4] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txpostcursor_sync1[4]),
        .Q(txpostcursor_sync2[4]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \txprecursor_o[0]_INST_0 
       (.I0(txprecursor_out_reg[0]),
        .I1(txprecursor_ovrd_reg),
        .I2(txprecursor_sync2[0]),
        .O(txprecursor_o[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    \txprecursor_o[1]_INST_0 
       (.I0(txprecursor_out_reg[1]),
        .I1(txprecursor_ovrd_reg),
        .I2(txprecursor_sync2[1]),
        .O(txprecursor_o[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    \txprecursor_o[2]_INST_0 
       (.I0(txprecursor_out_reg[2]),
        .I1(txprecursor_ovrd_reg),
        .I2(txprecursor_sync2[2]),
        .O(txprecursor_o[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    \txprecursor_o[3]_INST_0 
       (.I0(txprecursor_out_reg[3]),
        .I1(txprecursor_ovrd_reg),
        .I2(txprecursor_sync2[3]),
        .O(txprecursor_o[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    \txprecursor_o[4]_INST_0 
       (.I0(txprecursor_out_reg[4]),
        .I1(txprecursor_ovrd_reg),
        .I2(txprecursor_sync2[4]),
        .O(txprecursor_o[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txprecursor_sync1_reg[0] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txprecursor_i[0]),
        .Q(txprecursor_sync1[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txprecursor_sync1_reg[1] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txprecursor_i[1]),
        .Q(txprecursor_sync1[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txprecursor_sync1_reg[2] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txprecursor_i[2]),
        .Q(txprecursor_sync1[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txprecursor_sync1_reg[3] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txprecursor_i[3]),
        .Q(txprecursor_sync1[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txprecursor_sync1_reg[4] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txprecursor_i[4]),
        .Q(txprecursor_sync1[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txprecursor_sync2_reg[0] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txprecursor_sync1[0]),
        .Q(txprecursor_sync2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txprecursor_sync2_reg[1] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txprecursor_sync1[1]),
        .Q(txprecursor_sync2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txprecursor_sync2_reg[2] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txprecursor_sync1[2]),
        .Q(txprecursor_sync2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txprecursor_sync2_reg[3] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txprecursor_sync1[3]),
        .Q(txprecursor_sync2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \txprecursor_sync2_reg[4] 
       (.C(s_dclk),
        .CE(1'b1),
        .D(txprecursor_sync1[4]),
        .Q(txprecursor_sync2[4]),
        .R(1'b0));
endmodule

(* C_BUILD_REVISION = "0" *) (* C_COMPONENT_NAME = "c2c_gth_in_system_ibert_0" *) (* C_CORE_MAJOR_VER = "3" *) 
(* C_CORE_MINOR_VER = "0" *) (* C_DRPADDR_WIDTH = "10" *) (* C_ENABLE_INPUT_PORTS = "1" *) 
(* C_GTS_USED = "X0Y0" *) (* C_GT_COORDINATE = "2112'bb0000000000011000" *) 
(* C_GT_COORDINATE_1 = "16'b0000000000011001" *) (* C_GT_COORDINATE_10 = "16'b0000000000000000" *) (* C_GT_COORDINATE_100 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_101 = "16'b0000000000000000" *) (* C_GT_COORDINATE_102 = "16'b0000000000000000" *) (* C_GT_COORDINATE_103 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_104 = "16'b0000000000000000" *) (* C_GT_COORDINATE_105 = "16'b0000000000000000" *) (* C_GT_COORDINATE_106 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_107 = "16'b0000000000000000" *) (* C_GT_COORDINATE_108 = "16'b0000000000000000" *) (* C_GT_COORDINATE_109 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_11 = "16'b0000000000000000" *) (* C_GT_COORDINATE_110 = "16'b0000000000000000" *) (* C_GT_COORDINATE_111 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_112 = "16'b0000000000000000" *) (* C_GT_COORDINATE_113 = "16'b0000000000000000" *) (* C_GT_COORDINATE_114 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_115 = "16'b0000000000000000" *) (* C_GT_COORDINATE_116 = "16'b0000000000000000" *) (* C_GT_COORDINATE_117 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_118 = "16'b0000000000000000" *) (* C_GT_COORDINATE_119 = "16'b0000000000000000" *) (* C_GT_COORDINATE_12 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_120 = "16'b0000000000000000" *) (* C_GT_COORDINATE_121 = "16'b0000000000000000" *) (* C_GT_COORDINATE_122 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_123 = "16'b0000000000000000" *) (* C_GT_COORDINATE_124 = "16'b0000000000000000" *) (* C_GT_COORDINATE_125 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_126 = "16'b0000000000000000" *) (* C_GT_COORDINATE_127 = "16'b0000000000000000" *) (* C_GT_COORDINATE_128 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_129 = "16'b0000000000000000" *) (* C_GT_COORDINATE_13 = "16'b0000000000000000" *) (* C_GT_COORDINATE_130 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_131 = "16'b0000000000000000" *) (* C_GT_COORDINATE_14 = "16'b0000000000000000" *) (* C_GT_COORDINATE_15 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_16 = "16'b0000000000000000" *) (* C_GT_COORDINATE_17 = "16'b0000000000000000" *) (* C_GT_COORDINATE_18 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_19 = "16'b0000000000000000" *) (* C_GT_COORDINATE_2 = "16'b0000000000000000" *) (* C_GT_COORDINATE_20 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_21 = "16'b0000000000000000" *) (* C_GT_COORDINATE_22 = "16'b0000000000000000" *) (* C_GT_COORDINATE_23 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_24 = "16'b0000000000000000" *) (* C_GT_COORDINATE_25 = "16'b0000000000000000" *) (* C_GT_COORDINATE_26 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_27 = "16'b0000000000000000" *) (* C_GT_COORDINATE_28 = "16'b0000000000000000" *) (* C_GT_COORDINATE_29 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_3 = "16'b0000000000000000" *) (* C_GT_COORDINATE_30 = "16'b0000000000000000" *) (* C_GT_COORDINATE_31 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_32 = "16'b0000000000000000" *) (* C_GT_COORDINATE_33 = "16'b0000000000000000" *) (* C_GT_COORDINATE_34 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_35 = "16'b0000000000000000" *) (* C_GT_COORDINATE_36 = "16'b0000000000000000" *) (* C_GT_COORDINATE_37 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_38 = "16'b0000000000000000" *) (* C_GT_COORDINATE_39 = "16'b0000000000000000" *) (* C_GT_COORDINATE_4 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_40 = "16'b0000000000000000" *) (* C_GT_COORDINATE_41 = "16'b0000000000000000" *) (* C_GT_COORDINATE_42 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_43 = "16'b0000000000000000" *) (* C_GT_COORDINATE_44 = "16'b0000000000000000" *) (* C_GT_COORDINATE_45 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_46 = "16'b0000000000000000" *) (* C_GT_COORDINATE_47 = "16'b0000000000000000" *) (* C_GT_COORDINATE_48 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_49 = "16'b0000000000000000" *) (* C_GT_COORDINATE_5 = "16'b0000000000000000" *) (* C_GT_COORDINATE_50 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_51 = "16'b0000000000000000" *) (* C_GT_COORDINATE_52 = "16'b0000000000000000" *) (* C_GT_COORDINATE_53 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_54 = "16'b0000000000000000" *) (* C_GT_COORDINATE_55 = "16'b0000000000000000" *) (* C_GT_COORDINATE_56 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_57 = "16'b0000000000000000" *) (* C_GT_COORDINATE_58 = "16'b0000000000000000" *) (* C_GT_COORDINATE_59 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_6 = "16'b0000000000000000" *) (* C_GT_COORDINATE_60 = "16'b0000000000000000" *) (* C_GT_COORDINATE_61 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_62 = "16'b0000000000000000" *) (* C_GT_COORDINATE_63 = "16'b0000000000000000" *) (* C_GT_COORDINATE_64 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_65 = "16'b0000000000000000" *) (* C_GT_COORDINATE_66 = "16'b0000000000000000" *) (* C_GT_COORDINATE_67 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_68 = "16'b0000000000000000" *) (* C_GT_COORDINATE_69 = "16'b0000000000000000" *) (* C_GT_COORDINATE_7 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_70 = "16'b0000000000000000" *) (* C_GT_COORDINATE_71 = "16'b0000000000000000" *) (* C_GT_COORDINATE_72 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_73 = "16'b0000000000000000" *) (* C_GT_COORDINATE_74 = "16'b0000000000000000" *) (* C_GT_COORDINATE_75 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_76 = "16'b0000000000000000" *) (* C_GT_COORDINATE_77 = "16'b0000000000000000" *) (* C_GT_COORDINATE_78 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_79 = "16'b0000000000000000" *) (* C_GT_COORDINATE_8 = "16'b0000000000000000" *) (* C_GT_COORDINATE_80 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_81 = "16'b0000000000000000" *) (* C_GT_COORDINATE_82 = "16'b0000000000000000" *) (* C_GT_COORDINATE_83 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_84 = "16'b0000000000000000" *) (* C_GT_COORDINATE_85 = "16'b0000000000000000" *) (* C_GT_COORDINATE_86 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_87 = "16'b0000000000000000" *) (* C_GT_COORDINATE_88 = "16'b0000000000000000" *) (* C_GT_COORDINATE_89 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_9 = "16'b0000000000000000" *) (* C_GT_COORDINATE_90 = "16'b0000000000000000" *) (* C_GT_COORDINATE_91 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_92 = "16'b0000000000000000" *) (* C_GT_COORDINATE_93 = "16'b0000000000000000" *) (* C_GT_COORDINATE_94 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_95 = "16'b0000000000000000" *) (* C_GT_COORDINATE_96 = "16'b0000000000000000" *) (* C_GT_COORDINATE_97 = "16'b0000000000000000" *) 
(* C_GT_COORDINATE_98 = "16'b0000000000000000" *) (* C_GT_COORDINATE_99 = "16'b0000000000000000" *) (* C_GT_TYPE = "GTHE4" *) 
(* C_NUM_GT = "2" *) (* C_QUAD_NUMBER = "2112'bb0000000011100110" *) 
(* C_QUAD_NUMBER_1 = "16'b0000000011100110" *) (* C_QUAD_NUMBER_10 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_100 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_101 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_102 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_103 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_104 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_105 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_106 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_107 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_108 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_109 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_11 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_110 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_111 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_112 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_113 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_114 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_115 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_116 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_117 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_118 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_119 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_12 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_120 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_121 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_122 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_123 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_124 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_125 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_126 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_127 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_128 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_129 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_13 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_130 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_131 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_14 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_15 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_16 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_17 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_18 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_19 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_2 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_20 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_21 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_22 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_23 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_24 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_25 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_26 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_27 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_28 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_29 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_3 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_30 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_31 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_32 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_33 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_34 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_35 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_36 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_37 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_38 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_39 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_4 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_40 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_41 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_42 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_43 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_44 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_45 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_46 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_47 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_48 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_49 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_5 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_50 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_51 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_52 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_53 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_54 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_55 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_56 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_57 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_58 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_59 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_6 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_60 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_61 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_62 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_63 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_64 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_65 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_66 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_67 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_68 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_69 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_7 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_70 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_71 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_72 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_73 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_74 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_75 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_76 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_77 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_78 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_79 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_8 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_80 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_81 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_82 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_83 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_84 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_85 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_86 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_87 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_88 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_89 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_9 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_90 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_91 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_92 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_93 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_94 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_95 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_96 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_97 = "16'b0000000000000000" *) 
(* C_QUAD_NUMBER_98 = "16'b0000000000000000" *) (* C_QUAD_NUMBER_99 = "16'b0000000000000000" *) (* C_TXDIFFCTRL_WIDTH = "5" *) 
(* C_USE_MDM = "0" *) (* C_XDEVICEFAMILY = "kintexuplus" *) (* dont_touch = "true" *) 
module c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_in_system_ibert
   (drpclk_o,
    gt0_drpen_o,
    gt1_drpen_o,
    gt2_drpen_o,
    gt3_drpen_o,
    gt4_drpen_o,
    gt5_drpen_o,
    gt6_drpen_o,
    gt7_drpen_o,
    gt8_drpen_o,
    gt9_drpen_o,
    gt10_drpen_o,
    gt11_drpen_o,
    gt12_drpen_o,
    gt13_drpen_o,
    gt14_drpen_o,
    gt15_drpen_o,
    gt16_drpen_o,
    gt17_drpen_o,
    gt18_drpen_o,
    gt19_drpen_o,
    gt20_drpen_o,
    gt21_drpen_o,
    gt22_drpen_o,
    gt23_drpen_o,
    gt24_drpen_o,
    gt25_drpen_o,
    gt26_drpen_o,
    gt27_drpen_o,
    gt28_drpen_o,
    gt29_drpen_o,
    gt30_drpen_o,
    gt31_drpen_o,
    gt32_drpen_o,
    gt33_drpen_o,
    gt34_drpen_o,
    gt35_drpen_o,
    gt36_drpen_o,
    gt37_drpen_o,
    gt38_drpen_o,
    gt39_drpen_o,
    gt40_drpen_o,
    gt41_drpen_o,
    gt42_drpen_o,
    gt43_drpen_o,
    gt44_drpen_o,
    gt45_drpen_o,
    gt46_drpen_o,
    gt47_drpen_o,
    gt48_drpen_o,
    gt49_drpen_o,
    gt50_drpen_o,
    gt51_drpen_o,
    gt52_drpen_o,
    gt53_drpen_o,
    gt54_drpen_o,
    gt55_drpen_o,
    gt56_drpen_o,
    gt57_drpen_o,
    gt58_drpen_o,
    gt59_drpen_o,
    gt60_drpen_o,
    gt61_drpen_o,
    gt62_drpen_o,
    gt63_drpen_o,
    gt64_drpen_o,
    gt65_drpen_o,
    gt66_drpen_o,
    gt67_drpen_o,
    gt68_drpen_o,
    gt69_drpen_o,
    gt70_drpen_o,
    gt71_drpen_o,
    gt72_drpen_o,
    gt73_drpen_o,
    gt74_drpen_o,
    gt75_drpen_o,
    gt76_drpen_o,
    gt77_drpen_o,
    gt78_drpen_o,
    gt79_drpen_o,
    gt80_drpen_o,
    gt81_drpen_o,
    gt82_drpen_o,
    gt83_drpen_o,
    gt84_drpen_o,
    gt85_drpen_o,
    gt86_drpen_o,
    gt87_drpen_o,
    gt88_drpen_o,
    gt89_drpen_o,
    gt90_drpen_o,
    gt91_drpen_o,
    gt92_drpen_o,
    gt93_drpen_o,
    gt94_drpen_o,
    gt95_drpen_o,
    gt96_drpen_o,
    gt97_drpen_o,
    gt98_drpen_o,
    gt99_drpen_o,
    gt100_drpen_o,
    gt101_drpen_o,
    gt102_drpen_o,
    gt103_drpen_o,
    gt104_drpen_o,
    gt105_drpen_o,
    gt106_drpen_o,
    gt107_drpen_o,
    gt108_drpen_o,
    gt109_drpen_o,
    gt110_drpen_o,
    gt111_drpen_o,
    gt112_drpen_o,
    gt113_drpen_o,
    gt114_drpen_o,
    gt115_drpen_o,
    gt116_drpen_o,
    gt117_drpen_o,
    gt118_drpen_o,
    gt119_drpen_o,
    gt120_drpen_o,
    gt121_drpen_o,
    gt122_drpen_o,
    gt123_drpen_o,
    gt124_drpen_o,
    gt125_drpen_o,
    gt126_drpen_o,
    gt127_drpen_o,
    gt128_drpen_o,
    gt129_drpen_o,
    gt130_drpen_o,
    gt131_drpen_o,
    gt0_drpwe_o,
    gt1_drpwe_o,
    gt2_drpwe_o,
    gt3_drpwe_o,
    gt4_drpwe_o,
    gt5_drpwe_o,
    gt6_drpwe_o,
    gt7_drpwe_o,
    gt8_drpwe_o,
    gt9_drpwe_o,
    gt10_drpwe_o,
    gt11_drpwe_o,
    gt12_drpwe_o,
    gt13_drpwe_o,
    gt14_drpwe_o,
    gt15_drpwe_o,
    gt16_drpwe_o,
    gt17_drpwe_o,
    gt18_drpwe_o,
    gt19_drpwe_o,
    gt20_drpwe_o,
    gt21_drpwe_o,
    gt22_drpwe_o,
    gt23_drpwe_o,
    gt24_drpwe_o,
    gt25_drpwe_o,
    gt26_drpwe_o,
    gt27_drpwe_o,
    gt28_drpwe_o,
    gt29_drpwe_o,
    gt30_drpwe_o,
    gt31_drpwe_o,
    gt32_drpwe_o,
    gt33_drpwe_o,
    gt34_drpwe_o,
    gt35_drpwe_o,
    gt36_drpwe_o,
    gt37_drpwe_o,
    gt38_drpwe_o,
    gt39_drpwe_o,
    gt40_drpwe_o,
    gt41_drpwe_o,
    gt42_drpwe_o,
    gt43_drpwe_o,
    gt44_drpwe_o,
    gt45_drpwe_o,
    gt46_drpwe_o,
    gt47_drpwe_o,
    gt48_drpwe_o,
    gt49_drpwe_o,
    gt50_drpwe_o,
    gt51_drpwe_o,
    gt52_drpwe_o,
    gt53_drpwe_o,
    gt54_drpwe_o,
    gt55_drpwe_o,
    gt56_drpwe_o,
    gt57_drpwe_o,
    gt58_drpwe_o,
    gt59_drpwe_o,
    gt60_drpwe_o,
    gt61_drpwe_o,
    gt62_drpwe_o,
    gt63_drpwe_o,
    gt64_drpwe_o,
    gt65_drpwe_o,
    gt66_drpwe_o,
    gt67_drpwe_o,
    gt68_drpwe_o,
    gt69_drpwe_o,
    gt70_drpwe_o,
    gt71_drpwe_o,
    gt72_drpwe_o,
    gt73_drpwe_o,
    gt74_drpwe_o,
    gt75_drpwe_o,
    gt76_drpwe_o,
    gt77_drpwe_o,
    gt78_drpwe_o,
    gt79_drpwe_o,
    gt80_drpwe_o,
    gt81_drpwe_o,
    gt82_drpwe_o,
    gt83_drpwe_o,
    gt84_drpwe_o,
    gt85_drpwe_o,
    gt86_drpwe_o,
    gt87_drpwe_o,
    gt88_drpwe_o,
    gt89_drpwe_o,
    gt90_drpwe_o,
    gt91_drpwe_o,
    gt92_drpwe_o,
    gt93_drpwe_o,
    gt94_drpwe_o,
    gt95_drpwe_o,
    gt96_drpwe_o,
    gt97_drpwe_o,
    gt98_drpwe_o,
    gt99_drpwe_o,
    gt100_drpwe_o,
    gt101_drpwe_o,
    gt102_drpwe_o,
    gt103_drpwe_o,
    gt104_drpwe_o,
    gt105_drpwe_o,
    gt106_drpwe_o,
    gt107_drpwe_o,
    gt108_drpwe_o,
    gt109_drpwe_o,
    gt110_drpwe_o,
    gt111_drpwe_o,
    gt112_drpwe_o,
    gt113_drpwe_o,
    gt114_drpwe_o,
    gt115_drpwe_o,
    gt116_drpwe_o,
    gt117_drpwe_o,
    gt118_drpwe_o,
    gt119_drpwe_o,
    gt120_drpwe_o,
    gt121_drpwe_o,
    gt122_drpwe_o,
    gt123_drpwe_o,
    gt124_drpwe_o,
    gt125_drpwe_o,
    gt126_drpwe_o,
    gt127_drpwe_o,
    gt128_drpwe_o,
    gt129_drpwe_o,
    gt130_drpwe_o,
    gt131_drpwe_o,
    gt0_drpaddr_o,
    gt1_drpaddr_o,
    gt2_drpaddr_o,
    gt3_drpaddr_o,
    gt4_drpaddr_o,
    gt5_drpaddr_o,
    gt6_drpaddr_o,
    gt7_drpaddr_o,
    gt8_drpaddr_o,
    gt9_drpaddr_o,
    gt10_drpaddr_o,
    gt11_drpaddr_o,
    gt12_drpaddr_o,
    gt13_drpaddr_o,
    gt14_drpaddr_o,
    gt15_drpaddr_o,
    gt16_drpaddr_o,
    gt17_drpaddr_o,
    gt18_drpaddr_o,
    gt19_drpaddr_o,
    gt20_drpaddr_o,
    gt21_drpaddr_o,
    gt22_drpaddr_o,
    gt23_drpaddr_o,
    gt24_drpaddr_o,
    gt25_drpaddr_o,
    gt26_drpaddr_o,
    gt27_drpaddr_o,
    gt28_drpaddr_o,
    gt29_drpaddr_o,
    gt30_drpaddr_o,
    gt31_drpaddr_o,
    gt32_drpaddr_o,
    gt33_drpaddr_o,
    gt34_drpaddr_o,
    gt35_drpaddr_o,
    gt36_drpaddr_o,
    gt37_drpaddr_o,
    gt38_drpaddr_o,
    gt39_drpaddr_o,
    gt40_drpaddr_o,
    gt41_drpaddr_o,
    gt42_drpaddr_o,
    gt43_drpaddr_o,
    gt44_drpaddr_o,
    gt45_drpaddr_o,
    gt46_drpaddr_o,
    gt47_drpaddr_o,
    gt48_drpaddr_o,
    gt49_drpaddr_o,
    gt50_drpaddr_o,
    gt51_drpaddr_o,
    gt52_drpaddr_o,
    gt53_drpaddr_o,
    gt54_drpaddr_o,
    gt55_drpaddr_o,
    gt56_drpaddr_o,
    gt57_drpaddr_o,
    gt58_drpaddr_o,
    gt59_drpaddr_o,
    gt60_drpaddr_o,
    gt61_drpaddr_o,
    gt62_drpaddr_o,
    gt63_drpaddr_o,
    gt64_drpaddr_o,
    gt65_drpaddr_o,
    gt66_drpaddr_o,
    gt67_drpaddr_o,
    gt68_drpaddr_o,
    gt69_drpaddr_o,
    gt70_drpaddr_o,
    gt71_drpaddr_o,
    gt72_drpaddr_o,
    gt73_drpaddr_o,
    gt74_drpaddr_o,
    gt75_drpaddr_o,
    gt76_drpaddr_o,
    gt77_drpaddr_o,
    gt78_drpaddr_o,
    gt79_drpaddr_o,
    gt80_drpaddr_o,
    gt81_drpaddr_o,
    gt82_drpaddr_o,
    gt83_drpaddr_o,
    gt84_drpaddr_o,
    gt85_drpaddr_o,
    gt86_drpaddr_o,
    gt87_drpaddr_o,
    gt88_drpaddr_o,
    gt89_drpaddr_o,
    gt90_drpaddr_o,
    gt91_drpaddr_o,
    gt92_drpaddr_o,
    gt93_drpaddr_o,
    gt94_drpaddr_o,
    gt95_drpaddr_o,
    gt96_drpaddr_o,
    gt97_drpaddr_o,
    gt98_drpaddr_o,
    gt99_drpaddr_o,
    gt100_drpaddr_o,
    gt101_drpaddr_o,
    gt102_drpaddr_o,
    gt103_drpaddr_o,
    gt104_drpaddr_o,
    gt105_drpaddr_o,
    gt106_drpaddr_o,
    gt107_drpaddr_o,
    gt108_drpaddr_o,
    gt109_drpaddr_o,
    gt110_drpaddr_o,
    gt111_drpaddr_o,
    gt112_drpaddr_o,
    gt113_drpaddr_o,
    gt114_drpaddr_o,
    gt115_drpaddr_o,
    gt116_drpaddr_o,
    gt117_drpaddr_o,
    gt118_drpaddr_o,
    gt119_drpaddr_o,
    gt120_drpaddr_o,
    gt121_drpaddr_o,
    gt122_drpaddr_o,
    gt123_drpaddr_o,
    gt124_drpaddr_o,
    gt125_drpaddr_o,
    gt126_drpaddr_o,
    gt127_drpaddr_o,
    gt128_drpaddr_o,
    gt129_drpaddr_o,
    gt130_drpaddr_o,
    gt131_drpaddr_o,
    gt0_drpdi_o,
    gt1_drpdi_o,
    gt2_drpdi_o,
    gt3_drpdi_o,
    gt4_drpdi_o,
    gt5_drpdi_o,
    gt6_drpdi_o,
    gt7_drpdi_o,
    gt8_drpdi_o,
    gt9_drpdi_o,
    gt10_drpdi_o,
    gt11_drpdi_o,
    gt12_drpdi_o,
    gt13_drpdi_o,
    gt14_drpdi_o,
    gt15_drpdi_o,
    gt16_drpdi_o,
    gt17_drpdi_o,
    gt18_drpdi_o,
    gt19_drpdi_o,
    gt20_drpdi_o,
    gt21_drpdi_o,
    gt22_drpdi_o,
    gt23_drpdi_o,
    gt24_drpdi_o,
    gt25_drpdi_o,
    gt26_drpdi_o,
    gt27_drpdi_o,
    gt28_drpdi_o,
    gt29_drpdi_o,
    gt30_drpdi_o,
    gt31_drpdi_o,
    gt32_drpdi_o,
    gt33_drpdi_o,
    gt34_drpdi_o,
    gt35_drpdi_o,
    gt36_drpdi_o,
    gt37_drpdi_o,
    gt38_drpdi_o,
    gt39_drpdi_o,
    gt40_drpdi_o,
    gt41_drpdi_o,
    gt42_drpdi_o,
    gt43_drpdi_o,
    gt44_drpdi_o,
    gt45_drpdi_o,
    gt46_drpdi_o,
    gt47_drpdi_o,
    gt48_drpdi_o,
    gt49_drpdi_o,
    gt50_drpdi_o,
    gt51_drpdi_o,
    gt52_drpdi_o,
    gt53_drpdi_o,
    gt54_drpdi_o,
    gt55_drpdi_o,
    gt56_drpdi_o,
    gt57_drpdi_o,
    gt58_drpdi_o,
    gt59_drpdi_o,
    gt60_drpdi_o,
    gt61_drpdi_o,
    gt62_drpdi_o,
    gt63_drpdi_o,
    gt64_drpdi_o,
    gt65_drpdi_o,
    gt66_drpdi_o,
    gt67_drpdi_o,
    gt68_drpdi_o,
    gt69_drpdi_o,
    gt70_drpdi_o,
    gt71_drpdi_o,
    gt72_drpdi_o,
    gt73_drpdi_o,
    gt74_drpdi_o,
    gt75_drpdi_o,
    gt76_drpdi_o,
    gt77_drpdi_o,
    gt78_drpdi_o,
    gt79_drpdi_o,
    gt80_drpdi_o,
    gt81_drpdi_o,
    gt82_drpdi_o,
    gt83_drpdi_o,
    gt84_drpdi_o,
    gt85_drpdi_o,
    gt86_drpdi_o,
    gt87_drpdi_o,
    gt88_drpdi_o,
    gt89_drpdi_o,
    gt90_drpdi_o,
    gt91_drpdi_o,
    gt92_drpdi_o,
    gt93_drpdi_o,
    gt94_drpdi_o,
    gt95_drpdi_o,
    gt96_drpdi_o,
    gt97_drpdi_o,
    gt98_drpdi_o,
    gt99_drpdi_o,
    gt100_drpdi_o,
    gt101_drpdi_o,
    gt102_drpdi_o,
    gt103_drpdi_o,
    gt104_drpdi_o,
    gt105_drpdi_o,
    gt106_drpdi_o,
    gt107_drpdi_o,
    gt108_drpdi_o,
    gt109_drpdi_o,
    gt110_drpdi_o,
    gt111_drpdi_o,
    gt112_drpdi_o,
    gt113_drpdi_o,
    gt114_drpdi_o,
    gt115_drpdi_o,
    gt116_drpdi_o,
    gt117_drpdi_o,
    gt118_drpdi_o,
    gt119_drpdi_o,
    gt120_drpdi_o,
    gt121_drpdi_o,
    gt122_drpdi_o,
    gt123_drpdi_o,
    gt124_drpdi_o,
    gt125_drpdi_o,
    gt126_drpdi_o,
    gt127_drpdi_o,
    gt128_drpdi_o,
    gt129_drpdi_o,
    gt130_drpdi_o,
    gt131_drpdi_o,
    eyescanreset_o,
    rxrate_o,
    txdiffctrl_o,
    txprecursor_o,
    txpostcursor_o,
    rxlpmen_o,
    sl_oport0,
    sl_oport1,
    sl_oport2,
    sl_oport3,
    sl_oport4,
    sl_oport5,
    sl_oport6,
    sl_oport7,
    sl_oport8,
    sl_oport9,
    sl_oport10,
    sl_oport11,
    sl_oport12,
    sl_oport13,
    sl_oport14,
    sl_oport15,
    sl_oport16,
    sl_oport17,
    sl_oport18,
    sl_oport19,
    sl_oport20,
    sl_oport21,
    sl_oport22,
    sl_oport23,
    sl_oport24,
    sl_oport25,
    sl_oport26,
    sl_oport27,
    sl_oport28,
    sl_oport29,
    sl_oport30,
    sl_oport31,
    sl_oport32,
    sl_oport33,
    sl_oport34,
    sl_oport35,
    sl_oport36,
    sl_oport37,
    sl_oport38,
    sl_oport39,
    sl_oport40,
    sl_oport41,
    sl_oport42,
    sl_oport43,
    sl_oport44,
    sl_oport45,
    sl_oport46,
    sl_oport47,
    sl_oport48,
    sl_oport49,
    sl_oport50,
    sl_oport51,
    sl_oport52,
    sl_oport53,
    sl_oport54,
    sl_oport55,
    sl_oport56,
    sl_oport57,
    sl_oport58,
    sl_oport59,
    sl_oport60,
    sl_oport61,
    sl_oport62,
    sl_oport63,
    sl_oport64,
    sl_oport65,
    sl_oport66,
    sl_oport67,
    sl_oport68,
    sl_oport69,
    sl_oport70,
    sl_oport71,
    sl_oport72,
    sl_oport73,
    sl_oport74,
    sl_oport75,
    sl_oport76,
    sl_oport77,
    sl_oport78,
    sl_oport79,
    sl_oport80,
    sl_oport81,
    sl_oport82,
    sl_oport83,
    sl_oport84,
    sl_oport85,
    sl_oport86,
    sl_oport87,
    sl_oport88,
    sl_oport89,
    sl_oport90,
    sl_oport91,
    sl_oport92,
    sl_oport93,
    sl_oport94,
    sl_oport95,
    sl_oport96,
    sl_oport97,
    sl_oport98,
    sl_oport99,
    sl_oport100,
    sl_oport101,
    sl_oport102,
    sl_oport103,
    sl_oport104,
    sl_oport105,
    sl_oport106,
    sl_oport107,
    sl_oport108,
    sl_oport109,
    sl_oport110,
    sl_oport111,
    sl_oport112,
    sl_oport113,
    sl_oport114,
    sl_oport115,
    sl_oport116,
    sl_oport117,
    sl_oport118,
    sl_oport119,
    sl_oport120,
    sl_oport121,
    sl_oport122,
    sl_oport123,
    sl_oport124,
    sl_oport125,
    sl_oport126,
    sl_oport127,
    sl_oport128,
    sl_oport129,
    sl_oport130,
    sl_oport131,
    sl_iport0,
    sl_iport1,
    sl_iport2,
    sl_iport3,
    sl_iport4,
    sl_iport5,
    sl_iport6,
    sl_iport7,
    sl_iport8,
    sl_iport9,
    sl_iport10,
    sl_iport11,
    sl_iport12,
    sl_iport13,
    sl_iport14,
    sl_iport15,
    sl_iport16,
    sl_iport17,
    sl_iport18,
    sl_iport19,
    sl_iport20,
    sl_iport21,
    sl_iport22,
    sl_iport23,
    sl_iport24,
    sl_iport25,
    sl_iport26,
    sl_iport27,
    sl_iport28,
    sl_iport29,
    sl_iport30,
    sl_iport31,
    sl_iport32,
    sl_iport33,
    sl_iport34,
    sl_iport35,
    sl_iport36,
    sl_iport37,
    sl_iport38,
    sl_iport39,
    sl_iport40,
    sl_iport41,
    sl_iport42,
    sl_iport43,
    sl_iport44,
    sl_iport45,
    sl_iport46,
    sl_iport47,
    sl_iport48,
    sl_iport49,
    sl_iport50,
    sl_iport51,
    sl_iport52,
    sl_iport53,
    sl_iport54,
    sl_iport55,
    sl_iport56,
    sl_iport57,
    sl_iport58,
    sl_iport59,
    sl_iport60,
    sl_iport61,
    sl_iport62,
    sl_iport63,
    sl_iport64,
    sl_iport65,
    sl_iport66,
    sl_iport67,
    sl_iport68,
    sl_iport69,
    sl_iport70,
    sl_iport71,
    sl_iport72,
    sl_iport73,
    sl_iport74,
    sl_iport75,
    sl_iport76,
    sl_iport77,
    sl_iport78,
    sl_iport79,
    sl_iport80,
    sl_iport81,
    sl_iport82,
    sl_iport83,
    sl_iport84,
    sl_iport85,
    sl_iport86,
    sl_iport87,
    sl_iport88,
    sl_iport89,
    sl_iport90,
    sl_iport91,
    sl_iport92,
    sl_iport93,
    sl_iport94,
    sl_iport95,
    sl_iport96,
    sl_iport97,
    sl_iport98,
    sl_iport99,
    sl_iport100,
    sl_iport101,
    sl_iport102,
    sl_iport103,
    sl_iport104,
    sl_iport105,
    sl_iport106,
    sl_iport107,
    sl_iport108,
    sl_iport109,
    sl_iport110,
    sl_iport111,
    sl_iport112,
    sl_iport113,
    sl_iport114,
    sl_iport115,
    sl_iport116,
    sl_iport117,
    sl_iport118,
    sl_iport119,
    sl_iport120,
    sl_iport121,
    sl_iport122,
    sl_iport123,
    sl_iport124,
    sl_iport125,
    sl_iport126,
    sl_iport127,
    sl_iport128,
    sl_iport129,
    sl_iport130,
    sl_iport131,
    drpclk_i,
    gt0_drprdy_i,
    gt1_drprdy_i,
    gt2_drprdy_i,
    gt3_drprdy_i,
    gt4_drprdy_i,
    gt5_drprdy_i,
    gt6_drprdy_i,
    gt7_drprdy_i,
    gt8_drprdy_i,
    gt9_drprdy_i,
    gt10_drprdy_i,
    gt11_drprdy_i,
    gt12_drprdy_i,
    gt13_drprdy_i,
    gt14_drprdy_i,
    gt15_drprdy_i,
    gt16_drprdy_i,
    gt17_drprdy_i,
    gt18_drprdy_i,
    gt19_drprdy_i,
    gt20_drprdy_i,
    gt21_drprdy_i,
    gt22_drprdy_i,
    gt23_drprdy_i,
    gt24_drprdy_i,
    gt25_drprdy_i,
    gt26_drprdy_i,
    gt27_drprdy_i,
    gt28_drprdy_i,
    gt29_drprdy_i,
    gt30_drprdy_i,
    gt31_drprdy_i,
    gt32_drprdy_i,
    gt33_drprdy_i,
    gt34_drprdy_i,
    gt35_drprdy_i,
    gt36_drprdy_i,
    gt37_drprdy_i,
    gt38_drprdy_i,
    gt39_drprdy_i,
    gt40_drprdy_i,
    gt41_drprdy_i,
    gt42_drprdy_i,
    gt43_drprdy_i,
    gt44_drprdy_i,
    gt45_drprdy_i,
    gt46_drprdy_i,
    gt47_drprdy_i,
    gt48_drprdy_i,
    gt49_drprdy_i,
    gt50_drprdy_i,
    gt51_drprdy_i,
    gt52_drprdy_i,
    gt53_drprdy_i,
    gt54_drprdy_i,
    gt55_drprdy_i,
    gt56_drprdy_i,
    gt57_drprdy_i,
    gt58_drprdy_i,
    gt59_drprdy_i,
    gt60_drprdy_i,
    gt61_drprdy_i,
    gt62_drprdy_i,
    gt63_drprdy_i,
    gt64_drprdy_i,
    gt65_drprdy_i,
    gt66_drprdy_i,
    gt67_drprdy_i,
    gt68_drprdy_i,
    gt69_drprdy_i,
    gt70_drprdy_i,
    gt71_drprdy_i,
    gt72_drprdy_i,
    gt73_drprdy_i,
    gt74_drprdy_i,
    gt75_drprdy_i,
    gt76_drprdy_i,
    gt77_drprdy_i,
    gt78_drprdy_i,
    gt79_drprdy_i,
    gt80_drprdy_i,
    gt81_drprdy_i,
    gt82_drprdy_i,
    gt83_drprdy_i,
    gt84_drprdy_i,
    gt85_drprdy_i,
    gt86_drprdy_i,
    gt87_drprdy_i,
    gt88_drprdy_i,
    gt89_drprdy_i,
    gt90_drprdy_i,
    gt91_drprdy_i,
    gt92_drprdy_i,
    gt93_drprdy_i,
    gt94_drprdy_i,
    gt95_drprdy_i,
    gt96_drprdy_i,
    gt97_drprdy_i,
    gt98_drprdy_i,
    gt99_drprdy_i,
    gt100_drprdy_i,
    gt101_drprdy_i,
    gt102_drprdy_i,
    gt103_drprdy_i,
    gt104_drprdy_i,
    gt105_drprdy_i,
    gt106_drprdy_i,
    gt107_drprdy_i,
    gt108_drprdy_i,
    gt109_drprdy_i,
    gt110_drprdy_i,
    gt111_drprdy_i,
    gt112_drprdy_i,
    gt113_drprdy_i,
    gt114_drprdy_i,
    gt115_drprdy_i,
    gt116_drprdy_i,
    gt117_drprdy_i,
    gt118_drprdy_i,
    gt119_drprdy_i,
    gt120_drprdy_i,
    gt121_drprdy_i,
    gt122_drprdy_i,
    gt123_drprdy_i,
    gt124_drprdy_i,
    gt125_drprdy_i,
    gt126_drprdy_i,
    gt127_drprdy_i,
    gt128_drprdy_i,
    gt129_drprdy_i,
    gt130_drprdy_i,
    gt131_drprdy_i,
    gt0_drpdo_i,
    gt1_drpdo_i,
    gt2_drpdo_i,
    gt3_drpdo_i,
    gt4_drpdo_i,
    gt5_drpdo_i,
    gt6_drpdo_i,
    gt7_drpdo_i,
    gt8_drpdo_i,
    gt9_drpdo_i,
    gt10_drpdo_i,
    gt11_drpdo_i,
    gt12_drpdo_i,
    gt13_drpdo_i,
    gt14_drpdo_i,
    gt15_drpdo_i,
    gt16_drpdo_i,
    gt17_drpdo_i,
    gt18_drpdo_i,
    gt19_drpdo_i,
    gt20_drpdo_i,
    gt21_drpdo_i,
    gt22_drpdo_i,
    gt23_drpdo_i,
    gt24_drpdo_i,
    gt25_drpdo_i,
    gt26_drpdo_i,
    gt27_drpdo_i,
    gt28_drpdo_i,
    gt29_drpdo_i,
    gt30_drpdo_i,
    gt31_drpdo_i,
    gt32_drpdo_i,
    gt33_drpdo_i,
    gt34_drpdo_i,
    gt35_drpdo_i,
    gt36_drpdo_i,
    gt37_drpdo_i,
    gt38_drpdo_i,
    gt39_drpdo_i,
    gt40_drpdo_i,
    gt41_drpdo_i,
    gt42_drpdo_i,
    gt43_drpdo_i,
    gt44_drpdo_i,
    gt45_drpdo_i,
    gt46_drpdo_i,
    gt47_drpdo_i,
    gt48_drpdo_i,
    gt49_drpdo_i,
    gt50_drpdo_i,
    gt51_drpdo_i,
    gt52_drpdo_i,
    gt53_drpdo_i,
    gt54_drpdo_i,
    gt55_drpdo_i,
    gt56_drpdo_i,
    gt57_drpdo_i,
    gt58_drpdo_i,
    gt59_drpdo_i,
    gt60_drpdo_i,
    gt61_drpdo_i,
    gt62_drpdo_i,
    gt63_drpdo_i,
    gt64_drpdo_i,
    gt65_drpdo_i,
    gt66_drpdo_i,
    gt67_drpdo_i,
    gt68_drpdo_i,
    gt69_drpdo_i,
    gt70_drpdo_i,
    gt71_drpdo_i,
    gt72_drpdo_i,
    gt73_drpdo_i,
    gt74_drpdo_i,
    gt75_drpdo_i,
    gt76_drpdo_i,
    gt77_drpdo_i,
    gt78_drpdo_i,
    gt79_drpdo_i,
    gt80_drpdo_i,
    gt81_drpdo_i,
    gt82_drpdo_i,
    gt83_drpdo_i,
    gt84_drpdo_i,
    gt85_drpdo_i,
    gt86_drpdo_i,
    gt87_drpdo_i,
    gt88_drpdo_i,
    gt89_drpdo_i,
    gt90_drpdo_i,
    gt91_drpdo_i,
    gt92_drpdo_i,
    gt93_drpdo_i,
    gt94_drpdo_i,
    gt95_drpdo_i,
    gt96_drpdo_i,
    gt97_drpdo_i,
    gt98_drpdo_i,
    gt99_drpdo_i,
    gt100_drpdo_i,
    gt101_drpdo_i,
    gt102_drpdo_i,
    gt103_drpdo_i,
    gt104_drpdo_i,
    gt105_drpdo_i,
    gt106_drpdo_i,
    gt107_drpdo_i,
    gt108_drpdo_i,
    gt109_drpdo_i,
    gt110_drpdo_i,
    gt111_drpdo_i,
    gt112_drpdo_i,
    gt113_drpdo_i,
    gt114_drpdo_i,
    gt115_drpdo_i,
    gt116_drpdo_i,
    gt117_drpdo_i,
    gt118_drpdo_i,
    gt119_drpdo_i,
    gt120_drpdo_i,
    gt121_drpdo_i,
    gt122_drpdo_i,
    gt123_drpdo_i,
    gt124_drpdo_i,
    gt125_drpdo_i,
    gt126_drpdo_i,
    gt127_drpdo_i,
    gt128_drpdo_i,
    gt129_drpdo_i,
    gt130_drpdo_i,
    gt131_drpdo_i,
    rxrate_i,
    txdiffctrl_i,
    txprecursor_i,
    txpostcursor_i,
    rxlpmen_i,
    rxoutclk_i,
    clk);
  output [1:0]drpclk_o;
  output gt0_drpen_o;
  output gt1_drpen_o;
  output gt2_drpen_o;
  output gt3_drpen_o;
  output gt4_drpen_o;
  output gt5_drpen_o;
  output gt6_drpen_o;
  output gt7_drpen_o;
  output gt8_drpen_o;
  output gt9_drpen_o;
  output gt10_drpen_o;
  output gt11_drpen_o;
  output gt12_drpen_o;
  output gt13_drpen_o;
  output gt14_drpen_o;
  output gt15_drpen_o;
  output gt16_drpen_o;
  output gt17_drpen_o;
  output gt18_drpen_o;
  output gt19_drpen_o;
  output gt20_drpen_o;
  output gt21_drpen_o;
  output gt22_drpen_o;
  output gt23_drpen_o;
  output gt24_drpen_o;
  output gt25_drpen_o;
  output gt26_drpen_o;
  output gt27_drpen_o;
  output gt28_drpen_o;
  output gt29_drpen_o;
  output gt30_drpen_o;
  output gt31_drpen_o;
  output gt32_drpen_o;
  output gt33_drpen_o;
  output gt34_drpen_o;
  output gt35_drpen_o;
  output gt36_drpen_o;
  output gt37_drpen_o;
  output gt38_drpen_o;
  output gt39_drpen_o;
  output gt40_drpen_o;
  output gt41_drpen_o;
  output gt42_drpen_o;
  output gt43_drpen_o;
  output gt44_drpen_o;
  output gt45_drpen_o;
  output gt46_drpen_o;
  output gt47_drpen_o;
  output gt48_drpen_o;
  output gt49_drpen_o;
  output gt50_drpen_o;
  output gt51_drpen_o;
  output gt52_drpen_o;
  output gt53_drpen_o;
  output gt54_drpen_o;
  output gt55_drpen_o;
  output gt56_drpen_o;
  output gt57_drpen_o;
  output gt58_drpen_o;
  output gt59_drpen_o;
  output gt60_drpen_o;
  output gt61_drpen_o;
  output gt62_drpen_o;
  output gt63_drpen_o;
  output gt64_drpen_o;
  output gt65_drpen_o;
  output gt66_drpen_o;
  output gt67_drpen_o;
  output gt68_drpen_o;
  output gt69_drpen_o;
  output gt70_drpen_o;
  output gt71_drpen_o;
  output gt72_drpen_o;
  output gt73_drpen_o;
  output gt74_drpen_o;
  output gt75_drpen_o;
  output gt76_drpen_o;
  output gt77_drpen_o;
  output gt78_drpen_o;
  output gt79_drpen_o;
  output gt80_drpen_o;
  output gt81_drpen_o;
  output gt82_drpen_o;
  output gt83_drpen_o;
  output gt84_drpen_o;
  output gt85_drpen_o;
  output gt86_drpen_o;
  output gt87_drpen_o;
  output gt88_drpen_o;
  output gt89_drpen_o;
  output gt90_drpen_o;
  output gt91_drpen_o;
  output gt92_drpen_o;
  output gt93_drpen_o;
  output gt94_drpen_o;
  output gt95_drpen_o;
  output gt96_drpen_o;
  output gt97_drpen_o;
  output gt98_drpen_o;
  output gt99_drpen_o;
  output gt100_drpen_o;
  output gt101_drpen_o;
  output gt102_drpen_o;
  output gt103_drpen_o;
  output gt104_drpen_o;
  output gt105_drpen_o;
  output gt106_drpen_o;
  output gt107_drpen_o;
  output gt108_drpen_o;
  output gt109_drpen_o;
  output gt110_drpen_o;
  output gt111_drpen_o;
  output gt112_drpen_o;
  output gt113_drpen_o;
  output gt114_drpen_o;
  output gt115_drpen_o;
  output gt116_drpen_o;
  output gt117_drpen_o;
  output gt118_drpen_o;
  output gt119_drpen_o;
  output gt120_drpen_o;
  output gt121_drpen_o;
  output gt122_drpen_o;
  output gt123_drpen_o;
  output gt124_drpen_o;
  output gt125_drpen_o;
  output gt126_drpen_o;
  output gt127_drpen_o;
  output gt128_drpen_o;
  output gt129_drpen_o;
  output gt130_drpen_o;
  output gt131_drpen_o;
  output gt0_drpwe_o;
  output gt1_drpwe_o;
  output gt2_drpwe_o;
  output gt3_drpwe_o;
  output gt4_drpwe_o;
  output gt5_drpwe_o;
  output gt6_drpwe_o;
  output gt7_drpwe_o;
  output gt8_drpwe_o;
  output gt9_drpwe_o;
  output gt10_drpwe_o;
  output gt11_drpwe_o;
  output gt12_drpwe_o;
  output gt13_drpwe_o;
  output gt14_drpwe_o;
  output gt15_drpwe_o;
  output gt16_drpwe_o;
  output gt17_drpwe_o;
  output gt18_drpwe_o;
  output gt19_drpwe_o;
  output gt20_drpwe_o;
  output gt21_drpwe_o;
  output gt22_drpwe_o;
  output gt23_drpwe_o;
  output gt24_drpwe_o;
  output gt25_drpwe_o;
  output gt26_drpwe_o;
  output gt27_drpwe_o;
  output gt28_drpwe_o;
  output gt29_drpwe_o;
  output gt30_drpwe_o;
  output gt31_drpwe_o;
  output gt32_drpwe_o;
  output gt33_drpwe_o;
  output gt34_drpwe_o;
  output gt35_drpwe_o;
  output gt36_drpwe_o;
  output gt37_drpwe_o;
  output gt38_drpwe_o;
  output gt39_drpwe_o;
  output gt40_drpwe_o;
  output gt41_drpwe_o;
  output gt42_drpwe_o;
  output gt43_drpwe_o;
  output gt44_drpwe_o;
  output gt45_drpwe_o;
  output gt46_drpwe_o;
  output gt47_drpwe_o;
  output gt48_drpwe_o;
  output gt49_drpwe_o;
  output gt50_drpwe_o;
  output gt51_drpwe_o;
  output gt52_drpwe_o;
  output gt53_drpwe_o;
  output gt54_drpwe_o;
  output gt55_drpwe_o;
  output gt56_drpwe_o;
  output gt57_drpwe_o;
  output gt58_drpwe_o;
  output gt59_drpwe_o;
  output gt60_drpwe_o;
  output gt61_drpwe_o;
  output gt62_drpwe_o;
  output gt63_drpwe_o;
  output gt64_drpwe_o;
  output gt65_drpwe_o;
  output gt66_drpwe_o;
  output gt67_drpwe_o;
  output gt68_drpwe_o;
  output gt69_drpwe_o;
  output gt70_drpwe_o;
  output gt71_drpwe_o;
  output gt72_drpwe_o;
  output gt73_drpwe_o;
  output gt74_drpwe_o;
  output gt75_drpwe_o;
  output gt76_drpwe_o;
  output gt77_drpwe_o;
  output gt78_drpwe_o;
  output gt79_drpwe_o;
  output gt80_drpwe_o;
  output gt81_drpwe_o;
  output gt82_drpwe_o;
  output gt83_drpwe_o;
  output gt84_drpwe_o;
  output gt85_drpwe_o;
  output gt86_drpwe_o;
  output gt87_drpwe_o;
  output gt88_drpwe_o;
  output gt89_drpwe_o;
  output gt90_drpwe_o;
  output gt91_drpwe_o;
  output gt92_drpwe_o;
  output gt93_drpwe_o;
  output gt94_drpwe_o;
  output gt95_drpwe_o;
  output gt96_drpwe_o;
  output gt97_drpwe_o;
  output gt98_drpwe_o;
  output gt99_drpwe_o;
  output gt100_drpwe_o;
  output gt101_drpwe_o;
  output gt102_drpwe_o;
  output gt103_drpwe_o;
  output gt104_drpwe_o;
  output gt105_drpwe_o;
  output gt106_drpwe_o;
  output gt107_drpwe_o;
  output gt108_drpwe_o;
  output gt109_drpwe_o;
  output gt110_drpwe_o;
  output gt111_drpwe_o;
  output gt112_drpwe_o;
  output gt113_drpwe_o;
  output gt114_drpwe_o;
  output gt115_drpwe_o;
  output gt116_drpwe_o;
  output gt117_drpwe_o;
  output gt118_drpwe_o;
  output gt119_drpwe_o;
  output gt120_drpwe_o;
  output gt121_drpwe_o;
  output gt122_drpwe_o;
  output gt123_drpwe_o;
  output gt124_drpwe_o;
  output gt125_drpwe_o;
  output gt126_drpwe_o;
  output gt127_drpwe_o;
  output gt128_drpwe_o;
  output gt129_drpwe_o;
  output gt130_drpwe_o;
  output gt131_drpwe_o;
  output [9:0]gt0_drpaddr_o;
  output [9:0]gt1_drpaddr_o;
  output [9:0]gt2_drpaddr_o;
  output [9:0]gt3_drpaddr_o;
  output [9:0]gt4_drpaddr_o;
  output [9:0]gt5_drpaddr_o;
  output [9:0]gt6_drpaddr_o;
  output [9:0]gt7_drpaddr_o;
  output [9:0]gt8_drpaddr_o;
  output [9:0]gt9_drpaddr_o;
  output [9:0]gt10_drpaddr_o;
  output [9:0]gt11_drpaddr_o;
  output [9:0]gt12_drpaddr_o;
  output [9:0]gt13_drpaddr_o;
  output [9:0]gt14_drpaddr_o;
  output [9:0]gt15_drpaddr_o;
  output [9:0]gt16_drpaddr_o;
  output [9:0]gt17_drpaddr_o;
  output [9:0]gt18_drpaddr_o;
  output [9:0]gt19_drpaddr_o;
  output [9:0]gt20_drpaddr_o;
  output [9:0]gt21_drpaddr_o;
  output [9:0]gt22_drpaddr_o;
  output [9:0]gt23_drpaddr_o;
  output [9:0]gt24_drpaddr_o;
  output [9:0]gt25_drpaddr_o;
  output [9:0]gt26_drpaddr_o;
  output [9:0]gt27_drpaddr_o;
  output [9:0]gt28_drpaddr_o;
  output [9:0]gt29_drpaddr_o;
  output [9:0]gt30_drpaddr_o;
  output [9:0]gt31_drpaddr_o;
  output [9:0]gt32_drpaddr_o;
  output [9:0]gt33_drpaddr_o;
  output [9:0]gt34_drpaddr_o;
  output [9:0]gt35_drpaddr_o;
  output [9:0]gt36_drpaddr_o;
  output [9:0]gt37_drpaddr_o;
  output [9:0]gt38_drpaddr_o;
  output [9:0]gt39_drpaddr_o;
  output [9:0]gt40_drpaddr_o;
  output [9:0]gt41_drpaddr_o;
  output [9:0]gt42_drpaddr_o;
  output [9:0]gt43_drpaddr_o;
  output [9:0]gt44_drpaddr_o;
  output [9:0]gt45_drpaddr_o;
  output [9:0]gt46_drpaddr_o;
  output [9:0]gt47_drpaddr_o;
  output [9:0]gt48_drpaddr_o;
  output [9:0]gt49_drpaddr_o;
  output [9:0]gt50_drpaddr_o;
  output [9:0]gt51_drpaddr_o;
  output [9:0]gt52_drpaddr_o;
  output [9:0]gt53_drpaddr_o;
  output [9:0]gt54_drpaddr_o;
  output [9:0]gt55_drpaddr_o;
  output [9:0]gt56_drpaddr_o;
  output [9:0]gt57_drpaddr_o;
  output [9:0]gt58_drpaddr_o;
  output [9:0]gt59_drpaddr_o;
  output [9:0]gt60_drpaddr_o;
  output [9:0]gt61_drpaddr_o;
  output [9:0]gt62_drpaddr_o;
  output [9:0]gt63_drpaddr_o;
  output [9:0]gt64_drpaddr_o;
  output [9:0]gt65_drpaddr_o;
  output [9:0]gt66_drpaddr_o;
  output [9:0]gt67_drpaddr_o;
  output [9:0]gt68_drpaddr_o;
  output [9:0]gt69_drpaddr_o;
  output [9:0]gt70_drpaddr_o;
  output [9:0]gt71_drpaddr_o;
  output [9:0]gt72_drpaddr_o;
  output [9:0]gt73_drpaddr_o;
  output [9:0]gt74_drpaddr_o;
  output [9:0]gt75_drpaddr_o;
  output [9:0]gt76_drpaddr_o;
  output [9:0]gt77_drpaddr_o;
  output [9:0]gt78_drpaddr_o;
  output [9:0]gt79_drpaddr_o;
  output [9:0]gt80_drpaddr_o;
  output [9:0]gt81_drpaddr_o;
  output [9:0]gt82_drpaddr_o;
  output [9:0]gt83_drpaddr_o;
  output [9:0]gt84_drpaddr_o;
  output [9:0]gt85_drpaddr_o;
  output [9:0]gt86_drpaddr_o;
  output [9:0]gt87_drpaddr_o;
  output [9:0]gt88_drpaddr_o;
  output [9:0]gt89_drpaddr_o;
  output [9:0]gt90_drpaddr_o;
  output [9:0]gt91_drpaddr_o;
  output [9:0]gt92_drpaddr_o;
  output [9:0]gt93_drpaddr_o;
  output [9:0]gt94_drpaddr_o;
  output [9:0]gt95_drpaddr_o;
  output [9:0]gt96_drpaddr_o;
  output [9:0]gt97_drpaddr_o;
  output [9:0]gt98_drpaddr_o;
  output [9:0]gt99_drpaddr_o;
  output [9:0]gt100_drpaddr_o;
  output [9:0]gt101_drpaddr_o;
  output [9:0]gt102_drpaddr_o;
  output [9:0]gt103_drpaddr_o;
  output [9:0]gt104_drpaddr_o;
  output [9:0]gt105_drpaddr_o;
  output [9:0]gt106_drpaddr_o;
  output [9:0]gt107_drpaddr_o;
  output [9:0]gt108_drpaddr_o;
  output [9:0]gt109_drpaddr_o;
  output [9:0]gt110_drpaddr_o;
  output [9:0]gt111_drpaddr_o;
  output [9:0]gt112_drpaddr_o;
  output [9:0]gt113_drpaddr_o;
  output [9:0]gt114_drpaddr_o;
  output [9:0]gt115_drpaddr_o;
  output [9:0]gt116_drpaddr_o;
  output [9:0]gt117_drpaddr_o;
  output [9:0]gt118_drpaddr_o;
  output [9:0]gt119_drpaddr_o;
  output [9:0]gt120_drpaddr_o;
  output [9:0]gt121_drpaddr_o;
  output [9:0]gt122_drpaddr_o;
  output [9:0]gt123_drpaddr_o;
  output [9:0]gt124_drpaddr_o;
  output [9:0]gt125_drpaddr_o;
  output [9:0]gt126_drpaddr_o;
  output [9:0]gt127_drpaddr_o;
  output [9:0]gt128_drpaddr_o;
  output [9:0]gt129_drpaddr_o;
  output [9:0]gt130_drpaddr_o;
  output [9:0]gt131_drpaddr_o;
  output [15:0]gt0_drpdi_o;
  output [15:0]gt1_drpdi_o;
  output [15:0]gt2_drpdi_o;
  output [15:0]gt3_drpdi_o;
  output [15:0]gt4_drpdi_o;
  output [15:0]gt5_drpdi_o;
  output [15:0]gt6_drpdi_o;
  output [15:0]gt7_drpdi_o;
  output [15:0]gt8_drpdi_o;
  output [15:0]gt9_drpdi_o;
  output [15:0]gt10_drpdi_o;
  output [15:0]gt11_drpdi_o;
  output [15:0]gt12_drpdi_o;
  output [15:0]gt13_drpdi_o;
  output [15:0]gt14_drpdi_o;
  output [15:0]gt15_drpdi_o;
  output [15:0]gt16_drpdi_o;
  output [15:0]gt17_drpdi_o;
  output [15:0]gt18_drpdi_o;
  output [15:0]gt19_drpdi_o;
  output [15:0]gt20_drpdi_o;
  output [15:0]gt21_drpdi_o;
  output [15:0]gt22_drpdi_o;
  output [15:0]gt23_drpdi_o;
  output [15:0]gt24_drpdi_o;
  output [15:0]gt25_drpdi_o;
  output [15:0]gt26_drpdi_o;
  output [15:0]gt27_drpdi_o;
  output [15:0]gt28_drpdi_o;
  output [15:0]gt29_drpdi_o;
  output [15:0]gt30_drpdi_o;
  output [15:0]gt31_drpdi_o;
  output [15:0]gt32_drpdi_o;
  output [15:0]gt33_drpdi_o;
  output [15:0]gt34_drpdi_o;
  output [15:0]gt35_drpdi_o;
  output [15:0]gt36_drpdi_o;
  output [15:0]gt37_drpdi_o;
  output [15:0]gt38_drpdi_o;
  output [15:0]gt39_drpdi_o;
  output [15:0]gt40_drpdi_o;
  output [15:0]gt41_drpdi_o;
  output [15:0]gt42_drpdi_o;
  output [15:0]gt43_drpdi_o;
  output [15:0]gt44_drpdi_o;
  output [15:0]gt45_drpdi_o;
  output [15:0]gt46_drpdi_o;
  output [15:0]gt47_drpdi_o;
  output [15:0]gt48_drpdi_o;
  output [15:0]gt49_drpdi_o;
  output [15:0]gt50_drpdi_o;
  output [15:0]gt51_drpdi_o;
  output [15:0]gt52_drpdi_o;
  output [15:0]gt53_drpdi_o;
  output [15:0]gt54_drpdi_o;
  output [15:0]gt55_drpdi_o;
  output [15:0]gt56_drpdi_o;
  output [15:0]gt57_drpdi_o;
  output [15:0]gt58_drpdi_o;
  output [15:0]gt59_drpdi_o;
  output [15:0]gt60_drpdi_o;
  output [15:0]gt61_drpdi_o;
  output [15:0]gt62_drpdi_o;
  output [15:0]gt63_drpdi_o;
  output [15:0]gt64_drpdi_o;
  output [15:0]gt65_drpdi_o;
  output [15:0]gt66_drpdi_o;
  output [15:0]gt67_drpdi_o;
  output [15:0]gt68_drpdi_o;
  output [15:0]gt69_drpdi_o;
  output [15:0]gt70_drpdi_o;
  output [15:0]gt71_drpdi_o;
  output [15:0]gt72_drpdi_o;
  output [15:0]gt73_drpdi_o;
  output [15:0]gt74_drpdi_o;
  output [15:0]gt75_drpdi_o;
  output [15:0]gt76_drpdi_o;
  output [15:0]gt77_drpdi_o;
  output [15:0]gt78_drpdi_o;
  output [15:0]gt79_drpdi_o;
  output [15:0]gt80_drpdi_o;
  output [15:0]gt81_drpdi_o;
  output [15:0]gt82_drpdi_o;
  output [15:0]gt83_drpdi_o;
  output [15:0]gt84_drpdi_o;
  output [15:0]gt85_drpdi_o;
  output [15:0]gt86_drpdi_o;
  output [15:0]gt87_drpdi_o;
  output [15:0]gt88_drpdi_o;
  output [15:0]gt89_drpdi_o;
  output [15:0]gt90_drpdi_o;
  output [15:0]gt91_drpdi_o;
  output [15:0]gt92_drpdi_o;
  output [15:0]gt93_drpdi_o;
  output [15:0]gt94_drpdi_o;
  output [15:0]gt95_drpdi_o;
  output [15:0]gt96_drpdi_o;
  output [15:0]gt97_drpdi_o;
  output [15:0]gt98_drpdi_o;
  output [15:0]gt99_drpdi_o;
  output [15:0]gt100_drpdi_o;
  output [15:0]gt101_drpdi_o;
  output [15:0]gt102_drpdi_o;
  output [15:0]gt103_drpdi_o;
  output [15:0]gt104_drpdi_o;
  output [15:0]gt105_drpdi_o;
  output [15:0]gt106_drpdi_o;
  output [15:0]gt107_drpdi_o;
  output [15:0]gt108_drpdi_o;
  output [15:0]gt109_drpdi_o;
  output [15:0]gt110_drpdi_o;
  output [15:0]gt111_drpdi_o;
  output [15:0]gt112_drpdi_o;
  output [15:0]gt113_drpdi_o;
  output [15:0]gt114_drpdi_o;
  output [15:0]gt115_drpdi_o;
  output [15:0]gt116_drpdi_o;
  output [15:0]gt117_drpdi_o;
  output [15:0]gt118_drpdi_o;
  output [15:0]gt119_drpdi_o;
  output [15:0]gt120_drpdi_o;
  output [15:0]gt121_drpdi_o;
  output [15:0]gt122_drpdi_o;
  output [15:0]gt123_drpdi_o;
  output [15:0]gt124_drpdi_o;
  output [15:0]gt125_drpdi_o;
  output [15:0]gt126_drpdi_o;
  output [15:0]gt127_drpdi_o;
  output [15:0]gt128_drpdi_o;
  output [15:0]gt129_drpdi_o;
  output [15:0]gt130_drpdi_o;
  output [15:0]gt131_drpdi_o;
  output [1:0]eyescanreset_o;
  output [5:0]rxrate_o;
  output [9:0]txdiffctrl_o;
  output [9:0]txprecursor_o;
  output [9:0]txpostcursor_o;
  output [1:0]rxlpmen_o;
  output [16:0]sl_oport0;
  output [16:0]sl_oport1;
  output [16:0]sl_oport2;
  output [16:0]sl_oport3;
  output [16:0]sl_oport4;
  output [16:0]sl_oport5;
  output [16:0]sl_oport6;
  output [16:0]sl_oport7;
  output [16:0]sl_oport8;
  output [16:0]sl_oport9;
  output [16:0]sl_oport10;
  output [16:0]sl_oport11;
  output [16:0]sl_oport12;
  output [16:0]sl_oport13;
  output [16:0]sl_oport14;
  output [16:0]sl_oport15;
  output [16:0]sl_oport16;
  output [16:0]sl_oport17;
  output [16:0]sl_oport18;
  output [16:0]sl_oport19;
  output [16:0]sl_oport20;
  output [16:0]sl_oport21;
  output [16:0]sl_oport22;
  output [16:0]sl_oport23;
  output [16:0]sl_oport24;
  output [16:0]sl_oport25;
  output [16:0]sl_oport26;
  output [16:0]sl_oport27;
  output [16:0]sl_oport28;
  output [16:0]sl_oport29;
  output [16:0]sl_oport30;
  output [16:0]sl_oport31;
  output [16:0]sl_oport32;
  output [16:0]sl_oport33;
  output [16:0]sl_oport34;
  output [16:0]sl_oport35;
  output [16:0]sl_oport36;
  output [16:0]sl_oport37;
  output [16:0]sl_oport38;
  output [16:0]sl_oport39;
  output [16:0]sl_oport40;
  output [16:0]sl_oport41;
  output [16:0]sl_oport42;
  output [16:0]sl_oport43;
  output [16:0]sl_oport44;
  output [16:0]sl_oport45;
  output [16:0]sl_oport46;
  output [16:0]sl_oport47;
  output [16:0]sl_oport48;
  output [16:0]sl_oport49;
  output [16:0]sl_oport50;
  output [16:0]sl_oport51;
  output [16:0]sl_oport52;
  output [16:0]sl_oport53;
  output [16:0]sl_oport54;
  output [16:0]sl_oport55;
  output [16:0]sl_oport56;
  output [16:0]sl_oport57;
  output [16:0]sl_oport58;
  output [16:0]sl_oport59;
  output [16:0]sl_oport60;
  output [16:0]sl_oport61;
  output [16:0]sl_oport62;
  output [16:0]sl_oport63;
  output [16:0]sl_oport64;
  output [16:0]sl_oport65;
  output [16:0]sl_oport66;
  output [16:0]sl_oport67;
  output [16:0]sl_oport68;
  output [16:0]sl_oport69;
  output [16:0]sl_oport70;
  output [16:0]sl_oport71;
  output [16:0]sl_oport72;
  output [16:0]sl_oport73;
  output [16:0]sl_oport74;
  output [16:0]sl_oport75;
  output [16:0]sl_oport76;
  output [16:0]sl_oport77;
  output [16:0]sl_oport78;
  output [16:0]sl_oport79;
  output [16:0]sl_oport80;
  output [16:0]sl_oport81;
  output [16:0]sl_oport82;
  output [16:0]sl_oport83;
  output [16:0]sl_oport84;
  output [16:0]sl_oport85;
  output [16:0]sl_oport86;
  output [16:0]sl_oport87;
  output [16:0]sl_oport88;
  output [16:0]sl_oport89;
  output [16:0]sl_oport90;
  output [16:0]sl_oport91;
  output [16:0]sl_oport92;
  output [16:0]sl_oport93;
  output [16:0]sl_oport94;
  output [16:0]sl_oport95;
  output [16:0]sl_oport96;
  output [16:0]sl_oport97;
  output [16:0]sl_oport98;
  output [16:0]sl_oport99;
  output [16:0]sl_oport100;
  output [16:0]sl_oport101;
  output [16:0]sl_oport102;
  output [16:0]sl_oport103;
  output [16:0]sl_oport104;
  output [16:0]sl_oport105;
  output [16:0]sl_oport106;
  output [16:0]sl_oport107;
  output [16:0]sl_oport108;
  output [16:0]sl_oport109;
  output [16:0]sl_oport110;
  output [16:0]sl_oport111;
  output [16:0]sl_oport112;
  output [16:0]sl_oport113;
  output [16:0]sl_oport114;
  output [16:0]sl_oport115;
  output [16:0]sl_oport116;
  output [16:0]sl_oport117;
  output [16:0]sl_oport118;
  output [16:0]sl_oport119;
  output [16:0]sl_oport120;
  output [16:0]sl_oport121;
  output [16:0]sl_oport122;
  output [16:0]sl_oport123;
  output [16:0]sl_oport124;
  output [16:0]sl_oport125;
  output [16:0]sl_oport126;
  output [16:0]sl_oport127;
  output [16:0]sl_oport128;
  output [16:0]sl_oport129;
  output [16:0]sl_oport130;
  output [16:0]sl_oport131;
  input [36:0]sl_iport0;
  input [36:0]sl_iport1;
  input [36:0]sl_iport2;
  input [36:0]sl_iport3;
  input [36:0]sl_iport4;
  input [36:0]sl_iport5;
  input [36:0]sl_iport6;
  input [36:0]sl_iport7;
  input [36:0]sl_iport8;
  input [36:0]sl_iport9;
  input [36:0]sl_iport10;
  input [36:0]sl_iport11;
  input [36:0]sl_iport12;
  input [36:0]sl_iport13;
  input [36:0]sl_iport14;
  input [36:0]sl_iport15;
  input [36:0]sl_iport16;
  input [36:0]sl_iport17;
  input [36:0]sl_iport18;
  input [36:0]sl_iport19;
  input [36:0]sl_iport20;
  input [36:0]sl_iport21;
  input [36:0]sl_iport22;
  input [36:0]sl_iport23;
  input [36:0]sl_iport24;
  input [36:0]sl_iport25;
  input [36:0]sl_iport26;
  input [36:0]sl_iport27;
  input [36:0]sl_iport28;
  input [36:0]sl_iport29;
  input [36:0]sl_iport30;
  input [36:0]sl_iport31;
  input [36:0]sl_iport32;
  input [36:0]sl_iport33;
  input [36:0]sl_iport34;
  input [36:0]sl_iport35;
  input [36:0]sl_iport36;
  input [36:0]sl_iport37;
  input [36:0]sl_iport38;
  input [36:0]sl_iport39;
  input [36:0]sl_iport40;
  input [36:0]sl_iport41;
  input [36:0]sl_iport42;
  input [36:0]sl_iport43;
  input [36:0]sl_iport44;
  input [36:0]sl_iport45;
  input [36:0]sl_iport46;
  input [36:0]sl_iport47;
  input [36:0]sl_iport48;
  input [36:0]sl_iport49;
  input [36:0]sl_iport50;
  input [36:0]sl_iport51;
  input [36:0]sl_iport52;
  input [36:0]sl_iport53;
  input [36:0]sl_iport54;
  input [36:0]sl_iport55;
  input [36:0]sl_iport56;
  input [36:0]sl_iport57;
  input [36:0]sl_iport58;
  input [36:0]sl_iport59;
  input [36:0]sl_iport60;
  input [36:0]sl_iport61;
  input [36:0]sl_iport62;
  input [36:0]sl_iport63;
  input [36:0]sl_iport64;
  input [36:0]sl_iport65;
  input [36:0]sl_iport66;
  input [36:0]sl_iport67;
  input [36:0]sl_iport68;
  input [36:0]sl_iport69;
  input [36:0]sl_iport70;
  input [36:0]sl_iport71;
  input [36:0]sl_iport72;
  input [36:0]sl_iport73;
  input [36:0]sl_iport74;
  input [36:0]sl_iport75;
  input [36:0]sl_iport76;
  input [36:0]sl_iport77;
  input [36:0]sl_iport78;
  input [36:0]sl_iport79;
  input [36:0]sl_iport80;
  input [36:0]sl_iport81;
  input [36:0]sl_iport82;
  input [36:0]sl_iport83;
  input [36:0]sl_iport84;
  input [36:0]sl_iport85;
  input [36:0]sl_iport86;
  input [36:0]sl_iport87;
  input [36:0]sl_iport88;
  input [36:0]sl_iport89;
  input [36:0]sl_iport90;
  input [36:0]sl_iport91;
  input [36:0]sl_iport92;
  input [36:0]sl_iport93;
  input [36:0]sl_iport94;
  input [36:0]sl_iport95;
  input [36:0]sl_iport96;
  input [36:0]sl_iport97;
  input [36:0]sl_iport98;
  input [36:0]sl_iport99;
  input [36:0]sl_iport100;
  input [36:0]sl_iport101;
  input [36:0]sl_iport102;
  input [36:0]sl_iport103;
  input [36:0]sl_iport104;
  input [36:0]sl_iport105;
  input [36:0]sl_iport106;
  input [36:0]sl_iport107;
  input [36:0]sl_iport108;
  input [36:0]sl_iport109;
  input [36:0]sl_iport110;
  input [36:0]sl_iport111;
  input [36:0]sl_iport112;
  input [36:0]sl_iport113;
  input [36:0]sl_iport114;
  input [36:0]sl_iport115;
  input [36:0]sl_iport116;
  input [36:0]sl_iport117;
  input [36:0]sl_iport118;
  input [36:0]sl_iport119;
  input [36:0]sl_iport120;
  input [36:0]sl_iport121;
  input [36:0]sl_iport122;
  input [36:0]sl_iport123;
  input [36:0]sl_iport124;
  input [36:0]sl_iport125;
  input [36:0]sl_iport126;
  input [36:0]sl_iport127;
  input [36:0]sl_iport128;
  input [36:0]sl_iport129;
  input [36:0]sl_iport130;
  input [36:0]sl_iport131;
  input [1:0]drpclk_i;
  input gt0_drprdy_i;
  input gt1_drprdy_i;
  input gt2_drprdy_i;
  input gt3_drprdy_i;
  input gt4_drprdy_i;
  input gt5_drprdy_i;
  input gt6_drprdy_i;
  input gt7_drprdy_i;
  input gt8_drprdy_i;
  input gt9_drprdy_i;
  input gt10_drprdy_i;
  input gt11_drprdy_i;
  input gt12_drprdy_i;
  input gt13_drprdy_i;
  input gt14_drprdy_i;
  input gt15_drprdy_i;
  input gt16_drprdy_i;
  input gt17_drprdy_i;
  input gt18_drprdy_i;
  input gt19_drprdy_i;
  input gt20_drprdy_i;
  input gt21_drprdy_i;
  input gt22_drprdy_i;
  input gt23_drprdy_i;
  input gt24_drprdy_i;
  input gt25_drprdy_i;
  input gt26_drprdy_i;
  input gt27_drprdy_i;
  input gt28_drprdy_i;
  input gt29_drprdy_i;
  input gt30_drprdy_i;
  input gt31_drprdy_i;
  input gt32_drprdy_i;
  input gt33_drprdy_i;
  input gt34_drprdy_i;
  input gt35_drprdy_i;
  input gt36_drprdy_i;
  input gt37_drprdy_i;
  input gt38_drprdy_i;
  input gt39_drprdy_i;
  input gt40_drprdy_i;
  input gt41_drprdy_i;
  input gt42_drprdy_i;
  input gt43_drprdy_i;
  input gt44_drprdy_i;
  input gt45_drprdy_i;
  input gt46_drprdy_i;
  input gt47_drprdy_i;
  input gt48_drprdy_i;
  input gt49_drprdy_i;
  input gt50_drprdy_i;
  input gt51_drprdy_i;
  input gt52_drprdy_i;
  input gt53_drprdy_i;
  input gt54_drprdy_i;
  input gt55_drprdy_i;
  input gt56_drprdy_i;
  input gt57_drprdy_i;
  input gt58_drprdy_i;
  input gt59_drprdy_i;
  input gt60_drprdy_i;
  input gt61_drprdy_i;
  input gt62_drprdy_i;
  input gt63_drprdy_i;
  input gt64_drprdy_i;
  input gt65_drprdy_i;
  input gt66_drprdy_i;
  input gt67_drprdy_i;
  input gt68_drprdy_i;
  input gt69_drprdy_i;
  input gt70_drprdy_i;
  input gt71_drprdy_i;
  input gt72_drprdy_i;
  input gt73_drprdy_i;
  input gt74_drprdy_i;
  input gt75_drprdy_i;
  input gt76_drprdy_i;
  input gt77_drprdy_i;
  input gt78_drprdy_i;
  input gt79_drprdy_i;
  input gt80_drprdy_i;
  input gt81_drprdy_i;
  input gt82_drprdy_i;
  input gt83_drprdy_i;
  input gt84_drprdy_i;
  input gt85_drprdy_i;
  input gt86_drprdy_i;
  input gt87_drprdy_i;
  input gt88_drprdy_i;
  input gt89_drprdy_i;
  input gt90_drprdy_i;
  input gt91_drprdy_i;
  input gt92_drprdy_i;
  input gt93_drprdy_i;
  input gt94_drprdy_i;
  input gt95_drprdy_i;
  input gt96_drprdy_i;
  input gt97_drprdy_i;
  input gt98_drprdy_i;
  input gt99_drprdy_i;
  input gt100_drprdy_i;
  input gt101_drprdy_i;
  input gt102_drprdy_i;
  input gt103_drprdy_i;
  input gt104_drprdy_i;
  input gt105_drprdy_i;
  input gt106_drprdy_i;
  input gt107_drprdy_i;
  input gt108_drprdy_i;
  input gt109_drprdy_i;
  input gt110_drprdy_i;
  input gt111_drprdy_i;
  input gt112_drprdy_i;
  input gt113_drprdy_i;
  input gt114_drprdy_i;
  input gt115_drprdy_i;
  input gt116_drprdy_i;
  input gt117_drprdy_i;
  input gt118_drprdy_i;
  input gt119_drprdy_i;
  input gt120_drprdy_i;
  input gt121_drprdy_i;
  input gt122_drprdy_i;
  input gt123_drprdy_i;
  input gt124_drprdy_i;
  input gt125_drprdy_i;
  input gt126_drprdy_i;
  input gt127_drprdy_i;
  input gt128_drprdy_i;
  input gt129_drprdy_i;
  input gt130_drprdy_i;
  input gt131_drprdy_i;
  input [15:0]gt0_drpdo_i;
  input [15:0]gt1_drpdo_i;
  input [15:0]gt2_drpdo_i;
  input [15:0]gt3_drpdo_i;
  input [15:0]gt4_drpdo_i;
  input [15:0]gt5_drpdo_i;
  input [15:0]gt6_drpdo_i;
  input [15:0]gt7_drpdo_i;
  input [15:0]gt8_drpdo_i;
  input [15:0]gt9_drpdo_i;
  input [15:0]gt10_drpdo_i;
  input [15:0]gt11_drpdo_i;
  input [15:0]gt12_drpdo_i;
  input [15:0]gt13_drpdo_i;
  input [15:0]gt14_drpdo_i;
  input [15:0]gt15_drpdo_i;
  input [15:0]gt16_drpdo_i;
  input [15:0]gt17_drpdo_i;
  input [15:0]gt18_drpdo_i;
  input [15:0]gt19_drpdo_i;
  input [15:0]gt20_drpdo_i;
  input [15:0]gt21_drpdo_i;
  input [15:0]gt22_drpdo_i;
  input [15:0]gt23_drpdo_i;
  input [15:0]gt24_drpdo_i;
  input [15:0]gt25_drpdo_i;
  input [15:0]gt26_drpdo_i;
  input [15:0]gt27_drpdo_i;
  input [15:0]gt28_drpdo_i;
  input [15:0]gt29_drpdo_i;
  input [15:0]gt30_drpdo_i;
  input [15:0]gt31_drpdo_i;
  input [15:0]gt32_drpdo_i;
  input [15:0]gt33_drpdo_i;
  input [15:0]gt34_drpdo_i;
  input [15:0]gt35_drpdo_i;
  input [15:0]gt36_drpdo_i;
  input [15:0]gt37_drpdo_i;
  input [15:0]gt38_drpdo_i;
  input [15:0]gt39_drpdo_i;
  input [15:0]gt40_drpdo_i;
  input [15:0]gt41_drpdo_i;
  input [15:0]gt42_drpdo_i;
  input [15:0]gt43_drpdo_i;
  input [15:0]gt44_drpdo_i;
  input [15:0]gt45_drpdo_i;
  input [15:0]gt46_drpdo_i;
  input [15:0]gt47_drpdo_i;
  input [15:0]gt48_drpdo_i;
  input [15:0]gt49_drpdo_i;
  input [15:0]gt50_drpdo_i;
  input [15:0]gt51_drpdo_i;
  input [15:0]gt52_drpdo_i;
  input [15:0]gt53_drpdo_i;
  input [15:0]gt54_drpdo_i;
  input [15:0]gt55_drpdo_i;
  input [15:0]gt56_drpdo_i;
  input [15:0]gt57_drpdo_i;
  input [15:0]gt58_drpdo_i;
  input [15:0]gt59_drpdo_i;
  input [15:0]gt60_drpdo_i;
  input [15:0]gt61_drpdo_i;
  input [15:0]gt62_drpdo_i;
  input [15:0]gt63_drpdo_i;
  input [15:0]gt64_drpdo_i;
  input [15:0]gt65_drpdo_i;
  input [15:0]gt66_drpdo_i;
  input [15:0]gt67_drpdo_i;
  input [15:0]gt68_drpdo_i;
  input [15:0]gt69_drpdo_i;
  input [15:0]gt70_drpdo_i;
  input [15:0]gt71_drpdo_i;
  input [15:0]gt72_drpdo_i;
  input [15:0]gt73_drpdo_i;
  input [15:0]gt74_drpdo_i;
  input [15:0]gt75_drpdo_i;
  input [15:0]gt76_drpdo_i;
  input [15:0]gt77_drpdo_i;
  input [15:0]gt78_drpdo_i;
  input [15:0]gt79_drpdo_i;
  input [15:0]gt80_drpdo_i;
  input [15:0]gt81_drpdo_i;
  input [15:0]gt82_drpdo_i;
  input [15:0]gt83_drpdo_i;
  input [15:0]gt84_drpdo_i;
  input [15:0]gt85_drpdo_i;
  input [15:0]gt86_drpdo_i;
  input [15:0]gt87_drpdo_i;
  input [15:0]gt88_drpdo_i;
  input [15:0]gt89_drpdo_i;
  input [15:0]gt90_drpdo_i;
  input [15:0]gt91_drpdo_i;
  input [15:0]gt92_drpdo_i;
  input [15:0]gt93_drpdo_i;
  input [15:0]gt94_drpdo_i;
  input [15:0]gt95_drpdo_i;
  input [15:0]gt96_drpdo_i;
  input [15:0]gt97_drpdo_i;
  input [15:0]gt98_drpdo_i;
  input [15:0]gt99_drpdo_i;
  input [15:0]gt100_drpdo_i;
  input [15:0]gt101_drpdo_i;
  input [15:0]gt102_drpdo_i;
  input [15:0]gt103_drpdo_i;
  input [15:0]gt104_drpdo_i;
  input [15:0]gt105_drpdo_i;
  input [15:0]gt106_drpdo_i;
  input [15:0]gt107_drpdo_i;
  input [15:0]gt108_drpdo_i;
  input [15:0]gt109_drpdo_i;
  input [15:0]gt110_drpdo_i;
  input [15:0]gt111_drpdo_i;
  input [15:0]gt112_drpdo_i;
  input [15:0]gt113_drpdo_i;
  input [15:0]gt114_drpdo_i;
  input [15:0]gt115_drpdo_i;
  input [15:0]gt116_drpdo_i;
  input [15:0]gt117_drpdo_i;
  input [15:0]gt118_drpdo_i;
  input [15:0]gt119_drpdo_i;
  input [15:0]gt120_drpdo_i;
  input [15:0]gt121_drpdo_i;
  input [15:0]gt122_drpdo_i;
  input [15:0]gt123_drpdo_i;
  input [15:0]gt124_drpdo_i;
  input [15:0]gt125_drpdo_i;
  input [15:0]gt126_drpdo_i;
  input [15:0]gt127_drpdo_i;
  input [15:0]gt128_drpdo_i;
  input [15:0]gt129_drpdo_i;
  input [15:0]gt130_drpdo_i;
  input [15:0]gt131_drpdo_i;
  input [5:0]rxrate_i;
  input [9:0]txdiffctrl_i;
  input [9:0]txprecursor_i;
  input [9:0]txpostcursor_i;
  input [1:0]rxlpmen_i;
  input [1:0]rxoutclk_i;
  (* dont_touch = "true" *) input clk;

  wire \<const0> ;
  (* DONT_TOUCH *) wire clk;
  wire [1:0]drpclk_i;
  wire [1:0]drpclk_o;
  wire [1:0]eyescanreset_o;
  wire [9:0]gt0_drpaddr_o;
  wire [15:0]gt0_drpdi_o;
  wire [15:0]gt0_drpdo_i;
  wire gt0_drpen_o;
  wire gt0_drprdy_i;
  wire gt0_drpwe_o;
  wire [9:0]gt1_drpaddr_o;
  wire [15:0]gt1_drpdi_o;
  wire [15:0]gt1_drpdo_i;
  wire gt1_drpen_o;
  wire gt1_drprdy_i;
  wire gt1_drpwe_o;
  wire [33:0]mb_daddr;
  wire [1:0]mb_den;
  wire [31:0]mb_di;
  wire [31:0]mb_do;
  wire [1:0]mb_drdy;
  wire [1:0]mb_dwe;
  wire [1:0]p_0_in;
  wire [1:0]rxlpmen_i;
  wire [1:0]rxlpmen_o;
  wire [1:0]rxoutclk_i;
  wire [5:0]rxrate_i;
  wire [5:0]rxrate_o;
  wire s_IO_Addr_Strobe;
  wire [31:0]s_IO_Address;
  wire [31:0]s_IO_Read_Data;
  wire s_IO_Read_Strobe;
  wire s_IO_Ready;
  wire [31:0]s_IO_Write_Data;
  wire s_IO_Write_Strobe;
  wire [36:0]sl_iport0;
  wire [36:0]sl_iport1;
  wire [16:0]sl_oport0;
  wire [16:0]sl_oport1;
  wire [9:0]txdiffctrl_i;
  wire [9:0]txdiffctrl_o;
  wire [9:0]txpostcursor_i;
  wire [9:0]txpostcursor_o;
  wire [9:0]txprecursor_i;
  wire [9:0]txprecursor_o;

  assign gt100_drpaddr_o[9] = \<const0> ;
  assign gt100_drpaddr_o[8] = \<const0> ;
  assign gt100_drpaddr_o[7] = \<const0> ;
  assign gt100_drpaddr_o[6] = \<const0> ;
  assign gt100_drpaddr_o[5] = \<const0> ;
  assign gt100_drpaddr_o[4] = \<const0> ;
  assign gt100_drpaddr_o[3] = \<const0> ;
  assign gt100_drpaddr_o[2] = \<const0> ;
  assign gt100_drpaddr_o[1] = \<const0> ;
  assign gt100_drpaddr_o[0] = \<const0> ;
  assign gt100_drpdi_o[15] = \<const0> ;
  assign gt100_drpdi_o[14] = \<const0> ;
  assign gt100_drpdi_o[13] = \<const0> ;
  assign gt100_drpdi_o[12] = \<const0> ;
  assign gt100_drpdi_o[11] = \<const0> ;
  assign gt100_drpdi_o[10] = \<const0> ;
  assign gt100_drpdi_o[9] = \<const0> ;
  assign gt100_drpdi_o[8] = \<const0> ;
  assign gt100_drpdi_o[7] = \<const0> ;
  assign gt100_drpdi_o[6] = \<const0> ;
  assign gt100_drpdi_o[5] = \<const0> ;
  assign gt100_drpdi_o[4] = \<const0> ;
  assign gt100_drpdi_o[3] = \<const0> ;
  assign gt100_drpdi_o[2] = \<const0> ;
  assign gt100_drpdi_o[1] = \<const0> ;
  assign gt100_drpdi_o[0] = \<const0> ;
  assign gt100_drpen_o = \<const0> ;
  assign gt100_drpwe_o = \<const0> ;
  assign gt101_drpaddr_o[9] = \<const0> ;
  assign gt101_drpaddr_o[8] = \<const0> ;
  assign gt101_drpaddr_o[7] = \<const0> ;
  assign gt101_drpaddr_o[6] = \<const0> ;
  assign gt101_drpaddr_o[5] = \<const0> ;
  assign gt101_drpaddr_o[4] = \<const0> ;
  assign gt101_drpaddr_o[3] = \<const0> ;
  assign gt101_drpaddr_o[2] = \<const0> ;
  assign gt101_drpaddr_o[1] = \<const0> ;
  assign gt101_drpaddr_o[0] = \<const0> ;
  assign gt101_drpdi_o[15] = \<const0> ;
  assign gt101_drpdi_o[14] = \<const0> ;
  assign gt101_drpdi_o[13] = \<const0> ;
  assign gt101_drpdi_o[12] = \<const0> ;
  assign gt101_drpdi_o[11] = \<const0> ;
  assign gt101_drpdi_o[10] = \<const0> ;
  assign gt101_drpdi_o[9] = \<const0> ;
  assign gt101_drpdi_o[8] = \<const0> ;
  assign gt101_drpdi_o[7] = \<const0> ;
  assign gt101_drpdi_o[6] = \<const0> ;
  assign gt101_drpdi_o[5] = \<const0> ;
  assign gt101_drpdi_o[4] = \<const0> ;
  assign gt101_drpdi_o[3] = \<const0> ;
  assign gt101_drpdi_o[2] = \<const0> ;
  assign gt101_drpdi_o[1] = \<const0> ;
  assign gt101_drpdi_o[0] = \<const0> ;
  assign gt101_drpen_o = \<const0> ;
  assign gt101_drpwe_o = \<const0> ;
  assign gt102_drpaddr_o[9] = \<const0> ;
  assign gt102_drpaddr_o[8] = \<const0> ;
  assign gt102_drpaddr_o[7] = \<const0> ;
  assign gt102_drpaddr_o[6] = \<const0> ;
  assign gt102_drpaddr_o[5] = \<const0> ;
  assign gt102_drpaddr_o[4] = \<const0> ;
  assign gt102_drpaddr_o[3] = \<const0> ;
  assign gt102_drpaddr_o[2] = \<const0> ;
  assign gt102_drpaddr_o[1] = \<const0> ;
  assign gt102_drpaddr_o[0] = \<const0> ;
  assign gt102_drpdi_o[15] = \<const0> ;
  assign gt102_drpdi_o[14] = \<const0> ;
  assign gt102_drpdi_o[13] = \<const0> ;
  assign gt102_drpdi_o[12] = \<const0> ;
  assign gt102_drpdi_o[11] = \<const0> ;
  assign gt102_drpdi_o[10] = \<const0> ;
  assign gt102_drpdi_o[9] = \<const0> ;
  assign gt102_drpdi_o[8] = \<const0> ;
  assign gt102_drpdi_o[7] = \<const0> ;
  assign gt102_drpdi_o[6] = \<const0> ;
  assign gt102_drpdi_o[5] = \<const0> ;
  assign gt102_drpdi_o[4] = \<const0> ;
  assign gt102_drpdi_o[3] = \<const0> ;
  assign gt102_drpdi_o[2] = \<const0> ;
  assign gt102_drpdi_o[1] = \<const0> ;
  assign gt102_drpdi_o[0] = \<const0> ;
  assign gt102_drpen_o = \<const0> ;
  assign gt102_drpwe_o = \<const0> ;
  assign gt103_drpaddr_o[9] = \<const0> ;
  assign gt103_drpaddr_o[8] = \<const0> ;
  assign gt103_drpaddr_o[7] = \<const0> ;
  assign gt103_drpaddr_o[6] = \<const0> ;
  assign gt103_drpaddr_o[5] = \<const0> ;
  assign gt103_drpaddr_o[4] = \<const0> ;
  assign gt103_drpaddr_o[3] = \<const0> ;
  assign gt103_drpaddr_o[2] = \<const0> ;
  assign gt103_drpaddr_o[1] = \<const0> ;
  assign gt103_drpaddr_o[0] = \<const0> ;
  assign gt103_drpdi_o[15] = \<const0> ;
  assign gt103_drpdi_o[14] = \<const0> ;
  assign gt103_drpdi_o[13] = \<const0> ;
  assign gt103_drpdi_o[12] = \<const0> ;
  assign gt103_drpdi_o[11] = \<const0> ;
  assign gt103_drpdi_o[10] = \<const0> ;
  assign gt103_drpdi_o[9] = \<const0> ;
  assign gt103_drpdi_o[8] = \<const0> ;
  assign gt103_drpdi_o[7] = \<const0> ;
  assign gt103_drpdi_o[6] = \<const0> ;
  assign gt103_drpdi_o[5] = \<const0> ;
  assign gt103_drpdi_o[4] = \<const0> ;
  assign gt103_drpdi_o[3] = \<const0> ;
  assign gt103_drpdi_o[2] = \<const0> ;
  assign gt103_drpdi_o[1] = \<const0> ;
  assign gt103_drpdi_o[0] = \<const0> ;
  assign gt103_drpen_o = \<const0> ;
  assign gt103_drpwe_o = \<const0> ;
  assign gt104_drpaddr_o[9] = \<const0> ;
  assign gt104_drpaddr_o[8] = \<const0> ;
  assign gt104_drpaddr_o[7] = \<const0> ;
  assign gt104_drpaddr_o[6] = \<const0> ;
  assign gt104_drpaddr_o[5] = \<const0> ;
  assign gt104_drpaddr_o[4] = \<const0> ;
  assign gt104_drpaddr_o[3] = \<const0> ;
  assign gt104_drpaddr_o[2] = \<const0> ;
  assign gt104_drpaddr_o[1] = \<const0> ;
  assign gt104_drpaddr_o[0] = \<const0> ;
  assign gt104_drpdi_o[15] = \<const0> ;
  assign gt104_drpdi_o[14] = \<const0> ;
  assign gt104_drpdi_o[13] = \<const0> ;
  assign gt104_drpdi_o[12] = \<const0> ;
  assign gt104_drpdi_o[11] = \<const0> ;
  assign gt104_drpdi_o[10] = \<const0> ;
  assign gt104_drpdi_o[9] = \<const0> ;
  assign gt104_drpdi_o[8] = \<const0> ;
  assign gt104_drpdi_o[7] = \<const0> ;
  assign gt104_drpdi_o[6] = \<const0> ;
  assign gt104_drpdi_o[5] = \<const0> ;
  assign gt104_drpdi_o[4] = \<const0> ;
  assign gt104_drpdi_o[3] = \<const0> ;
  assign gt104_drpdi_o[2] = \<const0> ;
  assign gt104_drpdi_o[1] = \<const0> ;
  assign gt104_drpdi_o[0] = \<const0> ;
  assign gt104_drpen_o = \<const0> ;
  assign gt104_drpwe_o = \<const0> ;
  assign gt105_drpaddr_o[9] = \<const0> ;
  assign gt105_drpaddr_o[8] = \<const0> ;
  assign gt105_drpaddr_o[7] = \<const0> ;
  assign gt105_drpaddr_o[6] = \<const0> ;
  assign gt105_drpaddr_o[5] = \<const0> ;
  assign gt105_drpaddr_o[4] = \<const0> ;
  assign gt105_drpaddr_o[3] = \<const0> ;
  assign gt105_drpaddr_o[2] = \<const0> ;
  assign gt105_drpaddr_o[1] = \<const0> ;
  assign gt105_drpaddr_o[0] = \<const0> ;
  assign gt105_drpdi_o[15] = \<const0> ;
  assign gt105_drpdi_o[14] = \<const0> ;
  assign gt105_drpdi_o[13] = \<const0> ;
  assign gt105_drpdi_o[12] = \<const0> ;
  assign gt105_drpdi_o[11] = \<const0> ;
  assign gt105_drpdi_o[10] = \<const0> ;
  assign gt105_drpdi_o[9] = \<const0> ;
  assign gt105_drpdi_o[8] = \<const0> ;
  assign gt105_drpdi_o[7] = \<const0> ;
  assign gt105_drpdi_o[6] = \<const0> ;
  assign gt105_drpdi_o[5] = \<const0> ;
  assign gt105_drpdi_o[4] = \<const0> ;
  assign gt105_drpdi_o[3] = \<const0> ;
  assign gt105_drpdi_o[2] = \<const0> ;
  assign gt105_drpdi_o[1] = \<const0> ;
  assign gt105_drpdi_o[0] = \<const0> ;
  assign gt105_drpen_o = \<const0> ;
  assign gt105_drpwe_o = \<const0> ;
  assign gt106_drpaddr_o[9] = \<const0> ;
  assign gt106_drpaddr_o[8] = \<const0> ;
  assign gt106_drpaddr_o[7] = \<const0> ;
  assign gt106_drpaddr_o[6] = \<const0> ;
  assign gt106_drpaddr_o[5] = \<const0> ;
  assign gt106_drpaddr_o[4] = \<const0> ;
  assign gt106_drpaddr_o[3] = \<const0> ;
  assign gt106_drpaddr_o[2] = \<const0> ;
  assign gt106_drpaddr_o[1] = \<const0> ;
  assign gt106_drpaddr_o[0] = \<const0> ;
  assign gt106_drpdi_o[15] = \<const0> ;
  assign gt106_drpdi_o[14] = \<const0> ;
  assign gt106_drpdi_o[13] = \<const0> ;
  assign gt106_drpdi_o[12] = \<const0> ;
  assign gt106_drpdi_o[11] = \<const0> ;
  assign gt106_drpdi_o[10] = \<const0> ;
  assign gt106_drpdi_o[9] = \<const0> ;
  assign gt106_drpdi_o[8] = \<const0> ;
  assign gt106_drpdi_o[7] = \<const0> ;
  assign gt106_drpdi_o[6] = \<const0> ;
  assign gt106_drpdi_o[5] = \<const0> ;
  assign gt106_drpdi_o[4] = \<const0> ;
  assign gt106_drpdi_o[3] = \<const0> ;
  assign gt106_drpdi_o[2] = \<const0> ;
  assign gt106_drpdi_o[1] = \<const0> ;
  assign gt106_drpdi_o[0] = \<const0> ;
  assign gt106_drpen_o = \<const0> ;
  assign gt106_drpwe_o = \<const0> ;
  assign gt107_drpaddr_o[9] = \<const0> ;
  assign gt107_drpaddr_o[8] = \<const0> ;
  assign gt107_drpaddr_o[7] = \<const0> ;
  assign gt107_drpaddr_o[6] = \<const0> ;
  assign gt107_drpaddr_o[5] = \<const0> ;
  assign gt107_drpaddr_o[4] = \<const0> ;
  assign gt107_drpaddr_o[3] = \<const0> ;
  assign gt107_drpaddr_o[2] = \<const0> ;
  assign gt107_drpaddr_o[1] = \<const0> ;
  assign gt107_drpaddr_o[0] = \<const0> ;
  assign gt107_drpdi_o[15] = \<const0> ;
  assign gt107_drpdi_o[14] = \<const0> ;
  assign gt107_drpdi_o[13] = \<const0> ;
  assign gt107_drpdi_o[12] = \<const0> ;
  assign gt107_drpdi_o[11] = \<const0> ;
  assign gt107_drpdi_o[10] = \<const0> ;
  assign gt107_drpdi_o[9] = \<const0> ;
  assign gt107_drpdi_o[8] = \<const0> ;
  assign gt107_drpdi_o[7] = \<const0> ;
  assign gt107_drpdi_o[6] = \<const0> ;
  assign gt107_drpdi_o[5] = \<const0> ;
  assign gt107_drpdi_o[4] = \<const0> ;
  assign gt107_drpdi_o[3] = \<const0> ;
  assign gt107_drpdi_o[2] = \<const0> ;
  assign gt107_drpdi_o[1] = \<const0> ;
  assign gt107_drpdi_o[0] = \<const0> ;
  assign gt107_drpen_o = \<const0> ;
  assign gt107_drpwe_o = \<const0> ;
  assign gt108_drpaddr_o[9] = \<const0> ;
  assign gt108_drpaddr_o[8] = \<const0> ;
  assign gt108_drpaddr_o[7] = \<const0> ;
  assign gt108_drpaddr_o[6] = \<const0> ;
  assign gt108_drpaddr_o[5] = \<const0> ;
  assign gt108_drpaddr_o[4] = \<const0> ;
  assign gt108_drpaddr_o[3] = \<const0> ;
  assign gt108_drpaddr_o[2] = \<const0> ;
  assign gt108_drpaddr_o[1] = \<const0> ;
  assign gt108_drpaddr_o[0] = \<const0> ;
  assign gt108_drpdi_o[15] = \<const0> ;
  assign gt108_drpdi_o[14] = \<const0> ;
  assign gt108_drpdi_o[13] = \<const0> ;
  assign gt108_drpdi_o[12] = \<const0> ;
  assign gt108_drpdi_o[11] = \<const0> ;
  assign gt108_drpdi_o[10] = \<const0> ;
  assign gt108_drpdi_o[9] = \<const0> ;
  assign gt108_drpdi_o[8] = \<const0> ;
  assign gt108_drpdi_o[7] = \<const0> ;
  assign gt108_drpdi_o[6] = \<const0> ;
  assign gt108_drpdi_o[5] = \<const0> ;
  assign gt108_drpdi_o[4] = \<const0> ;
  assign gt108_drpdi_o[3] = \<const0> ;
  assign gt108_drpdi_o[2] = \<const0> ;
  assign gt108_drpdi_o[1] = \<const0> ;
  assign gt108_drpdi_o[0] = \<const0> ;
  assign gt108_drpen_o = \<const0> ;
  assign gt108_drpwe_o = \<const0> ;
  assign gt109_drpaddr_o[9] = \<const0> ;
  assign gt109_drpaddr_o[8] = \<const0> ;
  assign gt109_drpaddr_o[7] = \<const0> ;
  assign gt109_drpaddr_o[6] = \<const0> ;
  assign gt109_drpaddr_o[5] = \<const0> ;
  assign gt109_drpaddr_o[4] = \<const0> ;
  assign gt109_drpaddr_o[3] = \<const0> ;
  assign gt109_drpaddr_o[2] = \<const0> ;
  assign gt109_drpaddr_o[1] = \<const0> ;
  assign gt109_drpaddr_o[0] = \<const0> ;
  assign gt109_drpdi_o[15] = \<const0> ;
  assign gt109_drpdi_o[14] = \<const0> ;
  assign gt109_drpdi_o[13] = \<const0> ;
  assign gt109_drpdi_o[12] = \<const0> ;
  assign gt109_drpdi_o[11] = \<const0> ;
  assign gt109_drpdi_o[10] = \<const0> ;
  assign gt109_drpdi_o[9] = \<const0> ;
  assign gt109_drpdi_o[8] = \<const0> ;
  assign gt109_drpdi_o[7] = \<const0> ;
  assign gt109_drpdi_o[6] = \<const0> ;
  assign gt109_drpdi_o[5] = \<const0> ;
  assign gt109_drpdi_o[4] = \<const0> ;
  assign gt109_drpdi_o[3] = \<const0> ;
  assign gt109_drpdi_o[2] = \<const0> ;
  assign gt109_drpdi_o[1] = \<const0> ;
  assign gt109_drpdi_o[0] = \<const0> ;
  assign gt109_drpen_o = \<const0> ;
  assign gt109_drpwe_o = \<const0> ;
  assign gt10_drpaddr_o[9] = \<const0> ;
  assign gt10_drpaddr_o[8] = \<const0> ;
  assign gt10_drpaddr_o[7] = \<const0> ;
  assign gt10_drpaddr_o[6] = \<const0> ;
  assign gt10_drpaddr_o[5] = \<const0> ;
  assign gt10_drpaddr_o[4] = \<const0> ;
  assign gt10_drpaddr_o[3] = \<const0> ;
  assign gt10_drpaddr_o[2] = \<const0> ;
  assign gt10_drpaddr_o[1] = \<const0> ;
  assign gt10_drpaddr_o[0] = \<const0> ;
  assign gt10_drpdi_o[15] = \<const0> ;
  assign gt10_drpdi_o[14] = \<const0> ;
  assign gt10_drpdi_o[13] = \<const0> ;
  assign gt10_drpdi_o[12] = \<const0> ;
  assign gt10_drpdi_o[11] = \<const0> ;
  assign gt10_drpdi_o[10] = \<const0> ;
  assign gt10_drpdi_o[9] = \<const0> ;
  assign gt10_drpdi_o[8] = \<const0> ;
  assign gt10_drpdi_o[7] = \<const0> ;
  assign gt10_drpdi_o[6] = \<const0> ;
  assign gt10_drpdi_o[5] = \<const0> ;
  assign gt10_drpdi_o[4] = \<const0> ;
  assign gt10_drpdi_o[3] = \<const0> ;
  assign gt10_drpdi_o[2] = \<const0> ;
  assign gt10_drpdi_o[1] = \<const0> ;
  assign gt10_drpdi_o[0] = \<const0> ;
  assign gt10_drpen_o = \<const0> ;
  assign gt10_drpwe_o = \<const0> ;
  assign gt110_drpaddr_o[9] = \<const0> ;
  assign gt110_drpaddr_o[8] = \<const0> ;
  assign gt110_drpaddr_o[7] = \<const0> ;
  assign gt110_drpaddr_o[6] = \<const0> ;
  assign gt110_drpaddr_o[5] = \<const0> ;
  assign gt110_drpaddr_o[4] = \<const0> ;
  assign gt110_drpaddr_o[3] = \<const0> ;
  assign gt110_drpaddr_o[2] = \<const0> ;
  assign gt110_drpaddr_o[1] = \<const0> ;
  assign gt110_drpaddr_o[0] = \<const0> ;
  assign gt110_drpdi_o[15] = \<const0> ;
  assign gt110_drpdi_o[14] = \<const0> ;
  assign gt110_drpdi_o[13] = \<const0> ;
  assign gt110_drpdi_o[12] = \<const0> ;
  assign gt110_drpdi_o[11] = \<const0> ;
  assign gt110_drpdi_o[10] = \<const0> ;
  assign gt110_drpdi_o[9] = \<const0> ;
  assign gt110_drpdi_o[8] = \<const0> ;
  assign gt110_drpdi_o[7] = \<const0> ;
  assign gt110_drpdi_o[6] = \<const0> ;
  assign gt110_drpdi_o[5] = \<const0> ;
  assign gt110_drpdi_o[4] = \<const0> ;
  assign gt110_drpdi_o[3] = \<const0> ;
  assign gt110_drpdi_o[2] = \<const0> ;
  assign gt110_drpdi_o[1] = \<const0> ;
  assign gt110_drpdi_o[0] = \<const0> ;
  assign gt110_drpen_o = \<const0> ;
  assign gt110_drpwe_o = \<const0> ;
  assign gt111_drpaddr_o[9] = \<const0> ;
  assign gt111_drpaddr_o[8] = \<const0> ;
  assign gt111_drpaddr_o[7] = \<const0> ;
  assign gt111_drpaddr_o[6] = \<const0> ;
  assign gt111_drpaddr_o[5] = \<const0> ;
  assign gt111_drpaddr_o[4] = \<const0> ;
  assign gt111_drpaddr_o[3] = \<const0> ;
  assign gt111_drpaddr_o[2] = \<const0> ;
  assign gt111_drpaddr_o[1] = \<const0> ;
  assign gt111_drpaddr_o[0] = \<const0> ;
  assign gt111_drpdi_o[15] = \<const0> ;
  assign gt111_drpdi_o[14] = \<const0> ;
  assign gt111_drpdi_o[13] = \<const0> ;
  assign gt111_drpdi_o[12] = \<const0> ;
  assign gt111_drpdi_o[11] = \<const0> ;
  assign gt111_drpdi_o[10] = \<const0> ;
  assign gt111_drpdi_o[9] = \<const0> ;
  assign gt111_drpdi_o[8] = \<const0> ;
  assign gt111_drpdi_o[7] = \<const0> ;
  assign gt111_drpdi_o[6] = \<const0> ;
  assign gt111_drpdi_o[5] = \<const0> ;
  assign gt111_drpdi_o[4] = \<const0> ;
  assign gt111_drpdi_o[3] = \<const0> ;
  assign gt111_drpdi_o[2] = \<const0> ;
  assign gt111_drpdi_o[1] = \<const0> ;
  assign gt111_drpdi_o[0] = \<const0> ;
  assign gt111_drpen_o = \<const0> ;
  assign gt111_drpwe_o = \<const0> ;
  assign gt112_drpaddr_o[9] = \<const0> ;
  assign gt112_drpaddr_o[8] = \<const0> ;
  assign gt112_drpaddr_o[7] = \<const0> ;
  assign gt112_drpaddr_o[6] = \<const0> ;
  assign gt112_drpaddr_o[5] = \<const0> ;
  assign gt112_drpaddr_o[4] = \<const0> ;
  assign gt112_drpaddr_o[3] = \<const0> ;
  assign gt112_drpaddr_o[2] = \<const0> ;
  assign gt112_drpaddr_o[1] = \<const0> ;
  assign gt112_drpaddr_o[0] = \<const0> ;
  assign gt112_drpdi_o[15] = \<const0> ;
  assign gt112_drpdi_o[14] = \<const0> ;
  assign gt112_drpdi_o[13] = \<const0> ;
  assign gt112_drpdi_o[12] = \<const0> ;
  assign gt112_drpdi_o[11] = \<const0> ;
  assign gt112_drpdi_o[10] = \<const0> ;
  assign gt112_drpdi_o[9] = \<const0> ;
  assign gt112_drpdi_o[8] = \<const0> ;
  assign gt112_drpdi_o[7] = \<const0> ;
  assign gt112_drpdi_o[6] = \<const0> ;
  assign gt112_drpdi_o[5] = \<const0> ;
  assign gt112_drpdi_o[4] = \<const0> ;
  assign gt112_drpdi_o[3] = \<const0> ;
  assign gt112_drpdi_o[2] = \<const0> ;
  assign gt112_drpdi_o[1] = \<const0> ;
  assign gt112_drpdi_o[0] = \<const0> ;
  assign gt112_drpen_o = \<const0> ;
  assign gt112_drpwe_o = \<const0> ;
  assign gt113_drpaddr_o[9] = \<const0> ;
  assign gt113_drpaddr_o[8] = \<const0> ;
  assign gt113_drpaddr_o[7] = \<const0> ;
  assign gt113_drpaddr_o[6] = \<const0> ;
  assign gt113_drpaddr_o[5] = \<const0> ;
  assign gt113_drpaddr_o[4] = \<const0> ;
  assign gt113_drpaddr_o[3] = \<const0> ;
  assign gt113_drpaddr_o[2] = \<const0> ;
  assign gt113_drpaddr_o[1] = \<const0> ;
  assign gt113_drpaddr_o[0] = \<const0> ;
  assign gt113_drpdi_o[15] = \<const0> ;
  assign gt113_drpdi_o[14] = \<const0> ;
  assign gt113_drpdi_o[13] = \<const0> ;
  assign gt113_drpdi_o[12] = \<const0> ;
  assign gt113_drpdi_o[11] = \<const0> ;
  assign gt113_drpdi_o[10] = \<const0> ;
  assign gt113_drpdi_o[9] = \<const0> ;
  assign gt113_drpdi_o[8] = \<const0> ;
  assign gt113_drpdi_o[7] = \<const0> ;
  assign gt113_drpdi_o[6] = \<const0> ;
  assign gt113_drpdi_o[5] = \<const0> ;
  assign gt113_drpdi_o[4] = \<const0> ;
  assign gt113_drpdi_o[3] = \<const0> ;
  assign gt113_drpdi_o[2] = \<const0> ;
  assign gt113_drpdi_o[1] = \<const0> ;
  assign gt113_drpdi_o[0] = \<const0> ;
  assign gt113_drpen_o = \<const0> ;
  assign gt113_drpwe_o = \<const0> ;
  assign gt114_drpaddr_o[9] = \<const0> ;
  assign gt114_drpaddr_o[8] = \<const0> ;
  assign gt114_drpaddr_o[7] = \<const0> ;
  assign gt114_drpaddr_o[6] = \<const0> ;
  assign gt114_drpaddr_o[5] = \<const0> ;
  assign gt114_drpaddr_o[4] = \<const0> ;
  assign gt114_drpaddr_o[3] = \<const0> ;
  assign gt114_drpaddr_o[2] = \<const0> ;
  assign gt114_drpaddr_o[1] = \<const0> ;
  assign gt114_drpaddr_o[0] = \<const0> ;
  assign gt114_drpdi_o[15] = \<const0> ;
  assign gt114_drpdi_o[14] = \<const0> ;
  assign gt114_drpdi_o[13] = \<const0> ;
  assign gt114_drpdi_o[12] = \<const0> ;
  assign gt114_drpdi_o[11] = \<const0> ;
  assign gt114_drpdi_o[10] = \<const0> ;
  assign gt114_drpdi_o[9] = \<const0> ;
  assign gt114_drpdi_o[8] = \<const0> ;
  assign gt114_drpdi_o[7] = \<const0> ;
  assign gt114_drpdi_o[6] = \<const0> ;
  assign gt114_drpdi_o[5] = \<const0> ;
  assign gt114_drpdi_o[4] = \<const0> ;
  assign gt114_drpdi_o[3] = \<const0> ;
  assign gt114_drpdi_o[2] = \<const0> ;
  assign gt114_drpdi_o[1] = \<const0> ;
  assign gt114_drpdi_o[0] = \<const0> ;
  assign gt114_drpen_o = \<const0> ;
  assign gt114_drpwe_o = \<const0> ;
  assign gt115_drpaddr_o[9] = \<const0> ;
  assign gt115_drpaddr_o[8] = \<const0> ;
  assign gt115_drpaddr_o[7] = \<const0> ;
  assign gt115_drpaddr_o[6] = \<const0> ;
  assign gt115_drpaddr_o[5] = \<const0> ;
  assign gt115_drpaddr_o[4] = \<const0> ;
  assign gt115_drpaddr_o[3] = \<const0> ;
  assign gt115_drpaddr_o[2] = \<const0> ;
  assign gt115_drpaddr_o[1] = \<const0> ;
  assign gt115_drpaddr_o[0] = \<const0> ;
  assign gt115_drpdi_o[15] = \<const0> ;
  assign gt115_drpdi_o[14] = \<const0> ;
  assign gt115_drpdi_o[13] = \<const0> ;
  assign gt115_drpdi_o[12] = \<const0> ;
  assign gt115_drpdi_o[11] = \<const0> ;
  assign gt115_drpdi_o[10] = \<const0> ;
  assign gt115_drpdi_o[9] = \<const0> ;
  assign gt115_drpdi_o[8] = \<const0> ;
  assign gt115_drpdi_o[7] = \<const0> ;
  assign gt115_drpdi_o[6] = \<const0> ;
  assign gt115_drpdi_o[5] = \<const0> ;
  assign gt115_drpdi_o[4] = \<const0> ;
  assign gt115_drpdi_o[3] = \<const0> ;
  assign gt115_drpdi_o[2] = \<const0> ;
  assign gt115_drpdi_o[1] = \<const0> ;
  assign gt115_drpdi_o[0] = \<const0> ;
  assign gt115_drpen_o = \<const0> ;
  assign gt115_drpwe_o = \<const0> ;
  assign gt116_drpaddr_o[9] = \<const0> ;
  assign gt116_drpaddr_o[8] = \<const0> ;
  assign gt116_drpaddr_o[7] = \<const0> ;
  assign gt116_drpaddr_o[6] = \<const0> ;
  assign gt116_drpaddr_o[5] = \<const0> ;
  assign gt116_drpaddr_o[4] = \<const0> ;
  assign gt116_drpaddr_o[3] = \<const0> ;
  assign gt116_drpaddr_o[2] = \<const0> ;
  assign gt116_drpaddr_o[1] = \<const0> ;
  assign gt116_drpaddr_o[0] = \<const0> ;
  assign gt116_drpdi_o[15] = \<const0> ;
  assign gt116_drpdi_o[14] = \<const0> ;
  assign gt116_drpdi_o[13] = \<const0> ;
  assign gt116_drpdi_o[12] = \<const0> ;
  assign gt116_drpdi_o[11] = \<const0> ;
  assign gt116_drpdi_o[10] = \<const0> ;
  assign gt116_drpdi_o[9] = \<const0> ;
  assign gt116_drpdi_o[8] = \<const0> ;
  assign gt116_drpdi_o[7] = \<const0> ;
  assign gt116_drpdi_o[6] = \<const0> ;
  assign gt116_drpdi_o[5] = \<const0> ;
  assign gt116_drpdi_o[4] = \<const0> ;
  assign gt116_drpdi_o[3] = \<const0> ;
  assign gt116_drpdi_o[2] = \<const0> ;
  assign gt116_drpdi_o[1] = \<const0> ;
  assign gt116_drpdi_o[0] = \<const0> ;
  assign gt116_drpen_o = \<const0> ;
  assign gt116_drpwe_o = \<const0> ;
  assign gt117_drpaddr_o[9] = \<const0> ;
  assign gt117_drpaddr_o[8] = \<const0> ;
  assign gt117_drpaddr_o[7] = \<const0> ;
  assign gt117_drpaddr_o[6] = \<const0> ;
  assign gt117_drpaddr_o[5] = \<const0> ;
  assign gt117_drpaddr_o[4] = \<const0> ;
  assign gt117_drpaddr_o[3] = \<const0> ;
  assign gt117_drpaddr_o[2] = \<const0> ;
  assign gt117_drpaddr_o[1] = \<const0> ;
  assign gt117_drpaddr_o[0] = \<const0> ;
  assign gt117_drpdi_o[15] = \<const0> ;
  assign gt117_drpdi_o[14] = \<const0> ;
  assign gt117_drpdi_o[13] = \<const0> ;
  assign gt117_drpdi_o[12] = \<const0> ;
  assign gt117_drpdi_o[11] = \<const0> ;
  assign gt117_drpdi_o[10] = \<const0> ;
  assign gt117_drpdi_o[9] = \<const0> ;
  assign gt117_drpdi_o[8] = \<const0> ;
  assign gt117_drpdi_o[7] = \<const0> ;
  assign gt117_drpdi_o[6] = \<const0> ;
  assign gt117_drpdi_o[5] = \<const0> ;
  assign gt117_drpdi_o[4] = \<const0> ;
  assign gt117_drpdi_o[3] = \<const0> ;
  assign gt117_drpdi_o[2] = \<const0> ;
  assign gt117_drpdi_o[1] = \<const0> ;
  assign gt117_drpdi_o[0] = \<const0> ;
  assign gt117_drpen_o = \<const0> ;
  assign gt117_drpwe_o = \<const0> ;
  assign gt118_drpaddr_o[9] = \<const0> ;
  assign gt118_drpaddr_o[8] = \<const0> ;
  assign gt118_drpaddr_o[7] = \<const0> ;
  assign gt118_drpaddr_o[6] = \<const0> ;
  assign gt118_drpaddr_o[5] = \<const0> ;
  assign gt118_drpaddr_o[4] = \<const0> ;
  assign gt118_drpaddr_o[3] = \<const0> ;
  assign gt118_drpaddr_o[2] = \<const0> ;
  assign gt118_drpaddr_o[1] = \<const0> ;
  assign gt118_drpaddr_o[0] = \<const0> ;
  assign gt118_drpdi_o[15] = \<const0> ;
  assign gt118_drpdi_o[14] = \<const0> ;
  assign gt118_drpdi_o[13] = \<const0> ;
  assign gt118_drpdi_o[12] = \<const0> ;
  assign gt118_drpdi_o[11] = \<const0> ;
  assign gt118_drpdi_o[10] = \<const0> ;
  assign gt118_drpdi_o[9] = \<const0> ;
  assign gt118_drpdi_o[8] = \<const0> ;
  assign gt118_drpdi_o[7] = \<const0> ;
  assign gt118_drpdi_o[6] = \<const0> ;
  assign gt118_drpdi_o[5] = \<const0> ;
  assign gt118_drpdi_o[4] = \<const0> ;
  assign gt118_drpdi_o[3] = \<const0> ;
  assign gt118_drpdi_o[2] = \<const0> ;
  assign gt118_drpdi_o[1] = \<const0> ;
  assign gt118_drpdi_o[0] = \<const0> ;
  assign gt118_drpen_o = \<const0> ;
  assign gt118_drpwe_o = \<const0> ;
  assign gt119_drpaddr_o[9] = \<const0> ;
  assign gt119_drpaddr_o[8] = \<const0> ;
  assign gt119_drpaddr_o[7] = \<const0> ;
  assign gt119_drpaddr_o[6] = \<const0> ;
  assign gt119_drpaddr_o[5] = \<const0> ;
  assign gt119_drpaddr_o[4] = \<const0> ;
  assign gt119_drpaddr_o[3] = \<const0> ;
  assign gt119_drpaddr_o[2] = \<const0> ;
  assign gt119_drpaddr_o[1] = \<const0> ;
  assign gt119_drpaddr_o[0] = \<const0> ;
  assign gt119_drpdi_o[15] = \<const0> ;
  assign gt119_drpdi_o[14] = \<const0> ;
  assign gt119_drpdi_o[13] = \<const0> ;
  assign gt119_drpdi_o[12] = \<const0> ;
  assign gt119_drpdi_o[11] = \<const0> ;
  assign gt119_drpdi_o[10] = \<const0> ;
  assign gt119_drpdi_o[9] = \<const0> ;
  assign gt119_drpdi_o[8] = \<const0> ;
  assign gt119_drpdi_o[7] = \<const0> ;
  assign gt119_drpdi_o[6] = \<const0> ;
  assign gt119_drpdi_o[5] = \<const0> ;
  assign gt119_drpdi_o[4] = \<const0> ;
  assign gt119_drpdi_o[3] = \<const0> ;
  assign gt119_drpdi_o[2] = \<const0> ;
  assign gt119_drpdi_o[1] = \<const0> ;
  assign gt119_drpdi_o[0] = \<const0> ;
  assign gt119_drpen_o = \<const0> ;
  assign gt119_drpwe_o = \<const0> ;
  assign gt11_drpaddr_o[9] = \<const0> ;
  assign gt11_drpaddr_o[8] = \<const0> ;
  assign gt11_drpaddr_o[7] = \<const0> ;
  assign gt11_drpaddr_o[6] = \<const0> ;
  assign gt11_drpaddr_o[5] = \<const0> ;
  assign gt11_drpaddr_o[4] = \<const0> ;
  assign gt11_drpaddr_o[3] = \<const0> ;
  assign gt11_drpaddr_o[2] = \<const0> ;
  assign gt11_drpaddr_o[1] = \<const0> ;
  assign gt11_drpaddr_o[0] = \<const0> ;
  assign gt11_drpdi_o[15] = \<const0> ;
  assign gt11_drpdi_o[14] = \<const0> ;
  assign gt11_drpdi_o[13] = \<const0> ;
  assign gt11_drpdi_o[12] = \<const0> ;
  assign gt11_drpdi_o[11] = \<const0> ;
  assign gt11_drpdi_o[10] = \<const0> ;
  assign gt11_drpdi_o[9] = \<const0> ;
  assign gt11_drpdi_o[8] = \<const0> ;
  assign gt11_drpdi_o[7] = \<const0> ;
  assign gt11_drpdi_o[6] = \<const0> ;
  assign gt11_drpdi_o[5] = \<const0> ;
  assign gt11_drpdi_o[4] = \<const0> ;
  assign gt11_drpdi_o[3] = \<const0> ;
  assign gt11_drpdi_o[2] = \<const0> ;
  assign gt11_drpdi_o[1] = \<const0> ;
  assign gt11_drpdi_o[0] = \<const0> ;
  assign gt11_drpen_o = \<const0> ;
  assign gt11_drpwe_o = \<const0> ;
  assign gt120_drpaddr_o[9] = \<const0> ;
  assign gt120_drpaddr_o[8] = \<const0> ;
  assign gt120_drpaddr_o[7] = \<const0> ;
  assign gt120_drpaddr_o[6] = \<const0> ;
  assign gt120_drpaddr_o[5] = \<const0> ;
  assign gt120_drpaddr_o[4] = \<const0> ;
  assign gt120_drpaddr_o[3] = \<const0> ;
  assign gt120_drpaddr_o[2] = \<const0> ;
  assign gt120_drpaddr_o[1] = \<const0> ;
  assign gt120_drpaddr_o[0] = \<const0> ;
  assign gt120_drpdi_o[15] = \<const0> ;
  assign gt120_drpdi_o[14] = \<const0> ;
  assign gt120_drpdi_o[13] = \<const0> ;
  assign gt120_drpdi_o[12] = \<const0> ;
  assign gt120_drpdi_o[11] = \<const0> ;
  assign gt120_drpdi_o[10] = \<const0> ;
  assign gt120_drpdi_o[9] = \<const0> ;
  assign gt120_drpdi_o[8] = \<const0> ;
  assign gt120_drpdi_o[7] = \<const0> ;
  assign gt120_drpdi_o[6] = \<const0> ;
  assign gt120_drpdi_o[5] = \<const0> ;
  assign gt120_drpdi_o[4] = \<const0> ;
  assign gt120_drpdi_o[3] = \<const0> ;
  assign gt120_drpdi_o[2] = \<const0> ;
  assign gt120_drpdi_o[1] = \<const0> ;
  assign gt120_drpdi_o[0] = \<const0> ;
  assign gt120_drpen_o = \<const0> ;
  assign gt120_drpwe_o = \<const0> ;
  assign gt121_drpaddr_o[9] = \<const0> ;
  assign gt121_drpaddr_o[8] = \<const0> ;
  assign gt121_drpaddr_o[7] = \<const0> ;
  assign gt121_drpaddr_o[6] = \<const0> ;
  assign gt121_drpaddr_o[5] = \<const0> ;
  assign gt121_drpaddr_o[4] = \<const0> ;
  assign gt121_drpaddr_o[3] = \<const0> ;
  assign gt121_drpaddr_o[2] = \<const0> ;
  assign gt121_drpaddr_o[1] = \<const0> ;
  assign gt121_drpaddr_o[0] = \<const0> ;
  assign gt121_drpdi_o[15] = \<const0> ;
  assign gt121_drpdi_o[14] = \<const0> ;
  assign gt121_drpdi_o[13] = \<const0> ;
  assign gt121_drpdi_o[12] = \<const0> ;
  assign gt121_drpdi_o[11] = \<const0> ;
  assign gt121_drpdi_o[10] = \<const0> ;
  assign gt121_drpdi_o[9] = \<const0> ;
  assign gt121_drpdi_o[8] = \<const0> ;
  assign gt121_drpdi_o[7] = \<const0> ;
  assign gt121_drpdi_o[6] = \<const0> ;
  assign gt121_drpdi_o[5] = \<const0> ;
  assign gt121_drpdi_o[4] = \<const0> ;
  assign gt121_drpdi_o[3] = \<const0> ;
  assign gt121_drpdi_o[2] = \<const0> ;
  assign gt121_drpdi_o[1] = \<const0> ;
  assign gt121_drpdi_o[0] = \<const0> ;
  assign gt121_drpen_o = \<const0> ;
  assign gt121_drpwe_o = \<const0> ;
  assign gt122_drpaddr_o[9] = \<const0> ;
  assign gt122_drpaddr_o[8] = \<const0> ;
  assign gt122_drpaddr_o[7] = \<const0> ;
  assign gt122_drpaddr_o[6] = \<const0> ;
  assign gt122_drpaddr_o[5] = \<const0> ;
  assign gt122_drpaddr_o[4] = \<const0> ;
  assign gt122_drpaddr_o[3] = \<const0> ;
  assign gt122_drpaddr_o[2] = \<const0> ;
  assign gt122_drpaddr_o[1] = \<const0> ;
  assign gt122_drpaddr_o[0] = \<const0> ;
  assign gt122_drpdi_o[15] = \<const0> ;
  assign gt122_drpdi_o[14] = \<const0> ;
  assign gt122_drpdi_o[13] = \<const0> ;
  assign gt122_drpdi_o[12] = \<const0> ;
  assign gt122_drpdi_o[11] = \<const0> ;
  assign gt122_drpdi_o[10] = \<const0> ;
  assign gt122_drpdi_o[9] = \<const0> ;
  assign gt122_drpdi_o[8] = \<const0> ;
  assign gt122_drpdi_o[7] = \<const0> ;
  assign gt122_drpdi_o[6] = \<const0> ;
  assign gt122_drpdi_o[5] = \<const0> ;
  assign gt122_drpdi_o[4] = \<const0> ;
  assign gt122_drpdi_o[3] = \<const0> ;
  assign gt122_drpdi_o[2] = \<const0> ;
  assign gt122_drpdi_o[1] = \<const0> ;
  assign gt122_drpdi_o[0] = \<const0> ;
  assign gt122_drpen_o = \<const0> ;
  assign gt122_drpwe_o = \<const0> ;
  assign gt123_drpaddr_o[9] = \<const0> ;
  assign gt123_drpaddr_o[8] = \<const0> ;
  assign gt123_drpaddr_o[7] = \<const0> ;
  assign gt123_drpaddr_o[6] = \<const0> ;
  assign gt123_drpaddr_o[5] = \<const0> ;
  assign gt123_drpaddr_o[4] = \<const0> ;
  assign gt123_drpaddr_o[3] = \<const0> ;
  assign gt123_drpaddr_o[2] = \<const0> ;
  assign gt123_drpaddr_o[1] = \<const0> ;
  assign gt123_drpaddr_o[0] = \<const0> ;
  assign gt123_drpdi_o[15] = \<const0> ;
  assign gt123_drpdi_o[14] = \<const0> ;
  assign gt123_drpdi_o[13] = \<const0> ;
  assign gt123_drpdi_o[12] = \<const0> ;
  assign gt123_drpdi_o[11] = \<const0> ;
  assign gt123_drpdi_o[10] = \<const0> ;
  assign gt123_drpdi_o[9] = \<const0> ;
  assign gt123_drpdi_o[8] = \<const0> ;
  assign gt123_drpdi_o[7] = \<const0> ;
  assign gt123_drpdi_o[6] = \<const0> ;
  assign gt123_drpdi_o[5] = \<const0> ;
  assign gt123_drpdi_o[4] = \<const0> ;
  assign gt123_drpdi_o[3] = \<const0> ;
  assign gt123_drpdi_o[2] = \<const0> ;
  assign gt123_drpdi_o[1] = \<const0> ;
  assign gt123_drpdi_o[0] = \<const0> ;
  assign gt123_drpen_o = \<const0> ;
  assign gt123_drpwe_o = \<const0> ;
  assign gt124_drpaddr_o[9] = \<const0> ;
  assign gt124_drpaddr_o[8] = \<const0> ;
  assign gt124_drpaddr_o[7] = \<const0> ;
  assign gt124_drpaddr_o[6] = \<const0> ;
  assign gt124_drpaddr_o[5] = \<const0> ;
  assign gt124_drpaddr_o[4] = \<const0> ;
  assign gt124_drpaddr_o[3] = \<const0> ;
  assign gt124_drpaddr_o[2] = \<const0> ;
  assign gt124_drpaddr_o[1] = \<const0> ;
  assign gt124_drpaddr_o[0] = \<const0> ;
  assign gt124_drpdi_o[15] = \<const0> ;
  assign gt124_drpdi_o[14] = \<const0> ;
  assign gt124_drpdi_o[13] = \<const0> ;
  assign gt124_drpdi_o[12] = \<const0> ;
  assign gt124_drpdi_o[11] = \<const0> ;
  assign gt124_drpdi_o[10] = \<const0> ;
  assign gt124_drpdi_o[9] = \<const0> ;
  assign gt124_drpdi_o[8] = \<const0> ;
  assign gt124_drpdi_o[7] = \<const0> ;
  assign gt124_drpdi_o[6] = \<const0> ;
  assign gt124_drpdi_o[5] = \<const0> ;
  assign gt124_drpdi_o[4] = \<const0> ;
  assign gt124_drpdi_o[3] = \<const0> ;
  assign gt124_drpdi_o[2] = \<const0> ;
  assign gt124_drpdi_o[1] = \<const0> ;
  assign gt124_drpdi_o[0] = \<const0> ;
  assign gt124_drpen_o = \<const0> ;
  assign gt124_drpwe_o = \<const0> ;
  assign gt125_drpaddr_o[9] = \<const0> ;
  assign gt125_drpaddr_o[8] = \<const0> ;
  assign gt125_drpaddr_o[7] = \<const0> ;
  assign gt125_drpaddr_o[6] = \<const0> ;
  assign gt125_drpaddr_o[5] = \<const0> ;
  assign gt125_drpaddr_o[4] = \<const0> ;
  assign gt125_drpaddr_o[3] = \<const0> ;
  assign gt125_drpaddr_o[2] = \<const0> ;
  assign gt125_drpaddr_o[1] = \<const0> ;
  assign gt125_drpaddr_o[0] = \<const0> ;
  assign gt125_drpdi_o[15] = \<const0> ;
  assign gt125_drpdi_o[14] = \<const0> ;
  assign gt125_drpdi_o[13] = \<const0> ;
  assign gt125_drpdi_o[12] = \<const0> ;
  assign gt125_drpdi_o[11] = \<const0> ;
  assign gt125_drpdi_o[10] = \<const0> ;
  assign gt125_drpdi_o[9] = \<const0> ;
  assign gt125_drpdi_o[8] = \<const0> ;
  assign gt125_drpdi_o[7] = \<const0> ;
  assign gt125_drpdi_o[6] = \<const0> ;
  assign gt125_drpdi_o[5] = \<const0> ;
  assign gt125_drpdi_o[4] = \<const0> ;
  assign gt125_drpdi_o[3] = \<const0> ;
  assign gt125_drpdi_o[2] = \<const0> ;
  assign gt125_drpdi_o[1] = \<const0> ;
  assign gt125_drpdi_o[0] = \<const0> ;
  assign gt125_drpen_o = \<const0> ;
  assign gt125_drpwe_o = \<const0> ;
  assign gt126_drpaddr_o[9] = \<const0> ;
  assign gt126_drpaddr_o[8] = \<const0> ;
  assign gt126_drpaddr_o[7] = \<const0> ;
  assign gt126_drpaddr_o[6] = \<const0> ;
  assign gt126_drpaddr_o[5] = \<const0> ;
  assign gt126_drpaddr_o[4] = \<const0> ;
  assign gt126_drpaddr_o[3] = \<const0> ;
  assign gt126_drpaddr_o[2] = \<const0> ;
  assign gt126_drpaddr_o[1] = \<const0> ;
  assign gt126_drpaddr_o[0] = \<const0> ;
  assign gt126_drpdi_o[15] = \<const0> ;
  assign gt126_drpdi_o[14] = \<const0> ;
  assign gt126_drpdi_o[13] = \<const0> ;
  assign gt126_drpdi_o[12] = \<const0> ;
  assign gt126_drpdi_o[11] = \<const0> ;
  assign gt126_drpdi_o[10] = \<const0> ;
  assign gt126_drpdi_o[9] = \<const0> ;
  assign gt126_drpdi_o[8] = \<const0> ;
  assign gt126_drpdi_o[7] = \<const0> ;
  assign gt126_drpdi_o[6] = \<const0> ;
  assign gt126_drpdi_o[5] = \<const0> ;
  assign gt126_drpdi_o[4] = \<const0> ;
  assign gt126_drpdi_o[3] = \<const0> ;
  assign gt126_drpdi_o[2] = \<const0> ;
  assign gt126_drpdi_o[1] = \<const0> ;
  assign gt126_drpdi_o[0] = \<const0> ;
  assign gt126_drpen_o = \<const0> ;
  assign gt126_drpwe_o = \<const0> ;
  assign gt127_drpaddr_o[9] = \<const0> ;
  assign gt127_drpaddr_o[8] = \<const0> ;
  assign gt127_drpaddr_o[7] = \<const0> ;
  assign gt127_drpaddr_o[6] = \<const0> ;
  assign gt127_drpaddr_o[5] = \<const0> ;
  assign gt127_drpaddr_o[4] = \<const0> ;
  assign gt127_drpaddr_o[3] = \<const0> ;
  assign gt127_drpaddr_o[2] = \<const0> ;
  assign gt127_drpaddr_o[1] = \<const0> ;
  assign gt127_drpaddr_o[0] = \<const0> ;
  assign gt127_drpdi_o[15] = \<const0> ;
  assign gt127_drpdi_o[14] = \<const0> ;
  assign gt127_drpdi_o[13] = \<const0> ;
  assign gt127_drpdi_o[12] = \<const0> ;
  assign gt127_drpdi_o[11] = \<const0> ;
  assign gt127_drpdi_o[10] = \<const0> ;
  assign gt127_drpdi_o[9] = \<const0> ;
  assign gt127_drpdi_o[8] = \<const0> ;
  assign gt127_drpdi_o[7] = \<const0> ;
  assign gt127_drpdi_o[6] = \<const0> ;
  assign gt127_drpdi_o[5] = \<const0> ;
  assign gt127_drpdi_o[4] = \<const0> ;
  assign gt127_drpdi_o[3] = \<const0> ;
  assign gt127_drpdi_o[2] = \<const0> ;
  assign gt127_drpdi_o[1] = \<const0> ;
  assign gt127_drpdi_o[0] = \<const0> ;
  assign gt127_drpen_o = \<const0> ;
  assign gt127_drpwe_o = \<const0> ;
  assign gt128_drpaddr_o[9] = \<const0> ;
  assign gt128_drpaddr_o[8] = \<const0> ;
  assign gt128_drpaddr_o[7] = \<const0> ;
  assign gt128_drpaddr_o[6] = \<const0> ;
  assign gt128_drpaddr_o[5] = \<const0> ;
  assign gt128_drpaddr_o[4] = \<const0> ;
  assign gt128_drpaddr_o[3] = \<const0> ;
  assign gt128_drpaddr_o[2] = \<const0> ;
  assign gt128_drpaddr_o[1] = \<const0> ;
  assign gt128_drpaddr_o[0] = \<const0> ;
  assign gt128_drpdi_o[15] = \<const0> ;
  assign gt128_drpdi_o[14] = \<const0> ;
  assign gt128_drpdi_o[13] = \<const0> ;
  assign gt128_drpdi_o[12] = \<const0> ;
  assign gt128_drpdi_o[11] = \<const0> ;
  assign gt128_drpdi_o[10] = \<const0> ;
  assign gt128_drpdi_o[9] = \<const0> ;
  assign gt128_drpdi_o[8] = \<const0> ;
  assign gt128_drpdi_o[7] = \<const0> ;
  assign gt128_drpdi_o[6] = \<const0> ;
  assign gt128_drpdi_o[5] = \<const0> ;
  assign gt128_drpdi_o[4] = \<const0> ;
  assign gt128_drpdi_o[3] = \<const0> ;
  assign gt128_drpdi_o[2] = \<const0> ;
  assign gt128_drpdi_o[1] = \<const0> ;
  assign gt128_drpdi_o[0] = \<const0> ;
  assign gt128_drpen_o = \<const0> ;
  assign gt128_drpwe_o = \<const0> ;
  assign gt129_drpaddr_o[9] = \<const0> ;
  assign gt129_drpaddr_o[8] = \<const0> ;
  assign gt129_drpaddr_o[7] = \<const0> ;
  assign gt129_drpaddr_o[6] = \<const0> ;
  assign gt129_drpaddr_o[5] = \<const0> ;
  assign gt129_drpaddr_o[4] = \<const0> ;
  assign gt129_drpaddr_o[3] = \<const0> ;
  assign gt129_drpaddr_o[2] = \<const0> ;
  assign gt129_drpaddr_o[1] = \<const0> ;
  assign gt129_drpaddr_o[0] = \<const0> ;
  assign gt129_drpdi_o[15] = \<const0> ;
  assign gt129_drpdi_o[14] = \<const0> ;
  assign gt129_drpdi_o[13] = \<const0> ;
  assign gt129_drpdi_o[12] = \<const0> ;
  assign gt129_drpdi_o[11] = \<const0> ;
  assign gt129_drpdi_o[10] = \<const0> ;
  assign gt129_drpdi_o[9] = \<const0> ;
  assign gt129_drpdi_o[8] = \<const0> ;
  assign gt129_drpdi_o[7] = \<const0> ;
  assign gt129_drpdi_o[6] = \<const0> ;
  assign gt129_drpdi_o[5] = \<const0> ;
  assign gt129_drpdi_o[4] = \<const0> ;
  assign gt129_drpdi_o[3] = \<const0> ;
  assign gt129_drpdi_o[2] = \<const0> ;
  assign gt129_drpdi_o[1] = \<const0> ;
  assign gt129_drpdi_o[0] = \<const0> ;
  assign gt129_drpen_o = \<const0> ;
  assign gt129_drpwe_o = \<const0> ;
  assign gt12_drpaddr_o[9] = \<const0> ;
  assign gt12_drpaddr_o[8] = \<const0> ;
  assign gt12_drpaddr_o[7] = \<const0> ;
  assign gt12_drpaddr_o[6] = \<const0> ;
  assign gt12_drpaddr_o[5] = \<const0> ;
  assign gt12_drpaddr_o[4] = \<const0> ;
  assign gt12_drpaddr_o[3] = \<const0> ;
  assign gt12_drpaddr_o[2] = \<const0> ;
  assign gt12_drpaddr_o[1] = \<const0> ;
  assign gt12_drpaddr_o[0] = \<const0> ;
  assign gt12_drpdi_o[15] = \<const0> ;
  assign gt12_drpdi_o[14] = \<const0> ;
  assign gt12_drpdi_o[13] = \<const0> ;
  assign gt12_drpdi_o[12] = \<const0> ;
  assign gt12_drpdi_o[11] = \<const0> ;
  assign gt12_drpdi_o[10] = \<const0> ;
  assign gt12_drpdi_o[9] = \<const0> ;
  assign gt12_drpdi_o[8] = \<const0> ;
  assign gt12_drpdi_o[7] = \<const0> ;
  assign gt12_drpdi_o[6] = \<const0> ;
  assign gt12_drpdi_o[5] = \<const0> ;
  assign gt12_drpdi_o[4] = \<const0> ;
  assign gt12_drpdi_o[3] = \<const0> ;
  assign gt12_drpdi_o[2] = \<const0> ;
  assign gt12_drpdi_o[1] = \<const0> ;
  assign gt12_drpdi_o[0] = \<const0> ;
  assign gt12_drpen_o = \<const0> ;
  assign gt12_drpwe_o = \<const0> ;
  assign gt130_drpaddr_o[9] = \<const0> ;
  assign gt130_drpaddr_o[8] = \<const0> ;
  assign gt130_drpaddr_o[7] = \<const0> ;
  assign gt130_drpaddr_o[6] = \<const0> ;
  assign gt130_drpaddr_o[5] = \<const0> ;
  assign gt130_drpaddr_o[4] = \<const0> ;
  assign gt130_drpaddr_o[3] = \<const0> ;
  assign gt130_drpaddr_o[2] = \<const0> ;
  assign gt130_drpaddr_o[1] = \<const0> ;
  assign gt130_drpaddr_o[0] = \<const0> ;
  assign gt130_drpdi_o[15] = \<const0> ;
  assign gt130_drpdi_o[14] = \<const0> ;
  assign gt130_drpdi_o[13] = \<const0> ;
  assign gt130_drpdi_o[12] = \<const0> ;
  assign gt130_drpdi_o[11] = \<const0> ;
  assign gt130_drpdi_o[10] = \<const0> ;
  assign gt130_drpdi_o[9] = \<const0> ;
  assign gt130_drpdi_o[8] = \<const0> ;
  assign gt130_drpdi_o[7] = \<const0> ;
  assign gt130_drpdi_o[6] = \<const0> ;
  assign gt130_drpdi_o[5] = \<const0> ;
  assign gt130_drpdi_o[4] = \<const0> ;
  assign gt130_drpdi_o[3] = \<const0> ;
  assign gt130_drpdi_o[2] = \<const0> ;
  assign gt130_drpdi_o[1] = \<const0> ;
  assign gt130_drpdi_o[0] = \<const0> ;
  assign gt130_drpen_o = \<const0> ;
  assign gt130_drpwe_o = \<const0> ;
  assign gt131_drpaddr_o[9] = \<const0> ;
  assign gt131_drpaddr_o[8] = \<const0> ;
  assign gt131_drpaddr_o[7] = \<const0> ;
  assign gt131_drpaddr_o[6] = \<const0> ;
  assign gt131_drpaddr_o[5] = \<const0> ;
  assign gt131_drpaddr_o[4] = \<const0> ;
  assign gt131_drpaddr_o[3] = \<const0> ;
  assign gt131_drpaddr_o[2] = \<const0> ;
  assign gt131_drpaddr_o[1] = \<const0> ;
  assign gt131_drpaddr_o[0] = \<const0> ;
  assign gt131_drpdi_o[15] = \<const0> ;
  assign gt131_drpdi_o[14] = \<const0> ;
  assign gt131_drpdi_o[13] = \<const0> ;
  assign gt131_drpdi_o[12] = \<const0> ;
  assign gt131_drpdi_o[11] = \<const0> ;
  assign gt131_drpdi_o[10] = \<const0> ;
  assign gt131_drpdi_o[9] = \<const0> ;
  assign gt131_drpdi_o[8] = \<const0> ;
  assign gt131_drpdi_o[7] = \<const0> ;
  assign gt131_drpdi_o[6] = \<const0> ;
  assign gt131_drpdi_o[5] = \<const0> ;
  assign gt131_drpdi_o[4] = \<const0> ;
  assign gt131_drpdi_o[3] = \<const0> ;
  assign gt131_drpdi_o[2] = \<const0> ;
  assign gt131_drpdi_o[1] = \<const0> ;
  assign gt131_drpdi_o[0] = \<const0> ;
  assign gt131_drpen_o = \<const0> ;
  assign gt131_drpwe_o = \<const0> ;
  assign gt13_drpaddr_o[9] = \<const0> ;
  assign gt13_drpaddr_o[8] = \<const0> ;
  assign gt13_drpaddr_o[7] = \<const0> ;
  assign gt13_drpaddr_o[6] = \<const0> ;
  assign gt13_drpaddr_o[5] = \<const0> ;
  assign gt13_drpaddr_o[4] = \<const0> ;
  assign gt13_drpaddr_o[3] = \<const0> ;
  assign gt13_drpaddr_o[2] = \<const0> ;
  assign gt13_drpaddr_o[1] = \<const0> ;
  assign gt13_drpaddr_o[0] = \<const0> ;
  assign gt13_drpdi_o[15] = \<const0> ;
  assign gt13_drpdi_o[14] = \<const0> ;
  assign gt13_drpdi_o[13] = \<const0> ;
  assign gt13_drpdi_o[12] = \<const0> ;
  assign gt13_drpdi_o[11] = \<const0> ;
  assign gt13_drpdi_o[10] = \<const0> ;
  assign gt13_drpdi_o[9] = \<const0> ;
  assign gt13_drpdi_o[8] = \<const0> ;
  assign gt13_drpdi_o[7] = \<const0> ;
  assign gt13_drpdi_o[6] = \<const0> ;
  assign gt13_drpdi_o[5] = \<const0> ;
  assign gt13_drpdi_o[4] = \<const0> ;
  assign gt13_drpdi_o[3] = \<const0> ;
  assign gt13_drpdi_o[2] = \<const0> ;
  assign gt13_drpdi_o[1] = \<const0> ;
  assign gt13_drpdi_o[0] = \<const0> ;
  assign gt13_drpen_o = \<const0> ;
  assign gt13_drpwe_o = \<const0> ;
  assign gt14_drpaddr_o[9] = \<const0> ;
  assign gt14_drpaddr_o[8] = \<const0> ;
  assign gt14_drpaddr_o[7] = \<const0> ;
  assign gt14_drpaddr_o[6] = \<const0> ;
  assign gt14_drpaddr_o[5] = \<const0> ;
  assign gt14_drpaddr_o[4] = \<const0> ;
  assign gt14_drpaddr_o[3] = \<const0> ;
  assign gt14_drpaddr_o[2] = \<const0> ;
  assign gt14_drpaddr_o[1] = \<const0> ;
  assign gt14_drpaddr_o[0] = \<const0> ;
  assign gt14_drpdi_o[15] = \<const0> ;
  assign gt14_drpdi_o[14] = \<const0> ;
  assign gt14_drpdi_o[13] = \<const0> ;
  assign gt14_drpdi_o[12] = \<const0> ;
  assign gt14_drpdi_o[11] = \<const0> ;
  assign gt14_drpdi_o[10] = \<const0> ;
  assign gt14_drpdi_o[9] = \<const0> ;
  assign gt14_drpdi_o[8] = \<const0> ;
  assign gt14_drpdi_o[7] = \<const0> ;
  assign gt14_drpdi_o[6] = \<const0> ;
  assign gt14_drpdi_o[5] = \<const0> ;
  assign gt14_drpdi_o[4] = \<const0> ;
  assign gt14_drpdi_o[3] = \<const0> ;
  assign gt14_drpdi_o[2] = \<const0> ;
  assign gt14_drpdi_o[1] = \<const0> ;
  assign gt14_drpdi_o[0] = \<const0> ;
  assign gt14_drpen_o = \<const0> ;
  assign gt14_drpwe_o = \<const0> ;
  assign gt15_drpaddr_o[9] = \<const0> ;
  assign gt15_drpaddr_o[8] = \<const0> ;
  assign gt15_drpaddr_o[7] = \<const0> ;
  assign gt15_drpaddr_o[6] = \<const0> ;
  assign gt15_drpaddr_o[5] = \<const0> ;
  assign gt15_drpaddr_o[4] = \<const0> ;
  assign gt15_drpaddr_o[3] = \<const0> ;
  assign gt15_drpaddr_o[2] = \<const0> ;
  assign gt15_drpaddr_o[1] = \<const0> ;
  assign gt15_drpaddr_o[0] = \<const0> ;
  assign gt15_drpdi_o[15] = \<const0> ;
  assign gt15_drpdi_o[14] = \<const0> ;
  assign gt15_drpdi_o[13] = \<const0> ;
  assign gt15_drpdi_o[12] = \<const0> ;
  assign gt15_drpdi_o[11] = \<const0> ;
  assign gt15_drpdi_o[10] = \<const0> ;
  assign gt15_drpdi_o[9] = \<const0> ;
  assign gt15_drpdi_o[8] = \<const0> ;
  assign gt15_drpdi_o[7] = \<const0> ;
  assign gt15_drpdi_o[6] = \<const0> ;
  assign gt15_drpdi_o[5] = \<const0> ;
  assign gt15_drpdi_o[4] = \<const0> ;
  assign gt15_drpdi_o[3] = \<const0> ;
  assign gt15_drpdi_o[2] = \<const0> ;
  assign gt15_drpdi_o[1] = \<const0> ;
  assign gt15_drpdi_o[0] = \<const0> ;
  assign gt15_drpen_o = \<const0> ;
  assign gt15_drpwe_o = \<const0> ;
  assign gt16_drpaddr_o[9] = \<const0> ;
  assign gt16_drpaddr_o[8] = \<const0> ;
  assign gt16_drpaddr_o[7] = \<const0> ;
  assign gt16_drpaddr_o[6] = \<const0> ;
  assign gt16_drpaddr_o[5] = \<const0> ;
  assign gt16_drpaddr_o[4] = \<const0> ;
  assign gt16_drpaddr_o[3] = \<const0> ;
  assign gt16_drpaddr_o[2] = \<const0> ;
  assign gt16_drpaddr_o[1] = \<const0> ;
  assign gt16_drpaddr_o[0] = \<const0> ;
  assign gt16_drpdi_o[15] = \<const0> ;
  assign gt16_drpdi_o[14] = \<const0> ;
  assign gt16_drpdi_o[13] = \<const0> ;
  assign gt16_drpdi_o[12] = \<const0> ;
  assign gt16_drpdi_o[11] = \<const0> ;
  assign gt16_drpdi_o[10] = \<const0> ;
  assign gt16_drpdi_o[9] = \<const0> ;
  assign gt16_drpdi_o[8] = \<const0> ;
  assign gt16_drpdi_o[7] = \<const0> ;
  assign gt16_drpdi_o[6] = \<const0> ;
  assign gt16_drpdi_o[5] = \<const0> ;
  assign gt16_drpdi_o[4] = \<const0> ;
  assign gt16_drpdi_o[3] = \<const0> ;
  assign gt16_drpdi_o[2] = \<const0> ;
  assign gt16_drpdi_o[1] = \<const0> ;
  assign gt16_drpdi_o[0] = \<const0> ;
  assign gt16_drpen_o = \<const0> ;
  assign gt16_drpwe_o = \<const0> ;
  assign gt17_drpaddr_o[9] = \<const0> ;
  assign gt17_drpaddr_o[8] = \<const0> ;
  assign gt17_drpaddr_o[7] = \<const0> ;
  assign gt17_drpaddr_o[6] = \<const0> ;
  assign gt17_drpaddr_o[5] = \<const0> ;
  assign gt17_drpaddr_o[4] = \<const0> ;
  assign gt17_drpaddr_o[3] = \<const0> ;
  assign gt17_drpaddr_o[2] = \<const0> ;
  assign gt17_drpaddr_o[1] = \<const0> ;
  assign gt17_drpaddr_o[0] = \<const0> ;
  assign gt17_drpdi_o[15] = \<const0> ;
  assign gt17_drpdi_o[14] = \<const0> ;
  assign gt17_drpdi_o[13] = \<const0> ;
  assign gt17_drpdi_o[12] = \<const0> ;
  assign gt17_drpdi_o[11] = \<const0> ;
  assign gt17_drpdi_o[10] = \<const0> ;
  assign gt17_drpdi_o[9] = \<const0> ;
  assign gt17_drpdi_o[8] = \<const0> ;
  assign gt17_drpdi_o[7] = \<const0> ;
  assign gt17_drpdi_o[6] = \<const0> ;
  assign gt17_drpdi_o[5] = \<const0> ;
  assign gt17_drpdi_o[4] = \<const0> ;
  assign gt17_drpdi_o[3] = \<const0> ;
  assign gt17_drpdi_o[2] = \<const0> ;
  assign gt17_drpdi_o[1] = \<const0> ;
  assign gt17_drpdi_o[0] = \<const0> ;
  assign gt17_drpen_o = \<const0> ;
  assign gt17_drpwe_o = \<const0> ;
  assign gt18_drpaddr_o[9] = \<const0> ;
  assign gt18_drpaddr_o[8] = \<const0> ;
  assign gt18_drpaddr_o[7] = \<const0> ;
  assign gt18_drpaddr_o[6] = \<const0> ;
  assign gt18_drpaddr_o[5] = \<const0> ;
  assign gt18_drpaddr_o[4] = \<const0> ;
  assign gt18_drpaddr_o[3] = \<const0> ;
  assign gt18_drpaddr_o[2] = \<const0> ;
  assign gt18_drpaddr_o[1] = \<const0> ;
  assign gt18_drpaddr_o[0] = \<const0> ;
  assign gt18_drpdi_o[15] = \<const0> ;
  assign gt18_drpdi_o[14] = \<const0> ;
  assign gt18_drpdi_o[13] = \<const0> ;
  assign gt18_drpdi_o[12] = \<const0> ;
  assign gt18_drpdi_o[11] = \<const0> ;
  assign gt18_drpdi_o[10] = \<const0> ;
  assign gt18_drpdi_o[9] = \<const0> ;
  assign gt18_drpdi_o[8] = \<const0> ;
  assign gt18_drpdi_o[7] = \<const0> ;
  assign gt18_drpdi_o[6] = \<const0> ;
  assign gt18_drpdi_o[5] = \<const0> ;
  assign gt18_drpdi_o[4] = \<const0> ;
  assign gt18_drpdi_o[3] = \<const0> ;
  assign gt18_drpdi_o[2] = \<const0> ;
  assign gt18_drpdi_o[1] = \<const0> ;
  assign gt18_drpdi_o[0] = \<const0> ;
  assign gt18_drpen_o = \<const0> ;
  assign gt18_drpwe_o = \<const0> ;
  assign gt19_drpaddr_o[9] = \<const0> ;
  assign gt19_drpaddr_o[8] = \<const0> ;
  assign gt19_drpaddr_o[7] = \<const0> ;
  assign gt19_drpaddr_o[6] = \<const0> ;
  assign gt19_drpaddr_o[5] = \<const0> ;
  assign gt19_drpaddr_o[4] = \<const0> ;
  assign gt19_drpaddr_o[3] = \<const0> ;
  assign gt19_drpaddr_o[2] = \<const0> ;
  assign gt19_drpaddr_o[1] = \<const0> ;
  assign gt19_drpaddr_o[0] = \<const0> ;
  assign gt19_drpdi_o[15] = \<const0> ;
  assign gt19_drpdi_o[14] = \<const0> ;
  assign gt19_drpdi_o[13] = \<const0> ;
  assign gt19_drpdi_o[12] = \<const0> ;
  assign gt19_drpdi_o[11] = \<const0> ;
  assign gt19_drpdi_o[10] = \<const0> ;
  assign gt19_drpdi_o[9] = \<const0> ;
  assign gt19_drpdi_o[8] = \<const0> ;
  assign gt19_drpdi_o[7] = \<const0> ;
  assign gt19_drpdi_o[6] = \<const0> ;
  assign gt19_drpdi_o[5] = \<const0> ;
  assign gt19_drpdi_o[4] = \<const0> ;
  assign gt19_drpdi_o[3] = \<const0> ;
  assign gt19_drpdi_o[2] = \<const0> ;
  assign gt19_drpdi_o[1] = \<const0> ;
  assign gt19_drpdi_o[0] = \<const0> ;
  assign gt19_drpen_o = \<const0> ;
  assign gt19_drpwe_o = \<const0> ;
  assign gt20_drpaddr_o[9] = \<const0> ;
  assign gt20_drpaddr_o[8] = \<const0> ;
  assign gt20_drpaddr_o[7] = \<const0> ;
  assign gt20_drpaddr_o[6] = \<const0> ;
  assign gt20_drpaddr_o[5] = \<const0> ;
  assign gt20_drpaddr_o[4] = \<const0> ;
  assign gt20_drpaddr_o[3] = \<const0> ;
  assign gt20_drpaddr_o[2] = \<const0> ;
  assign gt20_drpaddr_o[1] = \<const0> ;
  assign gt20_drpaddr_o[0] = \<const0> ;
  assign gt20_drpdi_o[15] = \<const0> ;
  assign gt20_drpdi_o[14] = \<const0> ;
  assign gt20_drpdi_o[13] = \<const0> ;
  assign gt20_drpdi_o[12] = \<const0> ;
  assign gt20_drpdi_o[11] = \<const0> ;
  assign gt20_drpdi_o[10] = \<const0> ;
  assign gt20_drpdi_o[9] = \<const0> ;
  assign gt20_drpdi_o[8] = \<const0> ;
  assign gt20_drpdi_o[7] = \<const0> ;
  assign gt20_drpdi_o[6] = \<const0> ;
  assign gt20_drpdi_o[5] = \<const0> ;
  assign gt20_drpdi_o[4] = \<const0> ;
  assign gt20_drpdi_o[3] = \<const0> ;
  assign gt20_drpdi_o[2] = \<const0> ;
  assign gt20_drpdi_o[1] = \<const0> ;
  assign gt20_drpdi_o[0] = \<const0> ;
  assign gt20_drpen_o = \<const0> ;
  assign gt20_drpwe_o = \<const0> ;
  assign gt21_drpaddr_o[9] = \<const0> ;
  assign gt21_drpaddr_o[8] = \<const0> ;
  assign gt21_drpaddr_o[7] = \<const0> ;
  assign gt21_drpaddr_o[6] = \<const0> ;
  assign gt21_drpaddr_o[5] = \<const0> ;
  assign gt21_drpaddr_o[4] = \<const0> ;
  assign gt21_drpaddr_o[3] = \<const0> ;
  assign gt21_drpaddr_o[2] = \<const0> ;
  assign gt21_drpaddr_o[1] = \<const0> ;
  assign gt21_drpaddr_o[0] = \<const0> ;
  assign gt21_drpdi_o[15] = \<const0> ;
  assign gt21_drpdi_o[14] = \<const0> ;
  assign gt21_drpdi_o[13] = \<const0> ;
  assign gt21_drpdi_o[12] = \<const0> ;
  assign gt21_drpdi_o[11] = \<const0> ;
  assign gt21_drpdi_o[10] = \<const0> ;
  assign gt21_drpdi_o[9] = \<const0> ;
  assign gt21_drpdi_o[8] = \<const0> ;
  assign gt21_drpdi_o[7] = \<const0> ;
  assign gt21_drpdi_o[6] = \<const0> ;
  assign gt21_drpdi_o[5] = \<const0> ;
  assign gt21_drpdi_o[4] = \<const0> ;
  assign gt21_drpdi_o[3] = \<const0> ;
  assign gt21_drpdi_o[2] = \<const0> ;
  assign gt21_drpdi_o[1] = \<const0> ;
  assign gt21_drpdi_o[0] = \<const0> ;
  assign gt21_drpen_o = \<const0> ;
  assign gt21_drpwe_o = \<const0> ;
  assign gt22_drpaddr_o[9] = \<const0> ;
  assign gt22_drpaddr_o[8] = \<const0> ;
  assign gt22_drpaddr_o[7] = \<const0> ;
  assign gt22_drpaddr_o[6] = \<const0> ;
  assign gt22_drpaddr_o[5] = \<const0> ;
  assign gt22_drpaddr_o[4] = \<const0> ;
  assign gt22_drpaddr_o[3] = \<const0> ;
  assign gt22_drpaddr_o[2] = \<const0> ;
  assign gt22_drpaddr_o[1] = \<const0> ;
  assign gt22_drpaddr_o[0] = \<const0> ;
  assign gt22_drpdi_o[15] = \<const0> ;
  assign gt22_drpdi_o[14] = \<const0> ;
  assign gt22_drpdi_o[13] = \<const0> ;
  assign gt22_drpdi_o[12] = \<const0> ;
  assign gt22_drpdi_o[11] = \<const0> ;
  assign gt22_drpdi_o[10] = \<const0> ;
  assign gt22_drpdi_o[9] = \<const0> ;
  assign gt22_drpdi_o[8] = \<const0> ;
  assign gt22_drpdi_o[7] = \<const0> ;
  assign gt22_drpdi_o[6] = \<const0> ;
  assign gt22_drpdi_o[5] = \<const0> ;
  assign gt22_drpdi_o[4] = \<const0> ;
  assign gt22_drpdi_o[3] = \<const0> ;
  assign gt22_drpdi_o[2] = \<const0> ;
  assign gt22_drpdi_o[1] = \<const0> ;
  assign gt22_drpdi_o[0] = \<const0> ;
  assign gt22_drpen_o = \<const0> ;
  assign gt22_drpwe_o = \<const0> ;
  assign gt23_drpaddr_o[9] = \<const0> ;
  assign gt23_drpaddr_o[8] = \<const0> ;
  assign gt23_drpaddr_o[7] = \<const0> ;
  assign gt23_drpaddr_o[6] = \<const0> ;
  assign gt23_drpaddr_o[5] = \<const0> ;
  assign gt23_drpaddr_o[4] = \<const0> ;
  assign gt23_drpaddr_o[3] = \<const0> ;
  assign gt23_drpaddr_o[2] = \<const0> ;
  assign gt23_drpaddr_o[1] = \<const0> ;
  assign gt23_drpaddr_o[0] = \<const0> ;
  assign gt23_drpdi_o[15] = \<const0> ;
  assign gt23_drpdi_o[14] = \<const0> ;
  assign gt23_drpdi_o[13] = \<const0> ;
  assign gt23_drpdi_o[12] = \<const0> ;
  assign gt23_drpdi_o[11] = \<const0> ;
  assign gt23_drpdi_o[10] = \<const0> ;
  assign gt23_drpdi_o[9] = \<const0> ;
  assign gt23_drpdi_o[8] = \<const0> ;
  assign gt23_drpdi_o[7] = \<const0> ;
  assign gt23_drpdi_o[6] = \<const0> ;
  assign gt23_drpdi_o[5] = \<const0> ;
  assign gt23_drpdi_o[4] = \<const0> ;
  assign gt23_drpdi_o[3] = \<const0> ;
  assign gt23_drpdi_o[2] = \<const0> ;
  assign gt23_drpdi_o[1] = \<const0> ;
  assign gt23_drpdi_o[0] = \<const0> ;
  assign gt23_drpen_o = \<const0> ;
  assign gt23_drpwe_o = \<const0> ;
  assign gt24_drpaddr_o[9] = \<const0> ;
  assign gt24_drpaddr_o[8] = \<const0> ;
  assign gt24_drpaddr_o[7] = \<const0> ;
  assign gt24_drpaddr_o[6] = \<const0> ;
  assign gt24_drpaddr_o[5] = \<const0> ;
  assign gt24_drpaddr_o[4] = \<const0> ;
  assign gt24_drpaddr_o[3] = \<const0> ;
  assign gt24_drpaddr_o[2] = \<const0> ;
  assign gt24_drpaddr_o[1] = \<const0> ;
  assign gt24_drpaddr_o[0] = \<const0> ;
  assign gt24_drpdi_o[15] = \<const0> ;
  assign gt24_drpdi_o[14] = \<const0> ;
  assign gt24_drpdi_o[13] = \<const0> ;
  assign gt24_drpdi_o[12] = \<const0> ;
  assign gt24_drpdi_o[11] = \<const0> ;
  assign gt24_drpdi_o[10] = \<const0> ;
  assign gt24_drpdi_o[9] = \<const0> ;
  assign gt24_drpdi_o[8] = \<const0> ;
  assign gt24_drpdi_o[7] = \<const0> ;
  assign gt24_drpdi_o[6] = \<const0> ;
  assign gt24_drpdi_o[5] = \<const0> ;
  assign gt24_drpdi_o[4] = \<const0> ;
  assign gt24_drpdi_o[3] = \<const0> ;
  assign gt24_drpdi_o[2] = \<const0> ;
  assign gt24_drpdi_o[1] = \<const0> ;
  assign gt24_drpdi_o[0] = \<const0> ;
  assign gt24_drpen_o = \<const0> ;
  assign gt24_drpwe_o = \<const0> ;
  assign gt25_drpaddr_o[9] = \<const0> ;
  assign gt25_drpaddr_o[8] = \<const0> ;
  assign gt25_drpaddr_o[7] = \<const0> ;
  assign gt25_drpaddr_o[6] = \<const0> ;
  assign gt25_drpaddr_o[5] = \<const0> ;
  assign gt25_drpaddr_o[4] = \<const0> ;
  assign gt25_drpaddr_o[3] = \<const0> ;
  assign gt25_drpaddr_o[2] = \<const0> ;
  assign gt25_drpaddr_o[1] = \<const0> ;
  assign gt25_drpaddr_o[0] = \<const0> ;
  assign gt25_drpdi_o[15] = \<const0> ;
  assign gt25_drpdi_o[14] = \<const0> ;
  assign gt25_drpdi_o[13] = \<const0> ;
  assign gt25_drpdi_o[12] = \<const0> ;
  assign gt25_drpdi_o[11] = \<const0> ;
  assign gt25_drpdi_o[10] = \<const0> ;
  assign gt25_drpdi_o[9] = \<const0> ;
  assign gt25_drpdi_o[8] = \<const0> ;
  assign gt25_drpdi_o[7] = \<const0> ;
  assign gt25_drpdi_o[6] = \<const0> ;
  assign gt25_drpdi_o[5] = \<const0> ;
  assign gt25_drpdi_o[4] = \<const0> ;
  assign gt25_drpdi_o[3] = \<const0> ;
  assign gt25_drpdi_o[2] = \<const0> ;
  assign gt25_drpdi_o[1] = \<const0> ;
  assign gt25_drpdi_o[0] = \<const0> ;
  assign gt25_drpen_o = \<const0> ;
  assign gt25_drpwe_o = \<const0> ;
  assign gt26_drpaddr_o[9] = \<const0> ;
  assign gt26_drpaddr_o[8] = \<const0> ;
  assign gt26_drpaddr_o[7] = \<const0> ;
  assign gt26_drpaddr_o[6] = \<const0> ;
  assign gt26_drpaddr_o[5] = \<const0> ;
  assign gt26_drpaddr_o[4] = \<const0> ;
  assign gt26_drpaddr_o[3] = \<const0> ;
  assign gt26_drpaddr_o[2] = \<const0> ;
  assign gt26_drpaddr_o[1] = \<const0> ;
  assign gt26_drpaddr_o[0] = \<const0> ;
  assign gt26_drpdi_o[15] = \<const0> ;
  assign gt26_drpdi_o[14] = \<const0> ;
  assign gt26_drpdi_o[13] = \<const0> ;
  assign gt26_drpdi_o[12] = \<const0> ;
  assign gt26_drpdi_o[11] = \<const0> ;
  assign gt26_drpdi_o[10] = \<const0> ;
  assign gt26_drpdi_o[9] = \<const0> ;
  assign gt26_drpdi_o[8] = \<const0> ;
  assign gt26_drpdi_o[7] = \<const0> ;
  assign gt26_drpdi_o[6] = \<const0> ;
  assign gt26_drpdi_o[5] = \<const0> ;
  assign gt26_drpdi_o[4] = \<const0> ;
  assign gt26_drpdi_o[3] = \<const0> ;
  assign gt26_drpdi_o[2] = \<const0> ;
  assign gt26_drpdi_o[1] = \<const0> ;
  assign gt26_drpdi_o[0] = \<const0> ;
  assign gt26_drpen_o = \<const0> ;
  assign gt26_drpwe_o = \<const0> ;
  assign gt27_drpaddr_o[9] = \<const0> ;
  assign gt27_drpaddr_o[8] = \<const0> ;
  assign gt27_drpaddr_o[7] = \<const0> ;
  assign gt27_drpaddr_o[6] = \<const0> ;
  assign gt27_drpaddr_o[5] = \<const0> ;
  assign gt27_drpaddr_o[4] = \<const0> ;
  assign gt27_drpaddr_o[3] = \<const0> ;
  assign gt27_drpaddr_o[2] = \<const0> ;
  assign gt27_drpaddr_o[1] = \<const0> ;
  assign gt27_drpaddr_o[0] = \<const0> ;
  assign gt27_drpdi_o[15] = \<const0> ;
  assign gt27_drpdi_o[14] = \<const0> ;
  assign gt27_drpdi_o[13] = \<const0> ;
  assign gt27_drpdi_o[12] = \<const0> ;
  assign gt27_drpdi_o[11] = \<const0> ;
  assign gt27_drpdi_o[10] = \<const0> ;
  assign gt27_drpdi_o[9] = \<const0> ;
  assign gt27_drpdi_o[8] = \<const0> ;
  assign gt27_drpdi_o[7] = \<const0> ;
  assign gt27_drpdi_o[6] = \<const0> ;
  assign gt27_drpdi_o[5] = \<const0> ;
  assign gt27_drpdi_o[4] = \<const0> ;
  assign gt27_drpdi_o[3] = \<const0> ;
  assign gt27_drpdi_o[2] = \<const0> ;
  assign gt27_drpdi_o[1] = \<const0> ;
  assign gt27_drpdi_o[0] = \<const0> ;
  assign gt27_drpen_o = \<const0> ;
  assign gt27_drpwe_o = \<const0> ;
  assign gt28_drpaddr_o[9] = \<const0> ;
  assign gt28_drpaddr_o[8] = \<const0> ;
  assign gt28_drpaddr_o[7] = \<const0> ;
  assign gt28_drpaddr_o[6] = \<const0> ;
  assign gt28_drpaddr_o[5] = \<const0> ;
  assign gt28_drpaddr_o[4] = \<const0> ;
  assign gt28_drpaddr_o[3] = \<const0> ;
  assign gt28_drpaddr_o[2] = \<const0> ;
  assign gt28_drpaddr_o[1] = \<const0> ;
  assign gt28_drpaddr_o[0] = \<const0> ;
  assign gt28_drpdi_o[15] = \<const0> ;
  assign gt28_drpdi_o[14] = \<const0> ;
  assign gt28_drpdi_o[13] = \<const0> ;
  assign gt28_drpdi_o[12] = \<const0> ;
  assign gt28_drpdi_o[11] = \<const0> ;
  assign gt28_drpdi_o[10] = \<const0> ;
  assign gt28_drpdi_o[9] = \<const0> ;
  assign gt28_drpdi_o[8] = \<const0> ;
  assign gt28_drpdi_o[7] = \<const0> ;
  assign gt28_drpdi_o[6] = \<const0> ;
  assign gt28_drpdi_o[5] = \<const0> ;
  assign gt28_drpdi_o[4] = \<const0> ;
  assign gt28_drpdi_o[3] = \<const0> ;
  assign gt28_drpdi_o[2] = \<const0> ;
  assign gt28_drpdi_o[1] = \<const0> ;
  assign gt28_drpdi_o[0] = \<const0> ;
  assign gt28_drpen_o = \<const0> ;
  assign gt28_drpwe_o = \<const0> ;
  assign gt29_drpaddr_o[9] = \<const0> ;
  assign gt29_drpaddr_o[8] = \<const0> ;
  assign gt29_drpaddr_o[7] = \<const0> ;
  assign gt29_drpaddr_o[6] = \<const0> ;
  assign gt29_drpaddr_o[5] = \<const0> ;
  assign gt29_drpaddr_o[4] = \<const0> ;
  assign gt29_drpaddr_o[3] = \<const0> ;
  assign gt29_drpaddr_o[2] = \<const0> ;
  assign gt29_drpaddr_o[1] = \<const0> ;
  assign gt29_drpaddr_o[0] = \<const0> ;
  assign gt29_drpdi_o[15] = \<const0> ;
  assign gt29_drpdi_o[14] = \<const0> ;
  assign gt29_drpdi_o[13] = \<const0> ;
  assign gt29_drpdi_o[12] = \<const0> ;
  assign gt29_drpdi_o[11] = \<const0> ;
  assign gt29_drpdi_o[10] = \<const0> ;
  assign gt29_drpdi_o[9] = \<const0> ;
  assign gt29_drpdi_o[8] = \<const0> ;
  assign gt29_drpdi_o[7] = \<const0> ;
  assign gt29_drpdi_o[6] = \<const0> ;
  assign gt29_drpdi_o[5] = \<const0> ;
  assign gt29_drpdi_o[4] = \<const0> ;
  assign gt29_drpdi_o[3] = \<const0> ;
  assign gt29_drpdi_o[2] = \<const0> ;
  assign gt29_drpdi_o[1] = \<const0> ;
  assign gt29_drpdi_o[0] = \<const0> ;
  assign gt29_drpen_o = \<const0> ;
  assign gt29_drpwe_o = \<const0> ;
  assign gt2_drpaddr_o[9] = \<const0> ;
  assign gt2_drpaddr_o[8] = \<const0> ;
  assign gt2_drpaddr_o[7] = \<const0> ;
  assign gt2_drpaddr_o[6] = \<const0> ;
  assign gt2_drpaddr_o[5] = \<const0> ;
  assign gt2_drpaddr_o[4] = \<const0> ;
  assign gt2_drpaddr_o[3] = \<const0> ;
  assign gt2_drpaddr_o[2] = \<const0> ;
  assign gt2_drpaddr_o[1] = \<const0> ;
  assign gt2_drpaddr_o[0] = \<const0> ;
  assign gt2_drpdi_o[15] = \<const0> ;
  assign gt2_drpdi_o[14] = \<const0> ;
  assign gt2_drpdi_o[13] = \<const0> ;
  assign gt2_drpdi_o[12] = \<const0> ;
  assign gt2_drpdi_o[11] = \<const0> ;
  assign gt2_drpdi_o[10] = \<const0> ;
  assign gt2_drpdi_o[9] = \<const0> ;
  assign gt2_drpdi_o[8] = \<const0> ;
  assign gt2_drpdi_o[7] = \<const0> ;
  assign gt2_drpdi_o[6] = \<const0> ;
  assign gt2_drpdi_o[5] = \<const0> ;
  assign gt2_drpdi_o[4] = \<const0> ;
  assign gt2_drpdi_o[3] = \<const0> ;
  assign gt2_drpdi_o[2] = \<const0> ;
  assign gt2_drpdi_o[1] = \<const0> ;
  assign gt2_drpdi_o[0] = \<const0> ;
  assign gt2_drpen_o = \<const0> ;
  assign gt2_drpwe_o = \<const0> ;
  assign gt30_drpaddr_o[9] = \<const0> ;
  assign gt30_drpaddr_o[8] = \<const0> ;
  assign gt30_drpaddr_o[7] = \<const0> ;
  assign gt30_drpaddr_o[6] = \<const0> ;
  assign gt30_drpaddr_o[5] = \<const0> ;
  assign gt30_drpaddr_o[4] = \<const0> ;
  assign gt30_drpaddr_o[3] = \<const0> ;
  assign gt30_drpaddr_o[2] = \<const0> ;
  assign gt30_drpaddr_o[1] = \<const0> ;
  assign gt30_drpaddr_o[0] = \<const0> ;
  assign gt30_drpdi_o[15] = \<const0> ;
  assign gt30_drpdi_o[14] = \<const0> ;
  assign gt30_drpdi_o[13] = \<const0> ;
  assign gt30_drpdi_o[12] = \<const0> ;
  assign gt30_drpdi_o[11] = \<const0> ;
  assign gt30_drpdi_o[10] = \<const0> ;
  assign gt30_drpdi_o[9] = \<const0> ;
  assign gt30_drpdi_o[8] = \<const0> ;
  assign gt30_drpdi_o[7] = \<const0> ;
  assign gt30_drpdi_o[6] = \<const0> ;
  assign gt30_drpdi_o[5] = \<const0> ;
  assign gt30_drpdi_o[4] = \<const0> ;
  assign gt30_drpdi_o[3] = \<const0> ;
  assign gt30_drpdi_o[2] = \<const0> ;
  assign gt30_drpdi_o[1] = \<const0> ;
  assign gt30_drpdi_o[0] = \<const0> ;
  assign gt30_drpen_o = \<const0> ;
  assign gt30_drpwe_o = \<const0> ;
  assign gt31_drpaddr_o[9] = \<const0> ;
  assign gt31_drpaddr_o[8] = \<const0> ;
  assign gt31_drpaddr_o[7] = \<const0> ;
  assign gt31_drpaddr_o[6] = \<const0> ;
  assign gt31_drpaddr_o[5] = \<const0> ;
  assign gt31_drpaddr_o[4] = \<const0> ;
  assign gt31_drpaddr_o[3] = \<const0> ;
  assign gt31_drpaddr_o[2] = \<const0> ;
  assign gt31_drpaddr_o[1] = \<const0> ;
  assign gt31_drpaddr_o[0] = \<const0> ;
  assign gt31_drpdi_o[15] = \<const0> ;
  assign gt31_drpdi_o[14] = \<const0> ;
  assign gt31_drpdi_o[13] = \<const0> ;
  assign gt31_drpdi_o[12] = \<const0> ;
  assign gt31_drpdi_o[11] = \<const0> ;
  assign gt31_drpdi_o[10] = \<const0> ;
  assign gt31_drpdi_o[9] = \<const0> ;
  assign gt31_drpdi_o[8] = \<const0> ;
  assign gt31_drpdi_o[7] = \<const0> ;
  assign gt31_drpdi_o[6] = \<const0> ;
  assign gt31_drpdi_o[5] = \<const0> ;
  assign gt31_drpdi_o[4] = \<const0> ;
  assign gt31_drpdi_o[3] = \<const0> ;
  assign gt31_drpdi_o[2] = \<const0> ;
  assign gt31_drpdi_o[1] = \<const0> ;
  assign gt31_drpdi_o[0] = \<const0> ;
  assign gt31_drpen_o = \<const0> ;
  assign gt31_drpwe_o = \<const0> ;
  assign gt32_drpaddr_o[9] = \<const0> ;
  assign gt32_drpaddr_o[8] = \<const0> ;
  assign gt32_drpaddr_o[7] = \<const0> ;
  assign gt32_drpaddr_o[6] = \<const0> ;
  assign gt32_drpaddr_o[5] = \<const0> ;
  assign gt32_drpaddr_o[4] = \<const0> ;
  assign gt32_drpaddr_o[3] = \<const0> ;
  assign gt32_drpaddr_o[2] = \<const0> ;
  assign gt32_drpaddr_o[1] = \<const0> ;
  assign gt32_drpaddr_o[0] = \<const0> ;
  assign gt32_drpdi_o[15] = \<const0> ;
  assign gt32_drpdi_o[14] = \<const0> ;
  assign gt32_drpdi_o[13] = \<const0> ;
  assign gt32_drpdi_o[12] = \<const0> ;
  assign gt32_drpdi_o[11] = \<const0> ;
  assign gt32_drpdi_o[10] = \<const0> ;
  assign gt32_drpdi_o[9] = \<const0> ;
  assign gt32_drpdi_o[8] = \<const0> ;
  assign gt32_drpdi_o[7] = \<const0> ;
  assign gt32_drpdi_o[6] = \<const0> ;
  assign gt32_drpdi_o[5] = \<const0> ;
  assign gt32_drpdi_o[4] = \<const0> ;
  assign gt32_drpdi_o[3] = \<const0> ;
  assign gt32_drpdi_o[2] = \<const0> ;
  assign gt32_drpdi_o[1] = \<const0> ;
  assign gt32_drpdi_o[0] = \<const0> ;
  assign gt32_drpen_o = \<const0> ;
  assign gt32_drpwe_o = \<const0> ;
  assign gt33_drpaddr_o[9] = \<const0> ;
  assign gt33_drpaddr_o[8] = \<const0> ;
  assign gt33_drpaddr_o[7] = \<const0> ;
  assign gt33_drpaddr_o[6] = \<const0> ;
  assign gt33_drpaddr_o[5] = \<const0> ;
  assign gt33_drpaddr_o[4] = \<const0> ;
  assign gt33_drpaddr_o[3] = \<const0> ;
  assign gt33_drpaddr_o[2] = \<const0> ;
  assign gt33_drpaddr_o[1] = \<const0> ;
  assign gt33_drpaddr_o[0] = \<const0> ;
  assign gt33_drpdi_o[15] = \<const0> ;
  assign gt33_drpdi_o[14] = \<const0> ;
  assign gt33_drpdi_o[13] = \<const0> ;
  assign gt33_drpdi_o[12] = \<const0> ;
  assign gt33_drpdi_o[11] = \<const0> ;
  assign gt33_drpdi_o[10] = \<const0> ;
  assign gt33_drpdi_o[9] = \<const0> ;
  assign gt33_drpdi_o[8] = \<const0> ;
  assign gt33_drpdi_o[7] = \<const0> ;
  assign gt33_drpdi_o[6] = \<const0> ;
  assign gt33_drpdi_o[5] = \<const0> ;
  assign gt33_drpdi_o[4] = \<const0> ;
  assign gt33_drpdi_o[3] = \<const0> ;
  assign gt33_drpdi_o[2] = \<const0> ;
  assign gt33_drpdi_o[1] = \<const0> ;
  assign gt33_drpdi_o[0] = \<const0> ;
  assign gt33_drpen_o = \<const0> ;
  assign gt33_drpwe_o = \<const0> ;
  assign gt34_drpaddr_o[9] = \<const0> ;
  assign gt34_drpaddr_o[8] = \<const0> ;
  assign gt34_drpaddr_o[7] = \<const0> ;
  assign gt34_drpaddr_o[6] = \<const0> ;
  assign gt34_drpaddr_o[5] = \<const0> ;
  assign gt34_drpaddr_o[4] = \<const0> ;
  assign gt34_drpaddr_o[3] = \<const0> ;
  assign gt34_drpaddr_o[2] = \<const0> ;
  assign gt34_drpaddr_o[1] = \<const0> ;
  assign gt34_drpaddr_o[0] = \<const0> ;
  assign gt34_drpdi_o[15] = \<const0> ;
  assign gt34_drpdi_o[14] = \<const0> ;
  assign gt34_drpdi_o[13] = \<const0> ;
  assign gt34_drpdi_o[12] = \<const0> ;
  assign gt34_drpdi_o[11] = \<const0> ;
  assign gt34_drpdi_o[10] = \<const0> ;
  assign gt34_drpdi_o[9] = \<const0> ;
  assign gt34_drpdi_o[8] = \<const0> ;
  assign gt34_drpdi_o[7] = \<const0> ;
  assign gt34_drpdi_o[6] = \<const0> ;
  assign gt34_drpdi_o[5] = \<const0> ;
  assign gt34_drpdi_o[4] = \<const0> ;
  assign gt34_drpdi_o[3] = \<const0> ;
  assign gt34_drpdi_o[2] = \<const0> ;
  assign gt34_drpdi_o[1] = \<const0> ;
  assign gt34_drpdi_o[0] = \<const0> ;
  assign gt34_drpen_o = \<const0> ;
  assign gt34_drpwe_o = \<const0> ;
  assign gt35_drpaddr_o[9] = \<const0> ;
  assign gt35_drpaddr_o[8] = \<const0> ;
  assign gt35_drpaddr_o[7] = \<const0> ;
  assign gt35_drpaddr_o[6] = \<const0> ;
  assign gt35_drpaddr_o[5] = \<const0> ;
  assign gt35_drpaddr_o[4] = \<const0> ;
  assign gt35_drpaddr_o[3] = \<const0> ;
  assign gt35_drpaddr_o[2] = \<const0> ;
  assign gt35_drpaddr_o[1] = \<const0> ;
  assign gt35_drpaddr_o[0] = \<const0> ;
  assign gt35_drpdi_o[15] = \<const0> ;
  assign gt35_drpdi_o[14] = \<const0> ;
  assign gt35_drpdi_o[13] = \<const0> ;
  assign gt35_drpdi_o[12] = \<const0> ;
  assign gt35_drpdi_o[11] = \<const0> ;
  assign gt35_drpdi_o[10] = \<const0> ;
  assign gt35_drpdi_o[9] = \<const0> ;
  assign gt35_drpdi_o[8] = \<const0> ;
  assign gt35_drpdi_o[7] = \<const0> ;
  assign gt35_drpdi_o[6] = \<const0> ;
  assign gt35_drpdi_o[5] = \<const0> ;
  assign gt35_drpdi_o[4] = \<const0> ;
  assign gt35_drpdi_o[3] = \<const0> ;
  assign gt35_drpdi_o[2] = \<const0> ;
  assign gt35_drpdi_o[1] = \<const0> ;
  assign gt35_drpdi_o[0] = \<const0> ;
  assign gt35_drpen_o = \<const0> ;
  assign gt35_drpwe_o = \<const0> ;
  assign gt36_drpaddr_o[9] = \<const0> ;
  assign gt36_drpaddr_o[8] = \<const0> ;
  assign gt36_drpaddr_o[7] = \<const0> ;
  assign gt36_drpaddr_o[6] = \<const0> ;
  assign gt36_drpaddr_o[5] = \<const0> ;
  assign gt36_drpaddr_o[4] = \<const0> ;
  assign gt36_drpaddr_o[3] = \<const0> ;
  assign gt36_drpaddr_o[2] = \<const0> ;
  assign gt36_drpaddr_o[1] = \<const0> ;
  assign gt36_drpaddr_o[0] = \<const0> ;
  assign gt36_drpdi_o[15] = \<const0> ;
  assign gt36_drpdi_o[14] = \<const0> ;
  assign gt36_drpdi_o[13] = \<const0> ;
  assign gt36_drpdi_o[12] = \<const0> ;
  assign gt36_drpdi_o[11] = \<const0> ;
  assign gt36_drpdi_o[10] = \<const0> ;
  assign gt36_drpdi_o[9] = \<const0> ;
  assign gt36_drpdi_o[8] = \<const0> ;
  assign gt36_drpdi_o[7] = \<const0> ;
  assign gt36_drpdi_o[6] = \<const0> ;
  assign gt36_drpdi_o[5] = \<const0> ;
  assign gt36_drpdi_o[4] = \<const0> ;
  assign gt36_drpdi_o[3] = \<const0> ;
  assign gt36_drpdi_o[2] = \<const0> ;
  assign gt36_drpdi_o[1] = \<const0> ;
  assign gt36_drpdi_o[0] = \<const0> ;
  assign gt36_drpen_o = \<const0> ;
  assign gt36_drpwe_o = \<const0> ;
  assign gt37_drpaddr_o[9] = \<const0> ;
  assign gt37_drpaddr_o[8] = \<const0> ;
  assign gt37_drpaddr_o[7] = \<const0> ;
  assign gt37_drpaddr_o[6] = \<const0> ;
  assign gt37_drpaddr_o[5] = \<const0> ;
  assign gt37_drpaddr_o[4] = \<const0> ;
  assign gt37_drpaddr_o[3] = \<const0> ;
  assign gt37_drpaddr_o[2] = \<const0> ;
  assign gt37_drpaddr_o[1] = \<const0> ;
  assign gt37_drpaddr_o[0] = \<const0> ;
  assign gt37_drpdi_o[15] = \<const0> ;
  assign gt37_drpdi_o[14] = \<const0> ;
  assign gt37_drpdi_o[13] = \<const0> ;
  assign gt37_drpdi_o[12] = \<const0> ;
  assign gt37_drpdi_o[11] = \<const0> ;
  assign gt37_drpdi_o[10] = \<const0> ;
  assign gt37_drpdi_o[9] = \<const0> ;
  assign gt37_drpdi_o[8] = \<const0> ;
  assign gt37_drpdi_o[7] = \<const0> ;
  assign gt37_drpdi_o[6] = \<const0> ;
  assign gt37_drpdi_o[5] = \<const0> ;
  assign gt37_drpdi_o[4] = \<const0> ;
  assign gt37_drpdi_o[3] = \<const0> ;
  assign gt37_drpdi_o[2] = \<const0> ;
  assign gt37_drpdi_o[1] = \<const0> ;
  assign gt37_drpdi_o[0] = \<const0> ;
  assign gt37_drpen_o = \<const0> ;
  assign gt37_drpwe_o = \<const0> ;
  assign gt38_drpaddr_o[9] = \<const0> ;
  assign gt38_drpaddr_o[8] = \<const0> ;
  assign gt38_drpaddr_o[7] = \<const0> ;
  assign gt38_drpaddr_o[6] = \<const0> ;
  assign gt38_drpaddr_o[5] = \<const0> ;
  assign gt38_drpaddr_o[4] = \<const0> ;
  assign gt38_drpaddr_o[3] = \<const0> ;
  assign gt38_drpaddr_o[2] = \<const0> ;
  assign gt38_drpaddr_o[1] = \<const0> ;
  assign gt38_drpaddr_o[0] = \<const0> ;
  assign gt38_drpdi_o[15] = \<const0> ;
  assign gt38_drpdi_o[14] = \<const0> ;
  assign gt38_drpdi_o[13] = \<const0> ;
  assign gt38_drpdi_o[12] = \<const0> ;
  assign gt38_drpdi_o[11] = \<const0> ;
  assign gt38_drpdi_o[10] = \<const0> ;
  assign gt38_drpdi_o[9] = \<const0> ;
  assign gt38_drpdi_o[8] = \<const0> ;
  assign gt38_drpdi_o[7] = \<const0> ;
  assign gt38_drpdi_o[6] = \<const0> ;
  assign gt38_drpdi_o[5] = \<const0> ;
  assign gt38_drpdi_o[4] = \<const0> ;
  assign gt38_drpdi_o[3] = \<const0> ;
  assign gt38_drpdi_o[2] = \<const0> ;
  assign gt38_drpdi_o[1] = \<const0> ;
  assign gt38_drpdi_o[0] = \<const0> ;
  assign gt38_drpen_o = \<const0> ;
  assign gt38_drpwe_o = \<const0> ;
  assign gt39_drpaddr_o[9] = \<const0> ;
  assign gt39_drpaddr_o[8] = \<const0> ;
  assign gt39_drpaddr_o[7] = \<const0> ;
  assign gt39_drpaddr_o[6] = \<const0> ;
  assign gt39_drpaddr_o[5] = \<const0> ;
  assign gt39_drpaddr_o[4] = \<const0> ;
  assign gt39_drpaddr_o[3] = \<const0> ;
  assign gt39_drpaddr_o[2] = \<const0> ;
  assign gt39_drpaddr_o[1] = \<const0> ;
  assign gt39_drpaddr_o[0] = \<const0> ;
  assign gt39_drpdi_o[15] = \<const0> ;
  assign gt39_drpdi_o[14] = \<const0> ;
  assign gt39_drpdi_o[13] = \<const0> ;
  assign gt39_drpdi_o[12] = \<const0> ;
  assign gt39_drpdi_o[11] = \<const0> ;
  assign gt39_drpdi_o[10] = \<const0> ;
  assign gt39_drpdi_o[9] = \<const0> ;
  assign gt39_drpdi_o[8] = \<const0> ;
  assign gt39_drpdi_o[7] = \<const0> ;
  assign gt39_drpdi_o[6] = \<const0> ;
  assign gt39_drpdi_o[5] = \<const0> ;
  assign gt39_drpdi_o[4] = \<const0> ;
  assign gt39_drpdi_o[3] = \<const0> ;
  assign gt39_drpdi_o[2] = \<const0> ;
  assign gt39_drpdi_o[1] = \<const0> ;
  assign gt39_drpdi_o[0] = \<const0> ;
  assign gt39_drpen_o = \<const0> ;
  assign gt39_drpwe_o = \<const0> ;
  assign gt3_drpaddr_o[9] = \<const0> ;
  assign gt3_drpaddr_o[8] = \<const0> ;
  assign gt3_drpaddr_o[7] = \<const0> ;
  assign gt3_drpaddr_o[6] = \<const0> ;
  assign gt3_drpaddr_o[5] = \<const0> ;
  assign gt3_drpaddr_o[4] = \<const0> ;
  assign gt3_drpaddr_o[3] = \<const0> ;
  assign gt3_drpaddr_o[2] = \<const0> ;
  assign gt3_drpaddr_o[1] = \<const0> ;
  assign gt3_drpaddr_o[0] = \<const0> ;
  assign gt3_drpdi_o[15] = \<const0> ;
  assign gt3_drpdi_o[14] = \<const0> ;
  assign gt3_drpdi_o[13] = \<const0> ;
  assign gt3_drpdi_o[12] = \<const0> ;
  assign gt3_drpdi_o[11] = \<const0> ;
  assign gt3_drpdi_o[10] = \<const0> ;
  assign gt3_drpdi_o[9] = \<const0> ;
  assign gt3_drpdi_o[8] = \<const0> ;
  assign gt3_drpdi_o[7] = \<const0> ;
  assign gt3_drpdi_o[6] = \<const0> ;
  assign gt3_drpdi_o[5] = \<const0> ;
  assign gt3_drpdi_o[4] = \<const0> ;
  assign gt3_drpdi_o[3] = \<const0> ;
  assign gt3_drpdi_o[2] = \<const0> ;
  assign gt3_drpdi_o[1] = \<const0> ;
  assign gt3_drpdi_o[0] = \<const0> ;
  assign gt3_drpen_o = \<const0> ;
  assign gt3_drpwe_o = \<const0> ;
  assign gt40_drpaddr_o[9] = \<const0> ;
  assign gt40_drpaddr_o[8] = \<const0> ;
  assign gt40_drpaddr_o[7] = \<const0> ;
  assign gt40_drpaddr_o[6] = \<const0> ;
  assign gt40_drpaddr_o[5] = \<const0> ;
  assign gt40_drpaddr_o[4] = \<const0> ;
  assign gt40_drpaddr_o[3] = \<const0> ;
  assign gt40_drpaddr_o[2] = \<const0> ;
  assign gt40_drpaddr_o[1] = \<const0> ;
  assign gt40_drpaddr_o[0] = \<const0> ;
  assign gt40_drpdi_o[15] = \<const0> ;
  assign gt40_drpdi_o[14] = \<const0> ;
  assign gt40_drpdi_o[13] = \<const0> ;
  assign gt40_drpdi_o[12] = \<const0> ;
  assign gt40_drpdi_o[11] = \<const0> ;
  assign gt40_drpdi_o[10] = \<const0> ;
  assign gt40_drpdi_o[9] = \<const0> ;
  assign gt40_drpdi_o[8] = \<const0> ;
  assign gt40_drpdi_o[7] = \<const0> ;
  assign gt40_drpdi_o[6] = \<const0> ;
  assign gt40_drpdi_o[5] = \<const0> ;
  assign gt40_drpdi_o[4] = \<const0> ;
  assign gt40_drpdi_o[3] = \<const0> ;
  assign gt40_drpdi_o[2] = \<const0> ;
  assign gt40_drpdi_o[1] = \<const0> ;
  assign gt40_drpdi_o[0] = \<const0> ;
  assign gt40_drpen_o = \<const0> ;
  assign gt40_drpwe_o = \<const0> ;
  assign gt41_drpaddr_o[9] = \<const0> ;
  assign gt41_drpaddr_o[8] = \<const0> ;
  assign gt41_drpaddr_o[7] = \<const0> ;
  assign gt41_drpaddr_o[6] = \<const0> ;
  assign gt41_drpaddr_o[5] = \<const0> ;
  assign gt41_drpaddr_o[4] = \<const0> ;
  assign gt41_drpaddr_o[3] = \<const0> ;
  assign gt41_drpaddr_o[2] = \<const0> ;
  assign gt41_drpaddr_o[1] = \<const0> ;
  assign gt41_drpaddr_o[0] = \<const0> ;
  assign gt41_drpdi_o[15] = \<const0> ;
  assign gt41_drpdi_o[14] = \<const0> ;
  assign gt41_drpdi_o[13] = \<const0> ;
  assign gt41_drpdi_o[12] = \<const0> ;
  assign gt41_drpdi_o[11] = \<const0> ;
  assign gt41_drpdi_o[10] = \<const0> ;
  assign gt41_drpdi_o[9] = \<const0> ;
  assign gt41_drpdi_o[8] = \<const0> ;
  assign gt41_drpdi_o[7] = \<const0> ;
  assign gt41_drpdi_o[6] = \<const0> ;
  assign gt41_drpdi_o[5] = \<const0> ;
  assign gt41_drpdi_o[4] = \<const0> ;
  assign gt41_drpdi_o[3] = \<const0> ;
  assign gt41_drpdi_o[2] = \<const0> ;
  assign gt41_drpdi_o[1] = \<const0> ;
  assign gt41_drpdi_o[0] = \<const0> ;
  assign gt41_drpen_o = \<const0> ;
  assign gt41_drpwe_o = \<const0> ;
  assign gt42_drpaddr_o[9] = \<const0> ;
  assign gt42_drpaddr_o[8] = \<const0> ;
  assign gt42_drpaddr_o[7] = \<const0> ;
  assign gt42_drpaddr_o[6] = \<const0> ;
  assign gt42_drpaddr_o[5] = \<const0> ;
  assign gt42_drpaddr_o[4] = \<const0> ;
  assign gt42_drpaddr_o[3] = \<const0> ;
  assign gt42_drpaddr_o[2] = \<const0> ;
  assign gt42_drpaddr_o[1] = \<const0> ;
  assign gt42_drpaddr_o[0] = \<const0> ;
  assign gt42_drpdi_o[15] = \<const0> ;
  assign gt42_drpdi_o[14] = \<const0> ;
  assign gt42_drpdi_o[13] = \<const0> ;
  assign gt42_drpdi_o[12] = \<const0> ;
  assign gt42_drpdi_o[11] = \<const0> ;
  assign gt42_drpdi_o[10] = \<const0> ;
  assign gt42_drpdi_o[9] = \<const0> ;
  assign gt42_drpdi_o[8] = \<const0> ;
  assign gt42_drpdi_o[7] = \<const0> ;
  assign gt42_drpdi_o[6] = \<const0> ;
  assign gt42_drpdi_o[5] = \<const0> ;
  assign gt42_drpdi_o[4] = \<const0> ;
  assign gt42_drpdi_o[3] = \<const0> ;
  assign gt42_drpdi_o[2] = \<const0> ;
  assign gt42_drpdi_o[1] = \<const0> ;
  assign gt42_drpdi_o[0] = \<const0> ;
  assign gt42_drpen_o = \<const0> ;
  assign gt42_drpwe_o = \<const0> ;
  assign gt43_drpaddr_o[9] = \<const0> ;
  assign gt43_drpaddr_o[8] = \<const0> ;
  assign gt43_drpaddr_o[7] = \<const0> ;
  assign gt43_drpaddr_o[6] = \<const0> ;
  assign gt43_drpaddr_o[5] = \<const0> ;
  assign gt43_drpaddr_o[4] = \<const0> ;
  assign gt43_drpaddr_o[3] = \<const0> ;
  assign gt43_drpaddr_o[2] = \<const0> ;
  assign gt43_drpaddr_o[1] = \<const0> ;
  assign gt43_drpaddr_o[0] = \<const0> ;
  assign gt43_drpdi_o[15] = \<const0> ;
  assign gt43_drpdi_o[14] = \<const0> ;
  assign gt43_drpdi_o[13] = \<const0> ;
  assign gt43_drpdi_o[12] = \<const0> ;
  assign gt43_drpdi_o[11] = \<const0> ;
  assign gt43_drpdi_o[10] = \<const0> ;
  assign gt43_drpdi_o[9] = \<const0> ;
  assign gt43_drpdi_o[8] = \<const0> ;
  assign gt43_drpdi_o[7] = \<const0> ;
  assign gt43_drpdi_o[6] = \<const0> ;
  assign gt43_drpdi_o[5] = \<const0> ;
  assign gt43_drpdi_o[4] = \<const0> ;
  assign gt43_drpdi_o[3] = \<const0> ;
  assign gt43_drpdi_o[2] = \<const0> ;
  assign gt43_drpdi_o[1] = \<const0> ;
  assign gt43_drpdi_o[0] = \<const0> ;
  assign gt43_drpen_o = \<const0> ;
  assign gt43_drpwe_o = \<const0> ;
  assign gt44_drpaddr_o[9] = \<const0> ;
  assign gt44_drpaddr_o[8] = \<const0> ;
  assign gt44_drpaddr_o[7] = \<const0> ;
  assign gt44_drpaddr_o[6] = \<const0> ;
  assign gt44_drpaddr_o[5] = \<const0> ;
  assign gt44_drpaddr_o[4] = \<const0> ;
  assign gt44_drpaddr_o[3] = \<const0> ;
  assign gt44_drpaddr_o[2] = \<const0> ;
  assign gt44_drpaddr_o[1] = \<const0> ;
  assign gt44_drpaddr_o[0] = \<const0> ;
  assign gt44_drpdi_o[15] = \<const0> ;
  assign gt44_drpdi_o[14] = \<const0> ;
  assign gt44_drpdi_o[13] = \<const0> ;
  assign gt44_drpdi_o[12] = \<const0> ;
  assign gt44_drpdi_o[11] = \<const0> ;
  assign gt44_drpdi_o[10] = \<const0> ;
  assign gt44_drpdi_o[9] = \<const0> ;
  assign gt44_drpdi_o[8] = \<const0> ;
  assign gt44_drpdi_o[7] = \<const0> ;
  assign gt44_drpdi_o[6] = \<const0> ;
  assign gt44_drpdi_o[5] = \<const0> ;
  assign gt44_drpdi_o[4] = \<const0> ;
  assign gt44_drpdi_o[3] = \<const0> ;
  assign gt44_drpdi_o[2] = \<const0> ;
  assign gt44_drpdi_o[1] = \<const0> ;
  assign gt44_drpdi_o[0] = \<const0> ;
  assign gt44_drpen_o = \<const0> ;
  assign gt44_drpwe_o = \<const0> ;
  assign gt45_drpaddr_o[9] = \<const0> ;
  assign gt45_drpaddr_o[8] = \<const0> ;
  assign gt45_drpaddr_o[7] = \<const0> ;
  assign gt45_drpaddr_o[6] = \<const0> ;
  assign gt45_drpaddr_o[5] = \<const0> ;
  assign gt45_drpaddr_o[4] = \<const0> ;
  assign gt45_drpaddr_o[3] = \<const0> ;
  assign gt45_drpaddr_o[2] = \<const0> ;
  assign gt45_drpaddr_o[1] = \<const0> ;
  assign gt45_drpaddr_o[0] = \<const0> ;
  assign gt45_drpdi_o[15] = \<const0> ;
  assign gt45_drpdi_o[14] = \<const0> ;
  assign gt45_drpdi_o[13] = \<const0> ;
  assign gt45_drpdi_o[12] = \<const0> ;
  assign gt45_drpdi_o[11] = \<const0> ;
  assign gt45_drpdi_o[10] = \<const0> ;
  assign gt45_drpdi_o[9] = \<const0> ;
  assign gt45_drpdi_o[8] = \<const0> ;
  assign gt45_drpdi_o[7] = \<const0> ;
  assign gt45_drpdi_o[6] = \<const0> ;
  assign gt45_drpdi_o[5] = \<const0> ;
  assign gt45_drpdi_o[4] = \<const0> ;
  assign gt45_drpdi_o[3] = \<const0> ;
  assign gt45_drpdi_o[2] = \<const0> ;
  assign gt45_drpdi_o[1] = \<const0> ;
  assign gt45_drpdi_o[0] = \<const0> ;
  assign gt45_drpen_o = \<const0> ;
  assign gt45_drpwe_o = \<const0> ;
  assign gt46_drpaddr_o[9] = \<const0> ;
  assign gt46_drpaddr_o[8] = \<const0> ;
  assign gt46_drpaddr_o[7] = \<const0> ;
  assign gt46_drpaddr_o[6] = \<const0> ;
  assign gt46_drpaddr_o[5] = \<const0> ;
  assign gt46_drpaddr_o[4] = \<const0> ;
  assign gt46_drpaddr_o[3] = \<const0> ;
  assign gt46_drpaddr_o[2] = \<const0> ;
  assign gt46_drpaddr_o[1] = \<const0> ;
  assign gt46_drpaddr_o[0] = \<const0> ;
  assign gt46_drpdi_o[15] = \<const0> ;
  assign gt46_drpdi_o[14] = \<const0> ;
  assign gt46_drpdi_o[13] = \<const0> ;
  assign gt46_drpdi_o[12] = \<const0> ;
  assign gt46_drpdi_o[11] = \<const0> ;
  assign gt46_drpdi_o[10] = \<const0> ;
  assign gt46_drpdi_o[9] = \<const0> ;
  assign gt46_drpdi_o[8] = \<const0> ;
  assign gt46_drpdi_o[7] = \<const0> ;
  assign gt46_drpdi_o[6] = \<const0> ;
  assign gt46_drpdi_o[5] = \<const0> ;
  assign gt46_drpdi_o[4] = \<const0> ;
  assign gt46_drpdi_o[3] = \<const0> ;
  assign gt46_drpdi_o[2] = \<const0> ;
  assign gt46_drpdi_o[1] = \<const0> ;
  assign gt46_drpdi_o[0] = \<const0> ;
  assign gt46_drpen_o = \<const0> ;
  assign gt46_drpwe_o = \<const0> ;
  assign gt47_drpaddr_o[9] = \<const0> ;
  assign gt47_drpaddr_o[8] = \<const0> ;
  assign gt47_drpaddr_o[7] = \<const0> ;
  assign gt47_drpaddr_o[6] = \<const0> ;
  assign gt47_drpaddr_o[5] = \<const0> ;
  assign gt47_drpaddr_o[4] = \<const0> ;
  assign gt47_drpaddr_o[3] = \<const0> ;
  assign gt47_drpaddr_o[2] = \<const0> ;
  assign gt47_drpaddr_o[1] = \<const0> ;
  assign gt47_drpaddr_o[0] = \<const0> ;
  assign gt47_drpdi_o[15] = \<const0> ;
  assign gt47_drpdi_o[14] = \<const0> ;
  assign gt47_drpdi_o[13] = \<const0> ;
  assign gt47_drpdi_o[12] = \<const0> ;
  assign gt47_drpdi_o[11] = \<const0> ;
  assign gt47_drpdi_o[10] = \<const0> ;
  assign gt47_drpdi_o[9] = \<const0> ;
  assign gt47_drpdi_o[8] = \<const0> ;
  assign gt47_drpdi_o[7] = \<const0> ;
  assign gt47_drpdi_o[6] = \<const0> ;
  assign gt47_drpdi_o[5] = \<const0> ;
  assign gt47_drpdi_o[4] = \<const0> ;
  assign gt47_drpdi_o[3] = \<const0> ;
  assign gt47_drpdi_o[2] = \<const0> ;
  assign gt47_drpdi_o[1] = \<const0> ;
  assign gt47_drpdi_o[0] = \<const0> ;
  assign gt47_drpen_o = \<const0> ;
  assign gt47_drpwe_o = \<const0> ;
  assign gt48_drpaddr_o[9] = \<const0> ;
  assign gt48_drpaddr_o[8] = \<const0> ;
  assign gt48_drpaddr_o[7] = \<const0> ;
  assign gt48_drpaddr_o[6] = \<const0> ;
  assign gt48_drpaddr_o[5] = \<const0> ;
  assign gt48_drpaddr_o[4] = \<const0> ;
  assign gt48_drpaddr_o[3] = \<const0> ;
  assign gt48_drpaddr_o[2] = \<const0> ;
  assign gt48_drpaddr_o[1] = \<const0> ;
  assign gt48_drpaddr_o[0] = \<const0> ;
  assign gt48_drpdi_o[15] = \<const0> ;
  assign gt48_drpdi_o[14] = \<const0> ;
  assign gt48_drpdi_o[13] = \<const0> ;
  assign gt48_drpdi_o[12] = \<const0> ;
  assign gt48_drpdi_o[11] = \<const0> ;
  assign gt48_drpdi_o[10] = \<const0> ;
  assign gt48_drpdi_o[9] = \<const0> ;
  assign gt48_drpdi_o[8] = \<const0> ;
  assign gt48_drpdi_o[7] = \<const0> ;
  assign gt48_drpdi_o[6] = \<const0> ;
  assign gt48_drpdi_o[5] = \<const0> ;
  assign gt48_drpdi_o[4] = \<const0> ;
  assign gt48_drpdi_o[3] = \<const0> ;
  assign gt48_drpdi_o[2] = \<const0> ;
  assign gt48_drpdi_o[1] = \<const0> ;
  assign gt48_drpdi_o[0] = \<const0> ;
  assign gt48_drpen_o = \<const0> ;
  assign gt48_drpwe_o = \<const0> ;
  assign gt49_drpaddr_o[9] = \<const0> ;
  assign gt49_drpaddr_o[8] = \<const0> ;
  assign gt49_drpaddr_o[7] = \<const0> ;
  assign gt49_drpaddr_o[6] = \<const0> ;
  assign gt49_drpaddr_o[5] = \<const0> ;
  assign gt49_drpaddr_o[4] = \<const0> ;
  assign gt49_drpaddr_o[3] = \<const0> ;
  assign gt49_drpaddr_o[2] = \<const0> ;
  assign gt49_drpaddr_o[1] = \<const0> ;
  assign gt49_drpaddr_o[0] = \<const0> ;
  assign gt49_drpdi_o[15] = \<const0> ;
  assign gt49_drpdi_o[14] = \<const0> ;
  assign gt49_drpdi_o[13] = \<const0> ;
  assign gt49_drpdi_o[12] = \<const0> ;
  assign gt49_drpdi_o[11] = \<const0> ;
  assign gt49_drpdi_o[10] = \<const0> ;
  assign gt49_drpdi_o[9] = \<const0> ;
  assign gt49_drpdi_o[8] = \<const0> ;
  assign gt49_drpdi_o[7] = \<const0> ;
  assign gt49_drpdi_o[6] = \<const0> ;
  assign gt49_drpdi_o[5] = \<const0> ;
  assign gt49_drpdi_o[4] = \<const0> ;
  assign gt49_drpdi_o[3] = \<const0> ;
  assign gt49_drpdi_o[2] = \<const0> ;
  assign gt49_drpdi_o[1] = \<const0> ;
  assign gt49_drpdi_o[0] = \<const0> ;
  assign gt49_drpen_o = \<const0> ;
  assign gt49_drpwe_o = \<const0> ;
  assign gt4_drpaddr_o[9] = \<const0> ;
  assign gt4_drpaddr_o[8] = \<const0> ;
  assign gt4_drpaddr_o[7] = \<const0> ;
  assign gt4_drpaddr_o[6] = \<const0> ;
  assign gt4_drpaddr_o[5] = \<const0> ;
  assign gt4_drpaddr_o[4] = \<const0> ;
  assign gt4_drpaddr_o[3] = \<const0> ;
  assign gt4_drpaddr_o[2] = \<const0> ;
  assign gt4_drpaddr_o[1] = \<const0> ;
  assign gt4_drpaddr_o[0] = \<const0> ;
  assign gt4_drpdi_o[15] = \<const0> ;
  assign gt4_drpdi_o[14] = \<const0> ;
  assign gt4_drpdi_o[13] = \<const0> ;
  assign gt4_drpdi_o[12] = \<const0> ;
  assign gt4_drpdi_o[11] = \<const0> ;
  assign gt4_drpdi_o[10] = \<const0> ;
  assign gt4_drpdi_o[9] = \<const0> ;
  assign gt4_drpdi_o[8] = \<const0> ;
  assign gt4_drpdi_o[7] = \<const0> ;
  assign gt4_drpdi_o[6] = \<const0> ;
  assign gt4_drpdi_o[5] = \<const0> ;
  assign gt4_drpdi_o[4] = \<const0> ;
  assign gt4_drpdi_o[3] = \<const0> ;
  assign gt4_drpdi_o[2] = \<const0> ;
  assign gt4_drpdi_o[1] = \<const0> ;
  assign gt4_drpdi_o[0] = \<const0> ;
  assign gt4_drpen_o = \<const0> ;
  assign gt4_drpwe_o = \<const0> ;
  assign gt50_drpaddr_o[9] = \<const0> ;
  assign gt50_drpaddr_o[8] = \<const0> ;
  assign gt50_drpaddr_o[7] = \<const0> ;
  assign gt50_drpaddr_o[6] = \<const0> ;
  assign gt50_drpaddr_o[5] = \<const0> ;
  assign gt50_drpaddr_o[4] = \<const0> ;
  assign gt50_drpaddr_o[3] = \<const0> ;
  assign gt50_drpaddr_o[2] = \<const0> ;
  assign gt50_drpaddr_o[1] = \<const0> ;
  assign gt50_drpaddr_o[0] = \<const0> ;
  assign gt50_drpdi_o[15] = \<const0> ;
  assign gt50_drpdi_o[14] = \<const0> ;
  assign gt50_drpdi_o[13] = \<const0> ;
  assign gt50_drpdi_o[12] = \<const0> ;
  assign gt50_drpdi_o[11] = \<const0> ;
  assign gt50_drpdi_o[10] = \<const0> ;
  assign gt50_drpdi_o[9] = \<const0> ;
  assign gt50_drpdi_o[8] = \<const0> ;
  assign gt50_drpdi_o[7] = \<const0> ;
  assign gt50_drpdi_o[6] = \<const0> ;
  assign gt50_drpdi_o[5] = \<const0> ;
  assign gt50_drpdi_o[4] = \<const0> ;
  assign gt50_drpdi_o[3] = \<const0> ;
  assign gt50_drpdi_o[2] = \<const0> ;
  assign gt50_drpdi_o[1] = \<const0> ;
  assign gt50_drpdi_o[0] = \<const0> ;
  assign gt50_drpen_o = \<const0> ;
  assign gt50_drpwe_o = \<const0> ;
  assign gt51_drpaddr_o[9] = \<const0> ;
  assign gt51_drpaddr_o[8] = \<const0> ;
  assign gt51_drpaddr_o[7] = \<const0> ;
  assign gt51_drpaddr_o[6] = \<const0> ;
  assign gt51_drpaddr_o[5] = \<const0> ;
  assign gt51_drpaddr_o[4] = \<const0> ;
  assign gt51_drpaddr_o[3] = \<const0> ;
  assign gt51_drpaddr_o[2] = \<const0> ;
  assign gt51_drpaddr_o[1] = \<const0> ;
  assign gt51_drpaddr_o[0] = \<const0> ;
  assign gt51_drpdi_o[15] = \<const0> ;
  assign gt51_drpdi_o[14] = \<const0> ;
  assign gt51_drpdi_o[13] = \<const0> ;
  assign gt51_drpdi_o[12] = \<const0> ;
  assign gt51_drpdi_o[11] = \<const0> ;
  assign gt51_drpdi_o[10] = \<const0> ;
  assign gt51_drpdi_o[9] = \<const0> ;
  assign gt51_drpdi_o[8] = \<const0> ;
  assign gt51_drpdi_o[7] = \<const0> ;
  assign gt51_drpdi_o[6] = \<const0> ;
  assign gt51_drpdi_o[5] = \<const0> ;
  assign gt51_drpdi_o[4] = \<const0> ;
  assign gt51_drpdi_o[3] = \<const0> ;
  assign gt51_drpdi_o[2] = \<const0> ;
  assign gt51_drpdi_o[1] = \<const0> ;
  assign gt51_drpdi_o[0] = \<const0> ;
  assign gt51_drpen_o = \<const0> ;
  assign gt51_drpwe_o = \<const0> ;
  assign gt52_drpaddr_o[9] = \<const0> ;
  assign gt52_drpaddr_o[8] = \<const0> ;
  assign gt52_drpaddr_o[7] = \<const0> ;
  assign gt52_drpaddr_o[6] = \<const0> ;
  assign gt52_drpaddr_o[5] = \<const0> ;
  assign gt52_drpaddr_o[4] = \<const0> ;
  assign gt52_drpaddr_o[3] = \<const0> ;
  assign gt52_drpaddr_o[2] = \<const0> ;
  assign gt52_drpaddr_o[1] = \<const0> ;
  assign gt52_drpaddr_o[0] = \<const0> ;
  assign gt52_drpdi_o[15] = \<const0> ;
  assign gt52_drpdi_o[14] = \<const0> ;
  assign gt52_drpdi_o[13] = \<const0> ;
  assign gt52_drpdi_o[12] = \<const0> ;
  assign gt52_drpdi_o[11] = \<const0> ;
  assign gt52_drpdi_o[10] = \<const0> ;
  assign gt52_drpdi_o[9] = \<const0> ;
  assign gt52_drpdi_o[8] = \<const0> ;
  assign gt52_drpdi_o[7] = \<const0> ;
  assign gt52_drpdi_o[6] = \<const0> ;
  assign gt52_drpdi_o[5] = \<const0> ;
  assign gt52_drpdi_o[4] = \<const0> ;
  assign gt52_drpdi_o[3] = \<const0> ;
  assign gt52_drpdi_o[2] = \<const0> ;
  assign gt52_drpdi_o[1] = \<const0> ;
  assign gt52_drpdi_o[0] = \<const0> ;
  assign gt52_drpen_o = \<const0> ;
  assign gt52_drpwe_o = \<const0> ;
  assign gt53_drpaddr_o[9] = \<const0> ;
  assign gt53_drpaddr_o[8] = \<const0> ;
  assign gt53_drpaddr_o[7] = \<const0> ;
  assign gt53_drpaddr_o[6] = \<const0> ;
  assign gt53_drpaddr_o[5] = \<const0> ;
  assign gt53_drpaddr_o[4] = \<const0> ;
  assign gt53_drpaddr_o[3] = \<const0> ;
  assign gt53_drpaddr_o[2] = \<const0> ;
  assign gt53_drpaddr_o[1] = \<const0> ;
  assign gt53_drpaddr_o[0] = \<const0> ;
  assign gt53_drpdi_o[15] = \<const0> ;
  assign gt53_drpdi_o[14] = \<const0> ;
  assign gt53_drpdi_o[13] = \<const0> ;
  assign gt53_drpdi_o[12] = \<const0> ;
  assign gt53_drpdi_o[11] = \<const0> ;
  assign gt53_drpdi_o[10] = \<const0> ;
  assign gt53_drpdi_o[9] = \<const0> ;
  assign gt53_drpdi_o[8] = \<const0> ;
  assign gt53_drpdi_o[7] = \<const0> ;
  assign gt53_drpdi_o[6] = \<const0> ;
  assign gt53_drpdi_o[5] = \<const0> ;
  assign gt53_drpdi_o[4] = \<const0> ;
  assign gt53_drpdi_o[3] = \<const0> ;
  assign gt53_drpdi_o[2] = \<const0> ;
  assign gt53_drpdi_o[1] = \<const0> ;
  assign gt53_drpdi_o[0] = \<const0> ;
  assign gt53_drpen_o = \<const0> ;
  assign gt53_drpwe_o = \<const0> ;
  assign gt54_drpaddr_o[9] = \<const0> ;
  assign gt54_drpaddr_o[8] = \<const0> ;
  assign gt54_drpaddr_o[7] = \<const0> ;
  assign gt54_drpaddr_o[6] = \<const0> ;
  assign gt54_drpaddr_o[5] = \<const0> ;
  assign gt54_drpaddr_o[4] = \<const0> ;
  assign gt54_drpaddr_o[3] = \<const0> ;
  assign gt54_drpaddr_o[2] = \<const0> ;
  assign gt54_drpaddr_o[1] = \<const0> ;
  assign gt54_drpaddr_o[0] = \<const0> ;
  assign gt54_drpdi_o[15] = \<const0> ;
  assign gt54_drpdi_o[14] = \<const0> ;
  assign gt54_drpdi_o[13] = \<const0> ;
  assign gt54_drpdi_o[12] = \<const0> ;
  assign gt54_drpdi_o[11] = \<const0> ;
  assign gt54_drpdi_o[10] = \<const0> ;
  assign gt54_drpdi_o[9] = \<const0> ;
  assign gt54_drpdi_o[8] = \<const0> ;
  assign gt54_drpdi_o[7] = \<const0> ;
  assign gt54_drpdi_o[6] = \<const0> ;
  assign gt54_drpdi_o[5] = \<const0> ;
  assign gt54_drpdi_o[4] = \<const0> ;
  assign gt54_drpdi_o[3] = \<const0> ;
  assign gt54_drpdi_o[2] = \<const0> ;
  assign gt54_drpdi_o[1] = \<const0> ;
  assign gt54_drpdi_o[0] = \<const0> ;
  assign gt54_drpen_o = \<const0> ;
  assign gt54_drpwe_o = \<const0> ;
  assign gt55_drpaddr_o[9] = \<const0> ;
  assign gt55_drpaddr_o[8] = \<const0> ;
  assign gt55_drpaddr_o[7] = \<const0> ;
  assign gt55_drpaddr_o[6] = \<const0> ;
  assign gt55_drpaddr_o[5] = \<const0> ;
  assign gt55_drpaddr_o[4] = \<const0> ;
  assign gt55_drpaddr_o[3] = \<const0> ;
  assign gt55_drpaddr_o[2] = \<const0> ;
  assign gt55_drpaddr_o[1] = \<const0> ;
  assign gt55_drpaddr_o[0] = \<const0> ;
  assign gt55_drpdi_o[15] = \<const0> ;
  assign gt55_drpdi_o[14] = \<const0> ;
  assign gt55_drpdi_o[13] = \<const0> ;
  assign gt55_drpdi_o[12] = \<const0> ;
  assign gt55_drpdi_o[11] = \<const0> ;
  assign gt55_drpdi_o[10] = \<const0> ;
  assign gt55_drpdi_o[9] = \<const0> ;
  assign gt55_drpdi_o[8] = \<const0> ;
  assign gt55_drpdi_o[7] = \<const0> ;
  assign gt55_drpdi_o[6] = \<const0> ;
  assign gt55_drpdi_o[5] = \<const0> ;
  assign gt55_drpdi_o[4] = \<const0> ;
  assign gt55_drpdi_o[3] = \<const0> ;
  assign gt55_drpdi_o[2] = \<const0> ;
  assign gt55_drpdi_o[1] = \<const0> ;
  assign gt55_drpdi_o[0] = \<const0> ;
  assign gt55_drpen_o = \<const0> ;
  assign gt55_drpwe_o = \<const0> ;
  assign gt56_drpaddr_o[9] = \<const0> ;
  assign gt56_drpaddr_o[8] = \<const0> ;
  assign gt56_drpaddr_o[7] = \<const0> ;
  assign gt56_drpaddr_o[6] = \<const0> ;
  assign gt56_drpaddr_o[5] = \<const0> ;
  assign gt56_drpaddr_o[4] = \<const0> ;
  assign gt56_drpaddr_o[3] = \<const0> ;
  assign gt56_drpaddr_o[2] = \<const0> ;
  assign gt56_drpaddr_o[1] = \<const0> ;
  assign gt56_drpaddr_o[0] = \<const0> ;
  assign gt56_drpdi_o[15] = \<const0> ;
  assign gt56_drpdi_o[14] = \<const0> ;
  assign gt56_drpdi_o[13] = \<const0> ;
  assign gt56_drpdi_o[12] = \<const0> ;
  assign gt56_drpdi_o[11] = \<const0> ;
  assign gt56_drpdi_o[10] = \<const0> ;
  assign gt56_drpdi_o[9] = \<const0> ;
  assign gt56_drpdi_o[8] = \<const0> ;
  assign gt56_drpdi_o[7] = \<const0> ;
  assign gt56_drpdi_o[6] = \<const0> ;
  assign gt56_drpdi_o[5] = \<const0> ;
  assign gt56_drpdi_o[4] = \<const0> ;
  assign gt56_drpdi_o[3] = \<const0> ;
  assign gt56_drpdi_o[2] = \<const0> ;
  assign gt56_drpdi_o[1] = \<const0> ;
  assign gt56_drpdi_o[0] = \<const0> ;
  assign gt56_drpen_o = \<const0> ;
  assign gt56_drpwe_o = \<const0> ;
  assign gt57_drpaddr_o[9] = \<const0> ;
  assign gt57_drpaddr_o[8] = \<const0> ;
  assign gt57_drpaddr_o[7] = \<const0> ;
  assign gt57_drpaddr_o[6] = \<const0> ;
  assign gt57_drpaddr_o[5] = \<const0> ;
  assign gt57_drpaddr_o[4] = \<const0> ;
  assign gt57_drpaddr_o[3] = \<const0> ;
  assign gt57_drpaddr_o[2] = \<const0> ;
  assign gt57_drpaddr_o[1] = \<const0> ;
  assign gt57_drpaddr_o[0] = \<const0> ;
  assign gt57_drpdi_o[15] = \<const0> ;
  assign gt57_drpdi_o[14] = \<const0> ;
  assign gt57_drpdi_o[13] = \<const0> ;
  assign gt57_drpdi_o[12] = \<const0> ;
  assign gt57_drpdi_o[11] = \<const0> ;
  assign gt57_drpdi_o[10] = \<const0> ;
  assign gt57_drpdi_o[9] = \<const0> ;
  assign gt57_drpdi_o[8] = \<const0> ;
  assign gt57_drpdi_o[7] = \<const0> ;
  assign gt57_drpdi_o[6] = \<const0> ;
  assign gt57_drpdi_o[5] = \<const0> ;
  assign gt57_drpdi_o[4] = \<const0> ;
  assign gt57_drpdi_o[3] = \<const0> ;
  assign gt57_drpdi_o[2] = \<const0> ;
  assign gt57_drpdi_o[1] = \<const0> ;
  assign gt57_drpdi_o[0] = \<const0> ;
  assign gt57_drpen_o = \<const0> ;
  assign gt57_drpwe_o = \<const0> ;
  assign gt58_drpaddr_o[9] = \<const0> ;
  assign gt58_drpaddr_o[8] = \<const0> ;
  assign gt58_drpaddr_o[7] = \<const0> ;
  assign gt58_drpaddr_o[6] = \<const0> ;
  assign gt58_drpaddr_o[5] = \<const0> ;
  assign gt58_drpaddr_o[4] = \<const0> ;
  assign gt58_drpaddr_o[3] = \<const0> ;
  assign gt58_drpaddr_o[2] = \<const0> ;
  assign gt58_drpaddr_o[1] = \<const0> ;
  assign gt58_drpaddr_o[0] = \<const0> ;
  assign gt58_drpdi_o[15] = \<const0> ;
  assign gt58_drpdi_o[14] = \<const0> ;
  assign gt58_drpdi_o[13] = \<const0> ;
  assign gt58_drpdi_o[12] = \<const0> ;
  assign gt58_drpdi_o[11] = \<const0> ;
  assign gt58_drpdi_o[10] = \<const0> ;
  assign gt58_drpdi_o[9] = \<const0> ;
  assign gt58_drpdi_o[8] = \<const0> ;
  assign gt58_drpdi_o[7] = \<const0> ;
  assign gt58_drpdi_o[6] = \<const0> ;
  assign gt58_drpdi_o[5] = \<const0> ;
  assign gt58_drpdi_o[4] = \<const0> ;
  assign gt58_drpdi_o[3] = \<const0> ;
  assign gt58_drpdi_o[2] = \<const0> ;
  assign gt58_drpdi_o[1] = \<const0> ;
  assign gt58_drpdi_o[0] = \<const0> ;
  assign gt58_drpen_o = \<const0> ;
  assign gt58_drpwe_o = \<const0> ;
  assign gt59_drpaddr_o[9] = \<const0> ;
  assign gt59_drpaddr_o[8] = \<const0> ;
  assign gt59_drpaddr_o[7] = \<const0> ;
  assign gt59_drpaddr_o[6] = \<const0> ;
  assign gt59_drpaddr_o[5] = \<const0> ;
  assign gt59_drpaddr_o[4] = \<const0> ;
  assign gt59_drpaddr_o[3] = \<const0> ;
  assign gt59_drpaddr_o[2] = \<const0> ;
  assign gt59_drpaddr_o[1] = \<const0> ;
  assign gt59_drpaddr_o[0] = \<const0> ;
  assign gt59_drpdi_o[15] = \<const0> ;
  assign gt59_drpdi_o[14] = \<const0> ;
  assign gt59_drpdi_o[13] = \<const0> ;
  assign gt59_drpdi_o[12] = \<const0> ;
  assign gt59_drpdi_o[11] = \<const0> ;
  assign gt59_drpdi_o[10] = \<const0> ;
  assign gt59_drpdi_o[9] = \<const0> ;
  assign gt59_drpdi_o[8] = \<const0> ;
  assign gt59_drpdi_o[7] = \<const0> ;
  assign gt59_drpdi_o[6] = \<const0> ;
  assign gt59_drpdi_o[5] = \<const0> ;
  assign gt59_drpdi_o[4] = \<const0> ;
  assign gt59_drpdi_o[3] = \<const0> ;
  assign gt59_drpdi_o[2] = \<const0> ;
  assign gt59_drpdi_o[1] = \<const0> ;
  assign gt59_drpdi_o[0] = \<const0> ;
  assign gt59_drpen_o = \<const0> ;
  assign gt59_drpwe_o = \<const0> ;
  assign gt5_drpaddr_o[9] = \<const0> ;
  assign gt5_drpaddr_o[8] = \<const0> ;
  assign gt5_drpaddr_o[7] = \<const0> ;
  assign gt5_drpaddr_o[6] = \<const0> ;
  assign gt5_drpaddr_o[5] = \<const0> ;
  assign gt5_drpaddr_o[4] = \<const0> ;
  assign gt5_drpaddr_o[3] = \<const0> ;
  assign gt5_drpaddr_o[2] = \<const0> ;
  assign gt5_drpaddr_o[1] = \<const0> ;
  assign gt5_drpaddr_o[0] = \<const0> ;
  assign gt5_drpdi_o[15] = \<const0> ;
  assign gt5_drpdi_o[14] = \<const0> ;
  assign gt5_drpdi_o[13] = \<const0> ;
  assign gt5_drpdi_o[12] = \<const0> ;
  assign gt5_drpdi_o[11] = \<const0> ;
  assign gt5_drpdi_o[10] = \<const0> ;
  assign gt5_drpdi_o[9] = \<const0> ;
  assign gt5_drpdi_o[8] = \<const0> ;
  assign gt5_drpdi_o[7] = \<const0> ;
  assign gt5_drpdi_o[6] = \<const0> ;
  assign gt5_drpdi_o[5] = \<const0> ;
  assign gt5_drpdi_o[4] = \<const0> ;
  assign gt5_drpdi_o[3] = \<const0> ;
  assign gt5_drpdi_o[2] = \<const0> ;
  assign gt5_drpdi_o[1] = \<const0> ;
  assign gt5_drpdi_o[0] = \<const0> ;
  assign gt5_drpen_o = \<const0> ;
  assign gt5_drpwe_o = \<const0> ;
  assign gt60_drpaddr_o[9] = \<const0> ;
  assign gt60_drpaddr_o[8] = \<const0> ;
  assign gt60_drpaddr_o[7] = \<const0> ;
  assign gt60_drpaddr_o[6] = \<const0> ;
  assign gt60_drpaddr_o[5] = \<const0> ;
  assign gt60_drpaddr_o[4] = \<const0> ;
  assign gt60_drpaddr_o[3] = \<const0> ;
  assign gt60_drpaddr_o[2] = \<const0> ;
  assign gt60_drpaddr_o[1] = \<const0> ;
  assign gt60_drpaddr_o[0] = \<const0> ;
  assign gt60_drpdi_o[15] = \<const0> ;
  assign gt60_drpdi_o[14] = \<const0> ;
  assign gt60_drpdi_o[13] = \<const0> ;
  assign gt60_drpdi_o[12] = \<const0> ;
  assign gt60_drpdi_o[11] = \<const0> ;
  assign gt60_drpdi_o[10] = \<const0> ;
  assign gt60_drpdi_o[9] = \<const0> ;
  assign gt60_drpdi_o[8] = \<const0> ;
  assign gt60_drpdi_o[7] = \<const0> ;
  assign gt60_drpdi_o[6] = \<const0> ;
  assign gt60_drpdi_o[5] = \<const0> ;
  assign gt60_drpdi_o[4] = \<const0> ;
  assign gt60_drpdi_o[3] = \<const0> ;
  assign gt60_drpdi_o[2] = \<const0> ;
  assign gt60_drpdi_o[1] = \<const0> ;
  assign gt60_drpdi_o[0] = \<const0> ;
  assign gt60_drpen_o = \<const0> ;
  assign gt60_drpwe_o = \<const0> ;
  assign gt61_drpaddr_o[9] = \<const0> ;
  assign gt61_drpaddr_o[8] = \<const0> ;
  assign gt61_drpaddr_o[7] = \<const0> ;
  assign gt61_drpaddr_o[6] = \<const0> ;
  assign gt61_drpaddr_o[5] = \<const0> ;
  assign gt61_drpaddr_o[4] = \<const0> ;
  assign gt61_drpaddr_o[3] = \<const0> ;
  assign gt61_drpaddr_o[2] = \<const0> ;
  assign gt61_drpaddr_o[1] = \<const0> ;
  assign gt61_drpaddr_o[0] = \<const0> ;
  assign gt61_drpdi_o[15] = \<const0> ;
  assign gt61_drpdi_o[14] = \<const0> ;
  assign gt61_drpdi_o[13] = \<const0> ;
  assign gt61_drpdi_o[12] = \<const0> ;
  assign gt61_drpdi_o[11] = \<const0> ;
  assign gt61_drpdi_o[10] = \<const0> ;
  assign gt61_drpdi_o[9] = \<const0> ;
  assign gt61_drpdi_o[8] = \<const0> ;
  assign gt61_drpdi_o[7] = \<const0> ;
  assign gt61_drpdi_o[6] = \<const0> ;
  assign gt61_drpdi_o[5] = \<const0> ;
  assign gt61_drpdi_o[4] = \<const0> ;
  assign gt61_drpdi_o[3] = \<const0> ;
  assign gt61_drpdi_o[2] = \<const0> ;
  assign gt61_drpdi_o[1] = \<const0> ;
  assign gt61_drpdi_o[0] = \<const0> ;
  assign gt61_drpen_o = \<const0> ;
  assign gt61_drpwe_o = \<const0> ;
  assign gt62_drpaddr_o[9] = \<const0> ;
  assign gt62_drpaddr_o[8] = \<const0> ;
  assign gt62_drpaddr_o[7] = \<const0> ;
  assign gt62_drpaddr_o[6] = \<const0> ;
  assign gt62_drpaddr_o[5] = \<const0> ;
  assign gt62_drpaddr_o[4] = \<const0> ;
  assign gt62_drpaddr_o[3] = \<const0> ;
  assign gt62_drpaddr_o[2] = \<const0> ;
  assign gt62_drpaddr_o[1] = \<const0> ;
  assign gt62_drpaddr_o[0] = \<const0> ;
  assign gt62_drpdi_o[15] = \<const0> ;
  assign gt62_drpdi_o[14] = \<const0> ;
  assign gt62_drpdi_o[13] = \<const0> ;
  assign gt62_drpdi_o[12] = \<const0> ;
  assign gt62_drpdi_o[11] = \<const0> ;
  assign gt62_drpdi_o[10] = \<const0> ;
  assign gt62_drpdi_o[9] = \<const0> ;
  assign gt62_drpdi_o[8] = \<const0> ;
  assign gt62_drpdi_o[7] = \<const0> ;
  assign gt62_drpdi_o[6] = \<const0> ;
  assign gt62_drpdi_o[5] = \<const0> ;
  assign gt62_drpdi_o[4] = \<const0> ;
  assign gt62_drpdi_o[3] = \<const0> ;
  assign gt62_drpdi_o[2] = \<const0> ;
  assign gt62_drpdi_o[1] = \<const0> ;
  assign gt62_drpdi_o[0] = \<const0> ;
  assign gt62_drpen_o = \<const0> ;
  assign gt62_drpwe_o = \<const0> ;
  assign gt63_drpaddr_o[9] = \<const0> ;
  assign gt63_drpaddr_o[8] = \<const0> ;
  assign gt63_drpaddr_o[7] = \<const0> ;
  assign gt63_drpaddr_o[6] = \<const0> ;
  assign gt63_drpaddr_o[5] = \<const0> ;
  assign gt63_drpaddr_o[4] = \<const0> ;
  assign gt63_drpaddr_o[3] = \<const0> ;
  assign gt63_drpaddr_o[2] = \<const0> ;
  assign gt63_drpaddr_o[1] = \<const0> ;
  assign gt63_drpaddr_o[0] = \<const0> ;
  assign gt63_drpdi_o[15] = \<const0> ;
  assign gt63_drpdi_o[14] = \<const0> ;
  assign gt63_drpdi_o[13] = \<const0> ;
  assign gt63_drpdi_o[12] = \<const0> ;
  assign gt63_drpdi_o[11] = \<const0> ;
  assign gt63_drpdi_o[10] = \<const0> ;
  assign gt63_drpdi_o[9] = \<const0> ;
  assign gt63_drpdi_o[8] = \<const0> ;
  assign gt63_drpdi_o[7] = \<const0> ;
  assign gt63_drpdi_o[6] = \<const0> ;
  assign gt63_drpdi_o[5] = \<const0> ;
  assign gt63_drpdi_o[4] = \<const0> ;
  assign gt63_drpdi_o[3] = \<const0> ;
  assign gt63_drpdi_o[2] = \<const0> ;
  assign gt63_drpdi_o[1] = \<const0> ;
  assign gt63_drpdi_o[0] = \<const0> ;
  assign gt63_drpen_o = \<const0> ;
  assign gt63_drpwe_o = \<const0> ;
  assign gt64_drpaddr_o[9] = \<const0> ;
  assign gt64_drpaddr_o[8] = \<const0> ;
  assign gt64_drpaddr_o[7] = \<const0> ;
  assign gt64_drpaddr_o[6] = \<const0> ;
  assign gt64_drpaddr_o[5] = \<const0> ;
  assign gt64_drpaddr_o[4] = \<const0> ;
  assign gt64_drpaddr_o[3] = \<const0> ;
  assign gt64_drpaddr_o[2] = \<const0> ;
  assign gt64_drpaddr_o[1] = \<const0> ;
  assign gt64_drpaddr_o[0] = \<const0> ;
  assign gt64_drpdi_o[15] = \<const0> ;
  assign gt64_drpdi_o[14] = \<const0> ;
  assign gt64_drpdi_o[13] = \<const0> ;
  assign gt64_drpdi_o[12] = \<const0> ;
  assign gt64_drpdi_o[11] = \<const0> ;
  assign gt64_drpdi_o[10] = \<const0> ;
  assign gt64_drpdi_o[9] = \<const0> ;
  assign gt64_drpdi_o[8] = \<const0> ;
  assign gt64_drpdi_o[7] = \<const0> ;
  assign gt64_drpdi_o[6] = \<const0> ;
  assign gt64_drpdi_o[5] = \<const0> ;
  assign gt64_drpdi_o[4] = \<const0> ;
  assign gt64_drpdi_o[3] = \<const0> ;
  assign gt64_drpdi_o[2] = \<const0> ;
  assign gt64_drpdi_o[1] = \<const0> ;
  assign gt64_drpdi_o[0] = \<const0> ;
  assign gt64_drpen_o = \<const0> ;
  assign gt64_drpwe_o = \<const0> ;
  assign gt65_drpaddr_o[9] = \<const0> ;
  assign gt65_drpaddr_o[8] = \<const0> ;
  assign gt65_drpaddr_o[7] = \<const0> ;
  assign gt65_drpaddr_o[6] = \<const0> ;
  assign gt65_drpaddr_o[5] = \<const0> ;
  assign gt65_drpaddr_o[4] = \<const0> ;
  assign gt65_drpaddr_o[3] = \<const0> ;
  assign gt65_drpaddr_o[2] = \<const0> ;
  assign gt65_drpaddr_o[1] = \<const0> ;
  assign gt65_drpaddr_o[0] = \<const0> ;
  assign gt65_drpdi_o[15] = \<const0> ;
  assign gt65_drpdi_o[14] = \<const0> ;
  assign gt65_drpdi_o[13] = \<const0> ;
  assign gt65_drpdi_o[12] = \<const0> ;
  assign gt65_drpdi_o[11] = \<const0> ;
  assign gt65_drpdi_o[10] = \<const0> ;
  assign gt65_drpdi_o[9] = \<const0> ;
  assign gt65_drpdi_o[8] = \<const0> ;
  assign gt65_drpdi_o[7] = \<const0> ;
  assign gt65_drpdi_o[6] = \<const0> ;
  assign gt65_drpdi_o[5] = \<const0> ;
  assign gt65_drpdi_o[4] = \<const0> ;
  assign gt65_drpdi_o[3] = \<const0> ;
  assign gt65_drpdi_o[2] = \<const0> ;
  assign gt65_drpdi_o[1] = \<const0> ;
  assign gt65_drpdi_o[0] = \<const0> ;
  assign gt65_drpen_o = \<const0> ;
  assign gt65_drpwe_o = \<const0> ;
  assign gt66_drpaddr_o[9] = \<const0> ;
  assign gt66_drpaddr_o[8] = \<const0> ;
  assign gt66_drpaddr_o[7] = \<const0> ;
  assign gt66_drpaddr_o[6] = \<const0> ;
  assign gt66_drpaddr_o[5] = \<const0> ;
  assign gt66_drpaddr_o[4] = \<const0> ;
  assign gt66_drpaddr_o[3] = \<const0> ;
  assign gt66_drpaddr_o[2] = \<const0> ;
  assign gt66_drpaddr_o[1] = \<const0> ;
  assign gt66_drpaddr_o[0] = \<const0> ;
  assign gt66_drpdi_o[15] = \<const0> ;
  assign gt66_drpdi_o[14] = \<const0> ;
  assign gt66_drpdi_o[13] = \<const0> ;
  assign gt66_drpdi_o[12] = \<const0> ;
  assign gt66_drpdi_o[11] = \<const0> ;
  assign gt66_drpdi_o[10] = \<const0> ;
  assign gt66_drpdi_o[9] = \<const0> ;
  assign gt66_drpdi_o[8] = \<const0> ;
  assign gt66_drpdi_o[7] = \<const0> ;
  assign gt66_drpdi_o[6] = \<const0> ;
  assign gt66_drpdi_o[5] = \<const0> ;
  assign gt66_drpdi_o[4] = \<const0> ;
  assign gt66_drpdi_o[3] = \<const0> ;
  assign gt66_drpdi_o[2] = \<const0> ;
  assign gt66_drpdi_o[1] = \<const0> ;
  assign gt66_drpdi_o[0] = \<const0> ;
  assign gt66_drpen_o = \<const0> ;
  assign gt66_drpwe_o = \<const0> ;
  assign gt67_drpaddr_o[9] = \<const0> ;
  assign gt67_drpaddr_o[8] = \<const0> ;
  assign gt67_drpaddr_o[7] = \<const0> ;
  assign gt67_drpaddr_o[6] = \<const0> ;
  assign gt67_drpaddr_o[5] = \<const0> ;
  assign gt67_drpaddr_o[4] = \<const0> ;
  assign gt67_drpaddr_o[3] = \<const0> ;
  assign gt67_drpaddr_o[2] = \<const0> ;
  assign gt67_drpaddr_o[1] = \<const0> ;
  assign gt67_drpaddr_o[0] = \<const0> ;
  assign gt67_drpdi_o[15] = \<const0> ;
  assign gt67_drpdi_o[14] = \<const0> ;
  assign gt67_drpdi_o[13] = \<const0> ;
  assign gt67_drpdi_o[12] = \<const0> ;
  assign gt67_drpdi_o[11] = \<const0> ;
  assign gt67_drpdi_o[10] = \<const0> ;
  assign gt67_drpdi_o[9] = \<const0> ;
  assign gt67_drpdi_o[8] = \<const0> ;
  assign gt67_drpdi_o[7] = \<const0> ;
  assign gt67_drpdi_o[6] = \<const0> ;
  assign gt67_drpdi_o[5] = \<const0> ;
  assign gt67_drpdi_o[4] = \<const0> ;
  assign gt67_drpdi_o[3] = \<const0> ;
  assign gt67_drpdi_o[2] = \<const0> ;
  assign gt67_drpdi_o[1] = \<const0> ;
  assign gt67_drpdi_o[0] = \<const0> ;
  assign gt67_drpen_o = \<const0> ;
  assign gt67_drpwe_o = \<const0> ;
  assign gt68_drpaddr_o[9] = \<const0> ;
  assign gt68_drpaddr_o[8] = \<const0> ;
  assign gt68_drpaddr_o[7] = \<const0> ;
  assign gt68_drpaddr_o[6] = \<const0> ;
  assign gt68_drpaddr_o[5] = \<const0> ;
  assign gt68_drpaddr_o[4] = \<const0> ;
  assign gt68_drpaddr_o[3] = \<const0> ;
  assign gt68_drpaddr_o[2] = \<const0> ;
  assign gt68_drpaddr_o[1] = \<const0> ;
  assign gt68_drpaddr_o[0] = \<const0> ;
  assign gt68_drpdi_o[15] = \<const0> ;
  assign gt68_drpdi_o[14] = \<const0> ;
  assign gt68_drpdi_o[13] = \<const0> ;
  assign gt68_drpdi_o[12] = \<const0> ;
  assign gt68_drpdi_o[11] = \<const0> ;
  assign gt68_drpdi_o[10] = \<const0> ;
  assign gt68_drpdi_o[9] = \<const0> ;
  assign gt68_drpdi_o[8] = \<const0> ;
  assign gt68_drpdi_o[7] = \<const0> ;
  assign gt68_drpdi_o[6] = \<const0> ;
  assign gt68_drpdi_o[5] = \<const0> ;
  assign gt68_drpdi_o[4] = \<const0> ;
  assign gt68_drpdi_o[3] = \<const0> ;
  assign gt68_drpdi_o[2] = \<const0> ;
  assign gt68_drpdi_o[1] = \<const0> ;
  assign gt68_drpdi_o[0] = \<const0> ;
  assign gt68_drpen_o = \<const0> ;
  assign gt68_drpwe_o = \<const0> ;
  assign gt69_drpaddr_o[9] = \<const0> ;
  assign gt69_drpaddr_o[8] = \<const0> ;
  assign gt69_drpaddr_o[7] = \<const0> ;
  assign gt69_drpaddr_o[6] = \<const0> ;
  assign gt69_drpaddr_o[5] = \<const0> ;
  assign gt69_drpaddr_o[4] = \<const0> ;
  assign gt69_drpaddr_o[3] = \<const0> ;
  assign gt69_drpaddr_o[2] = \<const0> ;
  assign gt69_drpaddr_o[1] = \<const0> ;
  assign gt69_drpaddr_o[0] = \<const0> ;
  assign gt69_drpdi_o[15] = \<const0> ;
  assign gt69_drpdi_o[14] = \<const0> ;
  assign gt69_drpdi_o[13] = \<const0> ;
  assign gt69_drpdi_o[12] = \<const0> ;
  assign gt69_drpdi_o[11] = \<const0> ;
  assign gt69_drpdi_o[10] = \<const0> ;
  assign gt69_drpdi_o[9] = \<const0> ;
  assign gt69_drpdi_o[8] = \<const0> ;
  assign gt69_drpdi_o[7] = \<const0> ;
  assign gt69_drpdi_o[6] = \<const0> ;
  assign gt69_drpdi_o[5] = \<const0> ;
  assign gt69_drpdi_o[4] = \<const0> ;
  assign gt69_drpdi_o[3] = \<const0> ;
  assign gt69_drpdi_o[2] = \<const0> ;
  assign gt69_drpdi_o[1] = \<const0> ;
  assign gt69_drpdi_o[0] = \<const0> ;
  assign gt69_drpen_o = \<const0> ;
  assign gt69_drpwe_o = \<const0> ;
  assign gt6_drpaddr_o[9] = \<const0> ;
  assign gt6_drpaddr_o[8] = \<const0> ;
  assign gt6_drpaddr_o[7] = \<const0> ;
  assign gt6_drpaddr_o[6] = \<const0> ;
  assign gt6_drpaddr_o[5] = \<const0> ;
  assign gt6_drpaddr_o[4] = \<const0> ;
  assign gt6_drpaddr_o[3] = \<const0> ;
  assign gt6_drpaddr_o[2] = \<const0> ;
  assign gt6_drpaddr_o[1] = \<const0> ;
  assign gt6_drpaddr_o[0] = \<const0> ;
  assign gt6_drpdi_o[15] = \<const0> ;
  assign gt6_drpdi_o[14] = \<const0> ;
  assign gt6_drpdi_o[13] = \<const0> ;
  assign gt6_drpdi_o[12] = \<const0> ;
  assign gt6_drpdi_o[11] = \<const0> ;
  assign gt6_drpdi_o[10] = \<const0> ;
  assign gt6_drpdi_o[9] = \<const0> ;
  assign gt6_drpdi_o[8] = \<const0> ;
  assign gt6_drpdi_o[7] = \<const0> ;
  assign gt6_drpdi_o[6] = \<const0> ;
  assign gt6_drpdi_o[5] = \<const0> ;
  assign gt6_drpdi_o[4] = \<const0> ;
  assign gt6_drpdi_o[3] = \<const0> ;
  assign gt6_drpdi_o[2] = \<const0> ;
  assign gt6_drpdi_o[1] = \<const0> ;
  assign gt6_drpdi_o[0] = \<const0> ;
  assign gt6_drpen_o = \<const0> ;
  assign gt6_drpwe_o = \<const0> ;
  assign gt70_drpaddr_o[9] = \<const0> ;
  assign gt70_drpaddr_o[8] = \<const0> ;
  assign gt70_drpaddr_o[7] = \<const0> ;
  assign gt70_drpaddr_o[6] = \<const0> ;
  assign gt70_drpaddr_o[5] = \<const0> ;
  assign gt70_drpaddr_o[4] = \<const0> ;
  assign gt70_drpaddr_o[3] = \<const0> ;
  assign gt70_drpaddr_o[2] = \<const0> ;
  assign gt70_drpaddr_o[1] = \<const0> ;
  assign gt70_drpaddr_o[0] = \<const0> ;
  assign gt70_drpdi_o[15] = \<const0> ;
  assign gt70_drpdi_o[14] = \<const0> ;
  assign gt70_drpdi_o[13] = \<const0> ;
  assign gt70_drpdi_o[12] = \<const0> ;
  assign gt70_drpdi_o[11] = \<const0> ;
  assign gt70_drpdi_o[10] = \<const0> ;
  assign gt70_drpdi_o[9] = \<const0> ;
  assign gt70_drpdi_o[8] = \<const0> ;
  assign gt70_drpdi_o[7] = \<const0> ;
  assign gt70_drpdi_o[6] = \<const0> ;
  assign gt70_drpdi_o[5] = \<const0> ;
  assign gt70_drpdi_o[4] = \<const0> ;
  assign gt70_drpdi_o[3] = \<const0> ;
  assign gt70_drpdi_o[2] = \<const0> ;
  assign gt70_drpdi_o[1] = \<const0> ;
  assign gt70_drpdi_o[0] = \<const0> ;
  assign gt70_drpen_o = \<const0> ;
  assign gt70_drpwe_o = \<const0> ;
  assign gt71_drpaddr_o[9] = \<const0> ;
  assign gt71_drpaddr_o[8] = \<const0> ;
  assign gt71_drpaddr_o[7] = \<const0> ;
  assign gt71_drpaddr_o[6] = \<const0> ;
  assign gt71_drpaddr_o[5] = \<const0> ;
  assign gt71_drpaddr_o[4] = \<const0> ;
  assign gt71_drpaddr_o[3] = \<const0> ;
  assign gt71_drpaddr_o[2] = \<const0> ;
  assign gt71_drpaddr_o[1] = \<const0> ;
  assign gt71_drpaddr_o[0] = \<const0> ;
  assign gt71_drpdi_o[15] = \<const0> ;
  assign gt71_drpdi_o[14] = \<const0> ;
  assign gt71_drpdi_o[13] = \<const0> ;
  assign gt71_drpdi_o[12] = \<const0> ;
  assign gt71_drpdi_o[11] = \<const0> ;
  assign gt71_drpdi_o[10] = \<const0> ;
  assign gt71_drpdi_o[9] = \<const0> ;
  assign gt71_drpdi_o[8] = \<const0> ;
  assign gt71_drpdi_o[7] = \<const0> ;
  assign gt71_drpdi_o[6] = \<const0> ;
  assign gt71_drpdi_o[5] = \<const0> ;
  assign gt71_drpdi_o[4] = \<const0> ;
  assign gt71_drpdi_o[3] = \<const0> ;
  assign gt71_drpdi_o[2] = \<const0> ;
  assign gt71_drpdi_o[1] = \<const0> ;
  assign gt71_drpdi_o[0] = \<const0> ;
  assign gt71_drpen_o = \<const0> ;
  assign gt71_drpwe_o = \<const0> ;
  assign gt72_drpaddr_o[9] = \<const0> ;
  assign gt72_drpaddr_o[8] = \<const0> ;
  assign gt72_drpaddr_o[7] = \<const0> ;
  assign gt72_drpaddr_o[6] = \<const0> ;
  assign gt72_drpaddr_o[5] = \<const0> ;
  assign gt72_drpaddr_o[4] = \<const0> ;
  assign gt72_drpaddr_o[3] = \<const0> ;
  assign gt72_drpaddr_o[2] = \<const0> ;
  assign gt72_drpaddr_o[1] = \<const0> ;
  assign gt72_drpaddr_o[0] = \<const0> ;
  assign gt72_drpdi_o[15] = \<const0> ;
  assign gt72_drpdi_o[14] = \<const0> ;
  assign gt72_drpdi_o[13] = \<const0> ;
  assign gt72_drpdi_o[12] = \<const0> ;
  assign gt72_drpdi_o[11] = \<const0> ;
  assign gt72_drpdi_o[10] = \<const0> ;
  assign gt72_drpdi_o[9] = \<const0> ;
  assign gt72_drpdi_o[8] = \<const0> ;
  assign gt72_drpdi_o[7] = \<const0> ;
  assign gt72_drpdi_o[6] = \<const0> ;
  assign gt72_drpdi_o[5] = \<const0> ;
  assign gt72_drpdi_o[4] = \<const0> ;
  assign gt72_drpdi_o[3] = \<const0> ;
  assign gt72_drpdi_o[2] = \<const0> ;
  assign gt72_drpdi_o[1] = \<const0> ;
  assign gt72_drpdi_o[0] = \<const0> ;
  assign gt72_drpen_o = \<const0> ;
  assign gt72_drpwe_o = \<const0> ;
  assign gt73_drpaddr_o[9] = \<const0> ;
  assign gt73_drpaddr_o[8] = \<const0> ;
  assign gt73_drpaddr_o[7] = \<const0> ;
  assign gt73_drpaddr_o[6] = \<const0> ;
  assign gt73_drpaddr_o[5] = \<const0> ;
  assign gt73_drpaddr_o[4] = \<const0> ;
  assign gt73_drpaddr_o[3] = \<const0> ;
  assign gt73_drpaddr_o[2] = \<const0> ;
  assign gt73_drpaddr_o[1] = \<const0> ;
  assign gt73_drpaddr_o[0] = \<const0> ;
  assign gt73_drpdi_o[15] = \<const0> ;
  assign gt73_drpdi_o[14] = \<const0> ;
  assign gt73_drpdi_o[13] = \<const0> ;
  assign gt73_drpdi_o[12] = \<const0> ;
  assign gt73_drpdi_o[11] = \<const0> ;
  assign gt73_drpdi_o[10] = \<const0> ;
  assign gt73_drpdi_o[9] = \<const0> ;
  assign gt73_drpdi_o[8] = \<const0> ;
  assign gt73_drpdi_o[7] = \<const0> ;
  assign gt73_drpdi_o[6] = \<const0> ;
  assign gt73_drpdi_o[5] = \<const0> ;
  assign gt73_drpdi_o[4] = \<const0> ;
  assign gt73_drpdi_o[3] = \<const0> ;
  assign gt73_drpdi_o[2] = \<const0> ;
  assign gt73_drpdi_o[1] = \<const0> ;
  assign gt73_drpdi_o[0] = \<const0> ;
  assign gt73_drpen_o = \<const0> ;
  assign gt73_drpwe_o = \<const0> ;
  assign gt74_drpaddr_o[9] = \<const0> ;
  assign gt74_drpaddr_o[8] = \<const0> ;
  assign gt74_drpaddr_o[7] = \<const0> ;
  assign gt74_drpaddr_o[6] = \<const0> ;
  assign gt74_drpaddr_o[5] = \<const0> ;
  assign gt74_drpaddr_o[4] = \<const0> ;
  assign gt74_drpaddr_o[3] = \<const0> ;
  assign gt74_drpaddr_o[2] = \<const0> ;
  assign gt74_drpaddr_o[1] = \<const0> ;
  assign gt74_drpaddr_o[0] = \<const0> ;
  assign gt74_drpdi_o[15] = \<const0> ;
  assign gt74_drpdi_o[14] = \<const0> ;
  assign gt74_drpdi_o[13] = \<const0> ;
  assign gt74_drpdi_o[12] = \<const0> ;
  assign gt74_drpdi_o[11] = \<const0> ;
  assign gt74_drpdi_o[10] = \<const0> ;
  assign gt74_drpdi_o[9] = \<const0> ;
  assign gt74_drpdi_o[8] = \<const0> ;
  assign gt74_drpdi_o[7] = \<const0> ;
  assign gt74_drpdi_o[6] = \<const0> ;
  assign gt74_drpdi_o[5] = \<const0> ;
  assign gt74_drpdi_o[4] = \<const0> ;
  assign gt74_drpdi_o[3] = \<const0> ;
  assign gt74_drpdi_o[2] = \<const0> ;
  assign gt74_drpdi_o[1] = \<const0> ;
  assign gt74_drpdi_o[0] = \<const0> ;
  assign gt74_drpen_o = \<const0> ;
  assign gt74_drpwe_o = \<const0> ;
  assign gt75_drpaddr_o[9] = \<const0> ;
  assign gt75_drpaddr_o[8] = \<const0> ;
  assign gt75_drpaddr_o[7] = \<const0> ;
  assign gt75_drpaddr_o[6] = \<const0> ;
  assign gt75_drpaddr_o[5] = \<const0> ;
  assign gt75_drpaddr_o[4] = \<const0> ;
  assign gt75_drpaddr_o[3] = \<const0> ;
  assign gt75_drpaddr_o[2] = \<const0> ;
  assign gt75_drpaddr_o[1] = \<const0> ;
  assign gt75_drpaddr_o[0] = \<const0> ;
  assign gt75_drpdi_o[15] = \<const0> ;
  assign gt75_drpdi_o[14] = \<const0> ;
  assign gt75_drpdi_o[13] = \<const0> ;
  assign gt75_drpdi_o[12] = \<const0> ;
  assign gt75_drpdi_o[11] = \<const0> ;
  assign gt75_drpdi_o[10] = \<const0> ;
  assign gt75_drpdi_o[9] = \<const0> ;
  assign gt75_drpdi_o[8] = \<const0> ;
  assign gt75_drpdi_o[7] = \<const0> ;
  assign gt75_drpdi_o[6] = \<const0> ;
  assign gt75_drpdi_o[5] = \<const0> ;
  assign gt75_drpdi_o[4] = \<const0> ;
  assign gt75_drpdi_o[3] = \<const0> ;
  assign gt75_drpdi_o[2] = \<const0> ;
  assign gt75_drpdi_o[1] = \<const0> ;
  assign gt75_drpdi_o[0] = \<const0> ;
  assign gt75_drpen_o = \<const0> ;
  assign gt75_drpwe_o = \<const0> ;
  assign gt76_drpaddr_o[9] = \<const0> ;
  assign gt76_drpaddr_o[8] = \<const0> ;
  assign gt76_drpaddr_o[7] = \<const0> ;
  assign gt76_drpaddr_o[6] = \<const0> ;
  assign gt76_drpaddr_o[5] = \<const0> ;
  assign gt76_drpaddr_o[4] = \<const0> ;
  assign gt76_drpaddr_o[3] = \<const0> ;
  assign gt76_drpaddr_o[2] = \<const0> ;
  assign gt76_drpaddr_o[1] = \<const0> ;
  assign gt76_drpaddr_o[0] = \<const0> ;
  assign gt76_drpdi_o[15] = \<const0> ;
  assign gt76_drpdi_o[14] = \<const0> ;
  assign gt76_drpdi_o[13] = \<const0> ;
  assign gt76_drpdi_o[12] = \<const0> ;
  assign gt76_drpdi_o[11] = \<const0> ;
  assign gt76_drpdi_o[10] = \<const0> ;
  assign gt76_drpdi_o[9] = \<const0> ;
  assign gt76_drpdi_o[8] = \<const0> ;
  assign gt76_drpdi_o[7] = \<const0> ;
  assign gt76_drpdi_o[6] = \<const0> ;
  assign gt76_drpdi_o[5] = \<const0> ;
  assign gt76_drpdi_o[4] = \<const0> ;
  assign gt76_drpdi_o[3] = \<const0> ;
  assign gt76_drpdi_o[2] = \<const0> ;
  assign gt76_drpdi_o[1] = \<const0> ;
  assign gt76_drpdi_o[0] = \<const0> ;
  assign gt76_drpen_o = \<const0> ;
  assign gt76_drpwe_o = \<const0> ;
  assign gt77_drpaddr_o[9] = \<const0> ;
  assign gt77_drpaddr_o[8] = \<const0> ;
  assign gt77_drpaddr_o[7] = \<const0> ;
  assign gt77_drpaddr_o[6] = \<const0> ;
  assign gt77_drpaddr_o[5] = \<const0> ;
  assign gt77_drpaddr_o[4] = \<const0> ;
  assign gt77_drpaddr_o[3] = \<const0> ;
  assign gt77_drpaddr_o[2] = \<const0> ;
  assign gt77_drpaddr_o[1] = \<const0> ;
  assign gt77_drpaddr_o[0] = \<const0> ;
  assign gt77_drpdi_o[15] = \<const0> ;
  assign gt77_drpdi_o[14] = \<const0> ;
  assign gt77_drpdi_o[13] = \<const0> ;
  assign gt77_drpdi_o[12] = \<const0> ;
  assign gt77_drpdi_o[11] = \<const0> ;
  assign gt77_drpdi_o[10] = \<const0> ;
  assign gt77_drpdi_o[9] = \<const0> ;
  assign gt77_drpdi_o[8] = \<const0> ;
  assign gt77_drpdi_o[7] = \<const0> ;
  assign gt77_drpdi_o[6] = \<const0> ;
  assign gt77_drpdi_o[5] = \<const0> ;
  assign gt77_drpdi_o[4] = \<const0> ;
  assign gt77_drpdi_o[3] = \<const0> ;
  assign gt77_drpdi_o[2] = \<const0> ;
  assign gt77_drpdi_o[1] = \<const0> ;
  assign gt77_drpdi_o[0] = \<const0> ;
  assign gt77_drpen_o = \<const0> ;
  assign gt77_drpwe_o = \<const0> ;
  assign gt78_drpaddr_o[9] = \<const0> ;
  assign gt78_drpaddr_o[8] = \<const0> ;
  assign gt78_drpaddr_o[7] = \<const0> ;
  assign gt78_drpaddr_o[6] = \<const0> ;
  assign gt78_drpaddr_o[5] = \<const0> ;
  assign gt78_drpaddr_o[4] = \<const0> ;
  assign gt78_drpaddr_o[3] = \<const0> ;
  assign gt78_drpaddr_o[2] = \<const0> ;
  assign gt78_drpaddr_o[1] = \<const0> ;
  assign gt78_drpaddr_o[0] = \<const0> ;
  assign gt78_drpdi_o[15] = \<const0> ;
  assign gt78_drpdi_o[14] = \<const0> ;
  assign gt78_drpdi_o[13] = \<const0> ;
  assign gt78_drpdi_o[12] = \<const0> ;
  assign gt78_drpdi_o[11] = \<const0> ;
  assign gt78_drpdi_o[10] = \<const0> ;
  assign gt78_drpdi_o[9] = \<const0> ;
  assign gt78_drpdi_o[8] = \<const0> ;
  assign gt78_drpdi_o[7] = \<const0> ;
  assign gt78_drpdi_o[6] = \<const0> ;
  assign gt78_drpdi_o[5] = \<const0> ;
  assign gt78_drpdi_o[4] = \<const0> ;
  assign gt78_drpdi_o[3] = \<const0> ;
  assign gt78_drpdi_o[2] = \<const0> ;
  assign gt78_drpdi_o[1] = \<const0> ;
  assign gt78_drpdi_o[0] = \<const0> ;
  assign gt78_drpen_o = \<const0> ;
  assign gt78_drpwe_o = \<const0> ;
  assign gt79_drpaddr_o[9] = \<const0> ;
  assign gt79_drpaddr_o[8] = \<const0> ;
  assign gt79_drpaddr_o[7] = \<const0> ;
  assign gt79_drpaddr_o[6] = \<const0> ;
  assign gt79_drpaddr_o[5] = \<const0> ;
  assign gt79_drpaddr_o[4] = \<const0> ;
  assign gt79_drpaddr_o[3] = \<const0> ;
  assign gt79_drpaddr_o[2] = \<const0> ;
  assign gt79_drpaddr_o[1] = \<const0> ;
  assign gt79_drpaddr_o[0] = \<const0> ;
  assign gt79_drpdi_o[15] = \<const0> ;
  assign gt79_drpdi_o[14] = \<const0> ;
  assign gt79_drpdi_o[13] = \<const0> ;
  assign gt79_drpdi_o[12] = \<const0> ;
  assign gt79_drpdi_o[11] = \<const0> ;
  assign gt79_drpdi_o[10] = \<const0> ;
  assign gt79_drpdi_o[9] = \<const0> ;
  assign gt79_drpdi_o[8] = \<const0> ;
  assign gt79_drpdi_o[7] = \<const0> ;
  assign gt79_drpdi_o[6] = \<const0> ;
  assign gt79_drpdi_o[5] = \<const0> ;
  assign gt79_drpdi_o[4] = \<const0> ;
  assign gt79_drpdi_o[3] = \<const0> ;
  assign gt79_drpdi_o[2] = \<const0> ;
  assign gt79_drpdi_o[1] = \<const0> ;
  assign gt79_drpdi_o[0] = \<const0> ;
  assign gt79_drpen_o = \<const0> ;
  assign gt79_drpwe_o = \<const0> ;
  assign gt7_drpaddr_o[9] = \<const0> ;
  assign gt7_drpaddr_o[8] = \<const0> ;
  assign gt7_drpaddr_o[7] = \<const0> ;
  assign gt7_drpaddr_o[6] = \<const0> ;
  assign gt7_drpaddr_o[5] = \<const0> ;
  assign gt7_drpaddr_o[4] = \<const0> ;
  assign gt7_drpaddr_o[3] = \<const0> ;
  assign gt7_drpaddr_o[2] = \<const0> ;
  assign gt7_drpaddr_o[1] = \<const0> ;
  assign gt7_drpaddr_o[0] = \<const0> ;
  assign gt7_drpdi_o[15] = \<const0> ;
  assign gt7_drpdi_o[14] = \<const0> ;
  assign gt7_drpdi_o[13] = \<const0> ;
  assign gt7_drpdi_o[12] = \<const0> ;
  assign gt7_drpdi_o[11] = \<const0> ;
  assign gt7_drpdi_o[10] = \<const0> ;
  assign gt7_drpdi_o[9] = \<const0> ;
  assign gt7_drpdi_o[8] = \<const0> ;
  assign gt7_drpdi_o[7] = \<const0> ;
  assign gt7_drpdi_o[6] = \<const0> ;
  assign gt7_drpdi_o[5] = \<const0> ;
  assign gt7_drpdi_o[4] = \<const0> ;
  assign gt7_drpdi_o[3] = \<const0> ;
  assign gt7_drpdi_o[2] = \<const0> ;
  assign gt7_drpdi_o[1] = \<const0> ;
  assign gt7_drpdi_o[0] = \<const0> ;
  assign gt7_drpen_o = \<const0> ;
  assign gt7_drpwe_o = \<const0> ;
  assign gt80_drpaddr_o[9] = \<const0> ;
  assign gt80_drpaddr_o[8] = \<const0> ;
  assign gt80_drpaddr_o[7] = \<const0> ;
  assign gt80_drpaddr_o[6] = \<const0> ;
  assign gt80_drpaddr_o[5] = \<const0> ;
  assign gt80_drpaddr_o[4] = \<const0> ;
  assign gt80_drpaddr_o[3] = \<const0> ;
  assign gt80_drpaddr_o[2] = \<const0> ;
  assign gt80_drpaddr_o[1] = \<const0> ;
  assign gt80_drpaddr_o[0] = \<const0> ;
  assign gt80_drpdi_o[15] = \<const0> ;
  assign gt80_drpdi_o[14] = \<const0> ;
  assign gt80_drpdi_o[13] = \<const0> ;
  assign gt80_drpdi_o[12] = \<const0> ;
  assign gt80_drpdi_o[11] = \<const0> ;
  assign gt80_drpdi_o[10] = \<const0> ;
  assign gt80_drpdi_o[9] = \<const0> ;
  assign gt80_drpdi_o[8] = \<const0> ;
  assign gt80_drpdi_o[7] = \<const0> ;
  assign gt80_drpdi_o[6] = \<const0> ;
  assign gt80_drpdi_o[5] = \<const0> ;
  assign gt80_drpdi_o[4] = \<const0> ;
  assign gt80_drpdi_o[3] = \<const0> ;
  assign gt80_drpdi_o[2] = \<const0> ;
  assign gt80_drpdi_o[1] = \<const0> ;
  assign gt80_drpdi_o[0] = \<const0> ;
  assign gt80_drpen_o = \<const0> ;
  assign gt80_drpwe_o = \<const0> ;
  assign gt81_drpaddr_o[9] = \<const0> ;
  assign gt81_drpaddr_o[8] = \<const0> ;
  assign gt81_drpaddr_o[7] = \<const0> ;
  assign gt81_drpaddr_o[6] = \<const0> ;
  assign gt81_drpaddr_o[5] = \<const0> ;
  assign gt81_drpaddr_o[4] = \<const0> ;
  assign gt81_drpaddr_o[3] = \<const0> ;
  assign gt81_drpaddr_o[2] = \<const0> ;
  assign gt81_drpaddr_o[1] = \<const0> ;
  assign gt81_drpaddr_o[0] = \<const0> ;
  assign gt81_drpdi_o[15] = \<const0> ;
  assign gt81_drpdi_o[14] = \<const0> ;
  assign gt81_drpdi_o[13] = \<const0> ;
  assign gt81_drpdi_o[12] = \<const0> ;
  assign gt81_drpdi_o[11] = \<const0> ;
  assign gt81_drpdi_o[10] = \<const0> ;
  assign gt81_drpdi_o[9] = \<const0> ;
  assign gt81_drpdi_o[8] = \<const0> ;
  assign gt81_drpdi_o[7] = \<const0> ;
  assign gt81_drpdi_o[6] = \<const0> ;
  assign gt81_drpdi_o[5] = \<const0> ;
  assign gt81_drpdi_o[4] = \<const0> ;
  assign gt81_drpdi_o[3] = \<const0> ;
  assign gt81_drpdi_o[2] = \<const0> ;
  assign gt81_drpdi_o[1] = \<const0> ;
  assign gt81_drpdi_o[0] = \<const0> ;
  assign gt81_drpen_o = \<const0> ;
  assign gt81_drpwe_o = \<const0> ;
  assign gt82_drpaddr_o[9] = \<const0> ;
  assign gt82_drpaddr_o[8] = \<const0> ;
  assign gt82_drpaddr_o[7] = \<const0> ;
  assign gt82_drpaddr_o[6] = \<const0> ;
  assign gt82_drpaddr_o[5] = \<const0> ;
  assign gt82_drpaddr_o[4] = \<const0> ;
  assign gt82_drpaddr_o[3] = \<const0> ;
  assign gt82_drpaddr_o[2] = \<const0> ;
  assign gt82_drpaddr_o[1] = \<const0> ;
  assign gt82_drpaddr_o[0] = \<const0> ;
  assign gt82_drpdi_o[15] = \<const0> ;
  assign gt82_drpdi_o[14] = \<const0> ;
  assign gt82_drpdi_o[13] = \<const0> ;
  assign gt82_drpdi_o[12] = \<const0> ;
  assign gt82_drpdi_o[11] = \<const0> ;
  assign gt82_drpdi_o[10] = \<const0> ;
  assign gt82_drpdi_o[9] = \<const0> ;
  assign gt82_drpdi_o[8] = \<const0> ;
  assign gt82_drpdi_o[7] = \<const0> ;
  assign gt82_drpdi_o[6] = \<const0> ;
  assign gt82_drpdi_o[5] = \<const0> ;
  assign gt82_drpdi_o[4] = \<const0> ;
  assign gt82_drpdi_o[3] = \<const0> ;
  assign gt82_drpdi_o[2] = \<const0> ;
  assign gt82_drpdi_o[1] = \<const0> ;
  assign gt82_drpdi_o[0] = \<const0> ;
  assign gt82_drpen_o = \<const0> ;
  assign gt82_drpwe_o = \<const0> ;
  assign gt83_drpaddr_o[9] = \<const0> ;
  assign gt83_drpaddr_o[8] = \<const0> ;
  assign gt83_drpaddr_o[7] = \<const0> ;
  assign gt83_drpaddr_o[6] = \<const0> ;
  assign gt83_drpaddr_o[5] = \<const0> ;
  assign gt83_drpaddr_o[4] = \<const0> ;
  assign gt83_drpaddr_o[3] = \<const0> ;
  assign gt83_drpaddr_o[2] = \<const0> ;
  assign gt83_drpaddr_o[1] = \<const0> ;
  assign gt83_drpaddr_o[0] = \<const0> ;
  assign gt83_drpdi_o[15] = \<const0> ;
  assign gt83_drpdi_o[14] = \<const0> ;
  assign gt83_drpdi_o[13] = \<const0> ;
  assign gt83_drpdi_o[12] = \<const0> ;
  assign gt83_drpdi_o[11] = \<const0> ;
  assign gt83_drpdi_o[10] = \<const0> ;
  assign gt83_drpdi_o[9] = \<const0> ;
  assign gt83_drpdi_o[8] = \<const0> ;
  assign gt83_drpdi_o[7] = \<const0> ;
  assign gt83_drpdi_o[6] = \<const0> ;
  assign gt83_drpdi_o[5] = \<const0> ;
  assign gt83_drpdi_o[4] = \<const0> ;
  assign gt83_drpdi_o[3] = \<const0> ;
  assign gt83_drpdi_o[2] = \<const0> ;
  assign gt83_drpdi_o[1] = \<const0> ;
  assign gt83_drpdi_o[0] = \<const0> ;
  assign gt83_drpen_o = \<const0> ;
  assign gt83_drpwe_o = \<const0> ;
  assign gt84_drpaddr_o[9] = \<const0> ;
  assign gt84_drpaddr_o[8] = \<const0> ;
  assign gt84_drpaddr_o[7] = \<const0> ;
  assign gt84_drpaddr_o[6] = \<const0> ;
  assign gt84_drpaddr_o[5] = \<const0> ;
  assign gt84_drpaddr_o[4] = \<const0> ;
  assign gt84_drpaddr_o[3] = \<const0> ;
  assign gt84_drpaddr_o[2] = \<const0> ;
  assign gt84_drpaddr_o[1] = \<const0> ;
  assign gt84_drpaddr_o[0] = \<const0> ;
  assign gt84_drpdi_o[15] = \<const0> ;
  assign gt84_drpdi_o[14] = \<const0> ;
  assign gt84_drpdi_o[13] = \<const0> ;
  assign gt84_drpdi_o[12] = \<const0> ;
  assign gt84_drpdi_o[11] = \<const0> ;
  assign gt84_drpdi_o[10] = \<const0> ;
  assign gt84_drpdi_o[9] = \<const0> ;
  assign gt84_drpdi_o[8] = \<const0> ;
  assign gt84_drpdi_o[7] = \<const0> ;
  assign gt84_drpdi_o[6] = \<const0> ;
  assign gt84_drpdi_o[5] = \<const0> ;
  assign gt84_drpdi_o[4] = \<const0> ;
  assign gt84_drpdi_o[3] = \<const0> ;
  assign gt84_drpdi_o[2] = \<const0> ;
  assign gt84_drpdi_o[1] = \<const0> ;
  assign gt84_drpdi_o[0] = \<const0> ;
  assign gt84_drpen_o = \<const0> ;
  assign gt84_drpwe_o = \<const0> ;
  assign gt85_drpaddr_o[9] = \<const0> ;
  assign gt85_drpaddr_o[8] = \<const0> ;
  assign gt85_drpaddr_o[7] = \<const0> ;
  assign gt85_drpaddr_o[6] = \<const0> ;
  assign gt85_drpaddr_o[5] = \<const0> ;
  assign gt85_drpaddr_o[4] = \<const0> ;
  assign gt85_drpaddr_o[3] = \<const0> ;
  assign gt85_drpaddr_o[2] = \<const0> ;
  assign gt85_drpaddr_o[1] = \<const0> ;
  assign gt85_drpaddr_o[0] = \<const0> ;
  assign gt85_drpdi_o[15] = \<const0> ;
  assign gt85_drpdi_o[14] = \<const0> ;
  assign gt85_drpdi_o[13] = \<const0> ;
  assign gt85_drpdi_o[12] = \<const0> ;
  assign gt85_drpdi_o[11] = \<const0> ;
  assign gt85_drpdi_o[10] = \<const0> ;
  assign gt85_drpdi_o[9] = \<const0> ;
  assign gt85_drpdi_o[8] = \<const0> ;
  assign gt85_drpdi_o[7] = \<const0> ;
  assign gt85_drpdi_o[6] = \<const0> ;
  assign gt85_drpdi_o[5] = \<const0> ;
  assign gt85_drpdi_o[4] = \<const0> ;
  assign gt85_drpdi_o[3] = \<const0> ;
  assign gt85_drpdi_o[2] = \<const0> ;
  assign gt85_drpdi_o[1] = \<const0> ;
  assign gt85_drpdi_o[0] = \<const0> ;
  assign gt85_drpen_o = \<const0> ;
  assign gt85_drpwe_o = \<const0> ;
  assign gt86_drpaddr_o[9] = \<const0> ;
  assign gt86_drpaddr_o[8] = \<const0> ;
  assign gt86_drpaddr_o[7] = \<const0> ;
  assign gt86_drpaddr_o[6] = \<const0> ;
  assign gt86_drpaddr_o[5] = \<const0> ;
  assign gt86_drpaddr_o[4] = \<const0> ;
  assign gt86_drpaddr_o[3] = \<const0> ;
  assign gt86_drpaddr_o[2] = \<const0> ;
  assign gt86_drpaddr_o[1] = \<const0> ;
  assign gt86_drpaddr_o[0] = \<const0> ;
  assign gt86_drpdi_o[15] = \<const0> ;
  assign gt86_drpdi_o[14] = \<const0> ;
  assign gt86_drpdi_o[13] = \<const0> ;
  assign gt86_drpdi_o[12] = \<const0> ;
  assign gt86_drpdi_o[11] = \<const0> ;
  assign gt86_drpdi_o[10] = \<const0> ;
  assign gt86_drpdi_o[9] = \<const0> ;
  assign gt86_drpdi_o[8] = \<const0> ;
  assign gt86_drpdi_o[7] = \<const0> ;
  assign gt86_drpdi_o[6] = \<const0> ;
  assign gt86_drpdi_o[5] = \<const0> ;
  assign gt86_drpdi_o[4] = \<const0> ;
  assign gt86_drpdi_o[3] = \<const0> ;
  assign gt86_drpdi_o[2] = \<const0> ;
  assign gt86_drpdi_o[1] = \<const0> ;
  assign gt86_drpdi_o[0] = \<const0> ;
  assign gt86_drpen_o = \<const0> ;
  assign gt86_drpwe_o = \<const0> ;
  assign gt87_drpaddr_o[9] = \<const0> ;
  assign gt87_drpaddr_o[8] = \<const0> ;
  assign gt87_drpaddr_o[7] = \<const0> ;
  assign gt87_drpaddr_o[6] = \<const0> ;
  assign gt87_drpaddr_o[5] = \<const0> ;
  assign gt87_drpaddr_o[4] = \<const0> ;
  assign gt87_drpaddr_o[3] = \<const0> ;
  assign gt87_drpaddr_o[2] = \<const0> ;
  assign gt87_drpaddr_o[1] = \<const0> ;
  assign gt87_drpaddr_o[0] = \<const0> ;
  assign gt87_drpdi_o[15] = \<const0> ;
  assign gt87_drpdi_o[14] = \<const0> ;
  assign gt87_drpdi_o[13] = \<const0> ;
  assign gt87_drpdi_o[12] = \<const0> ;
  assign gt87_drpdi_o[11] = \<const0> ;
  assign gt87_drpdi_o[10] = \<const0> ;
  assign gt87_drpdi_o[9] = \<const0> ;
  assign gt87_drpdi_o[8] = \<const0> ;
  assign gt87_drpdi_o[7] = \<const0> ;
  assign gt87_drpdi_o[6] = \<const0> ;
  assign gt87_drpdi_o[5] = \<const0> ;
  assign gt87_drpdi_o[4] = \<const0> ;
  assign gt87_drpdi_o[3] = \<const0> ;
  assign gt87_drpdi_o[2] = \<const0> ;
  assign gt87_drpdi_o[1] = \<const0> ;
  assign gt87_drpdi_o[0] = \<const0> ;
  assign gt87_drpen_o = \<const0> ;
  assign gt87_drpwe_o = \<const0> ;
  assign gt88_drpaddr_o[9] = \<const0> ;
  assign gt88_drpaddr_o[8] = \<const0> ;
  assign gt88_drpaddr_o[7] = \<const0> ;
  assign gt88_drpaddr_o[6] = \<const0> ;
  assign gt88_drpaddr_o[5] = \<const0> ;
  assign gt88_drpaddr_o[4] = \<const0> ;
  assign gt88_drpaddr_o[3] = \<const0> ;
  assign gt88_drpaddr_o[2] = \<const0> ;
  assign gt88_drpaddr_o[1] = \<const0> ;
  assign gt88_drpaddr_o[0] = \<const0> ;
  assign gt88_drpdi_o[15] = \<const0> ;
  assign gt88_drpdi_o[14] = \<const0> ;
  assign gt88_drpdi_o[13] = \<const0> ;
  assign gt88_drpdi_o[12] = \<const0> ;
  assign gt88_drpdi_o[11] = \<const0> ;
  assign gt88_drpdi_o[10] = \<const0> ;
  assign gt88_drpdi_o[9] = \<const0> ;
  assign gt88_drpdi_o[8] = \<const0> ;
  assign gt88_drpdi_o[7] = \<const0> ;
  assign gt88_drpdi_o[6] = \<const0> ;
  assign gt88_drpdi_o[5] = \<const0> ;
  assign gt88_drpdi_o[4] = \<const0> ;
  assign gt88_drpdi_o[3] = \<const0> ;
  assign gt88_drpdi_o[2] = \<const0> ;
  assign gt88_drpdi_o[1] = \<const0> ;
  assign gt88_drpdi_o[0] = \<const0> ;
  assign gt88_drpen_o = \<const0> ;
  assign gt88_drpwe_o = \<const0> ;
  assign gt89_drpaddr_o[9] = \<const0> ;
  assign gt89_drpaddr_o[8] = \<const0> ;
  assign gt89_drpaddr_o[7] = \<const0> ;
  assign gt89_drpaddr_o[6] = \<const0> ;
  assign gt89_drpaddr_o[5] = \<const0> ;
  assign gt89_drpaddr_o[4] = \<const0> ;
  assign gt89_drpaddr_o[3] = \<const0> ;
  assign gt89_drpaddr_o[2] = \<const0> ;
  assign gt89_drpaddr_o[1] = \<const0> ;
  assign gt89_drpaddr_o[0] = \<const0> ;
  assign gt89_drpdi_o[15] = \<const0> ;
  assign gt89_drpdi_o[14] = \<const0> ;
  assign gt89_drpdi_o[13] = \<const0> ;
  assign gt89_drpdi_o[12] = \<const0> ;
  assign gt89_drpdi_o[11] = \<const0> ;
  assign gt89_drpdi_o[10] = \<const0> ;
  assign gt89_drpdi_o[9] = \<const0> ;
  assign gt89_drpdi_o[8] = \<const0> ;
  assign gt89_drpdi_o[7] = \<const0> ;
  assign gt89_drpdi_o[6] = \<const0> ;
  assign gt89_drpdi_o[5] = \<const0> ;
  assign gt89_drpdi_o[4] = \<const0> ;
  assign gt89_drpdi_o[3] = \<const0> ;
  assign gt89_drpdi_o[2] = \<const0> ;
  assign gt89_drpdi_o[1] = \<const0> ;
  assign gt89_drpdi_o[0] = \<const0> ;
  assign gt89_drpen_o = \<const0> ;
  assign gt89_drpwe_o = \<const0> ;
  assign gt8_drpaddr_o[9] = \<const0> ;
  assign gt8_drpaddr_o[8] = \<const0> ;
  assign gt8_drpaddr_o[7] = \<const0> ;
  assign gt8_drpaddr_o[6] = \<const0> ;
  assign gt8_drpaddr_o[5] = \<const0> ;
  assign gt8_drpaddr_o[4] = \<const0> ;
  assign gt8_drpaddr_o[3] = \<const0> ;
  assign gt8_drpaddr_o[2] = \<const0> ;
  assign gt8_drpaddr_o[1] = \<const0> ;
  assign gt8_drpaddr_o[0] = \<const0> ;
  assign gt8_drpdi_o[15] = \<const0> ;
  assign gt8_drpdi_o[14] = \<const0> ;
  assign gt8_drpdi_o[13] = \<const0> ;
  assign gt8_drpdi_o[12] = \<const0> ;
  assign gt8_drpdi_o[11] = \<const0> ;
  assign gt8_drpdi_o[10] = \<const0> ;
  assign gt8_drpdi_o[9] = \<const0> ;
  assign gt8_drpdi_o[8] = \<const0> ;
  assign gt8_drpdi_o[7] = \<const0> ;
  assign gt8_drpdi_o[6] = \<const0> ;
  assign gt8_drpdi_o[5] = \<const0> ;
  assign gt8_drpdi_o[4] = \<const0> ;
  assign gt8_drpdi_o[3] = \<const0> ;
  assign gt8_drpdi_o[2] = \<const0> ;
  assign gt8_drpdi_o[1] = \<const0> ;
  assign gt8_drpdi_o[0] = \<const0> ;
  assign gt8_drpen_o = \<const0> ;
  assign gt8_drpwe_o = \<const0> ;
  assign gt90_drpaddr_o[9] = \<const0> ;
  assign gt90_drpaddr_o[8] = \<const0> ;
  assign gt90_drpaddr_o[7] = \<const0> ;
  assign gt90_drpaddr_o[6] = \<const0> ;
  assign gt90_drpaddr_o[5] = \<const0> ;
  assign gt90_drpaddr_o[4] = \<const0> ;
  assign gt90_drpaddr_o[3] = \<const0> ;
  assign gt90_drpaddr_o[2] = \<const0> ;
  assign gt90_drpaddr_o[1] = \<const0> ;
  assign gt90_drpaddr_o[0] = \<const0> ;
  assign gt90_drpdi_o[15] = \<const0> ;
  assign gt90_drpdi_o[14] = \<const0> ;
  assign gt90_drpdi_o[13] = \<const0> ;
  assign gt90_drpdi_o[12] = \<const0> ;
  assign gt90_drpdi_o[11] = \<const0> ;
  assign gt90_drpdi_o[10] = \<const0> ;
  assign gt90_drpdi_o[9] = \<const0> ;
  assign gt90_drpdi_o[8] = \<const0> ;
  assign gt90_drpdi_o[7] = \<const0> ;
  assign gt90_drpdi_o[6] = \<const0> ;
  assign gt90_drpdi_o[5] = \<const0> ;
  assign gt90_drpdi_o[4] = \<const0> ;
  assign gt90_drpdi_o[3] = \<const0> ;
  assign gt90_drpdi_o[2] = \<const0> ;
  assign gt90_drpdi_o[1] = \<const0> ;
  assign gt90_drpdi_o[0] = \<const0> ;
  assign gt90_drpen_o = \<const0> ;
  assign gt90_drpwe_o = \<const0> ;
  assign gt91_drpaddr_o[9] = \<const0> ;
  assign gt91_drpaddr_o[8] = \<const0> ;
  assign gt91_drpaddr_o[7] = \<const0> ;
  assign gt91_drpaddr_o[6] = \<const0> ;
  assign gt91_drpaddr_o[5] = \<const0> ;
  assign gt91_drpaddr_o[4] = \<const0> ;
  assign gt91_drpaddr_o[3] = \<const0> ;
  assign gt91_drpaddr_o[2] = \<const0> ;
  assign gt91_drpaddr_o[1] = \<const0> ;
  assign gt91_drpaddr_o[0] = \<const0> ;
  assign gt91_drpdi_o[15] = \<const0> ;
  assign gt91_drpdi_o[14] = \<const0> ;
  assign gt91_drpdi_o[13] = \<const0> ;
  assign gt91_drpdi_o[12] = \<const0> ;
  assign gt91_drpdi_o[11] = \<const0> ;
  assign gt91_drpdi_o[10] = \<const0> ;
  assign gt91_drpdi_o[9] = \<const0> ;
  assign gt91_drpdi_o[8] = \<const0> ;
  assign gt91_drpdi_o[7] = \<const0> ;
  assign gt91_drpdi_o[6] = \<const0> ;
  assign gt91_drpdi_o[5] = \<const0> ;
  assign gt91_drpdi_o[4] = \<const0> ;
  assign gt91_drpdi_o[3] = \<const0> ;
  assign gt91_drpdi_o[2] = \<const0> ;
  assign gt91_drpdi_o[1] = \<const0> ;
  assign gt91_drpdi_o[0] = \<const0> ;
  assign gt91_drpen_o = \<const0> ;
  assign gt91_drpwe_o = \<const0> ;
  assign gt92_drpaddr_o[9] = \<const0> ;
  assign gt92_drpaddr_o[8] = \<const0> ;
  assign gt92_drpaddr_o[7] = \<const0> ;
  assign gt92_drpaddr_o[6] = \<const0> ;
  assign gt92_drpaddr_o[5] = \<const0> ;
  assign gt92_drpaddr_o[4] = \<const0> ;
  assign gt92_drpaddr_o[3] = \<const0> ;
  assign gt92_drpaddr_o[2] = \<const0> ;
  assign gt92_drpaddr_o[1] = \<const0> ;
  assign gt92_drpaddr_o[0] = \<const0> ;
  assign gt92_drpdi_o[15] = \<const0> ;
  assign gt92_drpdi_o[14] = \<const0> ;
  assign gt92_drpdi_o[13] = \<const0> ;
  assign gt92_drpdi_o[12] = \<const0> ;
  assign gt92_drpdi_o[11] = \<const0> ;
  assign gt92_drpdi_o[10] = \<const0> ;
  assign gt92_drpdi_o[9] = \<const0> ;
  assign gt92_drpdi_o[8] = \<const0> ;
  assign gt92_drpdi_o[7] = \<const0> ;
  assign gt92_drpdi_o[6] = \<const0> ;
  assign gt92_drpdi_o[5] = \<const0> ;
  assign gt92_drpdi_o[4] = \<const0> ;
  assign gt92_drpdi_o[3] = \<const0> ;
  assign gt92_drpdi_o[2] = \<const0> ;
  assign gt92_drpdi_o[1] = \<const0> ;
  assign gt92_drpdi_o[0] = \<const0> ;
  assign gt92_drpen_o = \<const0> ;
  assign gt92_drpwe_o = \<const0> ;
  assign gt93_drpaddr_o[9] = \<const0> ;
  assign gt93_drpaddr_o[8] = \<const0> ;
  assign gt93_drpaddr_o[7] = \<const0> ;
  assign gt93_drpaddr_o[6] = \<const0> ;
  assign gt93_drpaddr_o[5] = \<const0> ;
  assign gt93_drpaddr_o[4] = \<const0> ;
  assign gt93_drpaddr_o[3] = \<const0> ;
  assign gt93_drpaddr_o[2] = \<const0> ;
  assign gt93_drpaddr_o[1] = \<const0> ;
  assign gt93_drpaddr_o[0] = \<const0> ;
  assign gt93_drpdi_o[15] = \<const0> ;
  assign gt93_drpdi_o[14] = \<const0> ;
  assign gt93_drpdi_o[13] = \<const0> ;
  assign gt93_drpdi_o[12] = \<const0> ;
  assign gt93_drpdi_o[11] = \<const0> ;
  assign gt93_drpdi_o[10] = \<const0> ;
  assign gt93_drpdi_o[9] = \<const0> ;
  assign gt93_drpdi_o[8] = \<const0> ;
  assign gt93_drpdi_o[7] = \<const0> ;
  assign gt93_drpdi_o[6] = \<const0> ;
  assign gt93_drpdi_o[5] = \<const0> ;
  assign gt93_drpdi_o[4] = \<const0> ;
  assign gt93_drpdi_o[3] = \<const0> ;
  assign gt93_drpdi_o[2] = \<const0> ;
  assign gt93_drpdi_o[1] = \<const0> ;
  assign gt93_drpdi_o[0] = \<const0> ;
  assign gt93_drpen_o = \<const0> ;
  assign gt93_drpwe_o = \<const0> ;
  assign gt94_drpaddr_o[9] = \<const0> ;
  assign gt94_drpaddr_o[8] = \<const0> ;
  assign gt94_drpaddr_o[7] = \<const0> ;
  assign gt94_drpaddr_o[6] = \<const0> ;
  assign gt94_drpaddr_o[5] = \<const0> ;
  assign gt94_drpaddr_o[4] = \<const0> ;
  assign gt94_drpaddr_o[3] = \<const0> ;
  assign gt94_drpaddr_o[2] = \<const0> ;
  assign gt94_drpaddr_o[1] = \<const0> ;
  assign gt94_drpaddr_o[0] = \<const0> ;
  assign gt94_drpdi_o[15] = \<const0> ;
  assign gt94_drpdi_o[14] = \<const0> ;
  assign gt94_drpdi_o[13] = \<const0> ;
  assign gt94_drpdi_o[12] = \<const0> ;
  assign gt94_drpdi_o[11] = \<const0> ;
  assign gt94_drpdi_o[10] = \<const0> ;
  assign gt94_drpdi_o[9] = \<const0> ;
  assign gt94_drpdi_o[8] = \<const0> ;
  assign gt94_drpdi_o[7] = \<const0> ;
  assign gt94_drpdi_o[6] = \<const0> ;
  assign gt94_drpdi_o[5] = \<const0> ;
  assign gt94_drpdi_o[4] = \<const0> ;
  assign gt94_drpdi_o[3] = \<const0> ;
  assign gt94_drpdi_o[2] = \<const0> ;
  assign gt94_drpdi_o[1] = \<const0> ;
  assign gt94_drpdi_o[0] = \<const0> ;
  assign gt94_drpen_o = \<const0> ;
  assign gt94_drpwe_o = \<const0> ;
  assign gt95_drpaddr_o[9] = \<const0> ;
  assign gt95_drpaddr_o[8] = \<const0> ;
  assign gt95_drpaddr_o[7] = \<const0> ;
  assign gt95_drpaddr_o[6] = \<const0> ;
  assign gt95_drpaddr_o[5] = \<const0> ;
  assign gt95_drpaddr_o[4] = \<const0> ;
  assign gt95_drpaddr_o[3] = \<const0> ;
  assign gt95_drpaddr_o[2] = \<const0> ;
  assign gt95_drpaddr_o[1] = \<const0> ;
  assign gt95_drpaddr_o[0] = \<const0> ;
  assign gt95_drpdi_o[15] = \<const0> ;
  assign gt95_drpdi_o[14] = \<const0> ;
  assign gt95_drpdi_o[13] = \<const0> ;
  assign gt95_drpdi_o[12] = \<const0> ;
  assign gt95_drpdi_o[11] = \<const0> ;
  assign gt95_drpdi_o[10] = \<const0> ;
  assign gt95_drpdi_o[9] = \<const0> ;
  assign gt95_drpdi_o[8] = \<const0> ;
  assign gt95_drpdi_o[7] = \<const0> ;
  assign gt95_drpdi_o[6] = \<const0> ;
  assign gt95_drpdi_o[5] = \<const0> ;
  assign gt95_drpdi_o[4] = \<const0> ;
  assign gt95_drpdi_o[3] = \<const0> ;
  assign gt95_drpdi_o[2] = \<const0> ;
  assign gt95_drpdi_o[1] = \<const0> ;
  assign gt95_drpdi_o[0] = \<const0> ;
  assign gt95_drpen_o = \<const0> ;
  assign gt95_drpwe_o = \<const0> ;
  assign gt96_drpaddr_o[9] = \<const0> ;
  assign gt96_drpaddr_o[8] = \<const0> ;
  assign gt96_drpaddr_o[7] = \<const0> ;
  assign gt96_drpaddr_o[6] = \<const0> ;
  assign gt96_drpaddr_o[5] = \<const0> ;
  assign gt96_drpaddr_o[4] = \<const0> ;
  assign gt96_drpaddr_o[3] = \<const0> ;
  assign gt96_drpaddr_o[2] = \<const0> ;
  assign gt96_drpaddr_o[1] = \<const0> ;
  assign gt96_drpaddr_o[0] = \<const0> ;
  assign gt96_drpdi_o[15] = \<const0> ;
  assign gt96_drpdi_o[14] = \<const0> ;
  assign gt96_drpdi_o[13] = \<const0> ;
  assign gt96_drpdi_o[12] = \<const0> ;
  assign gt96_drpdi_o[11] = \<const0> ;
  assign gt96_drpdi_o[10] = \<const0> ;
  assign gt96_drpdi_o[9] = \<const0> ;
  assign gt96_drpdi_o[8] = \<const0> ;
  assign gt96_drpdi_o[7] = \<const0> ;
  assign gt96_drpdi_o[6] = \<const0> ;
  assign gt96_drpdi_o[5] = \<const0> ;
  assign gt96_drpdi_o[4] = \<const0> ;
  assign gt96_drpdi_o[3] = \<const0> ;
  assign gt96_drpdi_o[2] = \<const0> ;
  assign gt96_drpdi_o[1] = \<const0> ;
  assign gt96_drpdi_o[0] = \<const0> ;
  assign gt96_drpen_o = \<const0> ;
  assign gt96_drpwe_o = \<const0> ;
  assign gt97_drpaddr_o[9] = \<const0> ;
  assign gt97_drpaddr_o[8] = \<const0> ;
  assign gt97_drpaddr_o[7] = \<const0> ;
  assign gt97_drpaddr_o[6] = \<const0> ;
  assign gt97_drpaddr_o[5] = \<const0> ;
  assign gt97_drpaddr_o[4] = \<const0> ;
  assign gt97_drpaddr_o[3] = \<const0> ;
  assign gt97_drpaddr_o[2] = \<const0> ;
  assign gt97_drpaddr_o[1] = \<const0> ;
  assign gt97_drpaddr_o[0] = \<const0> ;
  assign gt97_drpdi_o[15] = \<const0> ;
  assign gt97_drpdi_o[14] = \<const0> ;
  assign gt97_drpdi_o[13] = \<const0> ;
  assign gt97_drpdi_o[12] = \<const0> ;
  assign gt97_drpdi_o[11] = \<const0> ;
  assign gt97_drpdi_o[10] = \<const0> ;
  assign gt97_drpdi_o[9] = \<const0> ;
  assign gt97_drpdi_o[8] = \<const0> ;
  assign gt97_drpdi_o[7] = \<const0> ;
  assign gt97_drpdi_o[6] = \<const0> ;
  assign gt97_drpdi_o[5] = \<const0> ;
  assign gt97_drpdi_o[4] = \<const0> ;
  assign gt97_drpdi_o[3] = \<const0> ;
  assign gt97_drpdi_o[2] = \<const0> ;
  assign gt97_drpdi_o[1] = \<const0> ;
  assign gt97_drpdi_o[0] = \<const0> ;
  assign gt97_drpen_o = \<const0> ;
  assign gt97_drpwe_o = \<const0> ;
  assign gt98_drpaddr_o[9] = \<const0> ;
  assign gt98_drpaddr_o[8] = \<const0> ;
  assign gt98_drpaddr_o[7] = \<const0> ;
  assign gt98_drpaddr_o[6] = \<const0> ;
  assign gt98_drpaddr_o[5] = \<const0> ;
  assign gt98_drpaddr_o[4] = \<const0> ;
  assign gt98_drpaddr_o[3] = \<const0> ;
  assign gt98_drpaddr_o[2] = \<const0> ;
  assign gt98_drpaddr_o[1] = \<const0> ;
  assign gt98_drpaddr_o[0] = \<const0> ;
  assign gt98_drpdi_o[15] = \<const0> ;
  assign gt98_drpdi_o[14] = \<const0> ;
  assign gt98_drpdi_o[13] = \<const0> ;
  assign gt98_drpdi_o[12] = \<const0> ;
  assign gt98_drpdi_o[11] = \<const0> ;
  assign gt98_drpdi_o[10] = \<const0> ;
  assign gt98_drpdi_o[9] = \<const0> ;
  assign gt98_drpdi_o[8] = \<const0> ;
  assign gt98_drpdi_o[7] = \<const0> ;
  assign gt98_drpdi_o[6] = \<const0> ;
  assign gt98_drpdi_o[5] = \<const0> ;
  assign gt98_drpdi_o[4] = \<const0> ;
  assign gt98_drpdi_o[3] = \<const0> ;
  assign gt98_drpdi_o[2] = \<const0> ;
  assign gt98_drpdi_o[1] = \<const0> ;
  assign gt98_drpdi_o[0] = \<const0> ;
  assign gt98_drpen_o = \<const0> ;
  assign gt98_drpwe_o = \<const0> ;
  assign gt99_drpaddr_o[9] = \<const0> ;
  assign gt99_drpaddr_o[8] = \<const0> ;
  assign gt99_drpaddr_o[7] = \<const0> ;
  assign gt99_drpaddr_o[6] = \<const0> ;
  assign gt99_drpaddr_o[5] = \<const0> ;
  assign gt99_drpaddr_o[4] = \<const0> ;
  assign gt99_drpaddr_o[3] = \<const0> ;
  assign gt99_drpaddr_o[2] = \<const0> ;
  assign gt99_drpaddr_o[1] = \<const0> ;
  assign gt99_drpaddr_o[0] = \<const0> ;
  assign gt99_drpdi_o[15] = \<const0> ;
  assign gt99_drpdi_o[14] = \<const0> ;
  assign gt99_drpdi_o[13] = \<const0> ;
  assign gt99_drpdi_o[12] = \<const0> ;
  assign gt99_drpdi_o[11] = \<const0> ;
  assign gt99_drpdi_o[10] = \<const0> ;
  assign gt99_drpdi_o[9] = \<const0> ;
  assign gt99_drpdi_o[8] = \<const0> ;
  assign gt99_drpdi_o[7] = \<const0> ;
  assign gt99_drpdi_o[6] = \<const0> ;
  assign gt99_drpdi_o[5] = \<const0> ;
  assign gt99_drpdi_o[4] = \<const0> ;
  assign gt99_drpdi_o[3] = \<const0> ;
  assign gt99_drpdi_o[2] = \<const0> ;
  assign gt99_drpdi_o[1] = \<const0> ;
  assign gt99_drpdi_o[0] = \<const0> ;
  assign gt99_drpen_o = \<const0> ;
  assign gt99_drpwe_o = \<const0> ;
  assign gt9_drpaddr_o[9] = \<const0> ;
  assign gt9_drpaddr_o[8] = \<const0> ;
  assign gt9_drpaddr_o[7] = \<const0> ;
  assign gt9_drpaddr_o[6] = \<const0> ;
  assign gt9_drpaddr_o[5] = \<const0> ;
  assign gt9_drpaddr_o[4] = \<const0> ;
  assign gt9_drpaddr_o[3] = \<const0> ;
  assign gt9_drpaddr_o[2] = \<const0> ;
  assign gt9_drpaddr_o[1] = \<const0> ;
  assign gt9_drpaddr_o[0] = \<const0> ;
  assign gt9_drpdi_o[15] = \<const0> ;
  assign gt9_drpdi_o[14] = \<const0> ;
  assign gt9_drpdi_o[13] = \<const0> ;
  assign gt9_drpdi_o[12] = \<const0> ;
  assign gt9_drpdi_o[11] = \<const0> ;
  assign gt9_drpdi_o[10] = \<const0> ;
  assign gt9_drpdi_o[9] = \<const0> ;
  assign gt9_drpdi_o[8] = \<const0> ;
  assign gt9_drpdi_o[7] = \<const0> ;
  assign gt9_drpdi_o[6] = \<const0> ;
  assign gt9_drpdi_o[5] = \<const0> ;
  assign gt9_drpdi_o[4] = \<const0> ;
  assign gt9_drpdi_o[3] = \<const0> ;
  assign gt9_drpdi_o[2] = \<const0> ;
  assign gt9_drpdi_o[1] = \<const0> ;
  assign gt9_drpdi_o[0] = \<const0> ;
  assign gt9_drpen_o = \<const0> ;
  assign gt9_drpwe_o = \<const0> ;
  assign sl_oport10[16] = \<const0> ;
  assign sl_oport10[15] = \<const0> ;
  assign sl_oport10[14] = \<const0> ;
  assign sl_oport10[13] = \<const0> ;
  assign sl_oport10[12] = \<const0> ;
  assign sl_oport10[11] = \<const0> ;
  assign sl_oport10[10] = \<const0> ;
  assign sl_oport10[9] = \<const0> ;
  assign sl_oport10[8] = \<const0> ;
  assign sl_oport10[7] = \<const0> ;
  assign sl_oport10[6] = \<const0> ;
  assign sl_oport10[5] = \<const0> ;
  assign sl_oport10[4] = \<const0> ;
  assign sl_oport10[3] = \<const0> ;
  assign sl_oport10[2] = \<const0> ;
  assign sl_oport10[1] = \<const0> ;
  assign sl_oport10[0] = \<const0> ;
  assign sl_oport100[16] = \<const0> ;
  assign sl_oport100[15] = \<const0> ;
  assign sl_oport100[14] = \<const0> ;
  assign sl_oport100[13] = \<const0> ;
  assign sl_oport100[12] = \<const0> ;
  assign sl_oport100[11] = \<const0> ;
  assign sl_oport100[10] = \<const0> ;
  assign sl_oport100[9] = \<const0> ;
  assign sl_oport100[8] = \<const0> ;
  assign sl_oport100[7] = \<const0> ;
  assign sl_oport100[6] = \<const0> ;
  assign sl_oport100[5] = \<const0> ;
  assign sl_oport100[4] = \<const0> ;
  assign sl_oport100[3] = \<const0> ;
  assign sl_oport100[2] = \<const0> ;
  assign sl_oport100[1] = \<const0> ;
  assign sl_oport100[0] = \<const0> ;
  assign sl_oport101[16] = \<const0> ;
  assign sl_oport101[15] = \<const0> ;
  assign sl_oport101[14] = \<const0> ;
  assign sl_oport101[13] = \<const0> ;
  assign sl_oport101[12] = \<const0> ;
  assign sl_oport101[11] = \<const0> ;
  assign sl_oport101[10] = \<const0> ;
  assign sl_oport101[9] = \<const0> ;
  assign sl_oport101[8] = \<const0> ;
  assign sl_oport101[7] = \<const0> ;
  assign sl_oport101[6] = \<const0> ;
  assign sl_oport101[5] = \<const0> ;
  assign sl_oport101[4] = \<const0> ;
  assign sl_oport101[3] = \<const0> ;
  assign sl_oport101[2] = \<const0> ;
  assign sl_oport101[1] = \<const0> ;
  assign sl_oport101[0] = \<const0> ;
  assign sl_oport102[16] = \<const0> ;
  assign sl_oport102[15] = \<const0> ;
  assign sl_oport102[14] = \<const0> ;
  assign sl_oport102[13] = \<const0> ;
  assign sl_oport102[12] = \<const0> ;
  assign sl_oport102[11] = \<const0> ;
  assign sl_oport102[10] = \<const0> ;
  assign sl_oport102[9] = \<const0> ;
  assign sl_oport102[8] = \<const0> ;
  assign sl_oport102[7] = \<const0> ;
  assign sl_oport102[6] = \<const0> ;
  assign sl_oport102[5] = \<const0> ;
  assign sl_oport102[4] = \<const0> ;
  assign sl_oport102[3] = \<const0> ;
  assign sl_oport102[2] = \<const0> ;
  assign sl_oport102[1] = \<const0> ;
  assign sl_oport102[0] = \<const0> ;
  assign sl_oport103[16] = \<const0> ;
  assign sl_oport103[15] = \<const0> ;
  assign sl_oport103[14] = \<const0> ;
  assign sl_oport103[13] = \<const0> ;
  assign sl_oport103[12] = \<const0> ;
  assign sl_oport103[11] = \<const0> ;
  assign sl_oport103[10] = \<const0> ;
  assign sl_oport103[9] = \<const0> ;
  assign sl_oport103[8] = \<const0> ;
  assign sl_oport103[7] = \<const0> ;
  assign sl_oport103[6] = \<const0> ;
  assign sl_oport103[5] = \<const0> ;
  assign sl_oport103[4] = \<const0> ;
  assign sl_oport103[3] = \<const0> ;
  assign sl_oport103[2] = \<const0> ;
  assign sl_oport103[1] = \<const0> ;
  assign sl_oport103[0] = \<const0> ;
  assign sl_oport104[16] = \<const0> ;
  assign sl_oport104[15] = \<const0> ;
  assign sl_oport104[14] = \<const0> ;
  assign sl_oport104[13] = \<const0> ;
  assign sl_oport104[12] = \<const0> ;
  assign sl_oport104[11] = \<const0> ;
  assign sl_oport104[10] = \<const0> ;
  assign sl_oport104[9] = \<const0> ;
  assign sl_oport104[8] = \<const0> ;
  assign sl_oport104[7] = \<const0> ;
  assign sl_oport104[6] = \<const0> ;
  assign sl_oport104[5] = \<const0> ;
  assign sl_oport104[4] = \<const0> ;
  assign sl_oport104[3] = \<const0> ;
  assign sl_oport104[2] = \<const0> ;
  assign sl_oport104[1] = \<const0> ;
  assign sl_oport104[0] = \<const0> ;
  assign sl_oport105[16] = \<const0> ;
  assign sl_oport105[15] = \<const0> ;
  assign sl_oport105[14] = \<const0> ;
  assign sl_oport105[13] = \<const0> ;
  assign sl_oport105[12] = \<const0> ;
  assign sl_oport105[11] = \<const0> ;
  assign sl_oport105[10] = \<const0> ;
  assign sl_oport105[9] = \<const0> ;
  assign sl_oport105[8] = \<const0> ;
  assign sl_oport105[7] = \<const0> ;
  assign sl_oport105[6] = \<const0> ;
  assign sl_oport105[5] = \<const0> ;
  assign sl_oport105[4] = \<const0> ;
  assign sl_oport105[3] = \<const0> ;
  assign sl_oport105[2] = \<const0> ;
  assign sl_oport105[1] = \<const0> ;
  assign sl_oport105[0] = \<const0> ;
  assign sl_oport106[16] = \<const0> ;
  assign sl_oport106[15] = \<const0> ;
  assign sl_oport106[14] = \<const0> ;
  assign sl_oport106[13] = \<const0> ;
  assign sl_oport106[12] = \<const0> ;
  assign sl_oport106[11] = \<const0> ;
  assign sl_oport106[10] = \<const0> ;
  assign sl_oport106[9] = \<const0> ;
  assign sl_oport106[8] = \<const0> ;
  assign sl_oport106[7] = \<const0> ;
  assign sl_oport106[6] = \<const0> ;
  assign sl_oport106[5] = \<const0> ;
  assign sl_oport106[4] = \<const0> ;
  assign sl_oport106[3] = \<const0> ;
  assign sl_oport106[2] = \<const0> ;
  assign sl_oport106[1] = \<const0> ;
  assign sl_oport106[0] = \<const0> ;
  assign sl_oport107[16] = \<const0> ;
  assign sl_oport107[15] = \<const0> ;
  assign sl_oport107[14] = \<const0> ;
  assign sl_oport107[13] = \<const0> ;
  assign sl_oport107[12] = \<const0> ;
  assign sl_oport107[11] = \<const0> ;
  assign sl_oport107[10] = \<const0> ;
  assign sl_oport107[9] = \<const0> ;
  assign sl_oport107[8] = \<const0> ;
  assign sl_oport107[7] = \<const0> ;
  assign sl_oport107[6] = \<const0> ;
  assign sl_oport107[5] = \<const0> ;
  assign sl_oport107[4] = \<const0> ;
  assign sl_oport107[3] = \<const0> ;
  assign sl_oport107[2] = \<const0> ;
  assign sl_oport107[1] = \<const0> ;
  assign sl_oport107[0] = \<const0> ;
  assign sl_oport108[16] = \<const0> ;
  assign sl_oport108[15] = \<const0> ;
  assign sl_oport108[14] = \<const0> ;
  assign sl_oport108[13] = \<const0> ;
  assign sl_oport108[12] = \<const0> ;
  assign sl_oport108[11] = \<const0> ;
  assign sl_oport108[10] = \<const0> ;
  assign sl_oport108[9] = \<const0> ;
  assign sl_oport108[8] = \<const0> ;
  assign sl_oport108[7] = \<const0> ;
  assign sl_oport108[6] = \<const0> ;
  assign sl_oport108[5] = \<const0> ;
  assign sl_oport108[4] = \<const0> ;
  assign sl_oport108[3] = \<const0> ;
  assign sl_oport108[2] = \<const0> ;
  assign sl_oport108[1] = \<const0> ;
  assign sl_oport108[0] = \<const0> ;
  assign sl_oport109[16] = \<const0> ;
  assign sl_oport109[15] = \<const0> ;
  assign sl_oport109[14] = \<const0> ;
  assign sl_oport109[13] = \<const0> ;
  assign sl_oport109[12] = \<const0> ;
  assign sl_oport109[11] = \<const0> ;
  assign sl_oport109[10] = \<const0> ;
  assign sl_oport109[9] = \<const0> ;
  assign sl_oport109[8] = \<const0> ;
  assign sl_oport109[7] = \<const0> ;
  assign sl_oport109[6] = \<const0> ;
  assign sl_oport109[5] = \<const0> ;
  assign sl_oport109[4] = \<const0> ;
  assign sl_oport109[3] = \<const0> ;
  assign sl_oport109[2] = \<const0> ;
  assign sl_oport109[1] = \<const0> ;
  assign sl_oport109[0] = \<const0> ;
  assign sl_oport11[16] = \<const0> ;
  assign sl_oport11[15] = \<const0> ;
  assign sl_oport11[14] = \<const0> ;
  assign sl_oport11[13] = \<const0> ;
  assign sl_oport11[12] = \<const0> ;
  assign sl_oport11[11] = \<const0> ;
  assign sl_oport11[10] = \<const0> ;
  assign sl_oport11[9] = \<const0> ;
  assign sl_oport11[8] = \<const0> ;
  assign sl_oport11[7] = \<const0> ;
  assign sl_oport11[6] = \<const0> ;
  assign sl_oport11[5] = \<const0> ;
  assign sl_oport11[4] = \<const0> ;
  assign sl_oport11[3] = \<const0> ;
  assign sl_oport11[2] = \<const0> ;
  assign sl_oport11[1] = \<const0> ;
  assign sl_oport11[0] = \<const0> ;
  assign sl_oport110[16] = \<const0> ;
  assign sl_oport110[15] = \<const0> ;
  assign sl_oport110[14] = \<const0> ;
  assign sl_oport110[13] = \<const0> ;
  assign sl_oport110[12] = \<const0> ;
  assign sl_oport110[11] = \<const0> ;
  assign sl_oport110[10] = \<const0> ;
  assign sl_oport110[9] = \<const0> ;
  assign sl_oport110[8] = \<const0> ;
  assign sl_oport110[7] = \<const0> ;
  assign sl_oport110[6] = \<const0> ;
  assign sl_oport110[5] = \<const0> ;
  assign sl_oport110[4] = \<const0> ;
  assign sl_oport110[3] = \<const0> ;
  assign sl_oport110[2] = \<const0> ;
  assign sl_oport110[1] = \<const0> ;
  assign sl_oport110[0] = \<const0> ;
  assign sl_oport111[16] = \<const0> ;
  assign sl_oport111[15] = \<const0> ;
  assign sl_oport111[14] = \<const0> ;
  assign sl_oport111[13] = \<const0> ;
  assign sl_oport111[12] = \<const0> ;
  assign sl_oport111[11] = \<const0> ;
  assign sl_oport111[10] = \<const0> ;
  assign sl_oport111[9] = \<const0> ;
  assign sl_oport111[8] = \<const0> ;
  assign sl_oport111[7] = \<const0> ;
  assign sl_oport111[6] = \<const0> ;
  assign sl_oport111[5] = \<const0> ;
  assign sl_oport111[4] = \<const0> ;
  assign sl_oport111[3] = \<const0> ;
  assign sl_oport111[2] = \<const0> ;
  assign sl_oport111[1] = \<const0> ;
  assign sl_oport111[0] = \<const0> ;
  assign sl_oport112[16] = \<const0> ;
  assign sl_oport112[15] = \<const0> ;
  assign sl_oport112[14] = \<const0> ;
  assign sl_oport112[13] = \<const0> ;
  assign sl_oport112[12] = \<const0> ;
  assign sl_oport112[11] = \<const0> ;
  assign sl_oport112[10] = \<const0> ;
  assign sl_oport112[9] = \<const0> ;
  assign sl_oport112[8] = \<const0> ;
  assign sl_oport112[7] = \<const0> ;
  assign sl_oport112[6] = \<const0> ;
  assign sl_oport112[5] = \<const0> ;
  assign sl_oport112[4] = \<const0> ;
  assign sl_oport112[3] = \<const0> ;
  assign sl_oport112[2] = \<const0> ;
  assign sl_oport112[1] = \<const0> ;
  assign sl_oport112[0] = \<const0> ;
  assign sl_oport113[16] = \<const0> ;
  assign sl_oport113[15] = \<const0> ;
  assign sl_oport113[14] = \<const0> ;
  assign sl_oport113[13] = \<const0> ;
  assign sl_oport113[12] = \<const0> ;
  assign sl_oport113[11] = \<const0> ;
  assign sl_oport113[10] = \<const0> ;
  assign sl_oport113[9] = \<const0> ;
  assign sl_oport113[8] = \<const0> ;
  assign sl_oport113[7] = \<const0> ;
  assign sl_oport113[6] = \<const0> ;
  assign sl_oport113[5] = \<const0> ;
  assign sl_oport113[4] = \<const0> ;
  assign sl_oport113[3] = \<const0> ;
  assign sl_oport113[2] = \<const0> ;
  assign sl_oport113[1] = \<const0> ;
  assign sl_oport113[0] = \<const0> ;
  assign sl_oport114[16] = \<const0> ;
  assign sl_oport114[15] = \<const0> ;
  assign sl_oport114[14] = \<const0> ;
  assign sl_oport114[13] = \<const0> ;
  assign sl_oport114[12] = \<const0> ;
  assign sl_oport114[11] = \<const0> ;
  assign sl_oport114[10] = \<const0> ;
  assign sl_oport114[9] = \<const0> ;
  assign sl_oport114[8] = \<const0> ;
  assign sl_oport114[7] = \<const0> ;
  assign sl_oport114[6] = \<const0> ;
  assign sl_oport114[5] = \<const0> ;
  assign sl_oport114[4] = \<const0> ;
  assign sl_oport114[3] = \<const0> ;
  assign sl_oport114[2] = \<const0> ;
  assign sl_oport114[1] = \<const0> ;
  assign sl_oport114[0] = \<const0> ;
  assign sl_oport115[16] = \<const0> ;
  assign sl_oport115[15] = \<const0> ;
  assign sl_oport115[14] = \<const0> ;
  assign sl_oport115[13] = \<const0> ;
  assign sl_oport115[12] = \<const0> ;
  assign sl_oport115[11] = \<const0> ;
  assign sl_oport115[10] = \<const0> ;
  assign sl_oport115[9] = \<const0> ;
  assign sl_oport115[8] = \<const0> ;
  assign sl_oport115[7] = \<const0> ;
  assign sl_oport115[6] = \<const0> ;
  assign sl_oport115[5] = \<const0> ;
  assign sl_oport115[4] = \<const0> ;
  assign sl_oport115[3] = \<const0> ;
  assign sl_oport115[2] = \<const0> ;
  assign sl_oport115[1] = \<const0> ;
  assign sl_oport115[0] = \<const0> ;
  assign sl_oport116[16] = \<const0> ;
  assign sl_oport116[15] = \<const0> ;
  assign sl_oport116[14] = \<const0> ;
  assign sl_oport116[13] = \<const0> ;
  assign sl_oport116[12] = \<const0> ;
  assign sl_oport116[11] = \<const0> ;
  assign sl_oport116[10] = \<const0> ;
  assign sl_oport116[9] = \<const0> ;
  assign sl_oport116[8] = \<const0> ;
  assign sl_oport116[7] = \<const0> ;
  assign sl_oport116[6] = \<const0> ;
  assign sl_oport116[5] = \<const0> ;
  assign sl_oport116[4] = \<const0> ;
  assign sl_oport116[3] = \<const0> ;
  assign sl_oport116[2] = \<const0> ;
  assign sl_oport116[1] = \<const0> ;
  assign sl_oport116[0] = \<const0> ;
  assign sl_oport117[16] = \<const0> ;
  assign sl_oport117[15] = \<const0> ;
  assign sl_oport117[14] = \<const0> ;
  assign sl_oport117[13] = \<const0> ;
  assign sl_oport117[12] = \<const0> ;
  assign sl_oport117[11] = \<const0> ;
  assign sl_oport117[10] = \<const0> ;
  assign sl_oport117[9] = \<const0> ;
  assign sl_oport117[8] = \<const0> ;
  assign sl_oport117[7] = \<const0> ;
  assign sl_oport117[6] = \<const0> ;
  assign sl_oport117[5] = \<const0> ;
  assign sl_oport117[4] = \<const0> ;
  assign sl_oport117[3] = \<const0> ;
  assign sl_oport117[2] = \<const0> ;
  assign sl_oport117[1] = \<const0> ;
  assign sl_oport117[0] = \<const0> ;
  assign sl_oport118[16] = \<const0> ;
  assign sl_oport118[15] = \<const0> ;
  assign sl_oport118[14] = \<const0> ;
  assign sl_oport118[13] = \<const0> ;
  assign sl_oport118[12] = \<const0> ;
  assign sl_oport118[11] = \<const0> ;
  assign sl_oport118[10] = \<const0> ;
  assign sl_oport118[9] = \<const0> ;
  assign sl_oport118[8] = \<const0> ;
  assign sl_oport118[7] = \<const0> ;
  assign sl_oport118[6] = \<const0> ;
  assign sl_oport118[5] = \<const0> ;
  assign sl_oport118[4] = \<const0> ;
  assign sl_oport118[3] = \<const0> ;
  assign sl_oport118[2] = \<const0> ;
  assign sl_oport118[1] = \<const0> ;
  assign sl_oport118[0] = \<const0> ;
  assign sl_oport119[16] = \<const0> ;
  assign sl_oport119[15] = \<const0> ;
  assign sl_oport119[14] = \<const0> ;
  assign sl_oport119[13] = \<const0> ;
  assign sl_oport119[12] = \<const0> ;
  assign sl_oport119[11] = \<const0> ;
  assign sl_oport119[10] = \<const0> ;
  assign sl_oport119[9] = \<const0> ;
  assign sl_oport119[8] = \<const0> ;
  assign sl_oport119[7] = \<const0> ;
  assign sl_oport119[6] = \<const0> ;
  assign sl_oport119[5] = \<const0> ;
  assign sl_oport119[4] = \<const0> ;
  assign sl_oport119[3] = \<const0> ;
  assign sl_oport119[2] = \<const0> ;
  assign sl_oport119[1] = \<const0> ;
  assign sl_oport119[0] = \<const0> ;
  assign sl_oport12[16] = \<const0> ;
  assign sl_oport12[15] = \<const0> ;
  assign sl_oport12[14] = \<const0> ;
  assign sl_oport12[13] = \<const0> ;
  assign sl_oport12[12] = \<const0> ;
  assign sl_oport12[11] = \<const0> ;
  assign sl_oport12[10] = \<const0> ;
  assign sl_oport12[9] = \<const0> ;
  assign sl_oport12[8] = \<const0> ;
  assign sl_oport12[7] = \<const0> ;
  assign sl_oport12[6] = \<const0> ;
  assign sl_oport12[5] = \<const0> ;
  assign sl_oport12[4] = \<const0> ;
  assign sl_oport12[3] = \<const0> ;
  assign sl_oport12[2] = \<const0> ;
  assign sl_oport12[1] = \<const0> ;
  assign sl_oport12[0] = \<const0> ;
  assign sl_oport120[16] = \<const0> ;
  assign sl_oport120[15] = \<const0> ;
  assign sl_oport120[14] = \<const0> ;
  assign sl_oport120[13] = \<const0> ;
  assign sl_oport120[12] = \<const0> ;
  assign sl_oport120[11] = \<const0> ;
  assign sl_oport120[10] = \<const0> ;
  assign sl_oport120[9] = \<const0> ;
  assign sl_oport120[8] = \<const0> ;
  assign sl_oport120[7] = \<const0> ;
  assign sl_oport120[6] = \<const0> ;
  assign sl_oport120[5] = \<const0> ;
  assign sl_oport120[4] = \<const0> ;
  assign sl_oport120[3] = \<const0> ;
  assign sl_oport120[2] = \<const0> ;
  assign sl_oport120[1] = \<const0> ;
  assign sl_oport120[0] = \<const0> ;
  assign sl_oport121[16] = \<const0> ;
  assign sl_oport121[15] = \<const0> ;
  assign sl_oport121[14] = \<const0> ;
  assign sl_oport121[13] = \<const0> ;
  assign sl_oport121[12] = \<const0> ;
  assign sl_oport121[11] = \<const0> ;
  assign sl_oport121[10] = \<const0> ;
  assign sl_oport121[9] = \<const0> ;
  assign sl_oport121[8] = \<const0> ;
  assign sl_oport121[7] = \<const0> ;
  assign sl_oport121[6] = \<const0> ;
  assign sl_oport121[5] = \<const0> ;
  assign sl_oport121[4] = \<const0> ;
  assign sl_oport121[3] = \<const0> ;
  assign sl_oport121[2] = \<const0> ;
  assign sl_oport121[1] = \<const0> ;
  assign sl_oport121[0] = \<const0> ;
  assign sl_oport122[16] = \<const0> ;
  assign sl_oport122[15] = \<const0> ;
  assign sl_oport122[14] = \<const0> ;
  assign sl_oport122[13] = \<const0> ;
  assign sl_oport122[12] = \<const0> ;
  assign sl_oport122[11] = \<const0> ;
  assign sl_oport122[10] = \<const0> ;
  assign sl_oport122[9] = \<const0> ;
  assign sl_oport122[8] = \<const0> ;
  assign sl_oport122[7] = \<const0> ;
  assign sl_oport122[6] = \<const0> ;
  assign sl_oport122[5] = \<const0> ;
  assign sl_oport122[4] = \<const0> ;
  assign sl_oport122[3] = \<const0> ;
  assign sl_oport122[2] = \<const0> ;
  assign sl_oport122[1] = \<const0> ;
  assign sl_oport122[0] = \<const0> ;
  assign sl_oport123[16] = \<const0> ;
  assign sl_oport123[15] = \<const0> ;
  assign sl_oport123[14] = \<const0> ;
  assign sl_oport123[13] = \<const0> ;
  assign sl_oport123[12] = \<const0> ;
  assign sl_oport123[11] = \<const0> ;
  assign sl_oport123[10] = \<const0> ;
  assign sl_oport123[9] = \<const0> ;
  assign sl_oport123[8] = \<const0> ;
  assign sl_oport123[7] = \<const0> ;
  assign sl_oport123[6] = \<const0> ;
  assign sl_oport123[5] = \<const0> ;
  assign sl_oport123[4] = \<const0> ;
  assign sl_oport123[3] = \<const0> ;
  assign sl_oport123[2] = \<const0> ;
  assign sl_oport123[1] = \<const0> ;
  assign sl_oport123[0] = \<const0> ;
  assign sl_oport124[16] = \<const0> ;
  assign sl_oport124[15] = \<const0> ;
  assign sl_oport124[14] = \<const0> ;
  assign sl_oport124[13] = \<const0> ;
  assign sl_oport124[12] = \<const0> ;
  assign sl_oport124[11] = \<const0> ;
  assign sl_oport124[10] = \<const0> ;
  assign sl_oport124[9] = \<const0> ;
  assign sl_oport124[8] = \<const0> ;
  assign sl_oport124[7] = \<const0> ;
  assign sl_oport124[6] = \<const0> ;
  assign sl_oport124[5] = \<const0> ;
  assign sl_oport124[4] = \<const0> ;
  assign sl_oport124[3] = \<const0> ;
  assign sl_oport124[2] = \<const0> ;
  assign sl_oport124[1] = \<const0> ;
  assign sl_oport124[0] = \<const0> ;
  assign sl_oport125[16] = \<const0> ;
  assign sl_oport125[15] = \<const0> ;
  assign sl_oport125[14] = \<const0> ;
  assign sl_oport125[13] = \<const0> ;
  assign sl_oport125[12] = \<const0> ;
  assign sl_oport125[11] = \<const0> ;
  assign sl_oport125[10] = \<const0> ;
  assign sl_oport125[9] = \<const0> ;
  assign sl_oport125[8] = \<const0> ;
  assign sl_oport125[7] = \<const0> ;
  assign sl_oport125[6] = \<const0> ;
  assign sl_oport125[5] = \<const0> ;
  assign sl_oport125[4] = \<const0> ;
  assign sl_oport125[3] = \<const0> ;
  assign sl_oport125[2] = \<const0> ;
  assign sl_oport125[1] = \<const0> ;
  assign sl_oport125[0] = \<const0> ;
  assign sl_oport126[16] = \<const0> ;
  assign sl_oport126[15] = \<const0> ;
  assign sl_oport126[14] = \<const0> ;
  assign sl_oport126[13] = \<const0> ;
  assign sl_oport126[12] = \<const0> ;
  assign sl_oport126[11] = \<const0> ;
  assign sl_oport126[10] = \<const0> ;
  assign sl_oport126[9] = \<const0> ;
  assign sl_oport126[8] = \<const0> ;
  assign sl_oport126[7] = \<const0> ;
  assign sl_oport126[6] = \<const0> ;
  assign sl_oport126[5] = \<const0> ;
  assign sl_oport126[4] = \<const0> ;
  assign sl_oport126[3] = \<const0> ;
  assign sl_oport126[2] = \<const0> ;
  assign sl_oport126[1] = \<const0> ;
  assign sl_oport126[0] = \<const0> ;
  assign sl_oport127[16] = \<const0> ;
  assign sl_oport127[15] = \<const0> ;
  assign sl_oport127[14] = \<const0> ;
  assign sl_oport127[13] = \<const0> ;
  assign sl_oport127[12] = \<const0> ;
  assign sl_oport127[11] = \<const0> ;
  assign sl_oport127[10] = \<const0> ;
  assign sl_oport127[9] = \<const0> ;
  assign sl_oport127[8] = \<const0> ;
  assign sl_oport127[7] = \<const0> ;
  assign sl_oport127[6] = \<const0> ;
  assign sl_oport127[5] = \<const0> ;
  assign sl_oport127[4] = \<const0> ;
  assign sl_oport127[3] = \<const0> ;
  assign sl_oport127[2] = \<const0> ;
  assign sl_oport127[1] = \<const0> ;
  assign sl_oport127[0] = \<const0> ;
  assign sl_oport128[16] = \<const0> ;
  assign sl_oport128[15] = \<const0> ;
  assign sl_oport128[14] = \<const0> ;
  assign sl_oport128[13] = \<const0> ;
  assign sl_oport128[12] = \<const0> ;
  assign sl_oport128[11] = \<const0> ;
  assign sl_oport128[10] = \<const0> ;
  assign sl_oport128[9] = \<const0> ;
  assign sl_oport128[8] = \<const0> ;
  assign sl_oport128[7] = \<const0> ;
  assign sl_oport128[6] = \<const0> ;
  assign sl_oport128[5] = \<const0> ;
  assign sl_oport128[4] = \<const0> ;
  assign sl_oport128[3] = \<const0> ;
  assign sl_oport128[2] = \<const0> ;
  assign sl_oport128[1] = \<const0> ;
  assign sl_oport128[0] = \<const0> ;
  assign sl_oport129[16] = \<const0> ;
  assign sl_oport129[15] = \<const0> ;
  assign sl_oport129[14] = \<const0> ;
  assign sl_oport129[13] = \<const0> ;
  assign sl_oport129[12] = \<const0> ;
  assign sl_oport129[11] = \<const0> ;
  assign sl_oport129[10] = \<const0> ;
  assign sl_oport129[9] = \<const0> ;
  assign sl_oport129[8] = \<const0> ;
  assign sl_oport129[7] = \<const0> ;
  assign sl_oport129[6] = \<const0> ;
  assign sl_oport129[5] = \<const0> ;
  assign sl_oport129[4] = \<const0> ;
  assign sl_oport129[3] = \<const0> ;
  assign sl_oport129[2] = \<const0> ;
  assign sl_oport129[1] = \<const0> ;
  assign sl_oport129[0] = \<const0> ;
  assign sl_oport13[16] = \<const0> ;
  assign sl_oport13[15] = \<const0> ;
  assign sl_oport13[14] = \<const0> ;
  assign sl_oport13[13] = \<const0> ;
  assign sl_oport13[12] = \<const0> ;
  assign sl_oport13[11] = \<const0> ;
  assign sl_oport13[10] = \<const0> ;
  assign sl_oport13[9] = \<const0> ;
  assign sl_oport13[8] = \<const0> ;
  assign sl_oport13[7] = \<const0> ;
  assign sl_oport13[6] = \<const0> ;
  assign sl_oport13[5] = \<const0> ;
  assign sl_oport13[4] = \<const0> ;
  assign sl_oport13[3] = \<const0> ;
  assign sl_oport13[2] = \<const0> ;
  assign sl_oport13[1] = \<const0> ;
  assign sl_oport13[0] = \<const0> ;
  assign sl_oport130[16] = \<const0> ;
  assign sl_oport130[15] = \<const0> ;
  assign sl_oport130[14] = \<const0> ;
  assign sl_oport130[13] = \<const0> ;
  assign sl_oport130[12] = \<const0> ;
  assign sl_oport130[11] = \<const0> ;
  assign sl_oport130[10] = \<const0> ;
  assign sl_oport130[9] = \<const0> ;
  assign sl_oport130[8] = \<const0> ;
  assign sl_oport130[7] = \<const0> ;
  assign sl_oport130[6] = \<const0> ;
  assign sl_oport130[5] = \<const0> ;
  assign sl_oport130[4] = \<const0> ;
  assign sl_oport130[3] = \<const0> ;
  assign sl_oport130[2] = \<const0> ;
  assign sl_oport130[1] = \<const0> ;
  assign sl_oport130[0] = \<const0> ;
  assign sl_oport131[16] = \<const0> ;
  assign sl_oport131[15] = \<const0> ;
  assign sl_oport131[14] = \<const0> ;
  assign sl_oport131[13] = \<const0> ;
  assign sl_oport131[12] = \<const0> ;
  assign sl_oport131[11] = \<const0> ;
  assign sl_oport131[10] = \<const0> ;
  assign sl_oport131[9] = \<const0> ;
  assign sl_oport131[8] = \<const0> ;
  assign sl_oport131[7] = \<const0> ;
  assign sl_oport131[6] = \<const0> ;
  assign sl_oport131[5] = \<const0> ;
  assign sl_oport131[4] = \<const0> ;
  assign sl_oport131[3] = \<const0> ;
  assign sl_oport131[2] = \<const0> ;
  assign sl_oport131[1] = \<const0> ;
  assign sl_oport131[0] = \<const0> ;
  assign sl_oport14[16] = \<const0> ;
  assign sl_oport14[15] = \<const0> ;
  assign sl_oport14[14] = \<const0> ;
  assign sl_oport14[13] = \<const0> ;
  assign sl_oport14[12] = \<const0> ;
  assign sl_oport14[11] = \<const0> ;
  assign sl_oport14[10] = \<const0> ;
  assign sl_oport14[9] = \<const0> ;
  assign sl_oport14[8] = \<const0> ;
  assign sl_oport14[7] = \<const0> ;
  assign sl_oport14[6] = \<const0> ;
  assign sl_oport14[5] = \<const0> ;
  assign sl_oport14[4] = \<const0> ;
  assign sl_oport14[3] = \<const0> ;
  assign sl_oport14[2] = \<const0> ;
  assign sl_oport14[1] = \<const0> ;
  assign sl_oport14[0] = \<const0> ;
  assign sl_oport15[16] = \<const0> ;
  assign sl_oport15[15] = \<const0> ;
  assign sl_oport15[14] = \<const0> ;
  assign sl_oport15[13] = \<const0> ;
  assign sl_oport15[12] = \<const0> ;
  assign sl_oport15[11] = \<const0> ;
  assign sl_oport15[10] = \<const0> ;
  assign sl_oport15[9] = \<const0> ;
  assign sl_oport15[8] = \<const0> ;
  assign sl_oport15[7] = \<const0> ;
  assign sl_oport15[6] = \<const0> ;
  assign sl_oport15[5] = \<const0> ;
  assign sl_oport15[4] = \<const0> ;
  assign sl_oport15[3] = \<const0> ;
  assign sl_oport15[2] = \<const0> ;
  assign sl_oport15[1] = \<const0> ;
  assign sl_oport15[0] = \<const0> ;
  assign sl_oport16[16] = \<const0> ;
  assign sl_oport16[15] = \<const0> ;
  assign sl_oport16[14] = \<const0> ;
  assign sl_oport16[13] = \<const0> ;
  assign sl_oport16[12] = \<const0> ;
  assign sl_oport16[11] = \<const0> ;
  assign sl_oport16[10] = \<const0> ;
  assign sl_oport16[9] = \<const0> ;
  assign sl_oport16[8] = \<const0> ;
  assign sl_oport16[7] = \<const0> ;
  assign sl_oport16[6] = \<const0> ;
  assign sl_oport16[5] = \<const0> ;
  assign sl_oport16[4] = \<const0> ;
  assign sl_oport16[3] = \<const0> ;
  assign sl_oport16[2] = \<const0> ;
  assign sl_oport16[1] = \<const0> ;
  assign sl_oport16[0] = \<const0> ;
  assign sl_oport17[16] = \<const0> ;
  assign sl_oport17[15] = \<const0> ;
  assign sl_oport17[14] = \<const0> ;
  assign sl_oport17[13] = \<const0> ;
  assign sl_oport17[12] = \<const0> ;
  assign sl_oport17[11] = \<const0> ;
  assign sl_oport17[10] = \<const0> ;
  assign sl_oport17[9] = \<const0> ;
  assign sl_oport17[8] = \<const0> ;
  assign sl_oport17[7] = \<const0> ;
  assign sl_oport17[6] = \<const0> ;
  assign sl_oport17[5] = \<const0> ;
  assign sl_oport17[4] = \<const0> ;
  assign sl_oport17[3] = \<const0> ;
  assign sl_oport17[2] = \<const0> ;
  assign sl_oport17[1] = \<const0> ;
  assign sl_oport17[0] = \<const0> ;
  assign sl_oport18[16] = \<const0> ;
  assign sl_oport18[15] = \<const0> ;
  assign sl_oport18[14] = \<const0> ;
  assign sl_oport18[13] = \<const0> ;
  assign sl_oport18[12] = \<const0> ;
  assign sl_oport18[11] = \<const0> ;
  assign sl_oport18[10] = \<const0> ;
  assign sl_oport18[9] = \<const0> ;
  assign sl_oport18[8] = \<const0> ;
  assign sl_oport18[7] = \<const0> ;
  assign sl_oport18[6] = \<const0> ;
  assign sl_oport18[5] = \<const0> ;
  assign sl_oport18[4] = \<const0> ;
  assign sl_oport18[3] = \<const0> ;
  assign sl_oport18[2] = \<const0> ;
  assign sl_oport18[1] = \<const0> ;
  assign sl_oport18[0] = \<const0> ;
  assign sl_oport19[16] = \<const0> ;
  assign sl_oport19[15] = \<const0> ;
  assign sl_oport19[14] = \<const0> ;
  assign sl_oport19[13] = \<const0> ;
  assign sl_oport19[12] = \<const0> ;
  assign sl_oport19[11] = \<const0> ;
  assign sl_oport19[10] = \<const0> ;
  assign sl_oport19[9] = \<const0> ;
  assign sl_oport19[8] = \<const0> ;
  assign sl_oport19[7] = \<const0> ;
  assign sl_oport19[6] = \<const0> ;
  assign sl_oport19[5] = \<const0> ;
  assign sl_oport19[4] = \<const0> ;
  assign sl_oport19[3] = \<const0> ;
  assign sl_oport19[2] = \<const0> ;
  assign sl_oport19[1] = \<const0> ;
  assign sl_oport19[0] = \<const0> ;
  assign sl_oport2[16] = \<const0> ;
  assign sl_oport2[15] = \<const0> ;
  assign sl_oport2[14] = \<const0> ;
  assign sl_oport2[13] = \<const0> ;
  assign sl_oport2[12] = \<const0> ;
  assign sl_oport2[11] = \<const0> ;
  assign sl_oport2[10] = \<const0> ;
  assign sl_oport2[9] = \<const0> ;
  assign sl_oport2[8] = \<const0> ;
  assign sl_oport2[7] = \<const0> ;
  assign sl_oport2[6] = \<const0> ;
  assign sl_oport2[5] = \<const0> ;
  assign sl_oport2[4] = \<const0> ;
  assign sl_oport2[3] = \<const0> ;
  assign sl_oport2[2] = \<const0> ;
  assign sl_oport2[1] = \<const0> ;
  assign sl_oport2[0] = \<const0> ;
  assign sl_oport20[16] = \<const0> ;
  assign sl_oport20[15] = \<const0> ;
  assign sl_oport20[14] = \<const0> ;
  assign sl_oport20[13] = \<const0> ;
  assign sl_oport20[12] = \<const0> ;
  assign sl_oport20[11] = \<const0> ;
  assign sl_oport20[10] = \<const0> ;
  assign sl_oport20[9] = \<const0> ;
  assign sl_oport20[8] = \<const0> ;
  assign sl_oport20[7] = \<const0> ;
  assign sl_oport20[6] = \<const0> ;
  assign sl_oport20[5] = \<const0> ;
  assign sl_oport20[4] = \<const0> ;
  assign sl_oport20[3] = \<const0> ;
  assign sl_oport20[2] = \<const0> ;
  assign sl_oport20[1] = \<const0> ;
  assign sl_oport20[0] = \<const0> ;
  assign sl_oport21[16] = \<const0> ;
  assign sl_oport21[15] = \<const0> ;
  assign sl_oport21[14] = \<const0> ;
  assign sl_oport21[13] = \<const0> ;
  assign sl_oport21[12] = \<const0> ;
  assign sl_oport21[11] = \<const0> ;
  assign sl_oport21[10] = \<const0> ;
  assign sl_oport21[9] = \<const0> ;
  assign sl_oport21[8] = \<const0> ;
  assign sl_oport21[7] = \<const0> ;
  assign sl_oport21[6] = \<const0> ;
  assign sl_oport21[5] = \<const0> ;
  assign sl_oport21[4] = \<const0> ;
  assign sl_oport21[3] = \<const0> ;
  assign sl_oport21[2] = \<const0> ;
  assign sl_oport21[1] = \<const0> ;
  assign sl_oport21[0] = \<const0> ;
  assign sl_oport22[16] = \<const0> ;
  assign sl_oport22[15] = \<const0> ;
  assign sl_oport22[14] = \<const0> ;
  assign sl_oport22[13] = \<const0> ;
  assign sl_oport22[12] = \<const0> ;
  assign sl_oport22[11] = \<const0> ;
  assign sl_oport22[10] = \<const0> ;
  assign sl_oport22[9] = \<const0> ;
  assign sl_oport22[8] = \<const0> ;
  assign sl_oport22[7] = \<const0> ;
  assign sl_oport22[6] = \<const0> ;
  assign sl_oport22[5] = \<const0> ;
  assign sl_oport22[4] = \<const0> ;
  assign sl_oport22[3] = \<const0> ;
  assign sl_oport22[2] = \<const0> ;
  assign sl_oport22[1] = \<const0> ;
  assign sl_oport22[0] = \<const0> ;
  assign sl_oport23[16] = \<const0> ;
  assign sl_oport23[15] = \<const0> ;
  assign sl_oport23[14] = \<const0> ;
  assign sl_oport23[13] = \<const0> ;
  assign sl_oport23[12] = \<const0> ;
  assign sl_oport23[11] = \<const0> ;
  assign sl_oport23[10] = \<const0> ;
  assign sl_oport23[9] = \<const0> ;
  assign sl_oport23[8] = \<const0> ;
  assign sl_oport23[7] = \<const0> ;
  assign sl_oport23[6] = \<const0> ;
  assign sl_oport23[5] = \<const0> ;
  assign sl_oport23[4] = \<const0> ;
  assign sl_oport23[3] = \<const0> ;
  assign sl_oport23[2] = \<const0> ;
  assign sl_oport23[1] = \<const0> ;
  assign sl_oport23[0] = \<const0> ;
  assign sl_oport24[16] = \<const0> ;
  assign sl_oport24[15] = \<const0> ;
  assign sl_oport24[14] = \<const0> ;
  assign sl_oport24[13] = \<const0> ;
  assign sl_oport24[12] = \<const0> ;
  assign sl_oport24[11] = \<const0> ;
  assign sl_oport24[10] = \<const0> ;
  assign sl_oport24[9] = \<const0> ;
  assign sl_oport24[8] = \<const0> ;
  assign sl_oport24[7] = \<const0> ;
  assign sl_oport24[6] = \<const0> ;
  assign sl_oport24[5] = \<const0> ;
  assign sl_oport24[4] = \<const0> ;
  assign sl_oport24[3] = \<const0> ;
  assign sl_oport24[2] = \<const0> ;
  assign sl_oport24[1] = \<const0> ;
  assign sl_oport24[0] = \<const0> ;
  assign sl_oport25[16] = \<const0> ;
  assign sl_oport25[15] = \<const0> ;
  assign sl_oport25[14] = \<const0> ;
  assign sl_oport25[13] = \<const0> ;
  assign sl_oport25[12] = \<const0> ;
  assign sl_oport25[11] = \<const0> ;
  assign sl_oport25[10] = \<const0> ;
  assign sl_oport25[9] = \<const0> ;
  assign sl_oport25[8] = \<const0> ;
  assign sl_oport25[7] = \<const0> ;
  assign sl_oport25[6] = \<const0> ;
  assign sl_oport25[5] = \<const0> ;
  assign sl_oport25[4] = \<const0> ;
  assign sl_oport25[3] = \<const0> ;
  assign sl_oport25[2] = \<const0> ;
  assign sl_oport25[1] = \<const0> ;
  assign sl_oport25[0] = \<const0> ;
  assign sl_oport26[16] = \<const0> ;
  assign sl_oport26[15] = \<const0> ;
  assign sl_oport26[14] = \<const0> ;
  assign sl_oport26[13] = \<const0> ;
  assign sl_oport26[12] = \<const0> ;
  assign sl_oport26[11] = \<const0> ;
  assign sl_oport26[10] = \<const0> ;
  assign sl_oport26[9] = \<const0> ;
  assign sl_oport26[8] = \<const0> ;
  assign sl_oport26[7] = \<const0> ;
  assign sl_oport26[6] = \<const0> ;
  assign sl_oport26[5] = \<const0> ;
  assign sl_oport26[4] = \<const0> ;
  assign sl_oport26[3] = \<const0> ;
  assign sl_oport26[2] = \<const0> ;
  assign sl_oport26[1] = \<const0> ;
  assign sl_oport26[0] = \<const0> ;
  assign sl_oport27[16] = \<const0> ;
  assign sl_oport27[15] = \<const0> ;
  assign sl_oport27[14] = \<const0> ;
  assign sl_oport27[13] = \<const0> ;
  assign sl_oport27[12] = \<const0> ;
  assign sl_oport27[11] = \<const0> ;
  assign sl_oport27[10] = \<const0> ;
  assign sl_oport27[9] = \<const0> ;
  assign sl_oport27[8] = \<const0> ;
  assign sl_oport27[7] = \<const0> ;
  assign sl_oport27[6] = \<const0> ;
  assign sl_oport27[5] = \<const0> ;
  assign sl_oport27[4] = \<const0> ;
  assign sl_oport27[3] = \<const0> ;
  assign sl_oport27[2] = \<const0> ;
  assign sl_oport27[1] = \<const0> ;
  assign sl_oport27[0] = \<const0> ;
  assign sl_oport28[16] = \<const0> ;
  assign sl_oport28[15] = \<const0> ;
  assign sl_oport28[14] = \<const0> ;
  assign sl_oport28[13] = \<const0> ;
  assign sl_oport28[12] = \<const0> ;
  assign sl_oport28[11] = \<const0> ;
  assign sl_oport28[10] = \<const0> ;
  assign sl_oport28[9] = \<const0> ;
  assign sl_oport28[8] = \<const0> ;
  assign sl_oport28[7] = \<const0> ;
  assign sl_oport28[6] = \<const0> ;
  assign sl_oport28[5] = \<const0> ;
  assign sl_oport28[4] = \<const0> ;
  assign sl_oport28[3] = \<const0> ;
  assign sl_oport28[2] = \<const0> ;
  assign sl_oport28[1] = \<const0> ;
  assign sl_oport28[0] = \<const0> ;
  assign sl_oport29[16] = \<const0> ;
  assign sl_oport29[15] = \<const0> ;
  assign sl_oport29[14] = \<const0> ;
  assign sl_oport29[13] = \<const0> ;
  assign sl_oport29[12] = \<const0> ;
  assign sl_oport29[11] = \<const0> ;
  assign sl_oport29[10] = \<const0> ;
  assign sl_oport29[9] = \<const0> ;
  assign sl_oport29[8] = \<const0> ;
  assign sl_oport29[7] = \<const0> ;
  assign sl_oport29[6] = \<const0> ;
  assign sl_oport29[5] = \<const0> ;
  assign sl_oport29[4] = \<const0> ;
  assign sl_oport29[3] = \<const0> ;
  assign sl_oport29[2] = \<const0> ;
  assign sl_oport29[1] = \<const0> ;
  assign sl_oport29[0] = \<const0> ;
  assign sl_oport3[16] = \<const0> ;
  assign sl_oport3[15] = \<const0> ;
  assign sl_oport3[14] = \<const0> ;
  assign sl_oport3[13] = \<const0> ;
  assign sl_oport3[12] = \<const0> ;
  assign sl_oport3[11] = \<const0> ;
  assign sl_oport3[10] = \<const0> ;
  assign sl_oport3[9] = \<const0> ;
  assign sl_oport3[8] = \<const0> ;
  assign sl_oport3[7] = \<const0> ;
  assign sl_oport3[6] = \<const0> ;
  assign sl_oport3[5] = \<const0> ;
  assign sl_oport3[4] = \<const0> ;
  assign sl_oport3[3] = \<const0> ;
  assign sl_oport3[2] = \<const0> ;
  assign sl_oport3[1] = \<const0> ;
  assign sl_oport3[0] = \<const0> ;
  assign sl_oport30[16] = \<const0> ;
  assign sl_oport30[15] = \<const0> ;
  assign sl_oport30[14] = \<const0> ;
  assign sl_oport30[13] = \<const0> ;
  assign sl_oport30[12] = \<const0> ;
  assign sl_oport30[11] = \<const0> ;
  assign sl_oport30[10] = \<const0> ;
  assign sl_oport30[9] = \<const0> ;
  assign sl_oport30[8] = \<const0> ;
  assign sl_oport30[7] = \<const0> ;
  assign sl_oport30[6] = \<const0> ;
  assign sl_oport30[5] = \<const0> ;
  assign sl_oport30[4] = \<const0> ;
  assign sl_oport30[3] = \<const0> ;
  assign sl_oport30[2] = \<const0> ;
  assign sl_oport30[1] = \<const0> ;
  assign sl_oport30[0] = \<const0> ;
  assign sl_oport31[16] = \<const0> ;
  assign sl_oport31[15] = \<const0> ;
  assign sl_oport31[14] = \<const0> ;
  assign sl_oport31[13] = \<const0> ;
  assign sl_oport31[12] = \<const0> ;
  assign sl_oport31[11] = \<const0> ;
  assign sl_oport31[10] = \<const0> ;
  assign sl_oport31[9] = \<const0> ;
  assign sl_oport31[8] = \<const0> ;
  assign sl_oport31[7] = \<const0> ;
  assign sl_oport31[6] = \<const0> ;
  assign sl_oport31[5] = \<const0> ;
  assign sl_oport31[4] = \<const0> ;
  assign sl_oport31[3] = \<const0> ;
  assign sl_oport31[2] = \<const0> ;
  assign sl_oport31[1] = \<const0> ;
  assign sl_oport31[0] = \<const0> ;
  assign sl_oport32[16] = \<const0> ;
  assign sl_oport32[15] = \<const0> ;
  assign sl_oport32[14] = \<const0> ;
  assign sl_oport32[13] = \<const0> ;
  assign sl_oport32[12] = \<const0> ;
  assign sl_oport32[11] = \<const0> ;
  assign sl_oport32[10] = \<const0> ;
  assign sl_oport32[9] = \<const0> ;
  assign sl_oport32[8] = \<const0> ;
  assign sl_oport32[7] = \<const0> ;
  assign sl_oport32[6] = \<const0> ;
  assign sl_oport32[5] = \<const0> ;
  assign sl_oport32[4] = \<const0> ;
  assign sl_oport32[3] = \<const0> ;
  assign sl_oport32[2] = \<const0> ;
  assign sl_oport32[1] = \<const0> ;
  assign sl_oport32[0] = \<const0> ;
  assign sl_oport33[16] = \<const0> ;
  assign sl_oport33[15] = \<const0> ;
  assign sl_oport33[14] = \<const0> ;
  assign sl_oport33[13] = \<const0> ;
  assign sl_oport33[12] = \<const0> ;
  assign sl_oport33[11] = \<const0> ;
  assign sl_oport33[10] = \<const0> ;
  assign sl_oport33[9] = \<const0> ;
  assign sl_oport33[8] = \<const0> ;
  assign sl_oport33[7] = \<const0> ;
  assign sl_oport33[6] = \<const0> ;
  assign sl_oport33[5] = \<const0> ;
  assign sl_oport33[4] = \<const0> ;
  assign sl_oport33[3] = \<const0> ;
  assign sl_oport33[2] = \<const0> ;
  assign sl_oport33[1] = \<const0> ;
  assign sl_oport33[0] = \<const0> ;
  assign sl_oport34[16] = \<const0> ;
  assign sl_oport34[15] = \<const0> ;
  assign sl_oport34[14] = \<const0> ;
  assign sl_oport34[13] = \<const0> ;
  assign sl_oport34[12] = \<const0> ;
  assign sl_oport34[11] = \<const0> ;
  assign sl_oport34[10] = \<const0> ;
  assign sl_oport34[9] = \<const0> ;
  assign sl_oport34[8] = \<const0> ;
  assign sl_oport34[7] = \<const0> ;
  assign sl_oport34[6] = \<const0> ;
  assign sl_oport34[5] = \<const0> ;
  assign sl_oport34[4] = \<const0> ;
  assign sl_oport34[3] = \<const0> ;
  assign sl_oport34[2] = \<const0> ;
  assign sl_oport34[1] = \<const0> ;
  assign sl_oport34[0] = \<const0> ;
  assign sl_oport35[16] = \<const0> ;
  assign sl_oport35[15] = \<const0> ;
  assign sl_oport35[14] = \<const0> ;
  assign sl_oport35[13] = \<const0> ;
  assign sl_oport35[12] = \<const0> ;
  assign sl_oport35[11] = \<const0> ;
  assign sl_oport35[10] = \<const0> ;
  assign sl_oport35[9] = \<const0> ;
  assign sl_oport35[8] = \<const0> ;
  assign sl_oport35[7] = \<const0> ;
  assign sl_oport35[6] = \<const0> ;
  assign sl_oport35[5] = \<const0> ;
  assign sl_oport35[4] = \<const0> ;
  assign sl_oport35[3] = \<const0> ;
  assign sl_oport35[2] = \<const0> ;
  assign sl_oport35[1] = \<const0> ;
  assign sl_oport35[0] = \<const0> ;
  assign sl_oport36[16] = \<const0> ;
  assign sl_oport36[15] = \<const0> ;
  assign sl_oport36[14] = \<const0> ;
  assign sl_oport36[13] = \<const0> ;
  assign sl_oport36[12] = \<const0> ;
  assign sl_oport36[11] = \<const0> ;
  assign sl_oport36[10] = \<const0> ;
  assign sl_oport36[9] = \<const0> ;
  assign sl_oport36[8] = \<const0> ;
  assign sl_oport36[7] = \<const0> ;
  assign sl_oport36[6] = \<const0> ;
  assign sl_oport36[5] = \<const0> ;
  assign sl_oport36[4] = \<const0> ;
  assign sl_oport36[3] = \<const0> ;
  assign sl_oport36[2] = \<const0> ;
  assign sl_oport36[1] = \<const0> ;
  assign sl_oport36[0] = \<const0> ;
  assign sl_oport37[16] = \<const0> ;
  assign sl_oport37[15] = \<const0> ;
  assign sl_oport37[14] = \<const0> ;
  assign sl_oport37[13] = \<const0> ;
  assign sl_oport37[12] = \<const0> ;
  assign sl_oport37[11] = \<const0> ;
  assign sl_oport37[10] = \<const0> ;
  assign sl_oport37[9] = \<const0> ;
  assign sl_oport37[8] = \<const0> ;
  assign sl_oport37[7] = \<const0> ;
  assign sl_oport37[6] = \<const0> ;
  assign sl_oport37[5] = \<const0> ;
  assign sl_oport37[4] = \<const0> ;
  assign sl_oport37[3] = \<const0> ;
  assign sl_oport37[2] = \<const0> ;
  assign sl_oport37[1] = \<const0> ;
  assign sl_oport37[0] = \<const0> ;
  assign sl_oport38[16] = \<const0> ;
  assign sl_oport38[15] = \<const0> ;
  assign sl_oport38[14] = \<const0> ;
  assign sl_oport38[13] = \<const0> ;
  assign sl_oport38[12] = \<const0> ;
  assign sl_oport38[11] = \<const0> ;
  assign sl_oport38[10] = \<const0> ;
  assign sl_oport38[9] = \<const0> ;
  assign sl_oport38[8] = \<const0> ;
  assign sl_oport38[7] = \<const0> ;
  assign sl_oport38[6] = \<const0> ;
  assign sl_oport38[5] = \<const0> ;
  assign sl_oport38[4] = \<const0> ;
  assign sl_oport38[3] = \<const0> ;
  assign sl_oport38[2] = \<const0> ;
  assign sl_oport38[1] = \<const0> ;
  assign sl_oport38[0] = \<const0> ;
  assign sl_oport39[16] = \<const0> ;
  assign sl_oport39[15] = \<const0> ;
  assign sl_oport39[14] = \<const0> ;
  assign sl_oport39[13] = \<const0> ;
  assign sl_oport39[12] = \<const0> ;
  assign sl_oport39[11] = \<const0> ;
  assign sl_oport39[10] = \<const0> ;
  assign sl_oport39[9] = \<const0> ;
  assign sl_oport39[8] = \<const0> ;
  assign sl_oport39[7] = \<const0> ;
  assign sl_oport39[6] = \<const0> ;
  assign sl_oport39[5] = \<const0> ;
  assign sl_oport39[4] = \<const0> ;
  assign sl_oport39[3] = \<const0> ;
  assign sl_oport39[2] = \<const0> ;
  assign sl_oport39[1] = \<const0> ;
  assign sl_oport39[0] = \<const0> ;
  assign sl_oport4[16] = \<const0> ;
  assign sl_oport4[15] = \<const0> ;
  assign sl_oport4[14] = \<const0> ;
  assign sl_oport4[13] = \<const0> ;
  assign sl_oport4[12] = \<const0> ;
  assign sl_oport4[11] = \<const0> ;
  assign sl_oport4[10] = \<const0> ;
  assign sl_oport4[9] = \<const0> ;
  assign sl_oport4[8] = \<const0> ;
  assign sl_oport4[7] = \<const0> ;
  assign sl_oport4[6] = \<const0> ;
  assign sl_oport4[5] = \<const0> ;
  assign sl_oport4[4] = \<const0> ;
  assign sl_oport4[3] = \<const0> ;
  assign sl_oport4[2] = \<const0> ;
  assign sl_oport4[1] = \<const0> ;
  assign sl_oport4[0] = \<const0> ;
  assign sl_oport40[16] = \<const0> ;
  assign sl_oport40[15] = \<const0> ;
  assign sl_oport40[14] = \<const0> ;
  assign sl_oport40[13] = \<const0> ;
  assign sl_oport40[12] = \<const0> ;
  assign sl_oport40[11] = \<const0> ;
  assign sl_oport40[10] = \<const0> ;
  assign sl_oport40[9] = \<const0> ;
  assign sl_oport40[8] = \<const0> ;
  assign sl_oport40[7] = \<const0> ;
  assign sl_oport40[6] = \<const0> ;
  assign sl_oport40[5] = \<const0> ;
  assign sl_oport40[4] = \<const0> ;
  assign sl_oport40[3] = \<const0> ;
  assign sl_oport40[2] = \<const0> ;
  assign sl_oport40[1] = \<const0> ;
  assign sl_oport40[0] = \<const0> ;
  assign sl_oport41[16] = \<const0> ;
  assign sl_oport41[15] = \<const0> ;
  assign sl_oport41[14] = \<const0> ;
  assign sl_oport41[13] = \<const0> ;
  assign sl_oport41[12] = \<const0> ;
  assign sl_oport41[11] = \<const0> ;
  assign sl_oport41[10] = \<const0> ;
  assign sl_oport41[9] = \<const0> ;
  assign sl_oport41[8] = \<const0> ;
  assign sl_oport41[7] = \<const0> ;
  assign sl_oport41[6] = \<const0> ;
  assign sl_oport41[5] = \<const0> ;
  assign sl_oport41[4] = \<const0> ;
  assign sl_oport41[3] = \<const0> ;
  assign sl_oport41[2] = \<const0> ;
  assign sl_oport41[1] = \<const0> ;
  assign sl_oport41[0] = \<const0> ;
  assign sl_oport42[16] = \<const0> ;
  assign sl_oport42[15] = \<const0> ;
  assign sl_oport42[14] = \<const0> ;
  assign sl_oport42[13] = \<const0> ;
  assign sl_oport42[12] = \<const0> ;
  assign sl_oport42[11] = \<const0> ;
  assign sl_oport42[10] = \<const0> ;
  assign sl_oport42[9] = \<const0> ;
  assign sl_oport42[8] = \<const0> ;
  assign sl_oport42[7] = \<const0> ;
  assign sl_oport42[6] = \<const0> ;
  assign sl_oport42[5] = \<const0> ;
  assign sl_oport42[4] = \<const0> ;
  assign sl_oport42[3] = \<const0> ;
  assign sl_oport42[2] = \<const0> ;
  assign sl_oport42[1] = \<const0> ;
  assign sl_oport42[0] = \<const0> ;
  assign sl_oport43[16] = \<const0> ;
  assign sl_oport43[15] = \<const0> ;
  assign sl_oport43[14] = \<const0> ;
  assign sl_oport43[13] = \<const0> ;
  assign sl_oport43[12] = \<const0> ;
  assign sl_oport43[11] = \<const0> ;
  assign sl_oport43[10] = \<const0> ;
  assign sl_oport43[9] = \<const0> ;
  assign sl_oport43[8] = \<const0> ;
  assign sl_oport43[7] = \<const0> ;
  assign sl_oport43[6] = \<const0> ;
  assign sl_oport43[5] = \<const0> ;
  assign sl_oport43[4] = \<const0> ;
  assign sl_oport43[3] = \<const0> ;
  assign sl_oport43[2] = \<const0> ;
  assign sl_oport43[1] = \<const0> ;
  assign sl_oport43[0] = \<const0> ;
  assign sl_oport44[16] = \<const0> ;
  assign sl_oport44[15] = \<const0> ;
  assign sl_oport44[14] = \<const0> ;
  assign sl_oport44[13] = \<const0> ;
  assign sl_oport44[12] = \<const0> ;
  assign sl_oport44[11] = \<const0> ;
  assign sl_oport44[10] = \<const0> ;
  assign sl_oport44[9] = \<const0> ;
  assign sl_oport44[8] = \<const0> ;
  assign sl_oport44[7] = \<const0> ;
  assign sl_oport44[6] = \<const0> ;
  assign sl_oport44[5] = \<const0> ;
  assign sl_oport44[4] = \<const0> ;
  assign sl_oport44[3] = \<const0> ;
  assign sl_oport44[2] = \<const0> ;
  assign sl_oport44[1] = \<const0> ;
  assign sl_oport44[0] = \<const0> ;
  assign sl_oport45[16] = \<const0> ;
  assign sl_oport45[15] = \<const0> ;
  assign sl_oport45[14] = \<const0> ;
  assign sl_oport45[13] = \<const0> ;
  assign sl_oport45[12] = \<const0> ;
  assign sl_oport45[11] = \<const0> ;
  assign sl_oport45[10] = \<const0> ;
  assign sl_oport45[9] = \<const0> ;
  assign sl_oport45[8] = \<const0> ;
  assign sl_oport45[7] = \<const0> ;
  assign sl_oport45[6] = \<const0> ;
  assign sl_oport45[5] = \<const0> ;
  assign sl_oport45[4] = \<const0> ;
  assign sl_oport45[3] = \<const0> ;
  assign sl_oport45[2] = \<const0> ;
  assign sl_oport45[1] = \<const0> ;
  assign sl_oport45[0] = \<const0> ;
  assign sl_oport46[16] = \<const0> ;
  assign sl_oport46[15] = \<const0> ;
  assign sl_oport46[14] = \<const0> ;
  assign sl_oport46[13] = \<const0> ;
  assign sl_oport46[12] = \<const0> ;
  assign sl_oport46[11] = \<const0> ;
  assign sl_oport46[10] = \<const0> ;
  assign sl_oport46[9] = \<const0> ;
  assign sl_oport46[8] = \<const0> ;
  assign sl_oport46[7] = \<const0> ;
  assign sl_oport46[6] = \<const0> ;
  assign sl_oport46[5] = \<const0> ;
  assign sl_oport46[4] = \<const0> ;
  assign sl_oport46[3] = \<const0> ;
  assign sl_oport46[2] = \<const0> ;
  assign sl_oport46[1] = \<const0> ;
  assign sl_oport46[0] = \<const0> ;
  assign sl_oport47[16] = \<const0> ;
  assign sl_oport47[15] = \<const0> ;
  assign sl_oport47[14] = \<const0> ;
  assign sl_oport47[13] = \<const0> ;
  assign sl_oport47[12] = \<const0> ;
  assign sl_oport47[11] = \<const0> ;
  assign sl_oport47[10] = \<const0> ;
  assign sl_oport47[9] = \<const0> ;
  assign sl_oport47[8] = \<const0> ;
  assign sl_oport47[7] = \<const0> ;
  assign sl_oport47[6] = \<const0> ;
  assign sl_oport47[5] = \<const0> ;
  assign sl_oport47[4] = \<const0> ;
  assign sl_oport47[3] = \<const0> ;
  assign sl_oport47[2] = \<const0> ;
  assign sl_oport47[1] = \<const0> ;
  assign sl_oport47[0] = \<const0> ;
  assign sl_oport48[16] = \<const0> ;
  assign sl_oport48[15] = \<const0> ;
  assign sl_oport48[14] = \<const0> ;
  assign sl_oport48[13] = \<const0> ;
  assign sl_oport48[12] = \<const0> ;
  assign sl_oport48[11] = \<const0> ;
  assign sl_oport48[10] = \<const0> ;
  assign sl_oport48[9] = \<const0> ;
  assign sl_oport48[8] = \<const0> ;
  assign sl_oport48[7] = \<const0> ;
  assign sl_oport48[6] = \<const0> ;
  assign sl_oport48[5] = \<const0> ;
  assign sl_oport48[4] = \<const0> ;
  assign sl_oport48[3] = \<const0> ;
  assign sl_oport48[2] = \<const0> ;
  assign sl_oport48[1] = \<const0> ;
  assign sl_oport48[0] = \<const0> ;
  assign sl_oport49[16] = \<const0> ;
  assign sl_oport49[15] = \<const0> ;
  assign sl_oport49[14] = \<const0> ;
  assign sl_oport49[13] = \<const0> ;
  assign sl_oport49[12] = \<const0> ;
  assign sl_oport49[11] = \<const0> ;
  assign sl_oport49[10] = \<const0> ;
  assign sl_oport49[9] = \<const0> ;
  assign sl_oport49[8] = \<const0> ;
  assign sl_oport49[7] = \<const0> ;
  assign sl_oport49[6] = \<const0> ;
  assign sl_oport49[5] = \<const0> ;
  assign sl_oport49[4] = \<const0> ;
  assign sl_oport49[3] = \<const0> ;
  assign sl_oport49[2] = \<const0> ;
  assign sl_oport49[1] = \<const0> ;
  assign sl_oport49[0] = \<const0> ;
  assign sl_oport5[16] = \<const0> ;
  assign sl_oport5[15] = \<const0> ;
  assign sl_oport5[14] = \<const0> ;
  assign sl_oport5[13] = \<const0> ;
  assign sl_oport5[12] = \<const0> ;
  assign sl_oport5[11] = \<const0> ;
  assign sl_oport5[10] = \<const0> ;
  assign sl_oport5[9] = \<const0> ;
  assign sl_oport5[8] = \<const0> ;
  assign sl_oport5[7] = \<const0> ;
  assign sl_oport5[6] = \<const0> ;
  assign sl_oport5[5] = \<const0> ;
  assign sl_oport5[4] = \<const0> ;
  assign sl_oport5[3] = \<const0> ;
  assign sl_oport5[2] = \<const0> ;
  assign sl_oport5[1] = \<const0> ;
  assign sl_oport5[0] = \<const0> ;
  assign sl_oport50[16] = \<const0> ;
  assign sl_oport50[15] = \<const0> ;
  assign sl_oport50[14] = \<const0> ;
  assign sl_oport50[13] = \<const0> ;
  assign sl_oport50[12] = \<const0> ;
  assign sl_oport50[11] = \<const0> ;
  assign sl_oport50[10] = \<const0> ;
  assign sl_oport50[9] = \<const0> ;
  assign sl_oport50[8] = \<const0> ;
  assign sl_oport50[7] = \<const0> ;
  assign sl_oport50[6] = \<const0> ;
  assign sl_oport50[5] = \<const0> ;
  assign sl_oport50[4] = \<const0> ;
  assign sl_oport50[3] = \<const0> ;
  assign sl_oport50[2] = \<const0> ;
  assign sl_oport50[1] = \<const0> ;
  assign sl_oport50[0] = \<const0> ;
  assign sl_oport51[16] = \<const0> ;
  assign sl_oport51[15] = \<const0> ;
  assign sl_oport51[14] = \<const0> ;
  assign sl_oport51[13] = \<const0> ;
  assign sl_oport51[12] = \<const0> ;
  assign sl_oport51[11] = \<const0> ;
  assign sl_oport51[10] = \<const0> ;
  assign sl_oport51[9] = \<const0> ;
  assign sl_oport51[8] = \<const0> ;
  assign sl_oport51[7] = \<const0> ;
  assign sl_oport51[6] = \<const0> ;
  assign sl_oport51[5] = \<const0> ;
  assign sl_oport51[4] = \<const0> ;
  assign sl_oport51[3] = \<const0> ;
  assign sl_oport51[2] = \<const0> ;
  assign sl_oport51[1] = \<const0> ;
  assign sl_oport51[0] = \<const0> ;
  assign sl_oport52[16] = \<const0> ;
  assign sl_oport52[15] = \<const0> ;
  assign sl_oport52[14] = \<const0> ;
  assign sl_oport52[13] = \<const0> ;
  assign sl_oport52[12] = \<const0> ;
  assign sl_oport52[11] = \<const0> ;
  assign sl_oport52[10] = \<const0> ;
  assign sl_oport52[9] = \<const0> ;
  assign sl_oport52[8] = \<const0> ;
  assign sl_oport52[7] = \<const0> ;
  assign sl_oport52[6] = \<const0> ;
  assign sl_oport52[5] = \<const0> ;
  assign sl_oport52[4] = \<const0> ;
  assign sl_oport52[3] = \<const0> ;
  assign sl_oport52[2] = \<const0> ;
  assign sl_oport52[1] = \<const0> ;
  assign sl_oport52[0] = \<const0> ;
  assign sl_oport53[16] = \<const0> ;
  assign sl_oport53[15] = \<const0> ;
  assign sl_oport53[14] = \<const0> ;
  assign sl_oport53[13] = \<const0> ;
  assign sl_oport53[12] = \<const0> ;
  assign sl_oport53[11] = \<const0> ;
  assign sl_oport53[10] = \<const0> ;
  assign sl_oport53[9] = \<const0> ;
  assign sl_oport53[8] = \<const0> ;
  assign sl_oport53[7] = \<const0> ;
  assign sl_oport53[6] = \<const0> ;
  assign sl_oport53[5] = \<const0> ;
  assign sl_oport53[4] = \<const0> ;
  assign sl_oport53[3] = \<const0> ;
  assign sl_oport53[2] = \<const0> ;
  assign sl_oport53[1] = \<const0> ;
  assign sl_oport53[0] = \<const0> ;
  assign sl_oport54[16] = \<const0> ;
  assign sl_oport54[15] = \<const0> ;
  assign sl_oport54[14] = \<const0> ;
  assign sl_oport54[13] = \<const0> ;
  assign sl_oport54[12] = \<const0> ;
  assign sl_oport54[11] = \<const0> ;
  assign sl_oport54[10] = \<const0> ;
  assign sl_oport54[9] = \<const0> ;
  assign sl_oport54[8] = \<const0> ;
  assign sl_oport54[7] = \<const0> ;
  assign sl_oport54[6] = \<const0> ;
  assign sl_oport54[5] = \<const0> ;
  assign sl_oport54[4] = \<const0> ;
  assign sl_oport54[3] = \<const0> ;
  assign sl_oport54[2] = \<const0> ;
  assign sl_oport54[1] = \<const0> ;
  assign sl_oport54[0] = \<const0> ;
  assign sl_oport55[16] = \<const0> ;
  assign sl_oport55[15] = \<const0> ;
  assign sl_oport55[14] = \<const0> ;
  assign sl_oport55[13] = \<const0> ;
  assign sl_oport55[12] = \<const0> ;
  assign sl_oport55[11] = \<const0> ;
  assign sl_oport55[10] = \<const0> ;
  assign sl_oport55[9] = \<const0> ;
  assign sl_oport55[8] = \<const0> ;
  assign sl_oport55[7] = \<const0> ;
  assign sl_oport55[6] = \<const0> ;
  assign sl_oport55[5] = \<const0> ;
  assign sl_oport55[4] = \<const0> ;
  assign sl_oport55[3] = \<const0> ;
  assign sl_oport55[2] = \<const0> ;
  assign sl_oport55[1] = \<const0> ;
  assign sl_oport55[0] = \<const0> ;
  assign sl_oport56[16] = \<const0> ;
  assign sl_oport56[15] = \<const0> ;
  assign sl_oport56[14] = \<const0> ;
  assign sl_oport56[13] = \<const0> ;
  assign sl_oport56[12] = \<const0> ;
  assign sl_oport56[11] = \<const0> ;
  assign sl_oport56[10] = \<const0> ;
  assign sl_oport56[9] = \<const0> ;
  assign sl_oport56[8] = \<const0> ;
  assign sl_oport56[7] = \<const0> ;
  assign sl_oport56[6] = \<const0> ;
  assign sl_oport56[5] = \<const0> ;
  assign sl_oport56[4] = \<const0> ;
  assign sl_oport56[3] = \<const0> ;
  assign sl_oport56[2] = \<const0> ;
  assign sl_oport56[1] = \<const0> ;
  assign sl_oport56[0] = \<const0> ;
  assign sl_oport57[16] = \<const0> ;
  assign sl_oport57[15] = \<const0> ;
  assign sl_oport57[14] = \<const0> ;
  assign sl_oport57[13] = \<const0> ;
  assign sl_oport57[12] = \<const0> ;
  assign sl_oport57[11] = \<const0> ;
  assign sl_oport57[10] = \<const0> ;
  assign sl_oport57[9] = \<const0> ;
  assign sl_oport57[8] = \<const0> ;
  assign sl_oport57[7] = \<const0> ;
  assign sl_oport57[6] = \<const0> ;
  assign sl_oport57[5] = \<const0> ;
  assign sl_oport57[4] = \<const0> ;
  assign sl_oport57[3] = \<const0> ;
  assign sl_oport57[2] = \<const0> ;
  assign sl_oport57[1] = \<const0> ;
  assign sl_oport57[0] = \<const0> ;
  assign sl_oport58[16] = \<const0> ;
  assign sl_oport58[15] = \<const0> ;
  assign sl_oport58[14] = \<const0> ;
  assign sl_oport58[13] = \<const0> ;
  assign sl_oport58[12] = \<const0> ;
  assign sl_oport58[11] = \<const0> ;
  assign sl_oport58[10] = \<const0> ;
  assign sl_oport58[9] = \<const0> ;
  assign sl_oport58[8] = \<const0> ;
  assign sl_oport58[7] = \<const0> ;
  assign sl_oport58[6] = \<const0> ;
  assign sl_oport58[5] = \<const0> ;
  assign sl_oport58[4] = \<const0> ;
  assign sl_oport58[3] = \<const0> ;
  assign sl_oport58[2] = \<const0> ;
  assign sl_oport58[1] = \<const0> ;
  assign sl_oport58[0] = \<const0> ;
  assign sl_oport59[16] = \<const0> ;
  assign sl_oport59[15] = \<const0> ;
  assign sl_oport59[14] = \<const0> ;
  assign sl_oport59[13] = \<const0> ;
  assign sl_oport59[12] = \<const0> ;
  assign sl_oport59[11] = \<const0> ;
  assign sl_oport59[10] = \<const0> ;
  assign sl_oport59[9] = \<const0> ;
  assign sl_oport59[8] = \<const0> ;
  assign sl_oport59[7] = \<const0> ;
  assign sl_oport59[6] = \<const0> ;
  assign sl_oport59[5] = \<const0> ;
  assign sl_oport59[4] = \<const0> ;
  assign sl_oport59[3] = \<const0> ;
  assign sl_oport59[2] = \<const0> ;
  assign sl_oport59[1] = \<const0> ;
  assign sl_oport59[0] = \<const0> ;
  assign sl_oport6[16] = \<const0> ;
  assign sl_oport6[15] = \<const0> ;
  assign sl_oport6[14] = \<const0> ;
  assign sl_oport6[13] = \<const0> ;
  assign sl_oport6[12] = \<const0> ;
  assign sl_oport6[11] = \<const0> ;
  assign sl_oport6[10] = \<const0> ;
  assign sl_oport6[9] = \<const0> ;
  assign sl_oport6[8] = \<const0> ;
  assign sl_oport6[7] = \<const0> ;
  assign sl_oport6[6] = \<const0> ;
  assign sl_oport6[5] = \<const0> ;
  assign sl_oport6[4] = \<const0> ;
  assign sl_oport6[3] = \<const0> ;
  assign sl_oport6[2] = \<const0> ;
  assign sl_oport6[1] = \<const0> ;
  assign sl_oport6[0] = \<const0> ;
  assign sl_oport60[16] = \<const0> ;
  assign sl_oport60[15] = \<const0> ;
  assign sl_oport60[14] = \<const0> ;
  assign sl_oport60[13] = \<const0> ;
  assign sl_oport60[12] = \<const0> ;
  assign sl_oport60[11] = \<const0> ;
  assign sl_oport60[10] = \<const0> ;
  assign sl_oport60[9] = \<const0> ;
  assign sl_oport60[8] = \<const0> ;
  assign sl_oport60[7] = \<const0> ;
  assign sl_oport60[6] = \<const0> ;
  assign sl_oport60[5] = \<const0> ;
  assign sl_oport60[4] = \<const0> ;
  assign sl_oport60[3] = \<const0> ;
  assign sl_oport60[2] = \<const0> ;
  assign sl_oport60[1] = \<const0> ;
  assign sl_oport60[0] = \<const0> ;
  assign sl_oport61[16] = \<const0> ;
  assign sl_oport61[15] = \<const0> ;
  assign sl_oport61[14] = \<const0> ;
  assign sl_oport61[13] = \<const0> ;
  assign sl_oport61[12] = \<const0> ;
  assign sl_oport61[11] = \<const0> ;
  assign sl_oport61[10] = \<const0> ;
  assign sl_oport61[9] = \<const0> ;
  assign sl_oport61[8] = \<const0> ;
  assign sl_oport61[7] = \<const0> ;
  assign sl_oport61[6] = \<const0> ;
  assign sl_oport61[5] = \<const0> ;
  assign sl_oport61[4] = \<const0> ;
  assign sl_oport61[3] = \<const0> ;
  assign sl_oport61[2] = \<const0> ;
  assign sl_oport61[1] = \<const0> ;
  assign sl_oport61[0] = \<const0> ;
  assign sl_oport62[16] = \<const0> ;
  assign sl_oport62[15] = \<const0> ;
  assign sl_oport62[14] = \<const0> ;
  assign sl_oport62[13] = \<const0> ;
  assign sl_oport62[12] = \<const0> ;
  assign sl_oport62[11] = \<const0> ;
  assign sl_oport62[10] = \<const0> ;
  assign sl_oport62[9] = \<const0> ;
  assign sl_oport62[8] = \<const0> ;
  assign sl_oport62[7] = \<const0> ;
  assign sl_oport62[6] = \<const0> ;
  assign sl_oport62[5] = \<const0> ;
  assign sl_oport62[4] = \<const0> ;
  assign sl_oport62[3] = \<const0> ;
  assign sl_oport62[2] = \<const0> ;
  assign sl_oport62[1] = \<const0> ;
  assign sl_oport62[0] = \<const0> ;
  assign sl_oport63[16] = \<const0> ;
  assign sl_oport63[15] = \<const0> ;
  assign sl_oport63[14] = \<const0> ;
  assign sl_oport63[13] = \<const0> ;
  assign sl_oport63[12] = \<const0> ;
  assign sl_oport63[11] = \<const0> ;
  assign sl_oport63[10] = \<const0> ;
  assign sl_oport63[9] = \<const0> ;
  assign sl_oport63[8] = \<const0> ;
  assign sl_oport63[7] = \<const0> ;
  assign sl_oport63[6] = \<const0> ;
  assign sl_oport63[5] = \<const0> ;
  assign sl_oport63[4] = \<const0> ;
  assign sl_oport63[3] = \<const0> ;
  assign sl_oport63[2] = \<const0> ;
  assign sl_oport63[1] = \<const0> ;
  assign sl_oport63[0] = \<const0> ;
  assign sl_oport64[16] = \<const0> ;
  assign sl_oport64[15] = \<const0> ;
  assign sl_oport64[14] = \<const0> ;
  assign sl_oport64[13] = \<const0> ;
  assign sl_oport64[12] = \<const0> ;
  assign sl_oport64[11] = \<const0> ;
  assign sl_oport64[10] = \<const0> ;
  assign sl_oport64[9] = \<const0> ;
  assign sl_oport64[8] = \<const0> ;
  assign sl_oport64[7] = \<const0> ;
  assign sl_oport64[6] = \<const0> ;
  assign sl_oport64[5] = \<const0> ;
  assign sl_oport64[4] = \<const0> ;
  assign sl_oport64[3] = \<const0> ;
  assign sl_oport64[2] = \<const0> ;
  assign sl_oport64[1] = \<const0> ;
  assign sl_oport64[0] = \<const0> ;
  assign sl_oport65[16] = \<const0> ;
  assign sl_oport65[15] = \<const0> ;
  assign sl_oport65[14] = \<const0> ;
  assign sl_oport65[13] = \<const0> ;
  assign sl_oport65[12] = \<const0> ;
  assign sl_oport65[11] = \<const0> ;
  assign sl_oport65[10] = \<const0> ;
  assign sl_oport65[9] = \<const0> ;
  assign sl_oport65[8] = \<const0> ;
  assign sl_oport65[7] = \<const0> ;
  assign sl_oport65[6] = \<const0> ;
  assign sl_oport65[5] = \<const0> ;
  assign sl_oport65[4] = \<const0> ;
  assign sl_oport65[3] = \<const0> ;
  assign sl_oport65[2] = \<const0> ;
  assign sl_oport65[1] = \<const0> ;
  assign sl_oport65[0] = \<const0> ;
  assign sl_oport66[16] = \<const0> ;
  assign sl_oport66[15] = \<const0> ;
  assign sl_oport66[14] = \<const0> ;
  assign sl_oport66[13] = \<const0> ;
  assign sl_oport66[12] = \<const0> ;
  assign sl_oport66[11] = \<const0> ;
  assign sl_oport66[10] = \<const0> ;
  assign sl_oport66[9] = \<const0> ;
  assign sl_oport66[8] = \<const0> ;
  assign sl_oport66[7] = \<const0> ;
  assign sl_oport66[6] = \<const0> ;
  assign sl_oport66[5] = \<const0> ;
  assign sl_oport66[4] = \<const0> ;
  assign sl_oport66[3] = \<const0> ;
  assign sl_oport66[2] = \<const0> ;
  assign sl_oport66[1] = \<const0> ;
  assign sl_oport66[0] = \<const0> ;
  assign sl_oport67[16] = \<const0> ;
  assign sl_oport67[15] = \<const0> ;
  assign sl_oport67[14] = \<const0> ;
  assign sl_oport67[13] = \<const0> ;
  assign sl_oport67[12] = \<const0> ;
  assign sl_oport67[11] = \<const0> ;
  assign sl_oport67[10] = \<const0> ;
  assign sl_oport67[9] = \<const0> ;
  assign sl_oport67[8] = \<const0> ;
  assign sl_oport67[7] = \<const0> ;
  assign sl_oport67[6] = \<const0> ;
  assign sl_oport67[5] = \<const0> ;
  assign sl_oport67[4] = \<const0> ;
  assign sl_oport67[3] = \<const0> ;
  assign sl_oport67[2] = \<const0> ;
  assign sl_oport67[1] = \<const0> ;
  assign sl_oport67[0] = \<const0> ;
  assign sl_oport68[16] = \<const0> ;
  assign sl_oport68[15] = \<const0> ;
  assign sl_oport68[14] = \<const0> ;
  assign sl_oport68[13] = \<const0> ;
  assign sl_oport68[12] = \<const0> ;
  assign sl_oport68[11] = \<const0> ;
  assign sl_oport68[10] = \<const0> ;
  assign sl_oport68[9] = \<const0> ;
  assign sl_oport68[8] = \<const0> ;
  assign sl_oport68[7] = \<const0> ;
  assign sl_oport68[6] = \<const0> ;
  assign sl_oport68[5] = \<const0> ;
  assign sl_oport68[4] = \<const0> ;
  assign sl_oport68[3] = \<const0> ;
  assign sl_oport68[2] = \<const0> ;
  assign sl_oport68[1] = \<const0> ;
  assign sl_oport68[0] = \<const0> ;
  assign sl_oport69[16] = \<const0> ;
  assign sl_oport69[15] = \<const0> ;
  assign sl_oport69[14] = \<const0> ;
  assign sl_oport69[13] = \<const0> ;
  assign sl_oport69[12] = \<const0> ;
  assign sl_oport69[11] = \<const0> ;
  assign sl_oport69[10] = \<const0> ;
  assign sl_oport69[9] = \<const0> ;
  assign sl_oport69[8] = \<const0> ;
  assign sl_oport69[7] = \<const0> ;
  assign sl_oport69[6] = \<const0> ;
  assign sl_oport69[5] = \<const0> ;
  assign sl_oport69[4] = \<const0> ;
  assign sl_oport69[3] = \<const0> ;
  assign sl_oport69[2] = \<const0> ;
  assign sl_oport69[1] = \<const0> ;
  assign sl_oport69[0] = \<const0> ;
  assign sl_oport7[16] = \<const0> ;
  assign sl_oport7[15] = \<const0> ;
  assign sl_oport7[14] = \<const0> ;
  assign sl_oport7[13] = \<const0> ;
  assign sl_oport7[12] = \<const0> ;
  assign sl_oport7[11] = \<const0> ;
  assign sl_oport7[10] = \<const0> ;
  assign sl_oport7[9] = \<const0> ;
  assign sl_oport7[8] = \<const0> ;
  assign sl_oport7[7] = \<const0> ;
  assign sl_oport7[6] = \<const0> ;
  assign sl_oport7[5] = \<const0> ;
  assign sl_oport7[4] = \<const0> ;
  assign sl_oport7[3] = \<const0> ;
  assign sl_oport7[2] = \<const0> ;
  assign sl_oport7[1] = \<const0> ;
  assign sl_oport7[0] = \<const0> ;
  assign sl_oport70[16] = \<const0> ;
  assign sl_oport70[15] = \<const0> ;
  assign sl_oport70[14] = \<const0> ;
  assign sl_oport70[13] = \<const0> ;
  assign sl_oport70[12] = \<const0> ;
  assign sl_oport70[11] = \<const0> ;
  assign sl_oport70[10] = \<const0> ;
  assign sl_oport70[9] = \<const0> ;
  assign sl_oport70[8] = \<const0> ;
  assign sl_oport70[7] = \<const0> ;
  assign sl_oport70[6] = \<const0> ;
  assign sl_oport70[5] = \<const0> ;
  assign sl_oport70[4] = \<const0> ;
  assign sl_oport70[3] = \<const0> ;
  assign sl_oport70[2] = \<const0> ;
  assign sl_oport70[1] = \<const0> ;
  assign sl_oport70[0] = \<const0> ;
  assign sl_oport71[16] = \<const0> ;
  assign sl_oport71[15] = \<const0> ;
  assign sl_oport71[14] = \<const0> ;
  assign sl_oport71[13] = \<const0> ;
  assign sl_oport71[12] = \<const0> ;
  assign sl_oport71[11] = \<const0> ;
  assign sl_oport71[10] = \<const0> ;
  assign sl_oport71[9] = \<const0> ;
  assign sl_oport71[8] = \<const0> ;
  assign sl_oport71[7] = \<const0> ;
  assign sl_oport71[6] = \<const0> ;
  assign sl_oport71[5] = \<const0> ;
  assign sl_oport71[4] = \<const0> ;
  assign sl_oport71[3] = \<const0> ;
  assign sl_oport71[2] = \<const0> ;
  assign sl_oport71[1] = \<const0> ;
  assign sl_oport71[0] = \<const0> ;
  assign sl_oport72[16] = \<const0> ;
  assign sl_oport72[15] = \<const0> ;
  assign sl_oport72[14] = \<const0> ;
  assign sl_oport72[13] = \<const0> ;
  assign sl_oport72[12] = \<const0> ;
  assign sl_oport72[11] = \<const0> ;
  assign sl_oport72[10] = \<const0> ;
  assign sl_oport72[9] = \<const0> ;
  assign sl_oport72[8] = \<const0> ;
  assign sl_oport72[7] = \<const0> ;
  assign sl_oport72[6] = \<const0> ;
  assign sl_oport72[5] = \<const0> ;
  assign sl_oport72[4] = \<const0> ;
  assign sl_oport72[3] = \<const0> ;
  assign sl_oport72[2] = \<const0> ;
  assign sl_oport72[1] = \<const0> ;
  assign sl_oport72[0] = \<const0> ;
  assign sl_oport73[16] = \<const0> ;
  assign sl_oport73[15] = \<const0> ;
  assign sl_oport73[14] = \<const0> ;
  assign sl_oport73[13] = \<const0> ;
  assign sl_oport73[12] = \<const0> ;
  assign sl_oport73[11] = \<const0> ;
  assign sl_oport73[10] = \<const0> ;
  assign sl_oport73[9] = \<const0> ;
  assign sl_oport73[8] = \<const0> ;
  assign sl_oport73[7] = \<const0> ;
  assign sl_oport73[6] = \<const0> ;
  assign sl_oport73[5] = \<const0> ;
  assign sl_oport73[4] = \<const0> ;
  assign sl_oport73[3] = \<const0> ;
  assign sl_oport73[2] = \<const0> ;
  assign sl_oport73[1] = \<const0> ;
  assign sl_oport73[0] = \<const0> ;
  assign sl_oport74[16] = \<const0> ;
  assign sl_oport74[15] = \<const0> ;
  assign sl_oport74[14] = \<const0> ;
  assign sl_oport74[13] = \<const0> ;
  assign sl_oport74[12] = \<const0> ;
  assign sl_oport74[11] = \<const0> ;
  assign sl_oport74[10] = \<const0> ;
  assign sl_oport74[9] = \<const0> ;
  assign sl_oport74[8] = \<const0> ;
  assign sl_oport74[7] = \<const0> ;
  assign sl_oport74[6] = \<const0> ;
  assign sl_oport74[5] = \<const0> ;
  assign sl_oport74[4] = \<const0> ;
  assign sl_oport74[3] = \<const0> ;
  assign sl_oport74[2] = \<const0> ;
  assign sl_oport74[1] = \<const0> ;
  assign sl_oport74[0] = \<const0> ;
  assign sl_oport75[16] = \<const0> ;
  assign sl_oport75[15] = \<const0> ;
  assign sl_oport75[14] = \<const0> ;
  assign sl_oport75[13] = \<const0> ;
  assign sl_oport75[12] = \<const0> ;
  assign sl_oport75[11] = \<const0> ;
  assign sl_oport75[10] = \<const0> ;
  assign sl_oport75[9] = \<const0> ;
  assign sl_oport75[8] = \<const0> ;
  assign sl_oport75[7] = \<const0> ;
  assign sl_oport75[6] = \<const0> ;
  assign sl_oport75[5] = \<const0> ;
  assign sl_oport75[4] = \<const0> ;
  assign sl_oport75[3] = \<const0> ;
  assign sl_oport75[2] = \<const0> ;
  assign sl_oport75[1] = \<const0> ;
  assign sl_oport75[0] = \<const0> ;
  assign sl_oport76[16] = \<const0> ;
  assign sl_oport76[15] = \<const0> ;
  assign sl_oport76[14] = \<const0> ;
  assign sl_oport76[13] = \<const0> ;
  assign sl_oport76[12] = \<const0> ;
  assign sl_oport76[11] = \<const0> ;
  assign sl_oport76[10] = \<const0> ;
  assign sl_oport76[9] = \<const0> ;
  assign sl_oport76[8] = \<const0> ;
  assign sl_oport76[7] = \<const0> ;
  assign sl_oport76[6] = \<const0> ;
  assign sl_oport76[5] = \<const0> ;
  assign sl_oport76[4] = \<const0> ;
  assign sl_oport76[3] = \<const0> ;
  assign sl_oport76[2] = \<const0> ;
  assign sl_oport76[1] = \<const0> ;
  assign sl_oport76[0] = \<const0> ;
  assign sl_oport77[16] = \<const0> ;
  assign sl_oport77[15] = \<const0> ;
  assign sl_oport77[14] = \<const0> ;
  assign sl_oport77[13] = \<const0> ;
  assign sl_oport77[12] = \<const0> ;
  assign sl_oport77[11] = \<const0> ;
  assign sl_oport77[10] = \<const0> ;
  assign sl_oport77[9] = \<const0> ;
  assign sl_oport77[8] = \<const0> ;
  assign sl_oport77[7] = \<const0> ;
  assign sl_oport77[6] = \<const0> ;
  assign sl_oport77[5] = \<const0> ;
  assign sl_oport77[4] = \<const0> ;
  assign sl_oport77[3] = \<const0> ;
  assign sl_oport77[2] = \<const0> ;
  assign sl_oport77[1] = \<const0> ;
  assign sl_oport77[0] = \<const0> ;
  assign sl_oport78[16] = \<const0> ;
  assign sl_oport78[15] = \<const0> ;
  assign sl_oport78[14] = \<const0> ;
  assign sl_oport78[13] = \<const0> ;
  assign sl_oport78[12] = \<const0> ;
  assign sl_oport78[11] = \<const0> ;
  assign sl_oport78[10] = \<const0> ;
  assign sl_oport78[9] = \<const0> ;
  assign sl_oport78[8] = \<const0> ;
  assign sl_oport78[7] = \<const0> ;
  assign sl_oport78[6] = \<const0> ;
  assign sl_oport78[5] = \<const0> ;
  assign sl_oport78[4] = \<const0> ;
  assign sl_oport78[3] = \<const0> ;
  assign sl_oport78[2] = \<const0> ;
  assign sl_oport78[1] = \<const0> ;
  assign sl_oport78[0] = \<const0> ;
  assign sl_oport79[16] = \<const0> ;
  assign sl_oport79[15] = \<const0> ;
  assign sl_oport79[14] = \<const0> ;
  assign sl_oport79[13] = \<const0> ;
  assign sl_oport79[12] = \<const0> ;
  assign sl_oport79[11] = \<const0> ;
  assign sl_oport79[10] = \<const0> ;
  assign sl_oport79[9] = \<const0> ;
  assign sl_oport79[8] = \<const0> ;
  assign sl_oport79[7] = \<const0> ;
  assign sl_oport79[6] = \<const0> ;
  assign sl_oport79[5] = \<const0> ;
  assign sl_oport79[4] = \<const0> ;
  assign sl_oport79[3] = \<const0> ;
  assign sl_oport79[2] = \<const0> ;
  assign sl_oport79[1] = \<const0> ;
  assign sl_oport79[0] = \<const0> ;
  assign sl_oport8[16] = \<const0> ;
  assign sl_oport8[15] = \<const0> ;
  assign sl_oport8[14] = \<const0> ;
  assign sl_oport8[13] = \<const0> ;
  assign sl_oport8[12] = \<const0> ;
  assign sl_oport8[11] = \<const0> ;
  assign sl_oport8[10] = \<const0> ;
  assign sl_oport8[9] = \<const0> ;
  assign sl_oport8[8] = \<const0> ;
  assign sl_oport8[7] = \<const0> ;
  assign sl_oport8[6] = \<const0> ;
  assign sl_oport8[5] = \<const0> ;
  assign sl_oport8[4] = \<const0> ;
  assign sl_oport8[3] = \<const0> ;
  assign sl_oport8[2] = \<const0> ;
  assign sl_oport8[1] = \<const0> ;
  assign sl_oport8[0] = \<const0> ;
  assign sl_oport80[16] = \<const0> ;
  assign sl_oport80[15] = \<const0> ;
  assign sl_oport80[14] = \<const0> ;
  assign sl_oport80[13] = \<const0> ;
  assign sl_oport80[12] = \<const0> ;
  assign sl_oport80[11] = \<const0> ;
  assign sl_oport80[10] = \<const0> ;
  assign sl_oport80[9] = \<const0> ;
  assign sl_oport80[8] = \<const0> ;
  assign sl_oport80[7] = \<const0> ;
  assign sl_oport80[6] = \<const0> ;
  assign sl_oport80[5] = \<const0> ;
  assign sl_oport80[4] = \<const0> ;
  assign sl_oport80[3] = \<const0> ;
  assign sl_oport80[2] = \<const0> ;
  assign sl_oport80[1] = \<const0> ;
  assign sl_oport80[0] = \<const0> ;
  assign sl_oport81[16] = \<const0> ;
  assign sl_oport81[15] = \<const0> ;
  assign sl_oport81[14] = \<const0> ;
  assign sl_oport81[13] = \<const0> ;
  assign sl_oport81[12] = \<const0> ;
  assign sl_oport81[11] = \<const0> ;
  assign sl_oport81[10] = \<const0> ;
  assign sl_oport81[9] = \<const0> ;
  assign sl_oport81[8] = \<const0> ;
  assign sl_oport81[7] = \<const0> ;
  assign sl_oport81[6] = \<const0> ;
  assign sl_oport81[5] = \<const0> ;
  assign sl_oport81[4] = \<const0> ;
  assign sl_oport81[3] = \<const0> ;
  assign sl_oport81[2] = \<const0> ;
  assign sl_oport81[1] = \<const0> ;
  assign sl_oport81[0] = \<const0> ;
  assign sl_oport82[16] = \<const0> ;
  assign sl_oport82[15] = \<const0> ;
  assign sl_oport82[14] = \<const0> ;
  assign sl_oport82[13] = \<const0> ;
  assign sl_oport82[12] = \<const0> ;
  assign sl_oport82[11] = \<const0> ;
  assign sl_oport82[10] = \<const0> ;
  assign sl_oport82[9] = \<const0> ;
  assign sl_oport82[8] = \<const0> ;
  assign sl_oport82[7] = \<const0> ;
  assign sl_oport82[6] = \<const0> ;
  assign sl_oport82[5] = \<const0> ;
  assign sl_oport82[4] = \<const0> ;
  assign sl_oport82[3] = \<const0> ;
  assign sl_oport82[2] = \<const0> ;
  assign sl_oport82[1] = \<const0> ;
  assign sl_oport82[0] = \<const0> ;
  assign sl_oport83[16] = \<const0> ;
  assign sl_oport83[15] = \<const0> ;
  assign sl_oport83[14] = \<const0> ;
  assign sl_oport83[13] = \<const0> ;
  assign sl_oport83[12] = \<const0> ;
  assign sl_oport83[11] = \<const0> ;
  assign sl_oport83[10] = \<const0> ;
  assign sl_oport83[9] = \<const0> ;
  assign sl_oport83[8] = \<const0> ;
  assign sl_oport83[7] = \<const0> ;
  assign sl_oport83[6] = \<const0> ;
  assign sl_oport83[5] = \<const0> ;
  assign sl_oport83[4] = \<const0> ;
  assign sl_oport83[3] = \<const0> ;
  assign sl_oport83[2] = \<const0> ;
  assign sl_oport83[1] = \<const0> ;
  assign sl_oport83[0] = \<const0> ;
  assign sl_oport84[16] = \<const0> ;
  assign sl_oport84[15] = \<const0> ;
  assign sl_oport84[14] = \<const0> ;
  assign sl_oport84[13] = \<const0> ;
  assign sl_oport84[12] = \<const0> ;
  assign sl_oport84[11] = \<const0> ;
  assign sl_oport84[10] = \<const0> ;
  assign sl_oport84[9] = \<const0> ;
  assign sl_oport84[8] = \<const0> ;
  assign sl_oport84[7] = \<const0> ;
  assign sl_oport84[6] = \<const0> ;
  assign sl_oport84[5] = \<const0> ;
  assign sl_oport84[4] = \<const0> ;
  assign sl_oport84[3] = \<const0> ;
  assign sl_oport84[2] = \<const0> ;
  assign sl_oport84[1] = \<const0> ;
  assign sl_oport84[0] = \<const0> ;
  assign sl_oport85[16] = \<const0> ;
  assign sl_oport85[15] = \<const0> ;
  assign sl_oport85[14] = \<const0> ;
  assign sl_oport85[13] = \<const0> ;
  assign sl_oport85[12] = \<const0> ;
  assign sl_oport85[11] = \<const0> ;
  assign sl_oport85[10] = \<const0> ;
  assign sl_oport85[9] = \<const0> ;
  assign sl_oport85[8] = \<const0> ;
  assign sl_oport85[7] = \<const0> ;
  assign sl_oport85[6] = \<const0> ;
  assign sl_oport85[5] = \<const0> ;
  assign sl_oport85[4] = \<const0> ;
  assign sl_oport85[3] = \<const0> ;
  assign sl_oport85[2] = \<const0> ;
  assign sl_oport85[1] = \<const0> ;
  assign sl_oport85[0] = \<const0> ;
  assign sl_oport86[16] = \<const0> ;
  assign sl_oport86[15] = \<const0> ;
  assign sl_oport86[14] = \<const0> ;
  assign sl_oport86[13] = \<const0> ;
  assign sl_oport86[12] = \<const0> ;
  assign sl_oport86[11] = \<const0> ;
  assign sl_oport86[10] = \<const0> ;
  assign sl_oport86[9] = \<const0> ;
  assign sl_oport86[8] = \<const0> ;
  assign sl_oport86[7] = \<const0> ;
  assign sl_oport86[6] = \<const0> ;
  assign sl_oport86[5] = \<const0> ;
  assign sl_oport86[4] = \<const0> ;
  assign sl_oport86[3] = \<const0> ;
  assign sl_oport86[2] = \<const0> ;
  assign sl_oport86[1] = \<const0> ;
  assign sl_oport86[0] = \<const0> ;
  assign sl_oport87[16] = \<const0> ;
  assign sl_oport87[15] = \<const0> ;
  assign sl_oport87[14] = \<const0> ;
  assign sl_oport87[13] = \<const0> ;
  assign sl_oport87[12] = \<const0> ;
  assign sl_oport87[11] = \<const0> ;
  assign sl_oport87[10] = \<const0> ;
  assign sl_oport87[9] = \<const0> ;
  assign sl_oport87[8] = \<const0> ;
  assign sl_oport87[7] = \<const0> ;
  assign sl_oport87[6] = \<const0> ;
  assign sl_oport87[5] = \<const0> ;
  assign sl_oport87[4] = \<const0> ;
  assign sl_oport87[3] = \<const0> ;
  assign sl_oport87[2] = \<const0> ;
  assign sl_oport87[1] = \<const0> ;
  assign sl_oport87[0] = \<const0> ;
  assign sl_oport88[16] = \<const0> ;
  assign sl_oport88[15] = \<const0> ;
  assign sl_oport88[14] = \<const0> ;
  assign sl_oport88[13] = \<const0> ;
  assign sl_oport88[12] = \<const0> ;
  assign sl_oport88[11] = \<const0> ;
  assign sl_oport88[10] = \<const0> ;
  assign sl_oport88[9] = \<const0> ;
  assign sl_oport88[8] = \<const0> ;
  assign sl_oport88[7] = \<const0> ;
  assign sl_oport88[6] = \<const0> ;
  assign sl_oport88[5] = \<const0> ;
  assign sl_oport88[4] = \<const0> ;
  assign sl_oport88[3] = \<const0> ;
  assign sl_oport88[2] = \<const0> ;
  assign sl_oport88[1] = \<const0> ;
  assign sl_oport88[0] = \<const0> ;
  assign sl_oport89[16] = \<const0> ;
  assign sl_oport89[15] = \<const0> ;
  assign sl_oport89[14] = \<const0> ;
  assign sl_oport89[13] = \<const0> ;
  assign sl_oport89[12] = \<const0> ;
  assign sl_oport89[11] = \<const0> ;
  assign sl_oport89[10] = \<const0> ;
  assign sl_oport89[9] = \<const0> ;
  assign sl_oport89[8] = \<const0> ;
  assign sl_oport89[7] = \<const0> ;
  assign sl_oport89[6] = \<const0> ;
  assign sl_oport89[5] = \<const0> ;
  assign sl_oport89[4] = \<const0> ;
  assign sl_oport89[3] = \<const0> ;
  assign sl_oport89[2] = \<const0> ;
  assign sl_oport89[1] = \<const0> ;
  assign sl_oport89[0] = \<const0> ;
  assign sl_oport9[16] = \<const0> ;
  assign sl_oport9[15] = \<const0> ;
  assign sl_oport9[14] = \<const0> ;
  assign sl_oport9[13] = \<const0> ;
  assign sl_oport9[12] = \<const0> ;
  assign sl_oport9[11] = \<const0> ;
  assign sl_oport9[10] = \<const0> ;
  assign sl_oport9[9] = \<const0> ;
  assign sl_oport9[8] = \<const0> ;
  assign sl_oport9[7] = \<const0> ;
  assign sl_oport9[6] = \<const0> ;
  assign sl_oport9[5] = \<const0> ;
  assign sl_oport9[4] = \<const0> ;
  assign sl_oport9[3] = \<const0> ;
  assign sl_oport9[2] = \<const0> ;
  assign sl_oport9[1] = \<const0> ;
  assign sl_oport9[0] = \<const0> ;
  assign sl_oport90[16] = \<const0> ;
  assign sl_oport90[15] = \<const0> ;
  assign sl_oport90[14] = \<const0> ;
  assign sl_oport90[13] = \<const0> ;
  assign sl_oport90[12] = \<const0> ;
  assign sl_oport90[11] = \<const0> ;
  assign sl_oport90[10] = \<const0> ;
  assign sl_oport90[9] = \<const0> ;
  assign sl_oport90[8] = \<const0> ;
  assign sl_oport90[7] = \<const0> ;
  assign sl_oport90[6] = \<const0> ;
  assign sl_oport90[5] = \<const0> ;
  assign sl_oport90[4] = \<const0> ;
  assign sl_oport90[3] = \<const0> ;
  assign sl_oport90[2] = \<const0> ;
  assign sl_oport90[1] = \<const0> ;
  assign sl_oport90[0] = \<const0> ;
  assign sl_oport91[16] = \<const0> ;
  assign sl_oport91[15] = \<const0> ;
  assign sl_oport91[14] = \<const0> ;
  assign sl_oport91[13] = \<const0> ;
  assign sl_oport91[12] = \<const0> ;
  assign sl_oport91[11] = \<const0> ;
  assign sl_oport91[10] = \<const0> ;
  assign sl_oport91[9] = \<const0> ;
  assign sl_oport91[8] = \<const0> ;
  assign sl_oport91[7] = \<const0> ;
  assign sl_oport91[6] = \<const0> ;
  assign sl_oport91[5] = \<const0> ;
  assign sl_oport91[4] = \<const0> ;
  assign sl_oport91[3] = \<const0> ;
  assign sl_oport91[2] = \<const0> ;
  assign sl_oport91[1] = \<const0> ;
  assign sl_oport91[0] = \<const0> ;
  assign sl_oport92[16] = \<const0> ;
  assign sl_oport92[15] = \<const0> ;
  assign sl_oport92[14] = \<const0> ;
  assign sl_oport92[13] = \<const0> ;
  assign sl_oport92[12] = \<const0> ;
  assign sl_oport92[11] = \<const0> ;
  assign sl_oport92[10] = \<const0> ;
  assign sl_oport92[9] = \<const0> ;
  assign sl_oport92[8] = \<const0> ;
  assign sl_oport92[7] = \<const0> ;
  assign sl_oport92[6] = \<const0> ;
  assign sl_oport92[5] = \<const0> ;
  assign sl_oport92[4] = \<const0> ;
  assign sl_oport92[3] = \<const0> ;
  assign sl_oport92[2] = \<const0> ;
  assign sl_oport92[1] = \<const0> ;
  assign sl_oport92[0] = \<const0> ;
  assign sl_oport93[16] = \<const0> ;
  assign sl_oport93[15] = \<const0> ;
  assign sl_oport93[14] = \<const0> ;
  assign sl_oport93[13] = \<const0> ;
  assign sl_oport93[12] = \<const0> ;
  assign sl_oport93[11] = \<const0> ;
  assign sl_oport93[10] = \<const0> ;
  assign sl_oport93[9] = \<const0> ;
  assign sl_oport93[8] = \<const0> ;
  assign sl_oport93[7] = \<const0> ;
  assign sl_oport93[6] = \<const0> ;
  assign sl_oport93[5] = \<const0> ;
  assign sl_oport93[4] = \<const0> ;
  assign sl_oport93[3] = \<const0> ;
  assign sl_oport93[2] = \<const0> ;
  assign sl_oport93[1] = \<const0> ;
  assign sl_oport93[0] = \<const0> ;
  assign sl_oport94[16] = \<const0> ;
  assign sl_oport94[15] = \<const0> ;
  assign sl_oport94[14] = \<const0> ;
  assign sl_oport94[13] = \<const0> ;
  assign sl_oport94[12] = \<const0> ;
  assign sl_oport94[11] = \<const0> ;
  assign sl_oport94[10] = \<const0> ;
  assign sl_oport94[9] = \<const0> ;
  assign sl_oport94[8] = \<const0> ;
  assign sl_oport94[7] = \<const0> ;
  assign sl_oport94[6] = \<const0> ;
  assign sl_oport94[5] = \<const0> ;
  assign sl_oport94[4] = \<const0> ;
  assign sl_oport94[3] = \<const0> ;
  assign sl_oport94[2] = \<const0> ;
  assign sl_oport94[1] = \<const0> ;
  assign sl_oport94[0] = \<const0> ;
  assign sl_oport95[16] = \<const0> ;
  assign sl_oport95[15] = \<const0> ;
  assign sl_oport95[14] = \<const0> ;
  assign sl_oport95[13] = \<const0> ;
  assign sl_oport95[12] = \<const0> ;
  assign sl_oport95[11] = \<const0> ;
  assign sl_oport95[10] = \<const0> ;
  assign sl_oport95[9] = \<const0> ;
  assign sl_oport95[8] = \<const0> ;
  assign sl_oport95[7] = \<const0> ;
  assign sl_oport95[6] = \<const0> ;
  assign sl_oport95[5] = \<const0> ;
  assign sl_oport95[4] = \<const0> ;
  assign sl_oport95[3] = \<const0> ;
  assign sl_oport95[2] = \<const0> ;
  assign sl_oport95[1] = \<const0> ;
  assign sl_oport95[0] = \<const0> ;
  assign sl_oport96[16] = \<const0> ;
  assign sl_oport96[15] = \<const0> ;
  assign sl_oport96[14] = \<const0> ;
  assign sl_oport96[13] = \<const0> ;
  assign sl_oport96[12] = \<const0> ;
  assign sl_oport96[11] = \<const0> ;
  assign sl_oport96[10] = \<const0> ;
  assign sl_oport96[9] = \<const0> ;
  assign sl_oport96[8] = \<const0> ;
  assign sl_oport96[7] = \<const0> ;
  assign sl_oport96[6] = \<const0> ;
  assign sl_oport96[5] = \<const0> ;
  assign sl_oport96[4] = \<const0> ;
  assign sl_oport96[3] = \<const0> ;
  assign sl_oport96[2] = \<const0> ;
  assign sl_oport96[1] = \<const0> ;
  assign sl_oport96[0] = \<const0> ;
  assign sl_oport97[16] = \<const0> ;
  assign sl_oport97[15] = \<const0> ;
  assign sl_oport97[14] = \<const0> ;
  assign sl_oport97[13] = \<const0> ;
  assign sl_oport97[12] = \<const0> ;
  assign sl_oport97[11] = \<const0> ;
  assign sl_oport97[10] = \<const0> ;
  assign sl_oport97[9] = \<const0> ;
  assign sl_oport97[8] = \<const0> ;
  assign sl_oport97[7] = \<const0> ;
  assign sl_oport97[6] = \<const0> ;
  assign sl_oport97[5] = \<const0> ;
  assign sl_oport97[4] = \<const0> ;
  assign sl_oport97[3] = \<const0> ;
  assign sl_oport97[2] = \<const0> ;
  assign sl_oport97[1] = \<const0> ;
  assign sl_oport97[0] = \<const0> ;
  assign sl_oport98[16] = \<const0> ;
  assign sl_oport98[15] = \<const0> ;
  assign sl_oport98[14] = \<const0> ;
  assign sl_oport98[13] = \<const0> ;
  assign sl_oport98[12] = \<const0> ;
  assign sl_oport98[11] = \<const0> ;
  assign sl_oport98[10] = \<const0> ;
  assign sl_oport98[9] = \<const0> ;
  assign sl_oport98[8] = \<const0> ;
  assign sl_oport98[7] = \<const0> ;
  assign sl_oport98[6] = \<const0> ;
  assign sl_oport98[5] = \<const0> ;
  assign sl_oport98[4] = \<const0> ;
  assign sl_oport98[3] = \<const0> ;
  assign sl_oport98[2] = \<const0> ;
  assign sl_oport98[1] = \<const0> ;
  assign sl_oport98[0] = \<const0> ;
  assign sl_oport99[16] = \<const0> ;
  assign sl_oport99[15] = \<const0> ;
  assign sl_oport99[14] = \<const0> ;
  assign sl_oport99[13] = \<const0> ;
  assign sl_oport99[12] = \<const0> ;
  assign sl_oport99[11] = \<const0> ;
  assign sl_oport99[10] = \<const0> ;
  assign sl_oport99[9] = \<const0> ;
  assign sl_oport99[8] = \<const0> ;
  assign sl_oport99[7] = \<const0> ;
  assign sl_oport99[6] = \<const0> ;
  assign sl_oport99[5] = \<const0> ;
  assign sl_oport99[4] = \<const0> ;
  assign sl_oport99[3] = \<const0> ;
  assign sl_oport99[2] = \<const0> ;
  assign sl_oport99[1] = \<const0> ;
  assign sl_oport99[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* C_ARBITER_USER_PORTS = "2" *) 
  (* C_BUILD_REVISION = "0" *) 
  (* C_CORE_MAJOR_VER = "3" *) 
  (* C_CORE_MINOR_VER = "0" *) 
  (* C_ENABLE_INPUT_PORTS = "1" *) 
  (* C_GT_COORDINATE = "16'b0000000000011000" *) 
  (* C_GT_TYPE = "GTHE4" *) 
  (* C_NEXT_SLAVE = "1" *) 
  (* C_NUM_GT = "2" *) 
  (* C_QUAD_NUMBER = "16'b0000000011100110" *) 
  (* KEEP_HIERARCHY = "yes" *) 
  c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_gthe4_channel_slave \GTHE4_CH[0].u_gthe4_ch 
       (.clk_i(clk),
        .drpaddr_o(gt0_drpaddr_o),
        .drpclk_i(drpclk_i[0]),
        .drpclk_o(drpclk_o[0]),
        .drpdi_o(gt0_drpdi_o),
        .drpdo_i(gt0_drpdo_i),
        .drpen_o(gt0_drpen_o),
        .drprdy_i(gt0_drprdy_i),
        .drpwe_o(gt0_drpwe_o),
        .eyescanreset_o(eyescanreset_o[0]),
        .mb_daddr_i(mb_daddr[16:0]),
        .mb_den_i(mb_den[0]),
        .mb_di_i(mb_di[15:0]),
        .mb_do_o(mb_do[15:0]),
        .mb_drdy_o(mb_drdy[0]),
        .mb_dwe_i(mb_dwe[0]),
        .mb_reset_o(p_0_in[0]),
        .rxlpmen_i(rxlpmen_i[0]),
        .rxlpmen_o(rxlpmen_o[0]),
        .rxoutclk_i(rxoutclk_i[0]),
        .rxrate_i(rxrate_i[2:0]),
        .rxrate_o(rxrate_o[2:0]),
        .sl_iport_i(sl_iport0),
        .sl_oport_o(sl_oport0),
        .txdiffctrl_i(txdiffctrl_i[4:0]),
        .txdiffctrl_o(txdiffctrl_o[4:0]),
        .txpostcursor_i(txpostcursor_i[4:0]),
        .txpostcursor_o(txpostcursor_o[4:0]),
        .txprecursor_i(txprecursor_i[4:0]),
        .txprecursor_o(txprecursor_o[4:0]));
  (* C_ARBITER_USER_PORTS = "2" *) 
  (* C_BUILD_REVISION = "0" *) 
  (* C_CORE_MAJOR_VER = "3" *) 
  (* C_CORE_MINOR_VER = "0" *) 
  (* C_ENABLE_INPUT_PORTS = "1" *) 
  (* C_GT_COORDINATE = "16'b0000000000011001" *) 
  (* C_GT_TYPE = "GTHE4" *) 
  (* C_NEXT_SLAVE = "0" *) 
  (* C_NUM_GT = "2" *) 
  (* C_QUAD_NUMBER = "16'b0000000011100110" *) 
  (* KEEP_HIERARCHY = "yes" *) 
  c2c_gth_in_system_ibert_0_in_system_ibert_v1_0_11_gthe4_channel_slave__parameterized0 \GTHE4_CH[1].u_gthe4_ch 
       (.clk_i(clk),
        .drpaddr_o(gt1_drpaddr_o),
        .drpclk_i(drpclk_i[1]),
        .drpclk_o(drpclk_o[1]),
        .drpdi_o(gt1_drpdi_o),
        .drpdo_i(gt1_drpdo_i),
        .drpen_o(gt1_drpen_o),
        .drprdy_i(gt1_drprdy_i),
        .drpwe_o(gt1_drpwe_o),
        .eyescanreset_o(eyescanreset_o[1]),
        .mb_daddr_i(mb_daddr[33:17]),
        .mb_den_i(mb_den[1]),
        .mb_di_i(mb_di[31:16]),
        .mb_do_o(mb_do[31:16]),
        .mb_drdy_o(mb_drdy[1]),
        .mb_dwe_i(mb_dwe[1]),
        .mb_reset_o(p_0_in[1]),
        .rxlpmen_i(rxlpmen_i[1]),
        .rxlpmen_o(rxlpmen_o[1]),
        .rxoutclk_i(rxoutclk_i[1]),
        .rxrate_i(rxrate_i[5:3]),
        .rxrate_o(rxrate_o[5:3]),
        .sl_iport_i(sl_iport1),
        .sl_oport_o(sl_oport1),
        .txdiffctrl_i(txdiffctrl_i[9:5]),
        .txdiffctrl_o(txdiffctrl_o[9:5]),
        .txpostcursor_i(txpostcursor_i[9:5]),
        .txpostcursor_o(txpostcursor_o[9:5]),
        .txprecursor_i(txprecursor_i[9:5]),
        .txprecursor_o(txprecursor_o[9:5]));
  (* C_NUM_CLIENTS = "2" *) 
  (* C_SLAVE_LSB_IDX = "18" *) 
  (* C_SLAVE_MSB_IDX = "26" *) 
  (* KEEP_HIERARCHY = "yes" *) 
  c2c_gth_in_system_ibert_0_ibert_lib_v1_0_7_mbio2xsdb i_ibert_lib_v1_0_7_mbio2xsdb
       (.clk_i(clk),
        .daddr_o(mb_daddr),
        .den_o(mb_den),
        .di_o(mb_di),
        .do_i(mb_do),
        .drdy_i(mb_drdy),
        .dwe_o(mb_dwe),
        .mb_addr_i(s_IO_Address),
        .mb_den_i(s_IO_Addr_Strobe),
        .mb_di_i(s_IO_Write_Data),
        .mb_do_o(s_IO_Read_Data),
        .mb_rden_i(s_IO_Read_Strobe),
        .mb_rdy_o(s_IO_Ready),
        .mb_wren_i(s_IO_Write_Strobe),
        .rst_i(1'b0));
  c2c_gth_in_system_ibert_0_microblaze_mcs mcs_0
       (.Q(s_IO_Address),
        .\Using_IO_Bus.IO_Write_Data_reg[31] (s_IO_Write_Data),
        .mb_den_i(s_IO_Addr_Strobe),
        .mb_do_o(s_IO_Read_Data),
        .mb_rden_i(s_IO_Read_Strobe),
        .mb_rdy_o(s_IO_Ready),
        .mb_wren_i(s_IO_Write_Strobe),
        .out(clk),
        .p_0_in(p_0_in));
endmodule

module c2c_gth_in_system_ibert_0_lmb_bram
   (DATA_OUTA,
    DATA_OUTB,
    out,
    ilmb_M_AddrStrobe,
    dlmb_M_AddrStrobe,
    ADDRARDADDR,
    dlmb_M_ABus,
    DATA_INB,
    dlmb_port_BRAM_WEN);
  output [0:31]DATA_OUTA;
  output [0:31]DATA_OUTB;
  input out;
  input ilmb_M_AddrStrobe;
  input dlmb_M_AddrStrobe;
  input [13:0]ADDRARDADDR;
  input [13:0]dlmb_M_ABus;
  input [0:31]DATA_INB;
  input [0:3]dlmb_port_BRAM_WEN;

  wire [13:0]ADDRARDADDR;
  wire [0:31]DATA_INB;
  wire [0:31]DATA_OUTA;
  wire [0:31]DATA_OUTB;
  wire [13:0]dlmb_M_ABus;
  wire dlmb_M_AddrStrobe;
  wire [0:3]dlmb_port_BRAM_WEN;
  wire ilmb_M_AddrStrobe;
  wire out;

  c2c_gth_in_system_ibert_0_RAM_Module_Top RAM_Inst
       (.ADDRARDADDR(ADDRARDADDR),
        .DATA_INB(DATA_INB),
        .DATA_OUTA(DATA_OUTA),
        .DATA_OUTB(DATA_OUTB),
        .dlmb_M_ABus(dlmb_M_ABus),
        .dlmb_M_AddrStrobe(dlmb_M_AddrStrobe),
        .dlmb_port_BRAM_WEN(dlmb_port_BRAM_WEN),
        .ilmb_M_AddrStrobe(ilmb_M_AddrStrobe),
        .out(out));
endmodule

module c2c_gth_in_system_ibert_0_mb_sync_bit
   (out,
    S,
    \Synchronize.use_sync_reset.sync_reg[2]_0 ,
    \Synchronize.use_sync_reset.sync_reg[2]_1 ,
    jump,
    take_Intr_Now_III,
    ilmb_LMB_Rst,
    \Synchronize.use_sync_reset.sync_reg[1]_0 );
  output [0:0]out;
  output S;
  output \Synchronize.use_sync_reset.sync_reg[2]_0 ;
  output \Synchronize.use_sync_reset.sync_reg[2]_1 ;
  input jump;
  input take_Intr_Now_III;
  input ilmb_LMB_Rst;
  input \Synchronize.use_sync_reset.sync_reg[1]_0 ;

  wire S;
  wire \Synchronize.use_sync_reset.sync_reg[1]_0 ;
  wire \Synchronize.use_sync_reset.sync_reg[2]_0 ;
  wire \Synchronize.use_sync_reset.sync_reg[2]_1 ;
  wire ilmb_LMB_Rst;
  wire jump;
  (* async_reg = "true" *) wire [1:2]sync;
  wire take_Intr_Now_III;

  assign out[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(\Synchronize.use_sync_reset.sync_reg[1]_0 ),
        .CE(1'b1),
        .D(ilmb_LMB_Rst),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(\Synchronize.use_sync_reset.sync_reg[1]_0 ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    \Using_FPGA.Native_i_1__2 
       (.I0(sync[2]),
        .I1(jump),
        .O(S));
  LUT1 #(
    .INIT(2'h1)) 
    \Using_FPGA.Native_i_1__92 
       (.I0(sync[2]),
        .O(\Synchronize.use_sync_reset.sync_reg[2]_1 ));
  LUT2 #(
    .INIT(4'h1)) 
    \Using_LWX_SWX_instr.reservation_i_2 
       (.I0(sync[2]),
        .I1(take_Intr_Now_III),
        .O(\Synchronize.use_sync_reset.sync_reg[2]_0 ));
endmodule

module c2c_gth_in_system_ibert_0_microblaze_mcs
   (mb_den_i,
    mb_rden_i,
    mb_wren_i,
    Q,
    \Using_IO_Bus.IO_Write_Data_reg[31] ,
    out,
    p_0_in,
    mb_rdy_o,
    mb_do_o);
  output mb_den_i;
  output mb_rden_i;
  output mb_wren_i;
  output [31:0]Q;
  output [31:0]\Using_IO_Bus.IO_Write_Data_reg[31] ;
  input out;
  input [1:0]p_0_in;
  input mb_rdy_o;
  input [31:0]mb_do_o;

  wire IO_Addr_Strobe0;
  wire IO_Read_Strobe;
  wire IO_Write_Strobe;
  wire LMB_Rst0__0;
  wire LMB_Rst_reg_n_0;
  wire \MicroBlaze_Core_I/Area.Core/Byte_Doublet_Handle_I/O ;
  wire [16:31]\MicroBlaze_Core_I/Area.Core/extend_Data_Read ;
  wire [31:0]Q;
  wire Sl_Rdy;
  wire Sl_Rdy_1;
  wire [31:0]\Using_IO_Bus.IO_Write_Data_reg[31] ;
  wire [0:15]dlmb_LMB_ReadDBus;
  wire dlmb_LMB_Ready;
  wire dlmb_LMB_Rst;
  wire [0:31]dlmb_M_ABus;
  wire dlmb_M_AddrStrobe;
  wire [0:31]dlmb_M_DBus;
  wire dlmb_cntlr_n_2;
  wire [0:31]dlmb_port_BRAM_Din;
  wire [0:3]dlmb_port_BRAM_WEN;
  wire ilmb_LMB_Rst;
  wire [16:29]ilmb_M_ABus;
  wire ilmb_M_AddrStrobe;
  wire ilmb_Sl_Ready;
  wire ilmb_cntlr_n_2;
  wire [0:31]ilmb_port_BRAM_Din;
  wire io_read_keep;
  wire iomodule_0_n_35;
  wire iomodule_0_n_37;
  wire lmb_as;
  wire lmb_as_0;
  wire lmb_reg_read0;
  wire lmb_reg_write0;
  wire lmb_select;
  wire mb_den_i;
  wire [31:0]mb_do_o;
  wire mb_rden_i;
  wire mb_rdy_o;
  wire mb_reset;
  wire mb_wren_i;
  wire microblaze_I_n_0;
  wire microblaze_I_n_2;
  wire microblaze_I_n_68;
  wire out;
  wire [1:0]p_0_in;
  wire p_0_in_0;
  wire \reset_vec_reg_n_0_[1] ;
  wire \reset_vec_reg_n_0_[2] ;

  LUT3 #(
    .INIT(8'hE0)) 
    LMB_Rst0
       (.I0(\reset_vec_reg_n_0_[2] ),
        .I1(p_0_in_0),
        .I2(\reset_vec_reg_n_0_[1] ),
        .O(LMB_Rst0__0));
  FDRE LMB_Rst_reg
       (.C(out),
        .CE(1'b1),
        .D(LMB_Rst0__0),
        .Q(LMB_Rst_reg_n_0),
        .R(1'b0));
  c2c_gth_in_system_ibert_0_lmb_v10__parameterized1 dlmb
       (.SR(LMB_Rst_reg_n_0),
        .dlmb_LMB_Rst(dlmb_LMB_Rst),
        .out(out));
  c2c_gth_in_system_ibert_0_lmb_bram_if_cntlr dlmb_cntlr
       (.\No_ECC.Sl_Rdy_reg_0 (dlmb_cntlr_n_2),
        .Sl_Rdy(Sl_Rdy),
        .dlmb_LMB_Rst(dlmb_LMB_Rst),
        .dlmb_M_AddrStrobe(dlmb_M_AddrStrobe),
        .lmb_as(lmb_as),
        .lmb_select(lmb_select),
        .out(out));
  c2c_gth_in_system_ibert_0_lmb_v10 ilmb
       (.SR(LMB_Rst_reg_n_0),
        .ilmb_LMB_Rst(ilmb_LMB_Rst),
        .out(out));
  c2c_gth_in_system_ibert_0_lmb_bram_if_cntlr__parameterized1 ilmb_cntlr
       (.\No_ECC.Sl_Rdy_reg_0 (ilmb_cntlr_n_2),
        .Sl_Rdy(Sl_Rdy_1),
        .ilmb_LMB_Rst(ilmb_LMB_Rst),
        .ilmb_M_AddrStrobe(ilmb_M_AddrStrobe),
        .ilmb_Sl_Ready(ilmb_Sl_Ready),
        .inHibit_EX_reg(microblaze_I_n_0),
        .inHibit_EX_reg_0(microblaze_I_n_68),
        .lmb_as(lmb_as_0),
        .out(out));
  c2c_gth_in_system_ibert_0_iomodule iomodule_0
       (.D({dlmb_M_DBus[0],dlmb_M_DBus[1],dlmb_M_DBus[2],dlmb_M_DBus[3],dlmb_M_DBus[4],dlmb_M_DBus[5],dlmb_M_DBus[6],dlmb_M_DBus[7],dlmb_M_DBus[8],dlmb_M_DBus[9],dlmb_M_DBus[10],dlmb_M_DBus[11],dlmb_M_DBus[12],dlmb_M_DBus[13],dlmb_M_DBus[14],dlmb_M_DBus[15],dlmb_M_DBus[16],dlmb_M_DBus[17],dlmb_M_DBus[18],dlmb_M_DBus[19],dlmb_M_DBus[20],dlmb_M_DBus[21],dlmb_M_DBus[22],dlmb_M_DBus[23],dlmb_M_DBus[24],dlmb_M_DBus[25],dlmb_M_DBus[26],dlmb_M_DBus[27],dlmb_M_DBus[28],dlmb_M_DBus[29],dlmb_M_DBus[30],dlmb_M_DBus[31]}),
        .DATA_OUTB(dlmb_port_BRAM_Din),
        .IO_Addr_Strobe0(IO_Addr_Strobe0),
        .IO_Read_Strobe(IO_Read_Strobe),
        .IO_Write_Strobe(IO_Write_Strobe),
        .O(\MicroBlaze_Core_I/Area.Core/Byte_Doublet_Handle_I/O ),
        .Q(Q),
        .SR(LMB_Rst_reg_n_0),
        .Sl_Rdy(Sl_Rdy),
        .\Using_FPGA.Native (microblaze_I_n_2),
        .\Using_FPGA.Native_0 (dlmb_cntlr_n_2),
        .\Using_IO_Bus.IO_Write_Data_reg[31]_0 (\Using_IO_Bus.IO_Write_Data_reg[31] ),
        .\Using_IO_Bus.io_ready_Q_reg_0 (iomodule_0_n_37),
        .dlmb_LMB_ReadDBus({dlmb_LMB_ReadDBus[0],dlmb_LMB_ReadDBus[1],dlmb_LMB_ReadDBus[2],dlmb_LMB_ReadDBus[3],dlmb_LMB_ReadDBus[4],dlmb_LMB_ReadDBus[5],dlmb_LMB_ReadDBus[6],dlmb_LMB_ReadDBus[7],dlmb_LMB_ReadDBus[8],dlmb_LMB_ReadDBus[9],dlmb_LMB_ReadDBus[10],dlmb_LMB_ReadDBus[11],dlmb_LMB_ReadDBus[12],dlmb_LMB_ReadDBus[13],dlmb_LMB_ReadDBus[14],dlmb_LMB_ReadDBus[15]}),
        .dlmb_LMB_Ready(dlmb_LMB_Ready),
        .dlmb_M_ABus(dlmb_M_ABus),
        .extend_Data_Read({\MicroBlaze_Core_I/Area.Core/extend_Data_Read [16],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [17],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [18],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [19],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [20],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [21],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [22],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [23],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [24],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [25],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [26],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [27],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [28],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [29],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [30],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [31]}),
        .io_read_keep(io_read_keep),
        .lmb_as(lmb_as),
        .lmb_reg_read0(lmb_reg_read0),
        .lmb_reg_read_Q_reg_0(iomodule_0_n_35),
        .lmb_reg_write0(lmb_reg_write0),
        .mb_den_i(mb_den_i),
        .mb_do_o(mb_do_o),
        .mb_rden_i(mb_rden_i),
        .mb_rdy_o(mb_rdy_o),
        .mb_wren_i(mb_wren_i),
        .out(out));
  c2c_gth_in_system_ibert_0_lmb_bram lmb_bram_I
       (.ADDRARDADDR({ilmb_M_ABus[16],ilmb_M_ABus[17],ilmb_M_ABus[18],ilmb_M_ABus[19],ilmb_M_ABus[20],ilmb_M_ABus[21],ilmb_M_ABus[22],ilmb_M_ABus[23],ilmb_M_ABus[24],ilmb_M_ABus[25],ilmb_M_ABus[26],ilmb_M_ABus[27],ilmb_M_ABus[28],ilmb_M_ABus[29]}),
        .DATA_INB(dlmb_M_DBus),
        .DATA_OUTA(ilmb_port_BRAM_Din),
        .DATA_OUTB(dlmb_port_BRAM_Din),
        .dlmb_M_ABus({dlmb_M_ABus[16],dlmb_M_ABus[17],dlmb_M_ABus[18],dlmb_M_ABus[19],dlmb_M_ABus[20],dlmb_M_ABus[21],dlmb_M_ABus[22],dlmb_M_ABus[23],dlmb_M_ABus[24],dlmb_M_ABus[25],dlmb_M_ABus[26],dlmb_M_ABus[27],dlmb_M_ABus[28],dlmb_M_ABus[29]}),
        .dlmb_M_AddrStrobe(dlmb_M_AddrStrobe),
        .dlmb_port_BRAM_WEN(dlmb_port_BRAM_WEN),
        .ilmb_M_AddrStrobe(ilmb_M_AddrStrobe),
        .out(out));
  c2c_gth_in_system_ibert_0_MicroBlaze microblaze_I
       (.ADDRARDADDR({ilmb_M_ABus[16],ilmb_M_ABus[17],ilmb_M_ABus[18],ilmb_M_ABus[19],ilmb_M_ABus[20],ilmb_M_ABus[21],ilmb_M_ABus[22],ilmb_M_ABus[23],ilmb_M_ABus[24],ilmb_M_ABus[25],ilmb_M_ABus[26],ilmb_M_ABus[27],ilmb_M_ABus[28],ilmb_M_ABus[29]}),
        .DATA_INB(dlmb_M_DBus),
        .DATA_OUTA(ilmb_port_BRAM_Din),
        .IO_Addr_Strobe0(IO_Addr_Strobe0),
        .IO_Read_Strobe(IO_Read_Strobe),
        .IO_Write_Strobe(IO_Write_Strobe),
        .O(\MicroBlaze_Core_I/Area.Core/Byte_Doublet_Handle_I/O ),
        .Sl_Rdy(Sl_Rdy_1),
        .Sl_Rdy_1(Sl_Rdy),
        .byte_i_reg(microblaze_I_n_2),
        .dlmb_LMB_ReadDBus({dlmb_LMB_ReadDBus[0],dlmb_LMB_ReadDBus[1],dlmb_LMB_ReadDBus[2],dlmb_LMB_ReadDBus[3],dlmb_LMB_ReadDBus[4],dlmb_LMB_ReadDBus[5],dlmb_LMB_ReadDBus[6],dlmb_LMB_ReadDBus[7],dlmb_LMB_ReadDBus[8],dlmb_LMB_ReadDBus[9],dlmb_LMB_ReadDBus[10],dlmb_LMB_ReadDBus[11],dlmb_LMB_ReadDBus[12],dlmb_LMB_ReadDBus[13],dlmb_LMB_ReadDBus[14],dlmb_LMB_ReadDBus[15]}),
        .dlmb_LMB_Ready(dlmb_LMB_Ready),
        .dlmb_M_ABus(dlmb_M_ABus),
        .dlmb_M_AddrStrobe(dlmb_M_AddrStrobe),
        .dlmb_port_BRAM_WEN(dlmb_port_BRAM_WEN),
        .ex_Valid_reg(iomodule_0_n_37),
        .extend_Data_Read({\MicroBlaze_Core_I/Area.Core/extend_Data_Read [16],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [17],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [18],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [19],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [20],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [21],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [22],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [23],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [24],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [25],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [26],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [27],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [28],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [29],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [30],\MicroBlaze_Core_I/Area.Core/extend_Data_Read [31]}),
        .ilmb_LMB_Rst(ilmb_LMB_Rst),
        .ilmb_M_AddrStrobe(ilmb_M_AddrStrobe),
        .ilmb_Sl_Ready(ilmb_Sl_Ready),
        .inHibit_EX_reg(microblaze_I_n_68),
        .inHibit_EX_reg_0(ilmb_cntlr_n_2),
        .io_read_keep(io_read_keep),
        .lmb_as(lmb_as_0),
        .lmb_as_0(lmb_as),
        .lmb_reg_read0(lmb_reg_read0),
        .lmb_reg_write0(lmb_reg_write0),
        .lmb_select(lmb_select),
        .load_Store_i_reg(iomodule_0_n_35),
        .load_Store_i_reg_0(dlmb_cntlr_n_2),
        .mb_rdy_o(mb_rdy_o),
        .nonvalid_IFetch_n_reg(microblaze_I_n_0),
        .out(out));
  LUT2 #(
    .INIT(4'hE)) 
    \reset_vec[0]_i_1 
       (.I0(p_0_in[0]),
        .I1(p_0_in[1]),
        .O(mb_reset));
  FDRE \reset_vec_reg[0] 
       (.C(out),
        .CE(1'b1),
        .D(mb_reset),
        .Q(p_0_in_0),
        .R(1'b0));
  FDRE \reset_vec_reg[1] 
       (.C(out),
        .CE(1'b1),
        .D(p_0_in_0),
        .Q(\reset_vec_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \reset_vec_reg[2] 
       (.C(out),
        .CE(1'b1),
        .D(\reset_vec_reg_n_0_[1] ),
        .Q(\reset_vec_reg_n_0_[2] ),
        .R(1'b0));
endmodule

module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE
   (carry_In,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    correct_Carry_II,
    out);
  output carry_In;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input correct_Carry_II;
  input out;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire carry_In;
  wire correct_Carry_II;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(\Using_FPGA.Native_1 ),
        .D(correct_Carry_II),
        .Q(carry_In),
        .R(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_0
   (alu_Op,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    D_31,
    out);
  output [0:0]alu_Op;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input D_31;
  input out;

  wire D_31;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]alu_Op;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(\Using_FPGA.Native_1 ),
        .D(D_31),
        .Q(alu_Op),
        .R(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_1
   (alu_Op,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    out);
  output [0:0]alu_Op;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input out;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire [0:0]alu_Op;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(alu_Op),
        .R(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_11
   (reg_Test_Equal_N,
    R,
    \Using_FPGA.Native_0 ,
    Reg_Test_Equal_N_i7_out,
    out);
  output reg_Test_Equal_N;
  input R;
  input \Using_FPGA.Native_0 ;
  input Reg_Test_Equal_N_i7_out;
  input out;

  wire R;
  wire Reg_Test_Equal_N_i7_out;
  wire \Using_FPGA.Native_0 ;
  wire out;
  wire reg_Test_Equal_N;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(\Using_FPGA.Native_0 ),
        .D(Reg_Test_Equal_N_i7_out),
        .Q(reg_Test_Equal_N),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_17
   (use_Reg_Neg_DI,
    R,
    \Using_FPGA.Native_0 ,
    use_Reg_Neg_DI_i23_out,
    out);
  output use_Reg_Neg_DI;
  input R;
  input \Using_FPGA.Native_0 ;
  input use_Reg_Neg_DI_i23_out;
  input out;

  wire R;
  wire \Using_FPGA.Native_0 ;
  wire out;
  wire use_Reg_Neg_DI;
  wire use_Reg_Neg_DI_i23_out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(\Using_FPGA.Native_0 ),
        .D(use_Reg_Neg_DI_i23_out),
        .Q(use_Reg_Neg_DI),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_18
   (use_Reg_Neg_S,
    R,
    \Using_FPGA.Native_0 ,
    use_Reg_Neg_S_i25_out,
    out);
  output use_Reg_Neg_S;
  input R;
  input \Using_FPGA.Native_0 ;
  input use_Reg_Neg_S_i25_out;
  input out;

  wire R;
  wire \Using_FPGA.Native_0 ;
  wire out;
  wire use_Reg_Neg_S;
  wire use_Reg_Neg_S_i25_out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(\Using_FPGA.Native_0 ),
        .D(use_Reg_Neg_S_i25_out),
        .Q(use_Reg_Neg_S),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_3
   (force1,
    R,
    \Using_FPGA.Native_0 ,
    force1_i26_out,
    out);
  output force1;
  input R;
  input \Using_FPGA.Native_0 ;
  input force1_i26_out;
  input out;

  wire R;
  wire \Using_FPGA.Native_0 ;
  wire force1;
  wire force1_i26_out;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(\Using_FPGA.Native_0 ),
        .D(force1_i26_out),
        .Q(force1),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_4
   (force2,
    R,
    \Using_FPGA.Native_0 ,
    force2_i,
    out);
  output force2;
  input R;
  input \Using_FPGA.Native_0 ;
  input force2_i;
  input out;

  wire R;
  wire \Using_FPGA.Native_0 ;
  wire force2;
  wire force2_i;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(\Using_FPGA.Native_0 ),
        .D(force2_i),
        .Q(force2),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_488
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_I,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_489
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_491
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_I,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_492
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_495
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_I,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_496
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_499
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_I,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_5
   (force_Val1,
    R,
    \Using_FPGA.Native_0 ,
    force_Val1_i24_out,
    out);
  output force_Val1;
  input R;
  input \Using_FPGA.Native_0 ;
  input force_Val1_i24_out;
  input out;

  wire R;
  wire \Using_FPGA.Native_0 ;
  wire force_Val1;
  wire force_Val1_i24_out;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(\Using_FPGA.Native_0 ),
        .D(force_Val1_i24_out),
        .Q(force_Val1),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_500
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_503
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_I,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_504
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_507
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_I,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_508
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_511
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_I,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_512
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_515
   (Op1_Logic,
    \Using_FPGA.Native_0 ,
    normal_piperun,
    op1_I,
    out);
  output Op1_Logic;
  input [0:0]\Using_FPGA.Native_0 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire Op1_Logic;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(Op1_Logic),
        .R(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_516
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_519
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_I,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_520
   (\Zero_Detecting[0].nibble_Zero_reg ,
    \Using_FPGA.Native_0 ,
    normal_piperun,
    op1_Reg,
    out,
    \Using_FPGA.Native_1 );
  output \Zero_Detecting[0].nibble_Zero_reg ;
  input [0:0]\Using_FPGA.Native_0 ;
  input normal_piperun;
  input op1_Reg;
  input out;
  input \Using_FPGA.Native_1 ;

  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_n_0 ;
  wire \Zero_Detecting[0].nibble_Zero_reg ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_n_0 ),
        .R(\Using_FPGA.Native_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \Using_FPGA.Native_i_1 
       (.I0(\Using_FPGA.Native_n_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(\Zero_Detecting[0].nibble_Zero_reg ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_523
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_I,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_524
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_527
   (Shifted,
    \Using_FPGA.Native_0 ,
    normal_piperun,
    op1_I,
    out);
  output Shifted;
  input [0:0]\Using_FPGA.Native_0 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire Shifted;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(Shifted),
        .R(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_528
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_531
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_I,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_532
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_535
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_I,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_536
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_539
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_I,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_540
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_543
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_I,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_544
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_547
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_I,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_548
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_551
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_I,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_552
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_555
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_I,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_556
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_559
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_I,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_560
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_563
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_I,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_564
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_567
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_I,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_568
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_571
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_I,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_572
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_575
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_I,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_576
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_579
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_I,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_580
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_583
   (Op1_Shift,
    \Using_FPGA.Native_0 ,
    normal_piperun,
    op1_I,
    out);
  output Op1_Shift;
  input [0:0]\Using_FPGA.Native_0 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire Op1_Shift;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(Op1_Shift),
        .R(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_584
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_587
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_I,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_588
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_591
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_I,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_592
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_595
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_I,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_596
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_599
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_I,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_600
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_603
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_I,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_604
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_607
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_I,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_608
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_611
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_I,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_I;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_I;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_I),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_FDRE" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_FDRE_612
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    normal_piperun,
    op1_Reg,
    out);
  output \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input normal_piperun;
  input op1_Reg;
  input out;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire normal_piperun;
  wire op1_Reg;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(out),
        .CE(normal_piperun),
        .D(op1_Reg),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Using_FPGA.Native_1 ));
endmodule

module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6
   (alu_AddSub_1,
    op2_C,
    alu_Op,
    Op1_Logic);
  output alu_AddSub_1;
  input [0:0]op2_C;
  input [0:1]alu_Op;
  input Op1_Logic;

  wire Op1_Logic;
  wire alu_AddSub_1;
  wire [0:1]alu_Op;
  wire [0:0]op2_C;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(op2_C),
        .I1(alu_Op[0]),
        .I2(Op1_Logic),
        .I3(alu_Op[1]),
        .I4(1'b0),
        .I5(1'b1),
        .O(alu_AddSub_1));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0
   (EX_Result,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;
  input mul_ALU_Res;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 [0]),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Data_Read_Mask),
        .I3(dlmb_LMB_ReadDBus),
        .I4(mul_ALU_Res),
        .I5(\Using_FPGA.Native_0 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_226
   (EX_Result,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;
  input mul_ALU_Res;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 [0]),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Data_Read_Mask),
        .I3(dlmb_LMB_ReadDBus),
        .I4(mul_ALU_Res),
        .I5(\Using_FPGA.Native_0 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_228
   (EX_Result,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;
  input mul_ALU_Res;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 [0]),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Data_Read_Mask),
        .I3(dlmb_LMB_ReadDBus),
        .I4(mul_ALU_Res),
        .I5(\Using_FPGA.Native_0 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_230
   (EX_Result,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;
  input mul_ALU_Res;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 [0]),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Data_Read_Mask),
        .I3(dlmb_LMB_ReadDBus),
        .I4(mul_ALU_Res),
        .I5(\Using_FPGA.Native_0 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_232
   (EX_Result,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;
  input mul_ALU_Res;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 [0]),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Data_Read_Mask),
        .I3(dlmb_LMB_ReadDBus),
        .I4(mul_ALU_Res),
        .I5(\Using_FPGA.Native_0 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_234
   (EX_Result,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;
  input mul_ALU_Res;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 [0]),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Data_Read_Mask),
        .I3(dlmb_LMB_ReadDBus),
        .I4(mul_ALU_Res),
        .I5(\Using_FPGA.Native_0 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_236
   (EX_Result,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;
  input mul_ALU_Res;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 [0]),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Data_Read_Mask),
        .I3(dlmb_LMB_ReadDBus),
        .I4(mul_ALU_Res),
        .I5(\Using_FPGA.Native_0 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_238
   (EX_Result,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    Shift_Logic_Res,
    extend_Data_Read,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input Shift_Logic_Res;
  input [0:0]extend_Data_Read;
  input mul_ALU_Res;

  wire [0:0]EX_Result;
  wire Shift_Logic_Res;
  wire [1:0]\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 [0]),
        .I1(Shift_Logic_Res),
        .I2(1'b1),
        .I3(extend_Data_Read),
        .I4(mul_ALU_Res),
        .I5(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_240
   (EX_Result,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ,
    extend_Data_Read,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ;
  input [0:0]extend_Data_Read;
  input mul_ALU_Res;

  wire [0:0]EX_Result;
  wire [1:0]\Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 [0]),
        .I1(\Using_B36_S2.The_BRAMs[15].RAMB36_I1_0 ),
        .I2(1'b1),
        .I3(extend_Data_Read),
        .I4(mul_ALU_Res),
        .I5(\Using_B36_S2.The_BRAMs[15].RAMB36_I1 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_242
   (EX_Result,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;
  input mul_ALU_Res;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 [0]),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Data_Read_Mask),
        .I3(dlmb_LMB_ReadDBus),
        .I4(mul_ALU_Res),
        .I5(\Using_FPGA.Native_0 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_244
   (EX_Result,
    \Using_B36_S2.The_BRAMs[14].RAMB36_I1 ,
    \Using_B36_S2.The_BRAMs[14].RAMB36_I1_0 ,
    extend_Data_Read,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_B36_S2.The_BRAMs[14].RAMB36_I1 ;
  input \Using_B36_S2.The_BRAMs[14].RAMB36_I1_0 ;
  input [0:0]extend_Data_Read;
  input mul_ALU_Res;

  wire [0:0]EX_Result;
  wire [1:0]\Using_B36_S2.The_BRAMs[14].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[14].RAMB36_I1_0 ;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_B36_S2.The_BRAMs[14].RAMB36_I1 [0]),
        .I1(\Using_B36_S2.The_BRAMs[14].RAMB36_I1_0 ),
        .I2(1'b1),
        .I3(extend_Data_Read),
        .I4(mul_ALU_Res),
        .I5(\Using_B36_S2.The_BRAMs[14].RAMB36_I1 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_246
   (EX_Result,
    \Using_B36_S2.The_BRAMs[14].RAMB36_I1 ,
    \Using_B36_S2.The_BRAMs[14].RAMB36_I1_0 ,
    extend_Data_Read,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_B36_S2.The_BRAMs[14].RAMB36_I1 ;
  input \Using_B36_S2.The_BRAMs[14].RAMB36_I1_0 ;
  input [0:0]extend_Data_Read;
  input mul_ALU_Res;

  wire [0:0]EX_Result;
  wire [1:0]\Using_B36_S2.The_BRAMs[14].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[14].RAMB36_I1_0 ;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_B36_S2.The_BRAMs[14].RAMB36_I1 [0]),
        .I1(\Using_B36_S2.The_BRAMs[14].RAMB36_I1_0 ),
        .I2(1'b1),
        .I3(extend_Data_Read),
        .I4(mul_ALU_Res),
        .I5(\Using_B36_S2.The_BRAMs[14].RAMB36_I1 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_248
   (EX_Result,
    \Using_B36_S2.The_BRAMs[13].RAMB36_I1 ,
    \Using_B36_S2.The_BRAMs[13].RAMB36_I1_0 ,
    extend_Data_Read,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_B36_S2.The_BRAMs[13].RAMB36_I1 ;
  input \Using_B36_S2.The_BRAMs[13].RAMB36_I1_0 ;
  input [0:0]extend_Data_Read;
  input mul_ALU_Res;

  wire [0:0]EX_Result;
  wire [1:0]\Using_B36_S2.The_BRAMs[13].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[13].RAMB36_I1_0 ;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_B36_S2.The_BRAMs[13].RAMB36_I1 [0]),
        .I1(\Using_B36_S2.The_BRAMs[13].RAMB36_I1_0 ),
        .I2(1'b1),
        .I3(extend_Data_Read),
        .I4(mul_ALU_Res),
        .I5(\Using_B36_S2.The_BRAMs[13].RAMB36_I1 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_250
   (EX_Result,
    \Using_B36_S2.The_BRAMs[13].RAMB36_I1 ,
    \Using_B36_S2.The_BRAMs[13].RAMB36_I1_0 ,
    extend_Data_Read,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_B36_S2.The_BRAMs[13].RAMB36_I1 ;
  input \Using_B36_S2.The_BRAMs[13].RAMB36_I1_0 ;
  input [0:0]extend_Data_Read;
  input mul_ALU_Res;

  wire [0:0]EX_Result;
  wire [1:0]\Using_B36_S2.The_BRAMs[13].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[13].RAMB36_I1_0 ;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_B36_S2.The_BRAMs[13].RAMB36_I1 [0]),
        .I1(\Using_B36_S2.The_BRAMs[13].RAMB36_I1_0 ),
        .I2(1'b1),
        .I3(extend_Data_Read),
        .I4(mul_ALU_Res),
        .I5(\Using_B36_S2.The_BRAMs[13].RAMB36_I1 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_252
   (EX_Result,
    \Using_B36_S2.The_BRAMs[12].RAMB36_I1 ,
    \Using_B36_S2.The_BRAMs[12].RAMB36_I1_0 ,
    extend_Data_Read,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_B36_S2.The_BRAMs[12].RAMB36_I1 ;
  input \Using_B36_S2.The_BRAMs[12].RAMB36_I1_0 ;
  input [0:0]extend_Data_Read;
  input mul_ALU_Res;

  wire [0:0]EX_Result;
  wire [1:0]\Using_B36_S2.The_BRAMs[12].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[12].RAMB36_I1_0 ;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_B36_S2.The_BRAMs[12].RAMB36_I1 [0]),
        .I1(\Using_B36_S2.The_BRAMs[12].RAMB36_I1_0 ),
        .I2(1'b1),
        .I3(extend_Data_Read),
        .I4(mul_ALU_Res),
        .I5(\Using_B36_S2.The_BRAMs[12].RAMB36_I1 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_254
   (EX_Result,
    \Using_B36_S2.The_BRAMs[12].RAMB36_I1 ,
    \Using_B36_S2.The_BRAMs[12].RAMB36_I1_0 ,
    extend_Data_Read,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_B36_S2.The_BRAMs[12].RAMB36_I1 ;
  input \Using_B36_S2.The_BRAMs[12].RAMB36_I1_0 ;
  input [0:0]extend_Data_Read;
  input mul_ALU_Res;

  wire [0:0]EX_Result;
  wire [1:0]\Using_B36_S2.The_BRAMs[12].RAMB36_I1 ;
  wire \Using_B36_S2.The_BRAMs[12].RAMB36_I1_0 ;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_B36_S2.The_BRAMs[12].RAMB36_I1 [0]),
        .I1(\Using_B36_S2.The_BRAMs[12].RAMB36_I1_0 ),
        .I2(1'b1),
        .I3(extend_Data_Read),
        .I4(mul_ALU_Res),
        .I5(\Using_B36_S2.The_BRAMs[12].RAMB36_I1 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_256
   (EX_Result,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Data_Read_Mask,
    extend_Data_Read,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Data_Read_Mask;
  input [0:0]extend_Data_Read;
  input mul_ALU_Res;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 [0]),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Data_Read_Mask),
        .I3(extend_Data_Read),
        .I4(mul_ALU_Res),
        .I5(\Using_FPGA.Native_0 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_258
   (EX_Result,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Data_Read_Mask,
    extend_Data_Read,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Data_Read_Mask;
  input [0:0]extend_Data_Read;
  input mul_ALU_Res;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 [0]),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Data_Read_Mask),
        .I3(extend_Data_Read),
        .I4(mul_ALU_Res),
        .I5(\Using_FPGA.Native_0 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_260
   (EX_Result,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Data_Read_Mask,
    extend_Data_Read,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Data_Read_Mask;
  input [0:0]extend_Data_Read;
  input mul_ALU_Res;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 [0]),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Data_Read_Mask),
        .I3(extend_Data_Read),
        .I4(mul_ALU_Res),
        .I5(\Using_FPGA.Native_0 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_262
   (EX_Result,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Data_Read_Mask,
    extend_Data_Read,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Data_Read_Mask;
  input [0:0]extend_Data_Read;
  input mul_ALU_Res;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 [0]),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Data_Read_Mask),
        .I3(extend_Data_Read),
        .I4(mul_ALU_Res),
        .I5(\Using_FPGA.Native_0 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_264
   (EX_Result,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;
  input mul_ALU_Res;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 [0]),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Data_Read_Mask),
        .I3(dlmb_LMB_ReadDBus),
        .I4(mul_ALU_Res),
        .I5(\Using_FPGA.Native_0 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_266
   (EX_Result,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Data_Read_Mask,
    extend_Data_Read,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Data_Read_Mask;
  input [0:0]extend_Data_Read;
  input mul_ALU_Res;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 [0]),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Data_Read_Mask),
        .I3(extend_Data_Read),
        .I4(mul_ALU_Res),
        .I5(\Using_FPGA.Native_0 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_268
   (EX_Result,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Data_Read_Mask,
    extend_Data_Read,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Data_Read_Mask;
  input [0:0]extend_Data_Read;
  input mul_ALU_Res;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 [0]),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Data_Read_Mask),
        .I3(extend_Data_Read),
        .I4(mul_ALU_Res),
        .I5(\Using_FPGA.Native_0 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_270
   (EX_Result,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Data_Read_Mask,
    extend_Data_Read,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Data_Read_Mask;
  input [0:0]extend_Data_Read;
  input mul_ALU_Res;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 [0]),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Data_Read_Mask),
        .I3(extend_Data_Read),
        .I4(mul_ALU_Res),
        .I5(\Using_FPGA.Native_0 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_272
   (EX_Result,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Data_Read_Mask,
    extend_Data_Read,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Data_Read_Mask;
  input [0:0]extend_Data_Read;
  input mul_ALU_Res;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]extend_Data_Read;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 [0]),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Data_Read_Mask),
        .I3(extend_Data_Read),
        .I4(mul_ALU_Res),
        .I5(\Using_FPGA.Native_0 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_274
   (EX_Result,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;
  input mul_ALU_Res;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 [0]),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Data_Read_Mask),
        .I3(dlmb_LMB_ReadDBus),
        .I4(mul_ALU_Res),
        .I5(\Using_FPGA.Native_0 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_276
   (EX_Result,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;
  input mul_ALU_Res;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 [0]),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Data_Read_Mask),
        .I3(dlmb_LMB_ReadDBus),
        .I4(mul_ALU_Res),
        .I5(\Using_FPGA.Native_0 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_278
   (EX_Result,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;
  input mul_ALU_Res;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 [0]),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Data_Read_Mask),
        .I3(dlmb_LMB_ReadDBus),
        .I4(mul_ALU_Res),
        .I5(\Using_FPGA.Native_0 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_280
   (EX_Result,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;
  input mul_ALU_Res;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 [0]),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Data_Read_Mask),
        .I3(dlmb_LMB_ReadDBus),
        .I4(mul_ALU_Res),
        .I5(\Using_FPGA.Native_0 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_282
   (EX_Result,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;
  input mul_ALU_Res;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 [0]),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Data_Read_Mask),
        .I3(dlmb_LMB_ReadDBus),
        .I4(mul_ALU_Res),
        .I5(\Using_FPGA.Native_0 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_284
   (EX_Result,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;
  input mul_ALU_Res;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 [0]),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Data_Read_Mask),
        .I3(dlmb_LMB_ReadDBus),
        .I4(mul_ALU_Res),
        .I5(\Using_FPGA.Native_0 [1]),
        .O(EX_Result));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_LUT6" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_LUT6__parameterized0_286
   (EX_Result,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Data_Read_Mask,
    dlmb_LMB_ReadDBus,
    mul_ALU_Res);
  output [0:0]EX_Result;
  input [1:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Data_Read_Mask;
  input [0:0]dlmb_LMB_ReadDBus;
  input mul_ALU_Res;

  wire Data_Read_Mask;
  wire [0:0]EX_Result;
  wire [1:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]dlmb_LMB_ReadDBus;
  wire mul_ALU_Res;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hE040E040FFFF0000)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 [0]),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Data_Read_Mask),
        .I3(dlmb_LMB_ReadDBus),
        .I4(mul_ALU_Res),
        .I5(\Using_FPGA.Native_0 [1]),
        .O(EX_Result));
endmodule

module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY
   (correct_Carry_I,
    correct_Carry_Select,
    sub_Carry,
    correct_Carry,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4);
  output correct_Carry_I;
  input correct_Carry_Select;
  input sub_Carry;
  input correct_Carry;
  output lopt;
  input lopt_1;
  input lopt_2;
  input lopt_3;
  input lopt_4;

  wire correct_Carry;
  wire correct_Carry_I;
  wire correct_Carry_Select;
  wire \^lopt_1 ;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire sub_Carry;

  assign \^lopt_1  = lopt_3;
  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign correct_Carry_I = lopt_4;
  assign lopt = \^lopt_1 ;
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXCY" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_10
   (new_Carry,
    \Synchronize.use_sync_reset.sync_reg[2] ,
    select_ALU_Carry,
    Op1_Low,
    LO,
    \Using_FPGA.Native_0 ,
    ex_Valid,
    \Using_FPGA.Native_1 ,
    lopt);
  output new_Carry;
  output \Synchronize.use_sync_reset.sync_reg[2] ;
  input select_ALU_Carry;
  input [0:0]Op1_Low;
  input LO;
  input [0:0]\Using_FPGA.Native_0 ;
  input ex_Valid;
  input \Using_FPGA.Native_1 ;
  input lopt;

  wire LO;
  wire [0:0]Op1_Low;
  wire \Synchronize.use_sync_reset.sync_reg[2] ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_Valid;
  wire new_Carry;
  wire select_ALU_Carry;

  assign new_Carry = lopt;
  LUT4 #(
    .INIT(16'hBAAA)) 
    \Using_FPGA.Native_i_1__91 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(new_Carry),
        .I2(ex_Valid),
        .I3(\Using_FPGA.Native_1 ),
        .O(\Synchronize.use_sync_reset.sync_reg[2] ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXCY" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_19
   (opsel1_SPR,
    opsel1_SPR_Select,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output opsel1_SPR;
  input opsel1_SPR_Select;
  input \Using_FPGA.Native_0 ;
  input lopt;
  output lopt_1;

  wire \<const1> ;
  wire \Using_FPGA.Native_0 ;
  wire opsel1_SPR;
  wire opsel1_SPR_Select;

  assign lopt_1 = \<const1> ;
  assign opsel1_SPR = lopt;
  VCC VCC
       (.P(\<const1> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXCY" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_2
   (correct_Carry,
    new_Carry,
    MSR,
    is_lwx_I,
    Shift_Carry_In_reg,
    ex_Valid,
    load_Store_i,
    Shift_Carry_In_reg_0,
    Shift_Carry_In_reg_1,
    lopt,
    lopt_1,
    lopt_2);
  output correct_Carry;
  input new_Carry;
  input [0:0]MSR;
  input is_lwx_I;
  input Shift_Carry_In_reg;
  input ex_Valid;
  input load_Store_i;
  input Shift_Carry_In_reg_0;
  input Shift_Carry_In_reg_1;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire DI_32;
  wire [0:0]MSR;
  wire Shift_Carry_In_reg;
  wire Shift_Carry_In_reg_0;
  wire Shift_Carry_In_reg_1;
  wire \Using_FPGA.Native_i_1__95_n_0 ;
  wire correct_Carry;
  wire ex_Valid;
  wire is_lwx_I;
  wire load_Store_i;
  wire new_Carry;

  assign correct_Carry = lopt;
  assign lopt_1 = DI_32;
  assign lopt_2 = \Using_FPGA.Native_i_1__95_n_0 ;
  LUT2 #(
    .INIT(4'h8)) 
    \Using_FPGA.Native_i_1__95 
       (.I0(ex_Valid),
        .I1(Shift_Carry_In_reg_1),
        .O(\Using_FPGA.Native_i_1__95_n_0 ));
  LUT6 #(
    .INIT(64'h02AAAAAAF2AAAAAA)) 
    \Using_FPGA.Native_i_2__16 
       (.I0(MSR),
        .I1(is_lwx_I),
        .I2(Shift_Carry_In_reg),
        .I3(ex_Valid),
        .I4(load_Store_i),
        .I5(Shift_Carry_In_reg_0),
        .O(DI_32));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXCY" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_20
   (take_Intr_Now_I,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    inHibit_EX,
    use_Imm_Reg,
    \Using_FPGA.Native_2 ,
    lopt,
    lopt_1,
    lopt_2);
  output take_Intr_Now_I;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input inHibit_EX;
  input use_Imm_Reg;
  input \Using_FPGA.Native_2 ;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire \<const0> ;
  wire S15_out;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire inHibit_EX;
  wire take_Intr_Now_I;
  wire use_Imm_Reg;

  assign lopt_1 = \<const0> ;
  assign lopt_2 = S15_out;
  assign take_Intr_Now_I = lopt;
  GND GND
       (.G(\<const0> ));
  LUT4 #(
    .INIT(16'hAAAB)) 
    \Using_FPGA.Native_i_1__93 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(inHibit_EX),
        .I2(use_Imm_Reg),
        .I3(\Using_FPGA.Native_2 ),
        .O(S15_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXCY" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_21
   (take_Intr_Now_II,
    \Using_FPGA.Native_i_2__4 ,
    take_Intr_Now_I,
    lopt,
    lopt_1);
  output take_Intr_Now_II;
  input \Using_FPGA.Native_i_2__4 ;
  input take_Intr_Now_I;
  input lopt;
  output lopt_1;

  wire \<const0> ;
  wire \Using_FPGA.Native_i_2__4 ;
  wire take_Intr_Now_I;
  wire take_Intr_Now_II;

  assign lopt_1 = \<const0> ;
  assign take_Intr_Now_II = lopt;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXCY" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_22
   (\Using_FPGA.take_Intr_2nd_Phase_reg ,
    load_Store_i2,
    inHibit_EX1,
    \Synchronize.use_sync_reset.sync_reg[2] ,
    Select_Logic0,
    take_Intr_Now_II,
    \Using_FPGA.take_Intr_2nd_Phase_reg_0 ,
    \Using_FPGA.Native_0 ,
    Select_Logic_reg,
    lopt,
    lopt_1,
    lopt_2);
  output \Using_FPGA.take_Intr_2nd_Phase_reg ;
  output load_Store_i2;
  output inHibit_EX1;
  output \Synchronize.use_sync_reset.sync_reg[2] ;
  output Select_Logic0;
  input take_Intr_Now_II;
  input \Using_FPGA.take_Intr_2nd_Phase_reg_0 ;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]Select_Logic_reg;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire \<const0> ;
  wire \<const1> ;
  wire Select_Logic0;
  wire [0:0]Select_Logic_reg;
  wire \Synchronize.use_sync_reset.sync_reg[2] ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg ;
  wire \Using_FPGA.take_Intr_2nd_Phase_reg_0 ;
  wire inHibit_EX1;
  wire load_Store_i2;
  wire take_Intr_Now_II;

  assign \Using_FPGA.take_Intr_2nd_Phase_reg  = lopt;
  assign lopt_1 = \<const0> ;
  assign lopt_2 = \<const1> ;
  GND GND
       (.G(\<const0> ));
  LUT2 #(
    .INIT(4'h1)) 
    Select_Logic_i_1
       (.I0(\Using_FPGA.take_Intr_2nd_Phase_reg ),
        .I1(Select_Logic_reg),
        .O(Select_Logic0));
  LUT1 #(
    .INIT(2'h1)) 
    \Using_FPGA.Native_i_1__3 
       (.I0(\Using_FPGA.take_Intr_2nd_Phase_reg ),
        .O(load_Store_i2));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \Using_FPGA.Native_i_1__90 
       (.I0(\Using_FPGA.take_Intr_2nd_Phase_reg ),
        .I1(\Using_FPGA.Native_0 ),
        .O(\Synchronize.use_sync_reset.sync_reg[2] ));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.take_Intr_2nd_Phase_i_1 
       (.I0(\Using_FPGA.take_Intr_2nd_Phase_reg ),
        .I1(\Using_FPGA.take_Intr_2nd_Phase_reg_0 ),
        .O(inHibit_EX1));
  VCC VCC
       (.P(\<const1> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXCY" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_23
   (IReady,
    mbar_is_sleep_reg,
    ilmb_Sl_Ready,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8);
  output IReady;
  input mbar_is_sleep_reg;
  input ilmb_Sl_Ready;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  output lopt_5;
  output lopt_6;
  output lopt_7;
  input lopt_8;

  wire IReady;
  wire ilmb_Sl_Ready;
  wire \^lopt_1 ;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_4 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire lopt_9;
  wire mbar_is_sleep_reg;
  wire [7:3]\NLW_Using_FPGA.Native_CARRY4_CARRY8_CO_UNCONNECTED ;
  wire [7:3]\NLW_Using_FPGA.Native_CARRY4_CARRY8_DI_UNCONNECTED ;
  wire [7:0]\NLW_Using_FPGA.Native_CARRY4_CARRY8_O_UNCONNECTED ;
  wire [7:4]\NLW_Using_FPGA.Native_CARRY4_CARRY8_S_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign lopt = \^lopt_1 ;
  assign lopt_3 = \^lopt_4 ;
  assign lopt_5 = \^lopt_6 ;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_7 = \^lopt_8 ;
  assign lopt_9 = lopt_8;
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(CARRY4)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY8 \Using_FPGA.Native_CARRY4_CARRY8 
       (.CI(ilmb_Sl_Ready),
        .CI_TOP(1'b0),
        .CO({\NLW_Using_FPGA.Native_CARRY4_CARRY8_CO_UNCONNECTED [7:3],\^lopt_4 ,\^lopt_1 ,IReady}),
        .DI({\NLW_Using_FPGA.Native_CARRY4_CARRY8_DI_UNCONNECTED [7:3],\^lopt_2 ,\^lopt_2 ,1'b0}),
        .O({\NLW_Using_FPGA.Native_CARRY4_CARRY8_O_UNCONNECTED [7:4],\^lopt_8 ,\^lopt_7 ,\^lopt_6 ,\NLW_Using_FPGA.Native_CARRY4_CARRY8_O_UNCONNECTED [0]}),
        .S({\NLW_Using_FPGA.Native_CARRY4_CARRY8_S_UNCONNECTED [7:4],lopt_9,\^lopt_5 ,\^lopt_3 ,mbar_is_sleep_reg}));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXCY" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_26
   (ifetch_carry1,
    buffer_Full,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output ifetch_carry1;
  input buffer_Full;
  input \Using_FPGA.Native_0 ;
  input lopt;
  output lopt_1;

  wire \<const1> ;
  wire \Using_FPGA.Native_0 ;
  wire buffer_Full;
  wire ifetch_carry1;

  assign ifetch_carry1 = lopt;
  assign lopt_1 = \<const1> ;
  VCC VCC
       (.P(\<const1> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXCY" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_27
   (\No_ECC.Sl_Rdy_reg ,
    iFetch_In_Progress_reg,
    \No_ECC.Sl_Rdy_reg_0 ,
    mbar_hold_I_reg,
    \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ,
    ifetch_carry1,
    Sl_Rdy,
    lmb_as,
    iFetch_In_Progress,
    missed_IFetch,
    missed_IFetch_reg,
    of_mbar_decode,
    mbar_hold_I_reg_0,
    mbar_hold_I_reg_1,
    mbar_hold_I_reg_2,
    ilmb_Sl_Ready,
    mul_Executing,
    mbar_decode_I,
    ex_Valid,
    lopt,
    lopt_1);
  output \No_ECC.Sl_Rdy_reg ;
  output iFetch_In_Progress_reg;
  output \No_ECC.Sl_Rdy_reg_0 ;
  output mbar_hold_I_reg;
  input \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  input ifetch_carry1;
  input Sl_Rdy;
  input lmb_as;
  input iFetch_In_Progress;
  input missed_IFetch;
  input missed_IFetch_reg;
  input of_mbar_decode;
  input mbar_hold_I_reg_0;
  input mbar_hold_I_reg_1;
  input [0:0]mbar_hold_I_reg_2;
  input ilmb_Sl_Ready;
  input mul_Executing;
  input mbar_decode_I;
  input ex_Valid;
  input lopt;
  output lopt_1;

  wire \<const0> ;
  wire \No_ECC.Sl_Rdy_reg ;
  wire \No_ECC.Sl_Rdy_reg_0 ;
  wire Sl_Rdy;
  wire \Using_B36_S2.The_BRAMs[15].RAMB36_I1 ;
  wire ex_Valid;
  wire iFetch_In_Progress;
  wire iFetch_In_Progress_reg;
  wire ifetch_carry1;
  wire ifetch_carry2;
  wire ilmb_Sl_Ready;
  wire lmb_as;
  wire mbar_decode_I;
  wire mbar_hold_I_reg;
  wire mbar_hold_I_reg_0;
  wire mbar_hold_I_reg_1;
  wire [0:0]mbar_hold_I_reg_2;
  wire missed_IFetch;
  wire missed_IFetch_reg;
  wire mul_Executing;
  wire of_mbar_decode;

  assign ifetch_carry2 = lopt;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
  LUT6 #(
    .INIT(64'h00D0D0D0D0D0D0D0)) 
    \Using_B36_S2.The_BRAMs[0].RAMB36_I1_i_1 
       (.I0(iFetch_In_Progress),
        .I1(ilmb_Sl_Ready),
        .I2(ifetch_carry2),
        .I3(mul_Executing),
        .I4(mbar_decode_I),
        .I5(ex_Valid),
        .O(iFetch_In_Progress_reg));
  LUT4 #(
    .INIT(16'hBFAA)) 
    iFetch_In_Progress_i_1
       (.I0(iFetch_In_Progress_reg),
        .I1(Sl_Rdy),
        .I2(lmb_as),
        .I3(iFetch_In_Progress),
        .O(\No_ECC.Sl_Rdy_reg ));
  LUT5 #(
    .INIT(32'h0000C5C0)) 
    mbar_hold_I_i_1
       (.I0(iFetch_In_Progress_reg),
        .I1(of_mbar_decode),
        .I2(mbar_hold_I_reg_0),
        .I3(mbar_hold_I_reg_1),
        .I4(mbar_hold_I_reg_2),
        .O(mbar_hold_I_reg));
  LUT5 #(
    .INIT(32'h707F7070)) 
    missed_IFetch_i_1
       (.I0(Sl_Rdy),
        .I1(lmb_as),
        .I2(missed_IFetch),
        .I3(iFetch_In_Progress_reg),
        .I4(missed_IFetch_reg),
        .O(\No_ECC.Sl_Rdy_reg_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXCY" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_28
   (mul_Executing_reg,
    \Using_FPGA.Native_0 ,
    load_Store_i_reg,
    \Synchronize.use_sync_reset.sync_reg[2] ,
    SR,
    E,
    is_swx_I_reg,
    is_swx_I,
    \Synchronize.use_sync_reset.sync_reg[2]_0 ,
    of_PipeRun_Select,
    of_PipeRun_without_dready,
    dlmb_LMB_Ready,
    Buffer_Addr,
    ex_Valid_reg,
    S87_out,
    ex_Valid_reg_0,
    load_Store_i,
    ex_Valid_reg_1,
    swx_ready_reg,
    swx_ready_reg_0,
    swx_ready_reg_1,
    \Using_LWX_SWX_instr.reservation_reg ,
    reservation2,
    is_lwx_I,
    ex_Valid,
    load_Store_i_reg_0,
    lmb_as_0,
    Sl_Rdy_1,
    swx_ready,
    load_Store_i_reg_1,
    Unsigned_Op_reg,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10);
  output mul_Executing_reg;
  output \Using_FPGA.Native_0 ;
  output load_Store_i_reg;
  output \Synchronize.use_sync_reset.sync_reg[2] ;
  output [0:0]SR;
  output [0:0]E;
  output is_swx_I_reg;
  output is_swx_I;
  output \Synchronize.use_sync_reset.sync_reg[2]_0 ;
  input of_PipeRun_Select;
  input of_PipeRun_without_dready;
  input dlmb_LMB_Ready;
  input [0:0]Buffer_Addr;
  input ex_Valid_reg;
  input S87_out;
  input ex_Valid_reg_0;
  input load_Store_i;
  input ex_Valid_reg_1;
  input [0:0]swx_ready_reg;
  input swx_ready_reg_0;
  input swx_ready_reg_1;
  input \Using_LWX_SWX_instr.reservation_reg ;
  input reservation2;
  input is_lwx_I;
  input ex_Valid;
  input load_Store_i_reg_0;
  input lmb_as_0;
  input Sl_Rdy_1;
  input swx_ready;
  input load_Store_i_reg_1;
  input Unsigned_Op_reg;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  output lopt_5;
  input lopt_6;
  input lopt_7;
  output lopt_8;
  input lopt_9;
  input lopt_10;

  wire [0:0]Buffer_Addr;
  wire [0:0]E;
  wire S87_out;
  wire [0:0]SR;
  wire Sl_Rdy_1;
  wire \Synchronize.use_sync_reset.sync_reg[2] ;
  wire \Synchronize.use_sync_reset.sync_reg[2]_0 ;
  wire Unsigned_Op_reg;
  wire \Using_FPGA.Native_0 ;
  wire \Using_LWX_SWX_instr.reservation_i_4_n_0 ;
  wire \Using_LWX_SWX_instr.reservation_reg ;
  wire dlmb_LMB_Ready;
  wire ex_Valid;
  wire ex_Valid_reg;
  wire ex_Valid_reg_0;
  wire ex_Valid_reg_1;
  wire is_lwx_I;
  wire is_swx_I;
  wire is_swx_I_reg;
  wire lmb_as_0;
  wire load_Store_i;
  wire load_Store_i_reg;
  wire load_Store_i_reg_0;
  wire load_Store_i_reg_1;
  wire \^lopt_1 ;
  wire \^lopt_10 ;
  wire lopt_11;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_4 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire mul_Executing_reg;
  wire of_PipeRun_Select;
  wire of_PipeRun_without_dready;
  wire reservation2;
  wire swx_ready;
  wire [0:0]swx_ready_reg;
  wire swx_ready_reg_0;
  wire swx_ready_reg_1;
  wire [7:5]\NLW_Using_FPGA.Native_CARRY4_CARRY8_CO_UNCONNECTED ;
  wire [7:5]\NLW_Using_FPGA.Native_CARRY4_CARRY8_DI_UNCONNECTED ;
  wire [7:0]\NLW_Using_FPGA.Native_CARRY4_CARRY8_O_UNCONNECTED ;
  wire [7:5]\NLW_Using_FPGA.Native_CARRY4_CARRY8_S_UNCONNECTED ;

  assign \^lopt_10  = lopt_9;
  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_7  = lopt_6;
  assign \^lopt_8  = lopt_7;
  assign lopt = \^lopt_1 ;
  assign lopt_11 = lopt_10;
  assign lopt_3 = \^lopt_4 ;
  assign lopt_5 = \^lopt_6 ;
  assign lopt_8 = \^lopt_9 ;
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    Compare_Instr_i_1
       (.I0(mul_Executing_reg),
        .I1(ex_Valid_reg),
        .I2(swx_ready_reg),
        .O(SR));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(CARRY4)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY8 \Using_FPGA.Native_CARRY4_CARRY8 
       (.CI(dlmb_LMB_Ready),
        .CI_TOP(1'b0),
        .CO({\NLW_Using_FPGA.Native_CARRY4_CARRY8_CO_UNCONNECTED [7:5],\^lopt_9 ,\^lopt_6 ,\^lopt_4 ,\^lopt_1 ,mul_Executing_reg}),
        .DI({\NLW_Using_FPGA.Native_CARRY4_CARRY8_DI_UNCONNECTED [7:5],\^lopt_10 ,\^lopt_7 ,\^lopt_5 ,\^lopt_2 ,of_PipeRun_without_dready}),
        .O(\NLW_Using_FPGA.Native_CARRY4_CARRY8_O_UNCONNECTED [7:0]),
        .S({\NLW_Using_FPGA.Native_CARRY4_CARRY8_S_UNCONNECTED [7:5],lopt_11,\^lopt_8 ,Unsigned_Op_reg,\^lopt_3 ,of_PipeRun_Select}));
  LUT2 #(
    .INIT(4'h6)) 
    \Using_FPGA.Native_I1_i_1__0 
       (.I0(mul_Executing_reg),
        .I1(Buffer_Addr),
        .O(\Using_FPGA.Native_0 ));
  LUT6 #(
    .INIT(64'h0C000C0004040400)) 
    \Using_LWX_SWX_instr.reservation_i_1 
       (.I0(swx_ready_reg_1),
        .I1(\Using_LWX_SWX_instr.reservation_reg ),
        .I2(reservation2),
        .I3(swx_ready_reg_0),
        .I4(is_lwx_I),
        .I5(\Using_LWX_SWX_instr.reservation_i_4_n_0 ),
        .O(is_swx_I_reg));
  LUT6 #(
    .INIT(64'h77777F777F777F77)) 
    \Using_LWX_SWX_instr.reservation_i_4 
       (.I0(ex_Valid),
        .I1(load_Store_i),
        .I2(mul_Executing_reg),
        .I3(load_Store_i_reg_0),
        .I4(lmb_as_0),
        .I5(Sl_Rdy_1),
        .O(\Using_LWX_SWX_instr.reservation_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hDFDFDF00DF00DF00)) 
    ex_Valid_i_1
       (.I0(mul_Executing_reg),
        .I1(ex_Valid_reg),
        .I2(S87_out),
        .I3(ex_Valid_reg_0),
        .I4(load_Store_i),
        .I5(ex_Valid_reg_1),
        .O(load_Store_i_reg));
  LUT6 #(
    .INIT(64'hBAAABABABABABABA)) 
    is_lwx_I_i_1
       (.I0(swx_ready_reg),
        .I1(mul_Executing_reg),
        .I2(load_Store_i),
        .I3(swx_ready),
        .I4(load_Store_i_reg_1),
        .I5(load_Store_i_reg_0),
        .O(is_swx_I));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT4 #(
    .INIT(16'h0100)) 
    swx_ready_i_1
       (.I0(mul_Executing_reg),
        .I1(swx_ready_reg),
        .I2(swx_ready_reg_0),
        .I3(swx_ready_reg_1),
        .O(\Synchronize.use_sync_reset.sync_reg[2] ));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \write_Addr_I[0]_i_1 
       (.I0(mul_Executing_reg),
        .I1(swx_ready_reg),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    write_Reg_i_1
       (.I0(swx_ready_reg),
        .I1(Unsigned_Op_reg),
        .I2(mul_Executing_reg),
        .O(\Synchronize.use_sync_reset.sync_reg[2]_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXCY" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_6
   (correct_Carry_II,
    load_Store_i2,
    correct_Carry_I,
    lopt,
    lopt_1);
  output correct_Carry_II;
  input load_Store_i2;
  input correct_Carry_I;
  input lopt;
  output lopt_1;

  wire \<const0> ;
  wire correct_Carry_I;
  wire correct_Carry_II;
  wire load_Store_i2;

  assign correct_Carry_II = lopt;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXCY" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_64
   (zero_CI_0,
    Reg_Test_Equal,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11,
    lopt_12,
    lopt_13,
    lopt_14,
    lopt_15);
  output zero_CI_0;
  input Reg_Test_Equal;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  output lopt_5;
  input lopt_6;
  output lopt_7;
  output lopt_8;
  output lopt_9;
  output lopt_10;
  input lopt_11;
  input lopt_12;
  input lopt_13;
  input lopt_14;
  input lopt_15;

  wire Reg_Test_Equal;
  wire \^lopt_1 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire \^lopt_12 ;
  wire \^lopt_13 ;
  wire \^lopt_14 ;
  wire \^lopt_15 ;
  wire lopt_16;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_4 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire zero_CI_0;
  wire [7:0]\NLW_Using_FPGA.Native_CARRY4_CARRY8_O_UNCONNECTED ;

  assign \^lopt_12  = lopt_11;
  assign \^lopt_13  = lopt_12;
  assign \^lopt_14  = lopt_13;
  assign \^lopt_15  = lopt_14;
  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_7  = lopt_6;
  assign lopt = \^lopt_1 ;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_16 = lopt_15;
  assign lopt_3 = \^lopt_4 ;
  assign lopt_5 = \^lopt_6 ;
  assign lopt_7 = \^lopt_8 ;
  assign lopt_8 = \^lopt_9 ;
  assign lopt_9 = \^lopt_10 ;
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(CARRY4)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY8 \Using_FPGA.Native_CARRY4_CARRY8 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\^lopt_8 ,\^lopt_9 ,\^lopt_10 ,\^lopt_11 ,\^lopt_6 ,\^lopt_4 ,\^lopt_1 ,zero_CI_0}),
        .DI({\^lopt_12 ,\^lopt_2 ,\^lopt_2 ,\^lopt_2 ,\^lopt_2 ,\^lopt_2 ,\^lopt_2 ,1'b0}),
        .O(\NLW_Using_FPGA.Native_CARRY4_CARRY8_O_UNCONNECTED [7:0]),
        .S({\^lopt_13 ,\^lopt_14 ,\^lopt_15 ,lopt_16,\^lopt_7 ,\^lopt_5 ,\^lopt_3 ,Reg_Test_Equal}));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXCY" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_649
   (EX_CarryIn,
    control_carry,
    carry_In,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11,
    lopt_12,
    lopt_13,
    lopt_14,
    lopt_15,
    lopt_16,
    lopt_17,
    lopt_18,
    lopt_19,
    lopt_20,
    lopt_21,
    lopt_22,
    lopt_23,
    lopt_24,
    lopt_25,
    lopt_26,
    lopt_27);
  output EX_CarryIn;
  input control_carry;
  input carry_In;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;
  output lopt_12;
  output lopt_13;
  output lopt_14;
  output lopt_15;
  output lopt_16;
  output lopt_17;
  output lopt_18;
  output lopt_19;
  input lopt_20;
  input lopt_21;
  input lopt_22;
  input lopt_23;
  input lopt_24;
  input lopt_25;
  input lopt_26;
  input lopt_27;

  wire EX_CarryIn;
  wire carry_In;
  wire control_carry;
  wire \^lopt_1 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire \^lopt_12 ;
  wire \^lopt_13 ;
  wire \^lopt_14 ;
  wire \^lopt_15 ;
  wire \^lopt_16 ;
  wire \^lopt_17 ;
  wire \^lopt_18 ;
  wire \^lopt_19 ;
  wire \^lopt_2 ;
  wire \^lopt_20 ;
  wire \^lopt_21 ;
  wire \^lopt_22 ;
  wire \^lopt_23 ;
  wire \^lopt_24 ;
  wire \^lopt_25 ;
  wire \^lopt_26 ;
  wire \^lopt_27 ;
  wire lopt_28;
  wire \^lopt_3 ;
  wire \^lopt_4 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [0:0]\NLW_Using_FPGA.Native_CARRY4_CARRY8_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_21  = lopt_20;
  assign \^lopt_22  = lopt_21;
  assign \^lopt_23  = lopt_22;
  assign \^lopt_24  = lopt_23;
  assign \^lopt_25  = lopt_24;
  assign \^lopt_26  = lopt_25;
  assign \^lopt_27  = lopt_26;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt = \^lopt_1 ;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = \^lopt_12 ;
  assign lopt_12 = \^lopt_13 ;
  assign lopt_13 = \^lopt_14 ;
  assign lopt_14 = \^lopt_15 ;
  assign lopt_15 = \^lopt_16 ;
  assign lopt_16 = \^lopt_17 ;
  assign lopt_17 = \^lopt_18 ;
  assign lopt_18 = \^lopt_19 ;
  assign lopt_19 = \^lopt_20 ;
  assign lopt_28 = lopt_27;
  assign lopt_3 = \^lopt_4 ;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(CARRY4)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY8 \Using_FPGA.Native_CARRY4_CARRY8 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\^lopt_13 ,\^lopt_14 ,\^lopt_15 ,\^lopt_16 ,\^lopt_7 ,\^lopt_4 ,\^lopt_1 ,EX_CarryIn}),
        .DI({\^lopt_21 ,\^lopt_22 ,\^lopt_23 ,\^lopt_24 ,\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,carry_In}),
        .O({\^lopt_17 ,\^lopt_18 ,\^lopt_19 ,\^lopt_20 ,\^lopt_12 ,\^lopt_11 ,\^lopt_10 ,\NLW_Using_FPGA.Native_CARRY4_CARRY8_O_UNCONNECTED [0]}),
        .S({\^lopt_25 ,\^lopt_26 ,\^lopt_27 ,lopt_28,\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,control_carry}));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXCY" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_65
   (zero_CI_1,
    \Zero_Detecting[0].nibble_Zero_reg ,
    reg_Test_Equal_N,
    zero_CI_0,
    lopt);
  output zero_CI_1;
  input \Zero_Detecting[0].nibble_Zero_reg ;
  input reg_Test_Equal_N;
  input zero_CI_0;
  input lopt;

  wire \Zero_Detecting[0].nibble_Zero_reg ;
  wire reg_Test_Equal_N;
  wire zero_CI_0;
  wire zero_CI_1;

  assign zero_CI_1 = lopt;
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXCY" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_66
   (zero_CI_2,
    S,
    reg_Test_Equal_N,
    zero_CI_1,
    lopt);
  output zero_CI_2;
  input S;
  input reg_Test_Equal_N;
  input zero_CI_1;
  input lopt;

  wire S;
  wire reg_Test_Equal_N;
  wire zero_CI_1;
  wire zero_CI_2;

  assign zero_CI_2 = lopt;
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXCY" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_67
   (zero_CI_3,
    \Zero_Detecting[2].nibble_Zero_reg ,
    reg_Test_Equal_N,
    zero_CI_2,
    lopt);
  output zero_CI_3;
  input \Zero_Detecting[2].nibble_Zero_reg ;
  input reg_Test_Equal_N;
  input zero_CI_2;
  input lopt;

  wire \Zero_Detecting[2].nibble_Zero_reg ;
  wire reg_Test_Equal_N;
  wire zero_CI_2;
  wire zero_CI_3;

  assign zero_CI_3 = lopt;
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXCY" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_68
   (zero_CI_4,
    \Zero_Detecting[3].nibble_Zero_reg ,
    reg_Test_Equal_N,
    zero_CI_3,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10);
  output zero_CI_4;
  input \Zero_Detecting[3].nibble_Zero_reg ;
  input reg_Test_Equal_N;
  input zero_CI_3;
  output lopt;
  input lopt_1;
  output lopt_2;
  input lopt_3;
  output lopt_4;
  input lopt_5;
  input lopt_6;
  input lopt_7;
  input lopt_8;
  input lopt_9;
  input lopt_10;

  wire \Zero_Detecting[3].nibble_Zero_reg ;
  wire \^lopt_1 ;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_4 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire reg_Test_Equal_N;
  wire zero_CI_3;
  wire zero_CI_4;

  assign \^lopt_1  = lopt_9;
  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_8;
  assign \^lopt_4  = lopt_3;
  assign \^lopt_5  = lopt_7;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_7  = lopt_6;
  assign lopt = \^lopt_1 ;
  assign lopt_2 = \^lopt_3 ;
  assign lopt_4 = \^lopt_5 ;
  assign zero_CI_4 = lopt_10;
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXCY" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_69
   (zero_CI_5,
    \Zero_Detecting[4].nibble_Zero_reg ,
    reg_Test_Equal_N,
    zero_CI_4,
    lopt);
  output zero_CI_5;
  input \Zero_Detecting[4].nibble_Zero_reg ;
  input reg_Test_Equal_N;
  input zero_CI_4;
  input lopt;

  wire \Zero_Detecting[4].nibble_Zero_reg ;
  wire reg_Test_Equal_N;
  wire zero_CI_4;
  wire zero_CI_5;

  assign zero_CI_5 = lopt;
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXCY" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_7
   (jump_Carry1,
    force_jump1,
    force_DI1,
    Reg_zero,
    lopt);
  output jump_Carry1;
  input force_jump1;
  input force_DI1;
  input Reg_zero;
  input lopt;

  wire Reg_zero;
  wire force_DI1;
  wire force_jump1;
  wire jump_Carry1;

  assign jump_Carry1 = lopt;
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXCY" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_70
   (Reg_zero,
    \Zero_Detecting[5].nibble_Zero_reg ,
    reg_Test_Equal_N,
    zero_CI_5,
    lopt);
  output Reg_zero;
  input \Zero_Detecting[5].nibble_Zero_reg ;
  input reg_Test_Equal_N;
  input zero_CI_5;
  input lopt;

  wire Reg_zero;
  wire \Zero_Detecting[5].nibble_Zero_reg ;
  wire reg_Test_Equal_N;
  wire zero_CI_5;

  assign Reg_zero = lopt;
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXCY" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_713
   (CI,
    \Using_IO_Bus.IO_Address_reg[31] ,
    Unsigned_Op,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11,
    lopt_12,
    lopt_13,
    lopt_14,
    lopt_15);
  output CI;
  input \Using_IO_Bus.IO_Address_reg[31] ;
  input Unsigned_Op;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;
  input lopt_12;
  input lopt_13;
  input lopt_14;
  input lopt_15;

  wire CI;
  wire LO;
  wire Unsigned_Op;
  wire \Using_IO_Bus.IO_Address_reg[31] ;
  wire \^lopt_1 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire \^lopt_12 ;
  wire \^lopt_13 ;
  wire \^lopt_14 ;
  wire \^lopt_15 ;
  wire lopt_16;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_4 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [7:6]\NLW_Using_FPGA.Native_CARRY4_CARRY8_CO_UNCONNECTED ;
  wire [7:6]\NLW_Using_FPGA.Native_CARRY4_CARRY8_DI_UNCONNECTED ;
  wire [7:0]\NLW_Using_FPGA.Native_CARRY4_CARRY8_O_UNCONNECTED ;
  wire [7:6]\NLW_Using_FPGA.Native_CARRY4_CARRY8_S_UNCONNECTED ;

  assign \^lopt_13  = lopt_12;
  assign \^lopt_14  = lopt_13;
  assign \^lopt_15  = lopt_14;
  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt = \^lopt_1 ;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = \^lopt_12 ;
  assign lopt_16 = lopt_15;
  assign lopt_3 = \^lopt_4 ;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(CARRY4)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY8 \Using_FPGA.Native_CARRY4_CARRY8 
       (.CI(LO),
        .CI_TOP(1'b0),
        .CO({\NLW_Using_FPGA.Native_CARRY4_CARRY8_CO_UNCONNECTED [7:6],\^lopt_11 ,\^lopt_12 ,\^lopt_7 ,\^lopt_4 ,\^lopt_1 ,CI}),
        .DI({\NLW_Using_FPGA.Native_CARRY4_CARRY8_DI_UNCONNECTED [7:6],\^lopt_13 ,\^lopt_14 ,\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,Unsigned_Op}),
        .O({\NLW_Using_FPGA.Native_CARRY4_CARRY8_O_UNCONNECTED [7:2],\^lopt_10 ,\NLW_Using_FPGA.Native_CARRY4_CARRY8_O_UNCONNECTED [0]}),
        .S({\NLW_Using_FPGA.Native_CARRY4_CARRY8_S_UNCONNECTED [7:6],\^lopt_15 ,lopt_16,\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,\Using_IO_Bus.IO_Address_reg[31] }));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXCY" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_8
   (jump_Carry2,
    force_jump2,
    force_DI2,
    jump_Carry1,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8);
  output jump_Carry2;
  input force_jump2;
  input force_DI2;
  input jump_Carry1;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;

  wire force_DI2;
  wire force_jump2;
  wire jump_Carry1;
  wire jump_Carry2;
  wire \^lopt_1 ;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_4 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire lopt_9;
  wire [7:4]\NLW_Using_FPGA.Native_CARRY4_CARRY8_CO_UNCONNECTED ;
  wire [7:4]\NLW_Using_FPGA.Native_CARRY4_CARRY8_DI_UNCONNECTED ;
  wire [7:0]\NLW_Using_FPGA.Native_CARRY4_CARRY8_O_UNCONNECTED ;
  wire [7:4]\NLW_Using_FPGA.Native_CARRY4_CARRY8_S_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign lopt = \^lopt_1 ;
  assign lopt_3 = \^lopt_4 ;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = lopt_8;
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(CARRY4)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY8 \Using_FPGA.Native_CARRY4_CARRY8 
       (.CI(jump_Carry1),
        .CI_TOP(1'b0),
        .CO({\NLW_Using_FPGA.Native_CARRY4_CARRY8_CO_UNCONNECTED [7:4],\^lopt_7 ,\^lopt_4 ,\^lopt_1 ,jump_Carry2}),
        .DI({\NLW_Using_FPGA.Native_CARRY4_CARRY8_DI_UNCONNECTED [7:4],\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,force_DI2}),
        .O(\NLW_Using_FPGA.Native_CARRY4_CARRY8_O_UNCONNECTED [7:0]),
        .S({\NLW_Using_FPGA.Native_CARRY4_CARRY8_S_UNCONNECTED [7:4],lopt_9,\^lopt_6 ,\^lopt_3 ,force_jump2}));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXCY" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXCY_9
   (\Using_FPGA.Native_0 ,
    inHibit_EX_reg,
    using_Imm0,
    PC_Write,
    R,
    S87_out,
    using_Imm_reg,
    jump_Carry2,
    inHibit_EX,
    jump2_I_reg,
    using_Imm_reg_0,
    using_Imm_reg_1,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    lopt,
    lopt_1);
  output \Using_FPGA.Native_0 ;
  output inHibit_EX_reg;
  output using_Imm0;
  output PC_Write;
  output R;
  output S87_out;
  input using_Imm_reg;
  input jump_Carry2;
  input inHibit_EX;
  input [0:0]jump2_I_reg;
  input using_Imm_reg_0;
  input using_Imm_reg_1;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input lopt;
  output lopt_1;

  wire \<const0> ;
  wire PC_Write;
  wire R;
  wire S87_out;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire inHibit_EX;
  wire inHibit_EX_reg;
  wire [0:0]jump2_I_reg;
  wire jump_Carry2;
  wire using_Imm0;
  wire using_Imm_reg;
  wire using_Imm_reg_0;
  wire using_Imm_reg_1;

  assign \Using_FPGA.Native_0  = lopt;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \Using_FPGA.Native_i_1__53 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(PC_Write));
  LUT3 #(
    .INIT(8'hEA)) 
    \Using_FPGA.Native_i_1__55 
       (.I0(\Using_FPGA.Native_2 ),
        .I1(inHibit_EX),
        .I2(\Using_FPGA.Native_0 ),
        .O(R));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Using_FPGA.Native_i_2__5 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(inHibit_EX),
        .O(S87_out));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT3 #(
    .INIT(8'h8F)) 
    jump2_I_i_2
       (.I0(inHibit_EX),
        .I1(\Using_FPGA.Native_0 ),
        .I2(jump2_I_reg),
        .O(inHibit_EX_reg));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT4 #(
    .INIT(16'h0007)) 
    using_Imm_i_1
       (.I0(inHibit_EX),
        .I1(\Using_FPGA.Native_0 ),
        .I2(using_Imm_reg_0),
        .I3(using_Imm_reg_1),
        .O(using_Imm0));
endmodule

module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_104
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_107
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_110
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_113
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_116
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_119
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_122
   (Shift_Logic_Res,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Shift_Logic_Res;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Shift_Logic_Res;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Shift_Logic_Res),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_125
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_128
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_131
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_134
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_137
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_140
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_143
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_146
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_149
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_152
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_155
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_158
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_161
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_164
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_167
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_170
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_173
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_176
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_179
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_182
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_185
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_188
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_191
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

(* ORIG_REF_NAME = "microblaze_v9_5_4_MB_MUXF7" *) 
module c2c_gth_in_system_ibert_0_microblaze_v9_5_4_MB_MUXF7_194
   (Select_Logic_reg,
    Select_Logic,
    shift_Res,
    logic_Res_i);
  output Select_Logic_reg;
  input Select_Logic;
  input shift_Res;
  input logic_Res_i;

  wire Select_Logic;
  wire Select_Logic_reg;
  wire logic_Res_i;
  wire shift_Res;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(shift_Res),
        .I1(logic_Res_i),
        .O(Select_Logic_reg),
        .S(Select_Logic));
endmodule

module c2c_gth_in_system_ibert_0_mux4_8
   (DATA_INB,
    D,
    sel_Write_Mux_MSB);
  output [15:0]DATA_INB;
  input [0:31]D;
  input [1:0]sel_Write_Mux_MSB;

  wire [0:31]D;
  wire [15:0]DATA_INB;
  wire [1:0]sel_Write_Mux_MSB;

  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized14_717 \GEN4_LOOP[0].BYTESTEER_LUT6 
       (.D({D[0],D[8],D[16],D[24]}),
        .DATA_INB({DATA_INB[15],DATA_INB[7]}),
        .sel_Write_Mux_MSB(sel_Write_Mux_MSB));
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized14_718 \GEN4_LOOP[1].BYTESTEER_LUT6 
       (.D({D[1],D[9],D[17],D[25]}),
        .DATA_INB({DATA_INB[14],DATA_INB[6]}),
        .sel_Write_Mux_MSB(sel_Write_Mux_MSB));
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized14_719 \GEN4_LOOP[2].BYTESTEER_LUT6 
       (.D({D[2],D[10],D[18],D[26]}),
        .DATA_INB({DATA_INB[13],DATA_INB[5]}),
        .sel_Write_Mux_MSB(sel_Write_Mux_MSB));
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized14_720 \GEN4_LOOP[3].BYTESTEER_LUT6 
       (.D({D[3],D[11],D[19],D[27]}),
        .DATA_INB({DATA_INB[12],DATA_INB[4]}),
        .sel_Write_Mux_MSB(sel_Write_Mux_MSB));
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized14_721 \GEN4_LOOP[4].BYTESTEER_LUT6 
       (.D({D[4],D[12],D[20],D[28]}),
        .DATA_INB({DATA_INB[11],DATA_INB[3]}),
        .sel_Write_Mux_MSB(sel_Write_Mux_MSB));
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized14_722 \GEN4_LOOP[5].BYTESTEER_LUT6 
       (.D({D[5],D[13],D[21],D[29]}),
        .DATA_INB({DATA_INB[10],DATA_INB[2]}),
        .sel_Write_Mux_MSB(sel_Write_Mux_MSB));
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized14_723 \GEN4_LOOP[6].BYTESTEER_LUT6 
       (.D({D[6],D[14],D[22],D[30]}),
        .DATA_INB({DATA_INB[9],DATA_INB[1]}),
        .sel_Write_Mux_MSB(sel_Write_Mux_MSB));
  c2c_gth_in_system_ibert_0_MB_LUT6_2__parameterized14_724 \GEN4_LOOP[7].BYTESTEER_LUT6 
       (.D({D[7],D[15],D[23],D[31]}),
        .DATA_INB({DATA_INB[8],DATA_INB[0]}),
        .sel_Write_Mux_MSB(sel_Write_Mux_MSB));
endmodule

module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg
   (\G_1PIPE_IFACE.s_daddr_r_reg[5] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[9] ,
    \G_1PIPE_IFACE.s_dwe_r_reg ,
    \G_1PIPE_IFACE.s_daddr_r_reg[10] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[0] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[7] ,
    ram_range00_in,
    \xsdb_reg_reg[3] ,
    \xsdb_reg_reg[4] ,
    \xsdb_reg_reg[8] ,
    \xsdb_reg_reg[9] ,
    \xsdb_reg_reg[10] ,
    \xsdb_reg_reg[11] ,
    \xsdb_reg_reg[12] ,
    \xsdb_reg_reg[13] ,
    \xsdb_reg_reg[14] ,
    \xsdb_reg_reg[0] ,
    \xsdb_reg_reg[5] ,
    \xsdb_reg_reg[15] ,
    \xsdb_reg_reg[0]_0 ,
    s_daddr_o,
    s_dwe_o,
    \xsdb_reg_reg[0]_1 ,
    \regSlaveDo_reg[3] ,
    \regSlaveDo_reg[14] ,
    Q,
    \regSlaveDo_reg[14]_0 ,
    \regSlaveDo_reg[14]_1 ,
    \regSlaveDo_reg[14]_2 ,
    \regSlaveDo_reg[14]_3 ,
    \regSlaveDo_reg[14]_4 ,
    \regSlaveDo_reg[3]_0 ,
    \regSlaveDo_reg[4] ,
    \regSlaveDo_reg[4]_0 ,
    \regSlaveDo_reg[8] ,
    \regSlaveDo_reg[14]_5 ,
    \regSlaveDo_reg[14]_6 ,
    \regSlaveDo_reg[9] ,
    \regSlaveDo_reg[10] ,
    \regSlaveDo_reg[11] ,
    \regSlaveDo_reg[12] ,
    \regSlaveDo_reg[13] ,
    \regSlaveDo_reg[14]_7 ,
    \regSlaveDo[14]_i_2 ,
    reg_rst_i,
    D,
    s_dclk_o);
  output \G_1PIPE_IFACE.s_daddr_r_reg[5] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[9] ;
  output \G_1PIPE_IFACE.s_dwe_r_reg ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[10] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[0] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[7] ;
  output ram_range00_in;
  output \xsdb_reg_reg[3] ;
  output \xsdb_reg_reg[4] ;
  output \xsdb_reg_reg[8] ;
  output \xsdb_reg_reg[9] ;
  output \xsdb_reg_reg[10] ;
  output \xsdb_reg_reg[11] ;
  output \xsdb_reg_reg[12] ;
  output \xsdb_reg_reg[13] ;
  output \xsdb_reg_reg[14] ;
  output \xsdb_reg_reg[0] ;
  output \xsdb_reg_reg[5] ;
  output [4:0]\xsdb_reg_reg[15] ;
  input \xsdb_reg_reg[0]_0 ;
  input [16:0]s_daddr_o;
  input s_dwe_o;
  input \xsdb_reg_reg[0]_1 ;
  input \regSlaveDo_reg[3] ;
  input \regSlaveDo_reg[14] ;
  input [8:0]Q;
  input \regSlaveDo_reg[14]_0 ;
  input [8:0]\regSlaveDo_reg[14]_1 ;
  input \regSlaveDo_reg[14]_2 ;
  input [9:0]\regSlaveDo_reg[14]_3 ;
  input \regSlaveDo_reg[14]_4 ;
  input \regSlaveDo_reg[3]_0 ;
  input \regSlaveDo_reg[4] ;
  input \regSlaveDo_reg[4]_0 ;
  input \regSlaveDo_reg[8] ;
  input [6:0]\regSlaveDo_reg[14]_5 ;
  input \regSlaveDo_reg[14]_6 ;
  input \regSlaveDo_reg[9] ;
  input \regSlaveDo_reg[10] ;
  input \regSlaveDo_reg[11] ;
  input \regSlaveDo_reg[12] ;
  input \regSlaveDo_reg[13] ;
  input \regSlaveDo_reg[14]_7 ;
  input [7:0]\regSlaveDo[14]_i_2 ;
  input reg_rst_i;
  input [15:0]D;
  input s_dclk_o;

  wire [15:0]D;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[0] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[10] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[5] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[7] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[9] ;
  wire \G_1PIPE_IFACE.s_dwe_r_reg ;
  wire [8:0]Q;
  wire ram_range00_in;
  wire [7:0]\regSlaveDo[14]_i_2 ;
  wire \regSlaveDo_reg[10] ;
  wire \regSlaveDo_reg[11] ;
  wire \regSlaveDo_reg[12] ;
  wire \regSlaveDo_reg[13] ;
  wire \regSlaveDo_reg[14] ;
  wire \regSlaveDo_reg[14]_0 ;
  wire [8:0]\regSlaveDo_reg[14]_1 ;
  wire \regSlaveDo_reg[14]_2 ;
  wire [9:0]\regSlaveDo_reg[14]_3 ;
  wire \regSlaveDo_reg[14]_4 ;
  wire [6:0]\regSlaveDo_reg[14]_5 ;
  wire \regSlaveDo_reg[14]_6 ;
  wire \regSlaveDo_reg[14]_7 ;
  wire \regSlaveDo_reg[3] ;
  wire \regSlaveDo_reg[3]_0 ;
  wire \regSlaveDo_reg[4] ;
  wire \regSlaveDo_reg[4]_0 ;
  wire \regSlaveDo_reg[8] ;
  wire \regSlaveDo_reg[9] ;
  wire reg_rst_i;
  wire [16:0]s_daddr_o;
  wire s_dclk_o;
  wire s_dwe_o;
  wire \xsdb_reg_reg[0] ;
  wire \xsdb_reg_reg[0]_0 ;
  wire \xsdb_reg_reg[0]_1 ;
  wire \xsdb_reg_reg[10] ;
  wire \xsdb_reg_reg[11] ;
  wire \xsdb_reg_reg[12] ;
  wire \xsdb_reg_reg[13] ;
  wire \xsdb_reg_reg[14] ;
  wire [4:0]\xsdb_reg_reg[15] ;
  wire \xsdb_reg_reg[3] ;
  wire \xsdb_reg_reg[4] ;
  wire \xsdb_reg_reg[5] ;
  wire \xsdb_reg_reg[8] ;
  wire \xsdb_reg_reg[9] ;

  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_ctl_737 \I_EN_CTL_EQ1.U_CTL 
       (.D(D),
        .\G_1PIPE_IFACE.s_daddr_r_reg[0] (\G_1PIPE_IFACE.s_daddr_r_reg[0] ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[10] (\G_1PIPE_IFACE.s_daddr_r_reg[10] ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[5] (\G_1PIPE_IFACE.s_daddr_r_reg[5] ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[7] (\G_1PIPE_IFACE.s_daddr_r_reg[7] ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[9] (\G_1PIPE_IFACE.s_daddr_r_reg[9] ),
        .\G_1PIPE_IFACE.s_dwe_r_reg (\G_1PIPE_IFACE.s_dwe_r_reg ),
        .Q(Q),
        .ram_range00_in(ram_range00_in),
        .\regSlaveDo[14]_i_2_0 (\regSlaveDo[14]_i_2 ),
        .\regSlaveDo_reg[10] (\regSlaveDo_reg[10] ),
        .\regSlaveDo_reg[11] (\regSlaveDo_reg[11] ),
        .\regSlaveDo_reg[12] (\regSlaveDo_reg[12] ),
        .\regSlaveDo_reg[13] (\regSlaveDo_reg[13] ),
        .\regSlaveDo_reg[14] (\regSlaveDo_reg[14] ),
        .\regSlaveDo_reg[14]_0 (\regSlaveDo_reg[14]_0 ),
        .\regSlaveDo_reg[14]_1 (\regSlaveDo_reg[14]_1 ),
        .\regSlaveDo_reg[14]_2 (\regSlaveDo_reg[14]_2 ),
        .\regSlaveDo_reg[14]_3 (\regSlaveDo_reg[14]_3 ),
        .\regSlaveDo_reg[14]_4 (\regSlaveDo_reg[14]_4 ),
        .\regSlaveDo_reg[14]_5 (\regSlaveDo_reg[14]_5 ),
        .\regSlaveDo_reg[14]_6 (\regSlaveDo_reg[14]_6 ),
        .\regSlaveDo_reg[14]_7 (\regSlaveDo_reg[14]_7 ),
        .\regSlaveDo_reg[3] (\regSlaveDo_reg[3] ),
        .\regSlaveDo_reg[3]_0 (\regSlaveDo_reg[3]_0 ),
        .\regSlaveDo_reg[4] (\regSlaveDo_reg[4] ),
        .\regSlaveDo_reg[4]_0 (\regSlaveDo_reg[4]_0 ),
        .\regSlaveDo_reg[8] (\regSlaveDo_reg[8] ),
        .\regSlaveDo_reg[9] (\regSlaveDo_reg[9] ),
        .reg_rst_i(reg_rst_i),
        .s_daddr_o(s_daddr_o),
        .s_dclk_o(s_dclk_o),
        .s_dwe_o(s_dwe_o),
        .\xsdb_reg_reg[0]_0 (\xsdb_reg_reg[0] ),
        .\xsdb_reg_reg[0]_1 (\xsdb_reg_reg[0]_0 ),
        .\xsdb_reg_reg[0]_2 (\xsdb_reg_reg[0]_1 ),
        .\xsdb_reg_reg[10]_0 (\xsdb_reg_reg[10] ),
        .\xsdb_reg_reg[11]_0 (\xsdb_reg_reg[11] ),
        .\xsdb_reg_reg[12]_0 (\xsdb_reg_reg[12] ),
        .\xsdb_reg_reg[13]_0 (\xsdb_reg_reg[13] ),
        .\xsdb_reg_reg[14]_0 (\xsdb_reg_reg[14] ),
        .\xsdb_reg_reg[15]_0 (\xsdb_reg_reg[15] ),
        .\xsdb_reg_reg[3]_0 (\xsdb_reg_reg[3] ),
        .\xsdb_reg_reg[4]_0 (\xsdb_reg_reg[4] ),
        .\xsdb_reg_reg[5]_0 (\xsdb_reg_reg[5] ),
        .\xsdb_reg_reg[8]_0 (\xsdb_reg_reg[8] ),
        .\xsdb_reg_reg[9]_0 (\xsdb_reg_reg[9] ));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_741
   (\G_1PIPE_IFACE.s_daddr_r_reg[5] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[9] ,
    \G_1PIPE_IFACE.s_dwe_r_reg ,
    \G_1PIPE_IFACE.s_daddr_r_reg[10] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[0] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[7] ,
    ram_range00_in,
    \xsdb_reg_reg[3] ,
    \xsdb_reg_reg[4] ,
    \xsdb_reg_reg[5] ,
    \xsdb_reg_reg[8] ,
    \xsdb_reg_reg[9] ,
    \xsdb_reg_reg[10] ,
    \xsdb_reg_reg[11] ,
    \xsdb_reg_reg[12] ,
    \xsdb_reg_reg[13] ,
    \xsdb_reg_reg[14] ,
    \xsdb_reg_reg[15] ,
    \xsdb_reg_reg[0] ,
    s_daddr_o,
    s_dwe_o,
    \xsdb_reg_reg[0]_0 ,
    \regSlaveDo_reg[3] ,
    \regSlaveDo_reg[14] ,
    Q,
    \regSlaveDo_reg[14]_0 ,
    \regSlaveDo_reg[14]_1 ,
    \regSlaveDo_reg[14]_2 ,
    \regSlaveDo_reg[14]_3 ,
    \regSlaveDo_reg[14]_4 ,
    \regSlaveDo_reg[3]_0 ,
    \regSlaveDo_reg[4] ,
    \regSlaveDo_reg[4]_0 ,
    \regSlaveDo_reg[14]_5 ,
    \regSlaveDo_reg[14]_6 ,
    \regSlaveDo_reg[8] ,
    \regSlaveDo_reg[9] ,
    \regSlaveDo_reg[10] ,
    \regSlaveDo_reg[11] ,
    \regSlaveDo_reg[12] ,
    \regSlaveDo_reg[13] ,
    \regSlaveDo_reg[14]_7 ,
    \regSlaveDo[14]_i_2 ,
    reg_rst_i,
    D,
    s_dclk_o);
  output \G_1PIPE_IFACE.s_daddr_r_reg[5] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[9] ;
  output \G_1PIPE_IFACE.s_dwe_r_reg ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[10] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[0] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[7] ;
  output ram_range00_in;
  output \xsdb_reg_reg[3] ;
  output \xsdb_reg_reg[4] ;
  output \xsdb_reg_reg[5] ;
  output \xsdb_reg_reg[8] ;
  output \xsdb_reg_reg[9] ;
  output \xsdb_reg_reg[10] ;
  output \xsdb_reg_reg[11] ;
  output \xsdb_reg_reg[12] ;
  output \xsdb_reg_reg[13] ;
  output \xsdb_reg_reg[14] ;
  output [5:0]\xsdb_reg_reg[15] ;
  input \xsdb_reg_reg[0] ;
  input [16:0]s_daddr_o;
  input s_dwe_o;
  input \xsdb_reg_reg[0]_0 ;
  input \regSlaveDo_reg[3] ;
  input \regSlaveDo_reg[14] ;
  input [8:0]Q;
  input \regSlaveDo_reg[14]_0 ;
  input [8:0]\regSlaveDo_reg[14]_1 ;
  input \regSlaveDo_reg[14]_2 ;
  input [9:0]\regSlaveDo_reg[14]_3 ;
  input \regSlaveDo_reg[14]_4 ;
  input \regSlaveDo_reg[3]_0 ;
  input \regSlaveDo_reg[4] ;
  input \regSlaveDo_reg[4]_0 ;
  input [7:0]\regSlaveDo_reg[14]_5 ;
  input \regSlaveDo_reg[14]_6 ;
  input \regSlaveDo_reg[8] ;
  input \regSlaveDo_reg[9] ;
  input \regSlaveDo_reg[10] ;
  input \regSlaveDo_reg[11] ;
  input \regSlaveDo_reg[12] ;
  input \regSlaveDo_reg[13] ;
  input \regSlaveDo_reg[14]_7 ;
  input [7:0]\regSlaveDo[14]_i_2 ;
  input reg_rst_i;
  input [15:0]D;
  input s_dclk_o;

  wire [15:0]D;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[0] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[10] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[5] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[7] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[9] ;
  wire \G_1PIPE_IFACE.s_dwe_r_reg ;
  wire [8:0]Q;
  wire ram_range00_in;
  wire [7:0]\regSlaveDo[14]_i_2 ;
  wire \regSlaveDo_reg[10] ;
  wire \regSlaveDo_reg[11] ;
  wire \regSlaveDo_reg[12] ;
  wire \regSlaveDo_reg[13] ;
  wire \regSlaveDo_reg[14] ;
  wire \regSlaveDo_reg[14]_0 ;
  wire [8:0]\regSlaveDo_reg[14]_1 ;
  wire \regSlaveDo_reg[14]_2 ;
  wire [9:0]\regSlaveDo_reg[14]_3 ;
  wire \regSlaveDo_reg[14]_4 ;
  wire [7:0]\regSlaveDo_reg[14]_5 ;
  wire \regSlaveDo_reg[14]_6 ;
  wire \regSlaveDo_reg[14]_7 ;
  wire \regSlaveDo_reg[3] ;
  wire \regSlaveDo_reg[3]_0 ;
  wire \regSlaveDo_reg[4] ;
  wire \regSlaveDo_reg[4]_0 ;
  wire \regSlaveDo_reg[8] ;
  wire \regSlaveDo_reg[9] ;
  wire reg_rst_i;
  wire [16:0]s_daddr_o;
  wire s_dclk_o;
  wire s_dwe_o;
  wire \xsdb_reg_reg[0] ;
  wire \xsdb_reg_reg[0]_0 ;
  wire \xsdb_reg_reg[10] ;
  wire \xsdb_reg_reg[11] ;
  wire \xsdb_reg_reg[12] ;
  wire \xsdb_reg_reg[13] ;
  wire \xsdb_reg_reg[14] ;
  wire [5:0]\xsdb_reg_reg[15] ;
  wire \xsdb_reg_reg[3] ;
  wire \xsdb_reg_reg[4] ;
  wire \xsdb_reg_reg[5] ;
  wire \xsdb_reg_reg[8] ;
  wire \xsdb_reg_reg[9] ;

  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_ctl_764 \I_EN_CTL_EQ1.U_CTL 
       (.D(D),
        .\G_1PIPE_IFACE.s_daddr_r_reg[0] (\G_1PIPE_IFACE.s_daddr_r_reg[0] ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[10] (\G_1PIPE_IFACE.s_daddr_r_reg[10] ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[5] (\G_1PIPE_IFACE.s_daddr_r_reg[5] ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[7] (\G_1PIPE_IFACE.s_daddr_r_reg[7] ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[9] (\G_1PIPE_IFACE.s_daddr_r_reg[9] ),
        .\G_1PIPE_IFACE.s_dwe_r_reg (\G_1PIPE_IFACE.s_dwe_r_reg ),
        .Q(Q),
        .ram_range00_in(ram_range00_in),
        .\regSlaveDo[14]_i_2_0 (\regSlaveDo[14]_i_2 ),
        .\regSlaveDo_reg[10] (\regSlaveDo_reg[10] ),
        .\regSlaveDo_reg[11] (\regSlaveDo_reg[11] ),
        .\regSlaveDo_reg[12] (\regSlaveDo_reg[12] ),
        .\regSlaveDo_reg[13] (\regSlaveDo_reg[13] ),
        .\regSlaveDo_reg[14] (\regSlaveDo_reg[14] ),
        .\regSlaveDo_reg[14]_0 (\regSlaveDo_reg[14]_0 ),
        .\regSlaveDo_reg[14]_1 (\regSlaveDo_reg[14]_1 ),
        .\regSlaveDo_reg[14]_2 (\regSlaveDo_reg[14]_2 ),
        .\regSlaveDo_reg[14]_3 (\regSlaveDo_reg[14]_3 ),
        .\regSlaveDo_reg[14]_4 (\regSlaveDo_reg[14]_4 ),
        .\regSlaveDo_reg[14]_5 (\regSlaveDo_reg[14]_5 ),
        .\regSlaveDo_reg[14]_6 (\regSlaveDo_reg[14]_6 ),
        .\regSlaveDo_reg[14]_7 (\regSlaveDo_reg[14]_7 ),
        .\regSlaveDo_reg[3] (\regSlaveDo_reg[3] ),
        .\regSlaveDo_reg[3]_0 (\regSlaveDo_reg[3]_0 ),
        .\regSlaveDo_reg[4] (\regSlaveDo_reg[4] ),
        .\regSlaveDo_reg[4]_0 (\regSlaveDo_reg[4]_0 ),
        .\regSlaveDo_reg[8] (\regSlaveDo_reg[8] ),
        .\regSlaveDo_reg[9] (\regSlaveDo_reg[9] ),
        .reg_rst_i(reg_rst_i),
        .s_daddr_o(s_daddr_o),
        .s_dclk_o(s_dclk_o),
        .s_dwe_o(s_dwe_o),
        .\xsdb_reg_reg[0]_0 (\xsdb_reg_reg[0] ),
        .\xsdb_reg_reg[0]_1 (\xsdb_reg_reg[0]_0 ),
        .\xsdb_reg_reg[10]_0 (\xsdb_reg_reg[10] ),
        .\xsdb_reg_reg[11]_0 (\xsdb_reg_reg[11] ),
        .\xsdb_reg_reg[12]_0 (\xsdb_reg_reg[12] ),
        .\xsdb_reg_reg[13]_0 (\xsdb_reg_reg[13] ),
        .\xsdb_reg_reg[14]_0 (\xsdb_reg_reg[14] ),
        .\xsdb_reg_reg[15]_0 (\xsdb_reg_reg[15] ),
        .\xsdb_reg_reg[3]_0 (\xsdb_reg_reg[3] ),
        .\xsdb_reg_reg[4]_0 (\xsdb_reg_reg[4] ),
        .\xsdb_reg_reg[5]_0 (\xsdb_reg_reg[5] ),
        .\xsdb_reg_reg[8]_0 (\xsdb_reg_reg[8] ),
        .\xsdb_reg_reg[9]_0 (\xsdb_reg_reg[9] ));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized0
   (\xsdb_reg_reg[6] ,
    Q,
    \xsdb_reg_reg[7] ,
    \xsdb_reg_reg[0] ,
    \xsdb_reg_reg[0]_0 ,
    \xsdb_reg_reg[0]_1 ,
    \xsdb_reg_reg[0]_2 ,
    \xsdb_reg_reg[0]_3 ,
    \xsdb_reg_reg[0]_4 ,
    \regSlaveDo_reg[7] ,
    \regSlaveDo_reg[7]_0 ,
    s_daddr_o,
    reg_rst_i,
    D,
    s_dclk_o);
  output \xsdb_reg_reg[6] ;
  output [14:0]Q;
  output \xsdb_reg_reg[7] ;
  input \xsdb_reg_reg[0] ;
  input \xsdb_reg_reg[0]_0 ;
  input \xsdb_reg_reg[0]_1 ;
  input \xsdb_reg_reg[0]_2 ;
  input \xsdb_reg_reg[0]_3 ;
  input \xsdb_reg_reg[0]_4 ;
  input \regSlaveDo_reg[7] ;
  input [1:0]\regSlaveDo_reg[7]_0 ;
  input [1:0]s_daddr_o;
  input reg_rst_i;
  input [15:0]D;
  input s_dclk_o;

  wire [15:0]D;
  wire [14:0]Q;
  wire \regSlaveDo_reg[7] ;
  wire [1:0]\regSlaveDo_reg[7]_0 ;
  wire reg_rst_i;
  wire [1:0]s_daddr_o;
  wire s_dclk_o;
  wire \xsdb_reg_reg[0] ;
  wire \xsdb_reg_reg[0]_0 ;
  wire \xsdb_reg_reg[0]_1 ;
  wire \xsdb_reg_reg[0]_2 ;
  wire \xsdb_reg_reg[0]_3 ;
  wire \xsdb_reg_reg[0]_4 ;
  wire \xsdb_reg_reg[6] ;
  wire \xsdb_reg_reg[7] ;

  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_ctl_736 \I_EN_CTL_EQ1.U_CTL 
       (.D(D),
        .Q(Q),
        .\regSlaveDo_reg[7] (\regSlaveDo_reg[7] ),
        .\regSlaveDo_reg[7]_0 (\regSlaveDo_reg[7]_0 ),
        .reg_rst_i(reg_rst_i),
        .s_daddr_o(s_daddr_o),
        .s_dclk_o(s_dclk_o),
        .\xsdb_reg_reg[0]_0 (\xsdb_reg_reg[0] ),
        .\xsdb_reg_reg[0]_1 (\xsdb_reg_reg[0]_0 ),
        .\xsdb_reg_reg[0]_2 (\xsdb_reg_reg[0]_1 ),
        .\xsdb_reg_reg[0]_3 (\xsdb_reg_reg[0]_2 ),
        .\xsdb_reg_reg[0]_4 (\xsdb_reg_reg[0]_3 ),
        .\xsdb_reg_reg[0]_5 (\xsdb_reg_reg[0]_4 ),
        .\xsdb_reg_reg[6]_0 (\xsdb_reg_reg[6] ),
        .\xsdb_reg_reg[7]_0 (\xsdb_reg_reg[7] ));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized0_742
   (\xsdb_reg_reg[0] ,
    Q,
    \xsdb_reg_reg[6] ,
    \xsdb_reg_reg[7] ,
    \xsdb_reg_reg[0]_0 ,
    \xsdb_reg_reg[0]_1 ,
    \xsdb_reg_reg[0]_2 ,
    \xsdb_reg_reg[0]_3 ,
    \xsdb_reg_reg[0]_4 ,
    \xsdb_reg_reg[0]_5 ,
    s_daddr_o,
    \regSlaveDo_reg[0] ,
    \regSlaveDo_reg[7] ,
    \regSlaveDo_reg[7]_0 ,
    reg_rst_i,
    D,
    s_dclk_o);
  output \xsdb_reg_reg[0] ;
  output [14:0]Q;
  output \xsdb_reg_reg[6] ;
  output \xsdb_reg_reg[7] ;
  input \xsdb_reg_reg[0]_0 ;
  input \xsdb_reg_reg[0]_1 ;
  input \xsdb_reg_reg[0]_2 ;
  input \xsdb_reg_reg[0]_3 ;
  input \xsdb_reg_reg[0]_4 ;
  input \xsdb_reg_reg[0]_5 ;
  input [2:0]s_daddr_o;
  input [0:0]\regSlaveDo_reg[0] ;
  input \regSlaveDo_reg[7] ;
  input [1:0]\regSlaveDo_reg[7]_0 ;
  input reg_rst_i;
  input [15:0]D;
  input s_dclk_o;

  wire [15:0]D;
  wire [14:0]Q;
  wire [0:0]\regSlaveDo_reg[0] ;
  wire \regSlaveDo_reg[7] ;
  wire [1:0]\regSlaveDo_reg[7]_0 ;
  wire reg_rst_i;
  wire [2:0]s_daddr_o;
  wire s_dclk_o;
  wire \xsdb_reg_reg[0] ;
  wire \xsdb_reg_reg[0]_0 ;
  wire \xsdb_reg_reg[0]_1 ;
  wire \xsdb_reg_reg[0]_2 ;
  wire \xsdb_reg_reg[0]_3 ;
  wire \xsdb_reg_reg[0]_4 ;
  wire \xsdb_reg_reg[0]_5 ;
  wire \xsdb_reg_reg[6] ;
  wire \xsdb_reg_reg[7] ;

  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_ctl_763 \I_EN_CTL_EQ1.U_CTL 
       (.D(D),
        .Q(Q),
        .\regSlaveDo_reg[0] (\regSlaveDo_reg[0] ),
        .\regSlaveDo_reg[7] (\regSlaveDo_reg[7] ),
        .\regSlaveDo_reg[7]_0 (\regSlaveDo_reg[7]_0 ),
        .reg_rst_i(reg_rst_i),
        .s_daddr_o(s_daddr_o),
        .s_dclk_o(s_dclk_o),
        .\xsdb_reg_reg[0]_0 (\xsdb_reg_reg[0] ),
        .\xsdb_reg_reg[0]_1 (\xsdb_reg_reg[0]_0 ),
        .\xsdb_reg_reg[0]_2 (\xsdb_reg_reg[0]_1 ),
        .\xsdb_reg_reg[0]_3 (\xsdb_reg_reg[0]_2 ),
        .\xsdb_reg_reg[0]_4 (\xsdb_reg_reg[0]_3 ),
        .\xsdb_reg_reg[0]_5 (\xsdb_reg_reg[0]_4 ),
        .\xsdb_reg_reg[0]_6 (\xsdb_reg_reg[0]_5 ),
        .\xsdb_reg_reg[6]_0 (\xsdb_reg_reg[6] ),
        .\xsdb_reg_reg[7]_0 (\xsdb_reg_reg[7] ));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized1
   (\xsdb_reg_reg[5] ,
    rxlpmen_i,
    s_dclk_o);
  output \xsdb_reg_reg[5] ;
  input rxlpmen_i;
  input s_dclk_o;

  wire rxlpmen_i;
  wire s_dclk_o;
  wire \xsdb_reg_reg[5] ;

  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_stat_735 \I_EN_STAT_EQ1.U_STAT 
       (.rxlpmen_i(rxlpmen_i),
        .s_dclk_o(s_dclk_o),
        .\xsdb_reg_reg[5]_0 (\xsdb_reg_reg[5] ));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized1_743
   (\xsdb_reg_reg[5] ,
    rxlpmen_i,
    s_dclk_o,
    \regSlaveDo_reg[5] ,
    s_daddr_o);
  output \xsdb_reg_reg[5] ;
  input rxlpmen_i;
  input s_dclk_o;
  input \regSlaveDo_reg[5] ;
  input [3:0]s_daddr_o;

  wire \regSlaveDo_reg[5] ;
  wire rxlpmen_i;
  wire [3:0]s_daddr_o;
  wire s_dclk_o;
  wire \xsdb_reg_reg[5] ;

  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_stat_762 \I_EN_STAT_EQ1.U_STAT 
       (.\regSlaveDo_reg[5] (\regSlaveDo_reg[5] ),
        .rxlpmen_i(rxlpmen_i),
        .s_daddr_o(s_daddr_o),
        .s_dclk_o(s_dclk_o),
        .\xsdb_reg_reg[5]_0 (\xsdb_reg_reg[5] ));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized2
   (\xsdb_reg_reg[1] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[5] ,
    \xsdb_reg_reg[2] ,
    \regSlaveDo_reg[0] ,
    \regSlaveDo_reg[1] ,
    \regSlaveDo_reg[1]_0 ,
    \regSlaveDo_reg[1]_1 ,
    s_daddr_o,
    Q,
    rxrate_i,
    s_dclk_o);
  output \xsdb_reg_reg[1] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[5] ;
  output [0:0]\xsdb_reg_reg[2] ;
  input \regSlaveDo_reg[0] ;
  input \regSlaveDo_reg[1] ;
  input \regSlaveDo_reg[1]_0 ;
  input \regSlaveDo_reg[1]_1 ;
  input [3:0]s_daddr_o;
  input [0:0]Q;
  input [2:0]rxrate_i;
  input s_dclk_o;

  wire \G_1PIPE_IFACE.s_daddr_r_reg[5] ;
  wire [0:0]Q;
  wire \regSlaveDo_reg[0] ;
  wire \regSlaveDo_reg[1] ;
  wire \regSlaveDo_reg[1]_0 ;
  wire \regSlaveDo_reg[1]_1 ;
  wire [2:0]rxrate_i;
  wire [3:0]s_daddr_o;
  wire s_dclk_o;
  wire \xsdb_reg_reg[1] ;
  wire [0:0]\xsdb_reg_reg[2] ;

  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_stat_734 \I_EN_STAT_EQ1.U_STAT 
       (.\G_1PIPE_IFACE.s_daddr_r_reg[5] (\G_1PIPE_IFACE.s_daddr_r_reg[5] ),
        .Q(Q),
        .\regSlaveDo_reg[0] (\regSlaveDo_reg[0] ),
        .\regSlaveDo_reg[1] (\regSlaveDo_reg[1] ),
        .\regSlaveDo_reg[1]_0 (\regSlaveDo_reg[1]_0 ),
        .\regSlaveDo_reg[1]_1 (\regSlaveDo_reg[1]_1 ),
        .rxrate_i(rxrate_i),
        .s_daddr_o(s_daddr_o),
        .s_dclk_o(s_dclk_o),
        .\xsdb_reg_reg[1]_0 (\xsdb_reg_reg[1] ),
        .\xsdb_reg_reg[2]_0 (\xsdb_reg_reg[2] ));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized2_744
   (\xsdb_reg_reg[0] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[4] ,
    \xsdb_reg_reg[2] ,
    \regSlaveDo_reg[0] ,
    s_daddr_o,
    \regSlaveDo_reg[0]_0 ,
    \regSlaveDo_reg[1] ,
    \regSlaveDo_reg[1]_0 ,
    \regSlaveDo_reg[1]_1 ,
    Q,
    rxrate_i,
    s_dclk_o);
  output \xsdb_reg_reg[0] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[4] ;
  output [0:0]\xsdb_reg_reg[2] ;
  input \regSlaveDo_reg[0] ;
  input [4:0]s_daddr_o;
  input [0:0]\regSlaveDo_reg[0]_0 ;
  input \regSlaveDo_reg[1] ;
  input \regSlaveDo_reg[1]_0 ;
  input \regSlaveDo_reg[1]_1 ;
  input [0:0]Q;
  input [2:0]rxrate_i;
  input s_dclk_o;

  wire \G_1PIPE_IFACE.s_daddr_r_reg[4] ;
  wire [0:0]Q;
  wire \regSlaveDo_reg[0] ;
  wire [0:0]\regSlaveDo_reg[0]_0 ;
  wire \regSlaveDo_reg[1] ;
  wire \regSlaveDo_reg[1]_0 ;
  wire \regSlaveDo_reg[1]_1 ;
  wire [2:0]rxrate_i;
  wire [4:0]s_daddr_o;
  wire s_dclk_o;
  wire \xsdb_reg_reg[0] ;
  wire [0:0]\xsdb_reg_reg[2] ;

  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_stat_761 \I_EN_STAT_EQ1.U_STAT 
       (.\G_1PIPE_IFACE.s_daddr_r_reg[4] (\G_1PIPE_IFACE.s_daddr_r_reg[4] ),
        .Q(Q),
        .\regSlaveDo_reg[0] (\regSlaveDo_reg[0] ),
        .\regSlaveDo_reg[0]_0 (\regSlaveDo_reg[0]_0 ),
        .\regSlaveDo_reg[1] (\regSlaveDo_reg[1] ),
        .\regSlaveDo_reg[1]_0 (\regSlaveDo_reg[1]_0 ),
        .\regSlaveDo_reg[1]_1 (\regSlaveDo_reg[1]_1 ),
        .rxrate_i(rxrate_i),
        .s_daddr_o(s_daddr_o),
        .s_dclk_o(s_dclk_o),
        .\xsdb_reg_reg[0]_0 (\xsdb_reg_reg[0] ),
        .\xsdb_reg_reg[2]_0 (\xsdb_reg_reg[2] ));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized3
   (\G_1PIPE_IFACE.s_daddr_r_reg[9] ,
    isAddrRange01_in,
    \G_1PIPE_IFACE.s_daddr_r_reg[6] ,
    \xsdb_reg_reg[6] ,
    Q,
    \xsdb_reg_reg[7] ,
    \xsdb_reg_reg[0] ,
    \xsdb_reg_reg[15] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[5] ,
    \xsdb_reg_reg[2] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[4] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[4]_0 ,
    \xsdb_reg_reg[5] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[4]_1 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[4]_2 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[4]_3 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[4]_4 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[4]_5 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[4]_6 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[4]_7 ,
    \xsdb_reg_reg[0]_0 ,
    s_dwe_o,
    ram_range00_in,
    \xsdb_reg_reg[0]_1 ,
    s_daddr_o,
    \regSlaveDo_reg[5] ,
    \regSlaveDo_reg[7] ,
    \regSlaveDo_reg[7]_0 ,
    \regSlaveDo_reg[0] ,
    \regSlaveDo_reg[0]_0 ,
    \regSlaveDo_reg[0]_1 ,
    \regSlaveDo_reg[0]_2 ,
    \regSlaveDo_reg[0]_3 ,
    \regSlaveDo_reg[14] ,
    \regSlaveDo_reg[15] ,
    \regSlaveDo_reg[15]_0 ,
    \regSlaveDo_reg[2] ,
    \regSlaveDo_reg[2]_0 ,
    \regSlaveDo_reg[5]_0 ,
    \regSlaveDo_reg[5]_1 ,
    reg_rst_i,
    D,
    s_dclk_o);
  output \G_1PIPE_IFACE.s_daddr_r_reg[9] ;
  output isAddrRange01_in;
  output \G_1PIPE_IFACE.s_daddr_r_reg[6] ;
  output \xsdb_reg_reg[6] ;
  output [6:0]Q;
  output \xsdb_reg_reg[7] ;
  output \xsdb_reg_reg[0] ;
  output \xsdb_reg_reg[15] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[5] ;
  output \xsdb_reg_reg[2] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[4] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[4]_0 ;
  output \xsdb_reg_reg[5] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[4]_1 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[4]_2 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[4]_3 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[4]_4 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[4]_5 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[4]_6 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[4]_7 ;
  input \xsdb_reg_reg[0]_0 ;
  input s_dwe_o;
  input ram_range00_in;
  input \xsdb_reg_reg[0]_1 ;
  input [10:0]s_daddr_o;
  input \regSlaveDo_reg[5] ;
  input \regSlaveDo_reg[7] ;
  input [1:0]\regSlaveDo_reg[7]_0 ;
  input \regSlaveDo_reg[0] ;
  input \regSlaveDo_reg[0]_0 ;
  input \regSlaveDo_reg[0]_1 ;
  input \regSlaveDo_reg[0]_2 ;
  input \regSlaveDo_reg[0]_3 ;
  input \regSlaveDo_reg[14] ;
  input \regSlaveDo_reg[15] ;
  input [0:0]\regSlaveDo_reg[15]_0 ;
  input [0:0]\regSlaveDo_reg[2] ;
  input \regSlaveDo_reg[2]_0 ;
  input \regSlaveDo_reg[5]_0 ;
  input \regSlaveDo_reg[5]_1 ;
  input reg_rst_i;
  input [15:0]D;
  input s_dclk_o;

  wire [15:0]D;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[4] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[4]_0 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[4]_1 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[4]_2 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[4]_3 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[4]_4 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[4]_5 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[4]_6 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[4]_7 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[5] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[6] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[9] ;
  wire [6:0]Q;
  wire isAddrRange01_in;
  wire ram_range00_in;
  wire \regSlaveDo_reg[0] ;
  wire \regSlaveDo_reg[0]_0 ;
  wire \regSlaveDo_reg[0]_1 ;
  wire \regSlaveDo_reg[0]_2 ;
  wire \regSlaveDo_reg[0]_3 ;
  wire \regSlaveDo_reg[14] ;
  wire \regSlaveDo_reg[15] ;
  wire [0:0]\regSlaveDo_reg[15]_0 ;
  wire [0:0]\regSlaveDo_reg[2] ;
  wire \regSlaveDo_reg[2]_0 ;
  wire \regSlaveDo_reg[5] ;
  wire \regSlaveDo_reg[5]_0 ;
  wire \regSlaveDo_reg[5]_1 ;
  wire \regSlaveDo_reg[7] ;
  wire [1:0]\regSlaveDo_reg[7]_0 ;
  wire reg_rst_i;
  wire [10:0]s_daddr_o;
  wire s_dclk_o;
  wire s_dwe_o;
  wire \xsdb_reg_reg[0] ;
  wire \xsdb_reg_reg[0]_0 ;
  wire \xsdb_reg_reg[0]_1 ;
  wire \xsdb_reg_reg[15] ;
  wire \xsdb_reg_reg[2] ;
  wire \xsdb_reg_reg[5] ;
  wire \xsdb_reg_reg[6] ;
  wire \xsdb_reg_reg[7] ;

  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_ctl__parameterized0 \I_EN_CTL_EQ1.U_CTL 
       (.D(D),
        .\G_1PIPE_IFACE.s_daddr_r_reg[4] (\G_1PIPE_IFACE.s_daddr_r_reg[4] ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[4]_0 (\G_1PIPE_IFACE.s_daddr_r_reg[4]_0 ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[4]_1 (\G_1PIPE_IFACE.s_daddr_r_reg[4]_1 ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[4]_2 (\G_1PIPE_IFACE.s_daddr_r_reg[4]_2 ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[4]_3 (\G_1PIPE_IFACE.s_daddr_r_reg[4]_3 ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[4]_4 (\G_1PIPE_IFACE.s_daddr_r_reg[4]_4 ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[4]_5 (\G_1PIPE_IFACE.s_daddr_r_reg[4]_5 ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[4]_6 (\G_1PIPE_IFACE.s_daddr_r_reg[4]_6 ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[4]_7 (\G_1PIPE_IFACE.s_daddr_r_reg[4]_7 ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[5] (\G_1PIPE_IFACE.s_daddr_r_reg[5] ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[6] (\G_1PIPE_IFACE.s_daddr_r_reg[6] ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[9] (\G_1PIPE_IFACE.s_daddr_r_reg[9] ),
        .Q(Q),
        .isAddrRange01_in(isAddrRange01_in),
        .ram_range00_in(ram_range00_in),
        .\regSlaveDo_reg[0] (\regSlaveDo_reg[0] ),
        .\regSlaveDo_reg[0]_0 (\regSlaveDo_reg[0]_0 ),
        .\regSlaveDo_reg[0]_1 (\regSlaveDo_reg[0]_1 ),
        .\regSlaveDo_reg[0]_2 (\regSlaveDo_reg[0]_2 ),
        .\regSlaveDo_reg[0]_3 (\regSlaveDo_reg[0]_3 ),
        .\regSlaveDo_reg[14] (\regSlaveDo_reg[14] ),
        .\regSlaveDo_reg[15] (\regSlaveDo_reg[15] ),
        .\regSlaveDo_reg[15]_0 (\regSlaveDo_reg[15]_0 ),
        .\regSlaveDo_reg[2] (\regSlaveDo_reg[2] ),
        .\regSlaveDo_reg[2]_0 (\regSlaveDo_reg[2]_0 ),
        .\regSlaveDo_reg[5] (\regSlaveDo_reg[5] ),
        .\regSlaveDo_reg[5]_0 (\regSlaveDo_reg[5]_0 ),
        .\regSlaveDo_reg[5]_1 (\regSlaveDo_reg[5]_1 ),
        .\regSlaveDo_reg[7] (\regSlaveDo_reg[7] ),
        .\regSlaveDo_reg[7]_0 (\regSlaveDo_reg[7]_0 ),
        .reg_rst_i(reg_rst_i),
        .s_daddr_o(s_daddr_o),
        .s_dclk_o(s_dclk_o),
        .s_dwe_o(s_dwe_o),
        .\xsdb_reg_reg[0]_0 (\xsdb_reg_reg[0] ),
        .\xsdb_reg_reg[0]_1 (\xsdb_reg_reg[0]_0 ),
        .\xsdb_reg_reg[0]_2 (\xsdb_reg_reg[0]_1 ),
        .\xsdb_reg_reg[15]_0 (\xsdb_reg_reg[15] ),
        .\xsdb_reg_reg[2]_0 (\xsdb_reg_reg[2] ),
        .\xsdb_reg_reg[5]_0 (\xsdb_reg_reg[5] ),
        .\xsdb_reg_reg[6]_0 (\xsdb_reg_reg[6] ),
        .\xsdb_reg_reg[7]_0 (\xsdb_reg_reg[7] ));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized3_745
   (\G_1PIPE_IFACE.s_daddr_r_reg[9] ,
    isAddrRange01_in,
    \G_1PIPE_IFACE.s_daddr_r_reg[6] ,
    \xsdb_reg_reg[0] ,
    \xsdb_reg_reg[6] ,
    \xsdb_reg_reg[9] ,
    \xsdb_reg_reg[7] ,
    \xsdb_reg_reg[15] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[5] ,
    \xsdb_reg_reg[2] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[6]_0 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[6]_1 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[6]_2 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[6]_3 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[6]_4 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[6]_5 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[6]_6 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[6]_7 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[6]_8 ,
    \xsdb_reg_reg[0]_0 ,
    s_dwe_o,
    ram_range00_in,
    \xsdb_reg_reg[0]_1 ,
    s_daddr_o,
    \regSlaveDo_reg[14] ,
    \regSlaveDo_reg[7] ,
    Q,
    \regSlaveDo_reg[2] ,
    \regSlaveDo_reg[15] ,
    \regSlaveDo_reg[15]_0 ,
    \regSlaveDo_reg[15]_1 ,
    \regSlaveDo_reg[2]_0 ,
    \regSlaveDo_reg[2]_1 ,
    reg_rst_i,
    D,
    s_dclk_o);
  output \G_1PIPE_IFACE.s_daddr_r_reg[9] ;
  output isAddrRange01_in;
  output \G_1PIPE_IFACE.s_daddr_r_reg[6] ;
  output \xsdb_reg_reg[0] ;
  output \xsdb_reg_reg[6] ;
  output [6:0]\xsdb_reg_reg[9] ;
  output \xsdb_reg_reg[7] ;
  output \xsdb_reg_reg[15] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[5] ;
  output \xsdb_reg_reg[2] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[6]_0 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[6]_1 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[6]_2 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[6]_3 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[6]_4 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[6]_5 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[6]_6 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[6]_7 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[6]_8 ;
  input \xsdb_reg_reg[0]_0 ;
  input s_dwe_o;
  input ram_range00_in;
  input \xsdb_reg_reg[0]_1 ;
  input [10:0]s_daddr_o;
  input \regSlaveDo_reg[14] ;
  input \regSlaveDo_reg[7] ;
  input [2:0]Q;
  input \regSlaveDo_reg[2] ;
  input \regSlaveDo_reg[15] ;
  input \regSlaveDo_reg[15]_0 ;
  input [0:0]\regSlaveDo_reg[15]_1 ;
  input \regSlaveDo_reg[2]_0 ;
  input [0:0]\regSlaveDo_reg[2]_1 ;
  input reg_rst_i;
  input [15:0]D;
  input s_dclk_o;

  wire [15:0]D;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[5] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[6] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[6]_0 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[6]_1 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[6]_2 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[6]_3 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[6]_4 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[6]_5 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[6]_6 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[6]_7 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[6]_8 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[9] ;
  wire [2:0]Q;
  wire isAddrRange01_in;
  wire ram_range00_in;
  wire \regSlaveDo_reg[14] ;
  wire \regSlaveDo_reg[15] ;
  wire \regSlaveDo_reg[15]_0 ;
  wire [0:0]\regSlaveDo_reg[15]_1 ;
  wire \regSlaveDo_reg[2] ;
  wire \regSlaveDo_reg[2]_0 ;
  wire [0:0]\regSlaveDo_reg[2]_1 ;
  wire \regSlaveDo_reg[7] ;
  wire reg_rst_i;
  wire [10:0]s_daddr_o;
  wire s_dclk_o;
  wire s_dwe_o;
  wire \xsdb_reg_reg[0] ;
  wire \xsdb_reg_reg[0]_0 ;
  wire \xsdb_reg_reg[0]_1 ;
  wire \xsdb_reg_reg[15] ;
  wire \xsdb_reg_reg[2] ;
  wire \xsdb_reg_reg[6] ;
  wire \xsdb_reg_reg[7] ;
  wire [6:0]\xsdb_reg_reg[9] ;

  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_ctl__parameterized0_760 \I_EN_CTL_EQ1.U_CTL 
       (.D(D),
        .\G_1PIPE_IFACE.s_daddr_r_reg[5] (\G_1PIPE_IFACE.s_daddr_r_reg[5] ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[6] (\G_1PIPE_IFACE.s_daddr_r_reg[6] ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[6]_0 (\G_1PIPE_IFACE.s_daddr_r_reg[6]_0 ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[6]_1 (\G_1PIPE_IFACE.s_daddr_r_reg[6]_1 ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[6]_2 (\G_1PIPE_IFACE.s_daddr_r_reg[6]_2 ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[6]_3 (\G_1PIPE_IFACE.s_daddr_r_reg[6]_3 ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[6]_4 (\G_1PIPE_IFACE.s_daddr_r_reg[6]_4 ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[6]_5 (\G_1PIPE_IFACE.s_daddr_r_reg[6]_5 ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[6]_6 (\G_1PIPE_IFACE.s_daddr_r_reg[6]_6 ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[6]_7 (\G_1PIPE_IFACE.s_daddr_r_reg[6]_7 ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[6]_8 (\G_1PIPE_IFACE.s_daddr_r_reg[6]_8 ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[9] (\G_1PIPE_IFACE.s_daddr_r_reg[9] ),
        .Q(Q),
        .isAddrRange01_in(isAddrRange01_in),
        .ram_range00_in(ram_range00_in),
        .\regSlaveDo_reg[14] (\regSlaveDo_reg[14] ),
        .\regSlaveDo_reg[15] (\regSlaveDo_reg[15] ),
        .\regSlaveDo_reg[15]_0 (\regSlaveDo_reg[15]_0 ),
        .\regSlaveDo_reg[15]_1 (\regSlaveDo_reg[15]_1 ),
        .\regSlaveDo_reg[2] (\regSlaveDo_reg[2] ),
        .\regSlaveDo_reg[2]_0 (\regSlaveDo_reg[2]_0 ),
        .\regSlaveDo_reg[2]_1 (\regSlaveDo_reg[2]_1 ),
        .\regSlaveDo_reg[7] (\regSlaveDo_reg[7] ),
        .reg_rst_i(reg_rst_i),
        .s_daddr_o(s_daddr_o),
        .s_dclk_o(s_dclk_o),
        .s_dwe_o(s_dwe_o),
        .\xsdb_reg_reg[0]_0 (\xsdb_reg_reg[0] ),
        .\xsdb_reg_reg[0]_1 (\xsdb_reg_reg[0]_0 ),
        .\xsdb_reg_reg[0]_2 (\xsdb_reg_reg[0]_1 ),
        .\xsdb_reg_reg[15]_0 (\xsdb_reg_reg[15] ),
        .\xsdb_reg_reg[2]_0 (\xsdb_reg_reg[2] ),
        .\xsdb_reg_reg[6]_0 (\xsdb_reg_reg[6] ),
        .\xsdb_reg_reg[7]_0 (\xsdb_reg_reg[7] ),
        .\xsdb_reg_reg[9]_0 (\xsdb_reg_reg[9] ));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized4
   (\G_1PIPE_IFACE.s_daddr_r_reg[0] ,
    Q,
    \xsdb_reg_reg[0] ,
    \xsdb_reg_reg[0]_0 ,
    s_dwe_o,
    ram_range00_in,
    isAddrRange01_in,
    s_daddr_o,
    reg_rst_i,
    s_di_o,
    s_dclk_o);
  output \G_1PIPE_IFACE.s_daddr_r_reg[0] ;
  output [15:0]Q;
  input \xsdb_reg_reg[0] ;
  input \xsdb_reg_reg[0]_0 ;
  input s_dwe_o;
  input ram_range00_in;
  input isAddrRange01_in;
  input [6:0]s_daddr_o;
  input reg_rst_i;
  input [15:0]s_di_o;
  input s_dclk_o;

  wire \G_1PIPE_IFACE.s_daddr_r_reg[0] ;
  wire [15:0]Q;
  wire isAddrRange01_in;
  wire ram_range00_in;
  wire reg_rst_i;
  wire [6:0]s_daddr_o;
  wire s_dclk_o;
  wire [15:0]s_di_o;
  wire s_dwe_o;
  wire \xsdb_reg_reg[0] ;
  wire \xsdb_reg_reg[0]_0 ;

  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_ctl_733 \I_EN_CTL_EQ1.U_CTL 
       (.\G_1PIPE_IFACE.s_daddr_r_reg[0] (\G_1PIPE_IFACE.s_daddr_r_reg[0] ),
        .Q(Q),
        .isAddrRange01_in(isAddrRange01_in),
        .ram_range00_in(ram_range00_in),
        .reg_rst_i(reg_rst_i),
        .s_daddr_o(s_daddr_o),
        .s_dclk_o(s_dclk_o),
        .s_di_o(s_di_o),
        .s_dwe_o(s_dwe_o),
        .\xsdb_reg_reg[0]_0 (\xsdb_reg_reg[0] ),
        .\xsdb_reg_reg[0]_1 (\xsdb_reg_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized4_746
   (\G_1PIPE_IFACE.s_daddr_r_reg[0] ,
    Q,
    \xsdb_reg_reg[0] ,
    \xsdb_reg_reg[0]_0 ,
    s_dwe_o,
    ram_range00_in,
    isAddrRange01_in,
    s_daddr_o,
    reg_rst_i,
    s_di_o,
    s_dclk_o);
  output \G_1PIPE_IFACE.s_daddr_r_reg[0] ;
  output [15:0]Q;
  input \xsdb_reg_reg[0] ;
  input \xsdb_reg_reg[0]_0 ;
  input s_dwe_o;
  input ram_range00_in;
  input isAddrRange01_in;
  input [6:0]s_daddr_o;
  input reg_rst_i;
  input [15:0]s_di_o;
  input s_dclk_o;

  wire \G_1PIPE_IFACE.s_daddr_r_reg[0] ;
  wire [15:0]Q;
  wire isAddrRange01_in;
  wire ram_range00_in;
  wire reg_rst_i;
  wire [6:0]s_daddr_o;
  wire s_dclk_o;
  wire [15:0]s_di_o;
  wire s_dwe_o;
  wire \xsdb_reg_reg[0] ;
  wire \xsdb_reg_reg[0]_0 ;

  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_ctl_759 \I_EN_CTL_EQ1.U_CTL 
       (.\G_1PIPE_IFACE.s_daddr_r_reg[0] (\G_1PIPE_IFACE.s_daddr_r_reg[0] ),
        .Q(Q),
        .isAddrRange01_in(isAddrRange01_in),
        .ram_range00_in(ram_range00_in),
        .reg_rst_i(reg_rst_i),
        .s_daddr_o(s_daddr_o),
        .s_dclk_o(s_dclk_o),
        .s_di_o(s_di_o),
        .s_dwe_o(s_dwe_o),
        .\xsdb_reg_reg[0]_0 (\xsdb_reg_reg[0] ),
        .\xsdb_reg_reg[0]_1 (\xsdb_reg_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized5
   (\xsdb_reg_reg[1] ,
    Q,
    \xsdb_reg_reg[2] ,
    \xsdb_reg_reg[5] ,
    \xsdb_reg_reg[15] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[4] ,
    \xsdb_reg_reg[0] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[6] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[6]_0 ,
    \xsdb_reg_reg[0]_0 ,
    \xsdb_reg_reg[0]_1 ,
    s_dwe_o,
    ram_range00_in,
    isAddrRange01_in,
    \regSlaveDo_reg[1] ,
    \regSlaveDo_reg[15] ,
    \regSlaveDo_reg[15]_0 ,
    \regSlaveDo_reg[15]_1 ,
    \regSlaveDo_reg[1]_0 ,
    \regSlaveDo_reg[2] ,
    \regSlaveDo_reg[2]_0 ,
    \regSlaveDo_reg[5] ,
    \regSlaveDo_reg[5]_0 ,
    \regSlaveDo_reg[15]_2 ,
    \regSlaveDo_reg[15]_3 ,
    s_daddr_o,
    \regSlaveDo_reg[7] ,
    \regSlaveDo_reg[7]_0 ,
    \regSlaveDo_reg[7]_1 ,
    \regSlaveDo_reg[7]_2 ,
    \regSlaveDo_reg[6] ,
    \regSlaveDo_reg[6]_0 ,
    \regSlaveDo_reg[6]_1 ,
    reg_rst_i,
    s_di_o,
    s_dclk_o);
  output \xsdb_reg_reg[1] ;
  output [12:0]Q;
  output \xsdb_reg_reg[2] ;
  output \xsdb_reg_reg[5] ;
  output \xsdb_reg_reg[15] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[4] ;
  output \xsdb_reg_reg[0] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[6] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[6]_0 ;
  input \xsdb_reg_reg[0]_0 ;
  input \xsdb_reg_reg[0]_1 ;
  input s_dwe_o;
  input ram_range00_in;
  input isAddrRange01_in;
  input \regSlaveDo_reg[1] ;
  input \regSlaveDo_reg[15] ;
  input [6:0]\regSlaveDo_reg[15]_0 ;
  input \regSlaveDo_reg[15]_1 ;
  input \regSlaveDo_reg[1]_0 ;
  input \regSlaveDo_reg[2] ;
  input \regSlaveDo_reg[2]_0 ;
  input \regSlaveDo_reg[5] ;
  input \regSlaveDo_reg[5]_0 ;
  input \regSlaveDo_reg[15]_2 ;
  input \regSlaveDo_reg[15]_3 ;
  input [6:0]s_daddr_o;
  input \regSlaveDo_reg[7] ;
  input \regSlaveDo_reg[7]_0 ;
  input \regSlaveDo_reg[7]_1 ;
  input \regSlaveDo_reg[7]_2 ;
  input \regSlaveDo_reg[6] ;
  input \regSlaveDo_reg[6]_0 ;
  input \regSlaveDo_reg[6]_1 ;
  input reg_rst_i;
  input [15:0]s_di_o;
  input s_dclk_o;

  wire \G_1PIPE_IFACE.s_daddr_r_reg[4] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[6] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[6]_0 ;
  wire [12:0]Q;
  wire isAddrRange01_in;
  wire ram_range00_in;
  wire \regSlaveDo_reg[15] ;
  wire [6:0]\regSlaveDo_reg[15]_0 ;
  wire \regSlaveDo_reg[15]_1 ;
  wire \regSlaveDo_reg[15]_2 ;
  wire \regSlaveDo_reg[15]_3 ;
  wire \regSlaveDo_reg[1] ;
  wire \regSlaveDo_reg[1]_0 ;
  wire \regSlaveDo_reg[2] ;
  wire \regSlaveDo_reg[2]_0 ;
  wire \regSlaveDo_reg[5] ;
  wire \regSlaveDo_reg[5]_0 ;
  wire \regSlaveDo_reg[6] ;
  wire \regSlaveDo_reg[6]_0 ;
  wire \regSlaveDo_reg[6]_1 ;
  wire \regSlaveDo_reg[7] ;
  wire \regSlaveDo_reg[7]_0 ;
  wire \regSlaveDo_reg[7]_1 ;
  wire \regSlaveDo_reg[7]_2 ;
  wire reg_rst_i;
  wire [6:0]s_daddr_o;
  wire s_dclk_o;
  wire [15:0]s_di_o;
  wire s_dwe_o;
  wire \xsdb_reg_reg[0] ;
  wire \xsdb_reg_reg[0]_0 ;
  wire \xsdb_reg_reg[0]_1 ;
  wire \xsdb_reg_reg[15] ;
  wire \xsdb_reg_reg[1] ;
  wire \xsdb_reg_reg[2] ;
  wire \xsdb_reg_reg[5] ;

  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_ctl_732 \I_EN_CTL_EQ1.U_CTL 
       (.\G_1PIPE_IFACE.s_daddr_r_reg[4] (\G_1PIPE_IFACE.s_daddr_r_reg[4] ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[6] (\G_1PIPE_IFACE.s_daddr_r_reg[6] ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[6]_0 (\G_1PIPE_IFACE.s_daddr_r_reg[6]_0 ),
        .Q(Q),
        .isAddrRange01_in(isAddrRange01_in),
        .ram_range00_in(ram_range00_in),
        .\regSlaveDo_reg[15] (\regSlaveDo_reg[15] ),
        .\regSlaveDo_reg[15]_0 (\regSlaveDo_reg[15]_0 ),
        .\regSlaveDo_reg[15]_1 (\regSlaveDo_reg[15]_1 ),
        .\regSlaveDo_reg[15]_2 (\regSlaveDo_reg[15]_2 ),
        .\regSlaveDo_reg[15]_3 (\regSlaveDo_reg[15]_3 ),
        .\regSlaveDo_reg[1] (\regSlaveDo_reg[1] ),
        .\regSlaveDo_reg[1]_0 (\regSlaveDo_reg[1]_0 ),
        .\regSlaveDo_reg[2] (\regSlaveDo_reg[2] ),
        .\regSlaveDo_reg[2]_0 (\regSlaveDo_reg[2]_0 ),
        .\regSlaveDo_reg[5] (\regSlaveDo_reg[5] ),
        .\regSlaveDo_reg[5]_0 (\regSlaveDo_reg[5]_0 ),
        .\regSlaveDo_reg[6] (\regSlaveDo_reg[6] ),
        .\regSlaveDo_reg[6]_0 (\regSlaveDo_reg[6]_0 ),
        .\regSlaveDo_reg[6]_1 (\regSlaveDo_reg[6]_1 ),
        .\regSlaveDo_reg[7] (\regSlaveDo_reg[7] ),
        .\regSlaveDo_reg[7]_0 (\regSlaveDo_reg[7]_0 ),
        .\regSlaveDo_reg[7]_1 (\regSlaveDo_reg[7]_1 ),
        .\regSlaveDo_reg[7]_2 (\regSlaveDo_reg[7]_2 ),
        .reg_rst_i(reg_rst_i),
        .s_daddr_o(s_daddr_o),
        .s_dclk_o(s_dclk_o),
        .s_di_o(s_di_o),
        .s_dwe_o(s_dwe_o),
        .\xsdb_reg_reg[0]_0 (\xsdb_reg_reg[0] ),
        .\xsdb_reg_reg[0]_1 (\xsdb_reg_reg[0]_0 ),
        .\xsdb_reg_reg[0]_2 (\xsdb_reg_reg[0]_1 ),
        .\xsdb_reg_reg[15]_0 (\xsdb_reg_reg[15] ),
        .\xsdb_reg_reg[1]_0 (\xsdb_reg_reg[1] ),
        .\xsdb_reg_reg[2]_0 (\xsdb_reg_reg[2] ),
        .\xsdb_reg_reg[5]_0 (\xsdb_reg_reg[5] ));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized5_747
   (\xsdb_reg_reg[0] ,
    \xsdb_reg_reg[6] ,
    \xsdb_reg_reg[7] ,
    \xsdb_reg_reg[1] ,
    Q,
    \xsdb_reg_reg[2] ,
    \xsdb_reg_reg[5] ,
    \xsdb_reg_reg[15] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[5] ,
    \xsdb_reg_reg[0]_0 ,
    \xsdb_reg_reg[0]_1 ,
    s_dwe_o,
    ram_range00_in,
    isAddrRange01_in,
    \regSlaveDo_reg[0] ,
    \regSlaveDo_reg[0]_0 ,
    \regSlaveDo_reg[0]_1 ,
    \regSlaveDo_reg[7] ,
    \regSlaveDo_reg[6] ,
    \regSlaveDo_reg[6]_0 ,
    \regSlaveDo_reg[6]_1 ,
    \regSlaveDo_reg[7]_0 ,
    \regSlaveDo_reg[7]_1 ,
    \regSlaveDo_reg[7]_2 ,
    \regSlaveDo_reg[1] ,
    \regSlaveDo_reg[15] ,
    \regSlaveDo_reg[15]_0 ,
    \regSlaveDo_reg[15]_1 ,
    \regSlaveDo_reg[1]_0 ,
    \regSlaveDo_reg[2] ,
    \regSlaveDo_reg[2]_0 ,
    \regSlaveDo_reg[5] ,
    \regSlaveDo_reg[5]_0 ,
    \regSlaveDo_reg[5]_1 ,
    \regSlaveDo_reg[5]_2 ,
    txdiffctrl_out_o,
    \regSlaveDo_reg[15]_2 ,
    \regSlaveDo_reg[15]_3 ,
    s_daddr_o,
    \regSlaveDo_reg[7]_3 ,
    reg_rst_i,
    s_di_o,
    s_dclk_o);
  output \xsdb_reg_reg[0] ;
  output \xsdb_reg_reg[6] ;
  output \xsdb_reg_reg[7] ;
  output \xsdb_reg_reg[1] ;
  output [12:0]Q;
  output \xsdb_reg_reg[2] ;
  output \xsdb_reg_reg[5] ;
  output \xsdb_reg_reg[15] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[5] ;
  input \xsdb_reg_reg[0]_0 ;
  input \xsdb_reg_reg[0]_1 ;
  input s_dwe_o;
  input ram_range00_in;
  input isAddrRange01_in;
  input \regSlaveDo_reg[0] ;
  input \regSlaveDo_reg[0]_0 ;
  input \regSlaveDo_reg[0]_1 ;
  input \regSlaveDo_reg[7] ;
  input \regSlaveDo_reg[6] ;
  input \regSlaveDo_reg[6]_0 ;
  input \regSlaveDo_reg[6]_1 ;
  input \regSlaveDo_reg[7]_0 ;
  input \regSlaveDo_reg[7]_1 ;
  input \regSlaveDo_reg[7]_2 ;
  input \regSlaveDo_reg[1] ;
  input \regSlaveDo_reg[15] ;
  input [6:0]\regSlaveDo_reg[15]_0 ;
  input \regSlaveDo_reg[15]_1 ;
  input \regSlaveDo_reg[1]_0 ;
  input \regSlaveDo_reg[2] ;
  input \regSlaveDo_reg[2]_0 ;
  input \regSlaveDo_reg[5] ;
  input \regSlaveDo_reg[5]_0 ;
  input \regSlaveDo_reg[5]_1 ;
  input \regSlaveDo_reg[5]_2 ;
  input [0:0]txdiffctrl_out_o;
  input \regSlaveDo_reg[15]_2 ;
  input \regSlaveDo_reg[15]_3 ;
  input [6:0]s_daddr_o;
  input \regSlaveDo_reg[7]_3 ;
  input reg_rst_i;
  input [15:0]s_di_o;
  input s_dclk_o;

  wire \G_1PIPE_IFACE.s_daddr_r_reg[5] ;
  wire [12:0]Q;
  wire isAddrRange01_in;
  wire ram_range00_in;
  wire \regSlaveDo_reg[0] ;
  wire \regSlaveDo_reg[0]_0 ;
  wire \regSlaveDo_reg[0]_1 ;
  wire \regSlaveDo_reg[15] ;
  wire [6:0]\regSlaveDo_reg[15]_0 ;
  wire \regSlaveDo_reg[15]_1 ;
  wire \regSlaveDo_reg[15]_2 ;
  wire \regSlaveDo_reg[15]_3 ;
  wire \regSlaveDo_reg[1] ;
  wire \regSlaveDo_reg[1]_0 ;
  wire \regSlaveDo_reg[2] ;
  wire \regSlaveDo_reg[2]_0 ;
  wire \regSlaveDo_reg[5] ;
  wire \regSlaveDo_reg[5]_0 ;
  wire \regSlaveDo_reg[5]_1 ;
  wire \regSlaveDo_reg[5]_2 ;
  wire \regSlaveDo_reg[6] ;
  wire \regSlaveDo_reg[6]_0 ;
  wire \regSlaveDo_reg[6]_1 ;
  wire \regSlaveDo_reg[7] ;
  wire \regSlaveDo_reg[7]_0 ;
  wire \regSlaveDo_reg[7]_1 ;
  wire \regSlaveDo_reg[7]_2 ;
  wire \regSlaveDo_reg[7]_3 ;
  wire reg_rst_i;
  wire [6:0]s_daddr_o;
  wire s_dclk_o;
  wire [15:0]s_di_o;
  wire s_dwe_o;
  wire [0:0]txdiffctrl_out_o;
  wire \xsdb_reg_reg[0] ;
  wire \xsdb_reg_reg[0]_0 ;
  wire \xsdb_reg_reg[0]_1 ;
  wire \xsdb_reg_reg[15] ;
  wire \xsdb_reg_reg[1] ;
  wire \xsdb_reg_reg[2] ;
  wire \xsdb_reg_reg[5] ;
  wire \xsdb_reg_reg[6] ;
  wire \xsdb_reg_reg[7] ;

  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_ctl_758 \I_EN_CTL_EQ1.U_CTL 
       (.\G_1PIPE_IFACE.s_daddr_r_reg[5] (\G_1PIPE_IFACE.s_daddr_r_reg[5] ),
        .Q(Q),
        .isAddrRange01_in(isAddrRange01_in),
        .ram_range00_in(ram_range00_in),
        .\regSlaveDo_reg[0] (\regSlaveDo_reg[0] ),
        .\regSlaveDo_reg[0]_0 (\regSlaveDo_reg[0]_0 ),
        .\regSlaveDo_reg[0]_1 (\regSlaveDo_reg[0]_1 ),
        .\regSlaveDo_reg[15] (\regSlaveDo_reg[15] ),
        .\regSlaveDo_reg[15]_0 (\regSlaveDo_reg[15]_0 ),
        .\regSlaveDo_reg[15]_1 (\regSlaveDo_reg[15]_1 ),
        .\regSlaveDo_reg[15]_2 (\regSlaveDo_reg[15]_2 ),
        .\regSlaveDo_reg[15]_3 (\regSlaveDo_reg[15]_3 ),
        .\regSlaveDo_reg[1] (\regSlaveDo_reg[1] ),
        .\regSlaveDo_reg[1]_0 (\regSlaveDo_reg[1]_0 ),
        .\regSlaveDo_reg[2] (\regSlaveDo_reg[2] ),
        .\regSlaveDo_reg[2]_0 (\regSlaveDo_reg[2]_0 ),
        .\regSlaveDo_reg[5] (\regSlaveDo_reg[5] ),
        .\regSlaveDo_reg[5]_0 (\regSlaveDo_reg[5]_0 ),
        .\regSlaveDo_reg[5]_1 (\regSlaveDo_reg[5]_1 ),
        .\regSlaveDo_reg[5]_2 (\regSlaveDo_reg[5]_2 ),
        .\regSlaveDo_reg[6] (\regSlaveDo_reg[6] ),
        .\regSlaveDo_reg[6]_0 (\regSlaveDo_reg[6]_0 ),
        .\regSlaveDo_reg[6]_1 (\regSlaveDo_reg[6]_1 ),
        .\regSlaveDo_reg[7] (\regSlaveDo_reg[7] ),
        .\regSlaveDo_reg[7]_0 (\regSlaveDo_reg[7]_0 ),
        .\regSlaveDo_reg[7]_1 (\regSlaveDo_reg[7]_1 ),
        .\regSlaveDo_reg[7]_2 (\regSlaveDo_reg[7]_2 ),
        .\regSlaveDo_reg[7]_3 (\regSlaveDo_reg[7]_3 ),
        .reg_rst_i(reg_rst_i),
        .s_daddr_o(s_daddr_o),
        .s_dclk_o(s_dclk_o),
        .s_di_o(s_di_o),
        .s_dwe_o(s_dwe_o),
        .txdiffctrl_out_o(txdiffctrl_out_o),
        .\xsdb_reg_reg[0]_0 (\xsdb_reg_reg[0] ),
        .\xsdb_reg_reg[0]_1 (\xsdb_reg_reg[0]_0 ),
        .\xsdb_reg_reg[0]_2 (\xsdb_reg_reg[0]_1 ),
        .\xsdb_reg_reg[15]_0 (\xsdb_reg_reg[15] ),
        .\xsdb_reg_reg[1]_0 (\xsdb_reg_reg[1] ),
        .\xsdb_reg_reg[2]_0 (\xsdb_reg_reg[2] ),
        .\xsdb_reg_reg[5]_0 (\xsdb_reg_reg[5] ),
        .\xsdb_reg_reg[6]_0 (\xsdb_reg_reg[6] ),
        .\xsdb_reg_reg[7]_0 (\xsdb_reg_reg[7] ));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized6
   (\G_1PIPE_IFACE.s_daddr_r_reg[2] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[2]_0 ,
    Q,
    s_daddr_o,
    D,
    s_dclk_o);
  output \G_1PIPE_IFACE.s_daddr_r_reg[2] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[2]_0 ;
  output [7:0]Q;
  input [4:0]s_daddr_o;
  input [9:0]D;
  input s_dclk_o;

  wire [9:0]D;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[2] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[2]_0 ;
  wire [7:0]Q;
  wire [4:0]s_daddr_o;
  wire s_dclk_o;

  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_stat_731 \I_EN_STAT_EQ1.U_STAT 
       (.D(D),
        .\G_1PIPE_IFACE.s_daddr_r_reg[2] (\G_1PIPE_IFACE.s_daddr_r_reg[2] ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[2]_0 (\G_1PIPE_IFACE.s_daddr_r_reg[2]_0 ),
        .Q(Q),
        .s_daddr_o(s_daddr_o),
        .s_dclk_o(s_dclk_o));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized6_748
   (\G_1PIPE_IFACE.s_daddr_r_reg[2] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[2]_0 ,
    Q,
    s_daddr_o,
    D,
    s_dclk_o);
  output \G_1PIPE_IFACE.s_daddr_r_reg[2] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[2]_0 ;
  output [7:0]Q;
  input [4:0]s_daddr_o;
  input [9:0]D;
  input s_dclk_o;

  wire [9:0]D;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[2] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[2]_0 ;
  wire [7:0]Q;
  wire [4:0]s_daddr_o;
  wire s_dclk_o;

  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_stat_757 \I_EN_STAT_EQ1.U_STAT 
       (.D(D),
        .\G_1PIPE_IFACE.s_daddr_r_reg[2] (\G_1PIPE_IFACE.s_daddr_r_reg[2] ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[2]_0 (\G_1PIPE_IFACE.s_daddr_r_reg[2]_0 ),
        .Q(Q),
        .s_daddr_o(s_daddr_o),
        .s_dclk_o(s_dclk_o));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized7
   (\G_1PIPE_IFACE.s_daddr_r_reg[4] ,
    \xsdb_reg_reg[1] ,
    \xsdb_reg_reg[3] ,
    \xsdb_reg_reg[4] ,
    \xsdb_reg_reg[0] ,
    \regSlaveDo_reg[2] ,
    \regSlaveDo_reg[2]_0 ,
    s_daddr_o,
    \regSlaveDo_reg[2]_1 ,
    \regSlaveDo_reg[2]_2 ,
    \regSlaveDo[2]_i_2 ,
    Q,
    txprecursor_i,
    s_dclk_o);
  output \G_1PIPE_IFACE.s_daddr_r_reg[4] ;
  output \xsdb_reg_reg[1] ;
  output \xsdb_reg_reg[3] ;
  output \xsdb_reg_reg[4] ;
  output [0:0]\xsdb_reg_reg[0] ;
  input \regSlaveDo_reg[2] ;
  input \regSlaveDo_reg[2]_0 ;
  input [3:0]s_daddr_o;
  input \regSlaveDo_reg[2]_1 ;
  input \regSlaveDo_reg[2]_2 ;
  input [1:0]\regSlaveDo[2]_i_2 ;
  input [1:0]Q;
  input [4:0]txprecursor_i;
  input s_dclk_o;

  wire \G_1PIPE_IFACE.s_daddr_r_reg[4] ;
  wire [1:0]Q;
  wire [1:0]\regSlaveDo[2]_i_2 ;
  wire \regSlaveDo_reg[2] ;
  wire \regSlaveDo_reg[2]_0 ;
  wire \regSlaveDo_reg[2]_1 ;
  wire \regSlaveDo_reg[2]_2 ;
  wire [3:0]s_daddr_o;
  wire s_dclk_o;
  wire [4:0]txprecursor_i;
  wire [0:0]\xsdb_reg_reg[0] ;
  wire \xsdb_reg_reg[1] ;
  wire \xsdb_reg_reg[3] ;
  wire \xsdb_reg_reg[4] ;

  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_stat \I_EN_STAT_EQ1.U_STAT 
       (.\G_1PIPE_IFACE.s_daddr_r_reg[4] (\G_1PIPE_IFACE.s_daddr_r_reg[4] ),
        .Q(Q),
        .\regSlaveDo[2]_i_2_0 (\regSlaveDo[2]_i_2 ),
        .\regSlaveDo_reg[2] (\regSlaveDo_reg[2] ),
        .\regSlaveDo_reg[2]_0 (\regSlaveDo_reg[2]_0 ),
        .\regSlaveDo_reg[2]_1 (\regSlaveDo_reg[2]_1 ),
        .\regSlaveDo_reg[2]_2 (\regSlaveDo_reg[2]_2 ),
        .s_daddr_o(s_daddr_o),
        .s_dclk_o(s_dclk_o),
        .txprecursor_i(txprecursor_i),
        .\xsdb_reg_reg[0]_0 (\xsdb_reg_reg[0] ),
        .\xsdb_reg_reg[1]_0 (\xsdb_reg_reg[1] ),
        .\xsdb_reg_reg[3]_0 (\xsdb_reg_reg[3] ),
        .\xsdb_reg_reg[4]_0 (\xsdb_reg_reg[4] ));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized7_749
   (\G_1PIPE_IFACE.s_daddr_r_reg[4] ,
    \xsdb_reg_reg[1] ,
    \xsdb_reg_reg[3] ,
    \xsdb_reg_reg[4] ,
    \xsdb_reg_reg[0] ,
    \regSlaveDo_reg[2] ,
    \regSlaveDo_reg[2]_0 ,
    \regSlaveDo_reg[2]_1 ,
    s_daddr_o,
    \regSlaveDo[2]_i_2 ,
    Q,
    txprecursor_i,
    s_dclk_o);
  output \G_1PIPE_IFACE.s_daddr_r_reg[4] ;
  output \xsdb_reg_reg[1] ;
  output \xsdb_reg_reg[3] ;
  output \xsdb_reg_reg[4] ;
  output [0:0]\xsdb_reg_reg[0] ;
  input \regSlaveDo_reg[2] ;
  input \regSlaveDo_reg[2]_0 ;
  input \regSlaveDo_reg[2]_1 ;
  input [4:0]s_daddr_o;
  input [1:0]\regSlaveDo[2]_i_2 ;
  input [1:0]Q;
  input [4:0]txprecursor_i;
  input s_dclk_o;

  wire \G_1PIPE_IFACE.s_daddr_r_reg[4] ;
  wire [1:0]Q;
  wire [1:0]\regSlaveDo[2]_i_2 ;
  wire \regSlaveDo_reg[2] ;
  wire \regSlaveDo_reg[2]_0 ;
  wire \regSlaveDo_reg[2]_1 ;
  wire [4:0]s_daddr_o;
  wire s_dclk_o;
  wire [4:0]txprecursor_i;
  wire [0:0]\xsdb_reg_reg[0] ;
  wire \xsdb_reg_reg[1] ;
  wire \xsdb_reg_reg[3] ;
  wire \xsdb_reg_reg[4] ;

  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_stat_756 \I_EN_STAT_EQ1.U_STAT 
       (.\G_1PIPE_IFACE.s_daddr_r_reg[4] (\G_1PIPE_IFACE.s_daddr_r_reg[4] ),
        .Q(Q),
        .\regSlaveDo[2]_i_2_0 (\regSlaveDo[2]_i_2 ),
        .\regSlaveDo_reg[2] (\regSlaveDo_reg[2] ),
        .\regSlaveDo_reg[2]_0 (\regSlaveDo_reg[2]_0 ),
        .\regSlaveDo_reg[2]_1 (\regSlaveDo_reg[2]_1 ),
        .s_daddr_o(s_daddr_o),
        .s_dclk_o(s_dclk_o),
        .txprecursor_i(txprecursor_i),
        .\xsdb_reg_reg[0]_0 (\xsdb_reg_reg[0] ),
        .\xsdb_reg_reg[1]_0 (\xsdb_reg_reg[1] ),
        .\xsdb_reg_reg[3]_0 (\xsdb_reg_reg[3] ),
        .\xsdb_reg_reg[4]_0 (\xsdb_reg_reg[4] ));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized8
   (\G_1PIPE_IFACE.s_daddr_r_reg[0] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[4] ,
    \xsdb_reg_reg[15] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[5] ,
    \xsdb_reg_reg[14] ,
    \xsdb_reg_reg[1] ,
    \xsdb_reg_reg[2] ,
    \xsdb_reg_reg[0] ,
    \xsdb_reg_reg[0]_0 ,
    \xsdb_reg_reg[0]_1 ,
    \xsdb_reg_reg[0]_2 ,
    \xsdb_reg_reg[0]_3 ,
    \regSlaveDo_reg[5] ,
    \regSlaveDo_reg[5]_0 ,
    s_daddr_o,
    \regSlaveDo_reg[5]_1 ,
    \regSlaveDo_reg[15] ,
    Q,
    \regSlaveDo_reg[0] ,
    \regSlaveDo_reg[0]_0 ,
    reg_rst_i,
    s_di_o,
    s_dclk_o);
  output \G_1PIPE_IFACE.s_daddr_r_reg[0] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[4] ;
  output \xsdb_reg_reg[15] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[5] ;
  output [11:0]\xsdb_reg_reg[14] ;
  output \xsdb_reg_reg[1] ;
  output \xsdb_reg_reg[2] ;
  input \xsdb_reg_reg[0] ;
  input \xsdb_reg_reg[0]_0 ;
  input \xsdb_reg_reg[0]_1 ;
  input \xsdb_reg_reg[0]_2 ;
  input \xsdb_reg_reg[0]_3 ;
  input \regSlaveDo_reg[5] ;
  input \regSlaveDo_reg[5]_0 ;
  input [3:0]s_daddr_o;
  input \regSlaveDo_reg[5]_1 ;
  input \regSlaveDo_reg[15] ;
  input [3:0]Q;
  input [0:0]\regSlaveDo_reg[0] ;
  input \regSlaveDo_reg[0]_0 ;
  input reg_rst_i;
  input [15:0]s_di_o;
  input s_dclk_o;

  wire \G_1PIPE_IFACE.s_daddr_r_reg[0] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[4] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[5] ;
  wire [3:0]Q;
  wire [0:0]\regSlaveDo_reg[0] ;
  wire \regSlaveDo_reg[0]_0 ;
  wire \regSlaveDo_reg[15] ;
  wire \regSlaveDo_reg[5] ;
  wire \regSlaveDo_reg[5]_0 ;
  wire \regSlaveDo_reg[5]_1 ;
  wire reg_rst_i;
  wire [3:0]s_daddr_o;
  wire s_dclk_o;
  wire [15:0]s_di_o;
  wire \xsdb_reg_reg[0] ;
  wire \xsdb_reg_reg[0]_0 ;
  wire \xsdb_reg_reg[0]_1 ;
  wire \xsdb_reg_reg[0]_2 ;
  wire \xsdb_reg_reg[0]_3 ;
  wire [11:0]\xsdb_reg_reg[14] ;
  wire \xsdb_reg_reg[15] ;
  wire \xsdb_reg_reg[1] ;
  wire \xsdb_reg_reg[2] ;

  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_ctl \I_EN_CTL_EQ1.U_CTL 
       (.\G_1PIPE_IFACE.s_daddr_r_reg[0] (\G_1PIPE_IFACE.s_daddr_r_reg[0] ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[4] (\G_1PIPE_IFACE.s_daddr_r_reg[4] ),
        .\G_1PIPE_IFACE.s_daddr_r_reg[5] (\G_1PIPE_IFACE.s_daddr_r_reg[5] ),
        .Q(Q),
        .\regSlaveDo_reg[0] (\regSlaveDo_reg[0] ),
        .\regSlaveDo_reg[0]_0 (\regSlaveDo_reg[0]_0 ),
        .\regSlaveDo_reg[15] (\regSlaveDo_reg[15] ),
        .\regSlaveDo_reg[5] (\regSlaveDo_reg[5] ),
        .\regSlaveDo_reg[5]_0 (\regSlaveDo_reg[5]_0 ),
        .\regSlaveDo_reg[5]_1 (\regSlaveDo_reg[5]_1 ),
        .reg_rst_i(reg_rst_i),
        .s_daddr_o(s_daddr_o),
        .s_dclk_o(s_dclk_o),
        .s_di_o(s_di_o),
        .\xsdb_reg_reg[0]_0 (\xsdb_reg_reg[0] ),
        .\xsdb_reg_reg[0]_1 (\xsdb_reg_reg[0]_0 ),
        .\xsdb_reg_reg[0]_2 (\xsdb_reg_reg[0]_1 ),
        .\xsdb_reg_reg[0]_3 (\xsdb_reg_reg[0]_2 ),
        .\xsdb_reg_reg[0]_4 (\xsdb_reg_reg[0]_3 ),
        .\xsdb_reg_reg[14]_0 (\xsdb_reg_reg[14] ),
        .\xsdb_reg_reg[15]_0 (\xsdb_reg_reg[15] ),
        .\xsdb_reg_reg[1]_0 (\xsdb_reg_reg[1] ),
        .\xsdb_reg_reg[2]_0 (\xsdb_reg_reg[2] ));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg__parameterized8_750
   (\G_1PIPE_IFACE.s_daddr_r_reg[0] ,
    \xsdb_reg_reg[15] ,
    \xsdb_reg_reg[1] ,
    \xsdb_reg_reg[2] ,
    \xsdb_reg_reg[14] ,
    \xsdb_reg_reg[0] ,
    \xsdb_reg_reg[0]_0 ,
    \xsdb_reg_reg[0]_1 ,
    \xsdb_reg_reg[0]_2 ,
    \xsdb_reg_reg[0]_3 ,
    \regSlaveDo_reg[15] ,
    s_daddr_o,
    Q,
    reg_rst_i,
    s_di_o,
    s_dclk_o);
  output \G_1PIPE_IFACE.s_daddr_r_reg[0] ;
  output \xsdb_reg_reg[15] ;
  output \xsdb_reg_reg[1] ;
  output \xsdb_reg_reg[2] ;
  output [12:0]\xsdb_reg_reg[14] ;
  input \xsdb_reg_reg[0] ;
  input \xsdb_reg_reg[0]_0 ;
  input \xsdb_reg_reg[0]_1 ;
  input \xsdb_reg_reg[0]_2 ;
  input \xsdb_reg_reg[0]_3 ;
  input \regSlaveDo_reg[15] ;
  input [2:0]s_daddr_o;
  input [2:0]Q;
  input reg_rst_i;
  input [15:0]s_di_o;
  input s_dclk_o;

  wire \G_1PIPE_IFACE.s_daddr_r_reg[0] ;
  wire [2:0]Q;
  wire \regSlaveDo_reg[15] ;
  wire reg_rst_i;
  wire [2:0]s_daddr_o;
  wire s_dclk_o;
  wire [15:0]s_di_o;
  wire \xsdb_reg_reg[0] ;
  wire \xsdb_reg_reg[0]_0 ;
  wire \xsdb_reg_reg[0]_1 ;
  wire \xsdb_reg_reg[0]_2 ;
  wire \xsdb_reg_reg[0]_3 ;
  wire [12:0]\xsdb_reg_reg[14] ;
  wire \xsdb_reg_reg[15] ;
  wire \xsdb_reg_reg[1] ;
  wire \xsdb_reg_reg[2] ;

  c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_ctl_755 \I_EN_CTL_EQ1.U_CTL 
       (.\G_1PIPE_IFACE.s_daddr_r_reg[0] (\G_1PIPE_IFACE.s_daddr_r_reg[0] ),
        .Q(Q),
        .\regSlaveDo_reg[15] (\regSlaveDo_reg[15] ),
        .reg_rst_i(reg_rst_i),
        .s_daddr_o(s_daddr_o),
        .s_dclk_o(s_dclk_o),
        .s_di_o(s_di_o),
        .\xsdb_reg_reg[0]_0 (\xsdb_reg_reg[0] ),
        .\xsdb_reg_reg[0]_1 (\xsdb_reg_reg[0]_0 ),
        .\xsdb_reg_reg[0]_2 (\xsdb_reg_reg[0]_1 ),
        .\xsdb_reg_reg[0]_3 (\xsdb_reg_reg[0]_2 ),
        .\xsdb_reg_reg[0]_4 (\xsdb_reg_reg[0]_3 ),
        .\xsdb_reg_reg[14]_0 (\xsdb_reg_reg[14] ),
        .\xsdb_reg_reg[15]_0 (\xsdb_reg_reg[15] ),
        .\xsdb_reg_reg[1]_0 (\xsdb_reg_reg[1] ),
        .\xsdb_reg_reg[2]_0 (\xsdb_reg_reg[2] ));
endmodule

module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_ctl
   (\G_1PIPE_IFACE.s_daddr_r_reg[0] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[4] ,
    \xsdb_reg_reg[15]_0 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[5] ,
    \xsdb_reg_reg[14]_0 ,
    \xsdb_reg_reg[1]_0 ,
    \xsdb_reg_reg[2]_0 ,
    \xsdb_reg_reg[0]_0 ,
    \xsdb_reg_reg[0]_1 ,
    \xsdb_reg_reg[0]_2 ,
    \xsdb_reg_reg[0]_3 ,
    \xsdb_reg_reg[0]_4 ,
    \regSlaveDo_reg[5] ,
    \regSlaveDo_reg[5]_0 ,
    s_daddr_o,
    \regSlaveDo_reg[5]_1 ,
    \regSlaveDo_reg[15] ,
    Q,
    \regSlaveDo_reg[0] ,
    \regSlaveDo_reg[0]_0 ,
    reg_rst_i,
    s_di_o,
    s_dclk_o);
  output \G_1PIPE_IFACE.s_daddr_r_reg[0] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[4] ;
  output \xsdb_reg_reg[15]_0 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[5] ;
  output [11:0]\xsdb_reg_reg[14]_0 ;
  output \xsdb_reg_reg[1]_0 ;
  output \xsdb_reg_reg[2]_0 ;
  input \xsdb_reg_reg[0]_0 ;
  input \xsdb_reg_reg[0]_1 ;
  input \xsdb_reg_reg[0]_2 ;
  input \xsdb_reg_reg[0]_3 ;
  input \xsdb_reg_reg[0]_4 ;
  input \regSlaveDo_reg[5] ;
  input \regSlaveDo_reg[5]_0 ;
  input [3:0]s_daddr_o;
  input \regSlaveDo_reg[5]_1 ;
  input \regSlaveDo_reg[15] ;
  input [3:0]Q;
  input [0:0]\regSlaveDo_reg[0] ;
  input \regSlaveDo_reg[0]_0 ;
  input reg_rst_i;
  input [15:0]s_di_o;
  input s_dclk_o;

  wire \G_1PIPE_IFACE.s_daddr_r_reg[0] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[4] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[5] ;
  wire [3:0]Q;
  wire \regSlaveDo[5]_i_5_n_0 ;
  wire [0:0]\regSlaveDo_reg[0] ;
  wire \regSlaveDo_reg[0]_0 ;
  wire \regSlaveDo_reg[15] ;
  wire \regSlaveDo_reg[5] ;
  wire \regSlaveDo_reg[5]_0 ;
  wire \regSlaveDo_reg[5]_1 ;
  wire reg_rst_i;
  wire [3:0]s_daddr_o;
  wire s_dclk_o;
  wire [15:0]s_di_o;
  wire \xsdb_reg[0]_i_1_n_0 ;
  wire \xsdb_reg_reg[0]_0 ;
  wire \xsdb_reg_reg[0]_1 ;
  wire \xsdb_reg_reg[0]_2 ;
  wire \xsdb_reg_reg[0]_3 ;
  wire \xsdb_reg_reg[0]_4 ;
  wire [11:0]\xsdb_reg_reg[14]_0 ;
  wire \xsdb_reg_reg[15]_0 ;
  wire \xsdb_reg_reg[1]_0 ;
  wire \xsdb_reg_reg[2]_0 ;
  wire \xsdb_reg_reg_n_0_[15] ;
  wire \xsdb_reg_reg_n_0_[1] ;
  wire \xsdb_reg_reg_n_0_[2] ;
  wire \xsdb_reg_reg_n_0_[5] ;

  LUT6 #(
    .INIT(64'hFFFFFFFFA888A080)) 
    \regSlaveDo[0]_i_5 
       (.I0(s_daddr_o[3]),
        .I1(s_daddr_o[0]),
        .I2(s_daddr_o[1]),
        .I3(\xsdb_reg_reg[14]_0 [0]),
        .I4(\regSlaveDo_reg[0] ),
        .I5(\regSlaveDo_reg[0]_0 ),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[5] ));
  LUT6 #(
    .INIT(64'h00008C0000008000)) 
    \regSlaveDo[15]_i_5 
       (.I0(\xsdb_reg_reg_n_0_[15] ),
        .I1(\regSlaveDo_reg[15] ),
        .I2(s_daddr_o[3]),
        .I3(s_daddr_o[1]),
        .I4(s_daddr_o[0]),
        .I5(Q[3]),
        .O(\xsdb_reg_reg[15]_0 ));
  LUT5 #(
    .INIT(32'h0A000C00)) 
    \regSlaveDo[1]_i_7 
       (.I0(\xsdb_reg_reg_n_0_[1] ),
        .I1(Q[0]),
        .I2(s_daddr_o[0]),
        .I3(s_daddr_o[1]),
        .I4(s_daddr_o[3]),
        .O(\xsdb_reg_reg[1]_0 ));
  LUT5 #(
    .INIT(32'h0A000C00)) 
    \regSlaveDo[2]_i_5 
       (.I0(\xsdb_reg_reg_n_0_[2] ),
        .I1(Q[1]),
        .I2(s_daddr_o[0]),
        .I3(s_daddr_o[1]),
        .I4(s_daddr_o[3]),
        .O(\xsdb_reg_reg[2]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF0808080808)) 
    \regSlaveDo[5]_i_2 
       (.I0(\regSlaveDo_reg[5] ),
        .I1(\regSlaveDo_reg[5]_0 ),
        .I2(s_daddr_o[2]),
        .I3(\regSlaveDo[5]_i_5_n_0 ),
        .I4(\regSlaveDo_reg[5]_1 ),
        .I5(\regSlaveDo_reg[15] ),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[4] ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT5 #(
    .INIT(32'h0A000C00)) 
    \regSlaveDo[5]_i_5 
       (.I0(\xsdb_reg_reg_n_0_[5] ),
        .I1(Q[2]),
        .I2(s_daddr_o[0]),
        .I3(s_daddr_o[1]),
        .I4(s_daddr_o[3]),
        .O(\regSlaveDo[5]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0400040004000000)) 
    \xsdb_reg[0]_i_1 
       (.I0(\xsdb_reg_reg[0]_0 ),
        .I1(\G_1PIPE_IFACE.s_daddr_r_reg[0] ),
        .I2(\xsdb_reg_reg[0]_1 ),
        .I3(\xsdb_reg_reg[0]_2 ),
        .I4(\xsdb_reg_reg[0]_3 ),
        .I5(\xsdb_reg_reg[0]_4 ),
        .O(\xsdb_reg[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \xsdb_reg[0]_i_2 
       (.I0(s_daddr_o[0]),
        .I1(s_daddr_o[1]),
        .I2(s_daddr_o[3]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[0] ));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[0] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[0]),
        .Q(\xsdb_reg_reg[14]_0 [0]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[10] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[10]),
        .Q(\xsdb_reg_reg[14]_0 [7]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[11] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[11]),
        .Q(\xsdb_reg_reg[14]_0 [8]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[12] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[12]),
        .Q(\xsdb_reg_reg[14]_0 [9]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[13] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[13]),
        .Q(\xsdb_reg_reg[14]_0 [10]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[14] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[14]),
        .Q(\xsdb_reg_reg[14]_0 [11]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[15] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[15]),
        .Q(\xsdb_reg_reg_n_0_[15] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[1] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[1]),
        .Q(\xsdb_reg_reg_n_0_[1] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[2] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[2]),
        .Q(\xsdb_reg_reg_n_0_[2] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[3] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[3]),
        .Q(\xsdb_reg_reg[14]_0 [1]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[4] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[4]),
        .Q(\xsdb_reg_reg[14]_0 [2]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[5] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[5]),
        .Q(\xsdb_reg_reg_n_0_[5] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[6] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[6]),
        .Q(\xsdb_reg_reg[14]_0 [3]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[7] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[7]),
        .Q(\xsdb_reg_reg[14]_0 [4]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[8] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[8]),
        .Q(\xsdb_reg_reg[14]_0 [5]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[9] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[9]),
        .Q(\xsdb_reg_reg[14]_0 [6]),
        .R(reg_rst_i));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg_ctl" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_ctl_732
   (\xsdb_reg_reg[1]_0 ,
    Q,
    \xsdb_reg_reg[2]_0 ,
    \xsdb_reg_reg[5]_0 ,
    \xsdb_reg_reg[15]_0 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[4] ,
    \xsdb_reg_reg[0]_0 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[6] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[6]_0 ,
    \xsdb_reg_reg[0]_1 ,
    \xsdb_reg_reg[0]_2 ,
    s_dwe_o,
    ram_range00_in,
    isAddrRange01_in,
    \regSlaveDo_reg[1] ,
    \regSlaveDo_reg[15] ,
    \regSlaveDo_reg[15]_0 ,
    \regSlaveDo_reg[15]_1 ,
    \regSlaveDo_reg[1]_0 ,
    \regSlaveDo_reg[2] ,
    \regSlaveDo_reg[2]_0 ,
    \regSlaveDo_reg[5] ,
    \regSlaveDo_reg[5]_0 ,
    \regSlaveDo_reg[15]_2 ,
    \regSlaveDo_reg[15]_3 ,
    s_daddr_o,
    \regSlaveDo_reg[7] ,
    \regSlaveDo_reg[7]_0 ,
    \regSlaveDo_reg[7]_1 ,
    \regSlaveDo_reg[7]_2 ,
    \regSlaveDo_reg[6] ,
    \regSlaveDo_reg[6]_0 ,
    \regSlaveDo_reg[6]_1 ,
    reg_rst_i,
    s_di_o,
    s_dclk_o);
  output \xsdb_reg_reg[1]_0 ;
  output [12:0]Q;
  output \xsdb_reg_reg[2]_0 ;
  output \xsdb_reg_reg[5]_0 ;
  output \xsdb_reg_reg[15]_0 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[4] ;
  output \xsdb_reg_reg[0]_0 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[6] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[6]_0 ;
  input \xsdb_reg_reg[0]_1 ;
  input \xsdb_reg_reg[0]_2 ;
  input s_dwe_o;
  input ram_range00_in;
  input isAddrRange01_in;
  input \regSlaveDo_reg[1] ;
  input \regSlaveDo_reg[15] ;
  input [6:0]\regSlaveDo_reg[15]_0 ;
  input \regSlaveDo_reg[15]_1 ;
  input \regSlaveDo_reg[1]_0 ;
  input \regSlaveDo_reg[2] ;
  input \regSlaveDo_reg[2]_0 ;
  input \regSlaveDo_reg[5] ;
  input \regSlaveDo_reg[5]_0 ;
  input \regSlaveDo_reg[15]_2 ;
  input \regSlaveDo_reg[15]_3 ;
  input [6:0]s_daddr_o;
  input \regSlaveDo_reg[7] ;
  input \regSlaveDo_reg[7]_0 ;
  input \regSlaveDo_reg[7]_1 ;
  input \regSlaveDo_reg[7]_2 ;
  input \regSlaveDo_reg[6] ;
  input \regSlaveDo_reg[6]_0 ;
  input \regSlaveDo_reg[6]_1 ;
  input reg_rst_i;
  input [15:0]s_di_o;
  input s_dclk_o;

  wire \G_1PIPE_IFACE.s_daddr_r_reg[4] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[6] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[6]_0 ;
  wire [12:0]Q;
  wire isAddrRange01_in;
  wire ram_range00_in;
  wire \regSlaveDo[6]_i_2_n_0 ;
  wire \regSlaveDo[7]_i_2_n_0 ;
  wire \regSlaveDo_reg[15] ;
  wire [6:0]\regSlaveDo_reg[15]_0 ;
  wire \regSlaveDo_reg[15]_1 ;
  wire \regSlaveDo_reg[15]_2 ;
  wire \regSlaveDo_reg[15]_3 ;
  wire \regSlaveDo_reg[1] ;
  wire \regSlaveDo_reg[1]_0 ;
  wire \regSlaveDo_reg[2] ;
  wire \regSlaveDo_reg[2]_0 ;
  wire \regSlaveDo_reg[5] ;
  wire \regSlaveDo_reg[5]_0 ;
  wire \regSlaveDo_reg[6] ;
  wire \regSlaveDo_reg[6]_0 ;
  wire \regSlaveDo_reg[6]_1 ;
  wire \regSlaveDo_reg[7] ;
  wire \regSlaveDo_reg[7]_0 ;
  wire \regSlaveDo_reg[7]_1 ;
  wire \regSlaveDo_reg[7]_2 ;
  wire reg_rst_i;
  wire [6:0]s_daddr_o;
  wire s_dclk_o;
  wire [15:0]s_di_o;
  wire s_dwe_o;
  wire \xsdb_reg[4]_i_1_n_0 ;
  wire \xsdb_reg[4]_i_2_n_0 ;
  wire \xsdb_reg_reg[0]_0 ;
  wire \xsdb_reg_reg[0]_1 ;
  wire \xsdb_reg_reg[0]_2 ;
  wire \xsdb_reg_reg[15]_0 ;
  wire \xsdb_reg_reg[1]_0 ;
  wire \xsdb_reg_reg[2]_0 ;
  wire \xsdb_reg_reg[5]_0 ;
  wire \xsdb_reg_reg_n_0_[15] ;
  wire \xsdb_reg_reg_n_0_[6] ;
  wire \xsdb_reg_reg_n_0_[7] ;

  LUT6 #(
    .INIT(64'hA0A0A0C0A0C0A0C0)) 
    \regSlaveDo[0]_i_3 
       (.I0(Q[0]),
        .I1(\regSlaveDo_reg[15]_0 [0]),
        .I2(\regSlaveDo_reg[7] ),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[0]),
        .I5(s_daddr_o[1]),
        .O(\xsdb_reg_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \regSlaveDo[15]_i_2 
       (.I0(\xsdb_reg_reg_n_0_[15] ),
        .I1(\regSlaveDo_reg[15] ),
        .I2(\regSlaveDo_reg[15]_0 [6]),
        .I3(\regSlaveDo_reg[15]_1 ),
        .I4(\regSlaveDo_reg[15]_2 ),
        .I5(\regSlaveDo_reg[15]_3 ),
        .O(\xsdb_reg_reg[15]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \regSlaveDo[1]_i_1 
       (.I0(\regSlaveDo_reg[1] ),
        .I1(Q[1]),
        .I2(\regSlaveDo_reg[15] ),
        .I3(\regSlaveDo_reg[15]_0 [1]),
        .I4(\regSlaveDo_reg[15]_1 ),
        .I5(\regSlaveDo_reg[1]_0 ),
        .O(\xsdb_reg_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \regSlaveDo[2]_i_1 
       (.I0(Q[2]),
        .I1(\regSlaveDo_reg[15] ),
        .I2(\regSlaveDo_reg[15]_0 [2]),
        .I3(\regSlaveDo_reg[15]_1 ),
        .I4(\regSlaveDo_reg[2] ),
        .I5(\regSlaveDo_reg[2]_0 ),
        .O(\xsdb_reg_reg[2]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \regSlaveDo[5]_i_1 
       (.I0(Q[5]),
        .I1(\regSlaveDo_reg[15] ),
        .I2(\regSlaveDo_reg[15]_0 [3]),
        .I3(\regSlaveDo_reg[15]_1 ),
        .I4(\regSlaveDo_reg[5] ),
        .I5(\regSlaveDo_reg[5]_0 ),
        .O(\xsdb_reg_reg[5]_0 ));
  LUT6 #(
    .INIT(64'hF1F1F1F1F1F1F1F0)) 
    \regSlaveDo[6]_i_1 
       (.I0(s_daddr_o[6]),
        .I1(s_daddr_o[3]),
        .I2(\regSlaveDo[6]_i_2_n_0 ),
        .I3(\regSlaveDo_reg[6] ),
        .I4(\regSlaveDo_reg[6]_0 ),
        .I5(\regSlaveDo_reg[6]_1 ),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[6]_0 ));
  LUT6 #(
    .INIT(64'hA0A0A0C0A0C0A0C0)) 
    \regSlaveDo[6]_i_2 
       (.I0(\xsdb_reg_reg_n_0_[6] ),
        .I1(\regSlaveDo_reg[15]_0 [4]),
        .I2(\regSlaveDo_reg[7] ),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[0]),
        .I5(s_daddr_o[1]),
        .O(\regSlaveDo[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF1F1F1F1F1F1F1F0)) 
    \regSlaveDo[7]_i_1 
       (.I0(s_daddr_o[6]),
        .I1(s_daddr_o[3]),
        .I2(\regSlaveDo[7]_i_2_n_0 ),
        .I3(\regSlaveDo_reg[7]_0 ),
        .I4(\regSlaveDo_reg[7]_1 ),
        .I5(\regSlaveDo_reg[7]_2 ),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[6] ));
  LUT6 #(
    .INIT(64'hA0A0A0C0A0C0A0C0)) 
    \regSlaveDo[7]_i_2 
       (.I0(\xsdb_reg_reg_n_0_[7] ),
        .I1(\regSlaveDo_reg[15]_0 [5]),
        .I2(\regSlaveDo_reg[7] ),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[0]),
        .I5(s_daddr_o[1]),
        .O(\regSlaveDo[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000200000000000)) 
    \xsdb_reg[4]_i_1 
       (.I0(\xsdb_reg[4]_i_2_n_0 ),
        .I1(\xsdb_reg_reg[0]_1 ),
        .I2(\xsdb_reg_reg[0]_2 ),
        .I3(s_dwe_o),
        .I4(ram_range00_in),
        .I5(isAddrRange01_in),
        .O(\xsdb_reg[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h1000)) 
    \xsdb_reg[4]_i_2 
       (.I0(s_daddr_o[6]),
        .I1(s_daddr_o[2]),
        .I2(s_daddr_o[3]),
        .I3(\G_1PIPE_IFACE.s_daddr_r_reg[4] ),
        .O(\xsdb_reg[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0800)) 
    \xsdb_reg[8]_i_6 
       (.I0(s_daddr_o[4]),
        .I1(s_daddr_o[0]),
        .I2(s_daddr_o[5]),
        .I3(s_daddr_o[1]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[4] ));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[0] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[0]),
        .Q(Q[0]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[10] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[10]),
        .Q(Q[8]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[11] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[11]),
        .Q(Q[9]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[12] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[12]),
        .Q(Q[10]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[13] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[13]),
        .Q(Q[11]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[14] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[14]),
        .Q(Q[12]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[15] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[15]),
        .Q(\xsdb_reg_reg_n_0_[15] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[1] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[1]),
        .Q(Q[1]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[2] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[2]),
        .Q(Q[2]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[3] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[3]),
        .Q(Q[3]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[4] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[4]),
        .Q(Q[4]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[5] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[5]),
        .Q(Q[5]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[6] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[6]),
        .Q(\xsdb_reg_reg_n_0_[6] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[7] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[7]),
        .Q(\xsdb_reg_reg_n_0_[7] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[8] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[8]),
        .Q(Q[6]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[9] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[9]),
        .Q(Q[7]),
        .R(reg_rst_i));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg_ctl" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_ctl_733
   (\G_1PIPE_IFACE.s_daddr_r_reg[0] ,
    Q,
    \xsdb_reg_reg[0]_0 ,
    \xsdb_reg_reg[0]_1 ,
    s_dwe_o,
    ram_range00_in,
    isAddrRange01_in,
    s_daddr_o,
    reg_rst_i,
    s_di_o,
    s_dclk_o);
  output \G_1PIPE_IFACE.s_daddr_r_reg[0] ;
  output [15:0]Q;
  input \xsdb_reg_reg[0]_0 ;
  input \xsdb_reg_reg[0]_1 ;
  input s_dwe_o;
  input ram_range00_in;
  input isAddrRange01_in;
  input [6:0]s_daddr_o;
  input reg_rst_i;
  input [15:0]s_di_o;
  input s_dclk_o;

  wire \G_1PIPE_IFACE.s_daddr_r_reg[0] ;
  wire [15:0]Q;
  wire isAddrRange01_in;
  wire ram_range00_in;
  wire reg_rst_i;
  wire [6:0]s_daddr_o;
  wire s_dclk_o;
  wire [15:0]s_di_o;
  wire s_dwe_o;
  wire \xsdb_reg[10]_i_1_n_0 ;
  wire \xsdb_reg[10]_i_2_n_0 ;
  wire \xsdb_reg_reg[0]_0 ;
  wire \xsdb_reg_reg[0]_1 ;

  LUT6 #(
    .INIT(64'h0000200000000000)) 
    \xsdb_reg[10]_i_1 
       (.I0(\xsdb_reg[10]_i_2_n_0 ),
        .I1(\xsdb_reg_reg[0]_0 ),
        .I2(\xsdb_reg_reg[0]_1 ),
        .I3(s_dwe_o),
        .I4(ram_range00_in),
        .I5(isAddrRange01_in),
        .O(\xsdb_reg[10]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00400000)) 
    \xsdb_reg[10]_i_2 
       (.I0(s_daddr_o[2]),
        .I1(s_daddr_o[3]),
        .I2(s_daddr_o[4]),
        .I3(s_daddr_o[6]),
        .I4(\G_1PIPE_IFACE.s_daddr_r_reg[0] ),
        .O(\xsdb_reg[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \xsdb_reg[5]_i_2 
       (.I0(s_daddr_o[0]),
        .I1(s_daddr_o[1]),
        .I2(s_daddr_o[5]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[0] ));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[0] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[0]),
        .Q(Q[0]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[10] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[10]),
        .Q(Q[10]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[11] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[11]),
        .Q(Q[11]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[12] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[12]),
        .Q(Q[12]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[13] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[13]),
        .Q(Q[13]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[14] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[14]),
        .Q(Q[14]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[15] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[15]),
        .Q(Q[15]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[1] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[1]),
        .Q(Q[1]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[2] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[2]),
        .Q(Q[2]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[3] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[3]),
        .Q(Q[3]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[4] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[4]),
        .Q(Q[4]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[5] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[5]),
        .Q(Q[5]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[6] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[6]),
        .Q(Q[6]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[7] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[7]),
        .Q(Q[7]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[8] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[8]),
        .Q(Q[8]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[9] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[9]),
        .Q(Q[9]),
        .R(reg_rst_i));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg_ctl" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_ctl_736
   (\xsdb_reg_reg[6]_0 ,
    Q,
    \xsdb_reg_reg[7]_0 ,
    \xsdb_reg_reg[0]_0 ,
    \xsdb_reg_reg[0]_1 ,
    \xsdb_reg_reg[0]_2 ,
    \xsdb_reg_reg[0]_3 ,
    \xsdb_reg_reg[0]_4 ,
    \xsdb_reg_reg[0]_5 ,
    \regSlaveDo_reg[7] ,
    \regSlaveDo_reg[7]_0 ,
    s_daddr_o,
    reg_rst_i,
    D,
    s_dclk_o);
  output \xsdb_reg_reg[6]_0 ;
  output [14:0]Q;
  output \xsdb_reg_reg[7]_0 ;
  input \xsdb_reg_reg[0]_0 ;
  input \xsdb_reg_reg[0]_1 ;
  input \xsdb_reg_reg[0]_2 ;
  input \xsdb_reg_reg[0]_3 ;
  input \xsdb_reg_reg[0]_4 ;
  input \xsdb_reg_reg[0]_5 ;
  input \regSlaveDo_reg[7] ;
  input [1:0]\regSlaveDo_reg[7]_0 ;
  input [1:0]s_daddr_o;
  input reg_rst_i;
  input [15:0]D;
  input s_dclk_o;

  wire [15:0]D;
  wire [14:0]Q;
  wire \regSlaveDo_reg[7] ;
  wire [1:0]\regSlaveDo_reg[7]_0 ;
  wire reg_rst_i;
  wire [1:0]s_daddr_o;
  wire s_dclk_o;
  wire \xsdb_reg[5]_i_1_n_0 ;
  wire \xsdb_reg_reg[0]_0 ;
  wire \xsdb_reg_reg[0]_1 ;
  wire \xsdb_reg_reg[0]_2 ;
  wire \xsdb_reg_reg[0]_3 ;
  wire \xsdb_reg_reg[0]_4 ;
  wire \xsdb_reg_reg[0]_5 ;
  wire \xsdb_reg_reg[6]_0 ;
  wire \xsdb_reg_reg[7]_0 ;
  wire \xsdb_reg_reg_n_0_[7] ;

  LUT6 #(
    .INIT(64'h000000000000F888)) 
    \regSlaveDo[6]_i_4 
       (.I0(\xsdb_reg_reg[0]_1 ),
        .I1(Q[6]),
        .I2(\regSlaveDo_reg[7] ),
        .I3(\regSlaveDo_reg[7]_0 [0]),
        .I4(s_daddr_o[1]),
        .I5(s_daddr_o[0]),
        .O(\xsdb_reg_reg[6]_0 ));
  LUT6 #(
    .INIT(64'h000000000000F888)) 
    \regSlaveDo[7]_i_4 
       (.I0(\xsdb_reg_reg[0]_1 ),
        .I1(\xsdb_reg_reg_n_0_[7] ),
        .I2(\regSlaveDo_reg[7] ),
        .I3(\regSlaveDo_reg[7]_0 [1]),
        .I4(s_daddr_o[1]),
        .I5(s_daddr_o[0]),
        .O(\xsdb_reg_reg[7]_0 ));
  LUT6 #(
    .INIT(64'h0400040004000000)) 
    \xsdb_reg[5]_i_1 
       (.I0(\xsdb_reg_reg[0]_0 ),
        .I1(\xsdb_reg_reg[0]_1 ),
        .I2(\xsdb_reg_reg[0]_2 ),
        .I3(\xsdb_reg_reg[0]_3 ),
        .I4(\xsdb_reg_reg[0]_4 ),
        .I5(\xsdb_reg_reg[0]_5 ),
        .O(\xsdb_reg[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[0] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[0]),
        .Q(Q[0]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[10] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[10]),
        .Q(Q[9]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[11] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[11]),
        .Q(Q[10]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[12] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[12]),
        .Q(Q[11]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[13] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[13]),
        .Q(Q[12]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[14] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[14]),
        .Q(Q[13]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[15] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[15]),
        .Q(Q[14]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[1] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[1]),
        .Q(Q[1]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[2] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[2]),
        .Q(Q[2]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[3] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[3]),
        .Q(Q[3]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[4] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[4]),
        .Q(Q[4]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[5] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[5]),
        .Q(Q[5]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[6] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[6]),
        .Q(Q[6]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[7] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[7]),
        .Q(\xsdb_reg_reg_n_0_[7] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[8] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[8]),
        .Q(Q[7]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[9] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[9]),
        .Q(Q[8]),
        .R(reg_rst_i));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg_ctl" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_ctl_737
   (\G_1PIPE_IFACE.s_daddr_r_reg[5] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[9] ,
    \G_1PIPE_IFACE.s_dwe_r_reg ,
    \G_1PIPE_IFACE.s_daddr_r_reg[10] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[0] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[7] ,
    ram_range00_in,
    \xsdb_reg_reg[3]_0 ,
    \xsdb_reg_reg[4]_0 ,
    \xsdb_reg_reg[8]_0 ,
    \xsdb_reg_reg[9]_0 ,
    \xsdb_reg_reg[10]_0 ,
    \xsdb_reg_reg[11]_0 ,
    \xsdb_reg_reg[12]_0 ,
    \xsdb_reg_reg[13]_0 ,
    \xsdb_reg_reg[14]_0 ,
    \xsdb_reg_reg[0]_0 ,
    \xsdb_reg_reg[5]_0 ,
    \xsdb_reg_reg[15]_0 ,
    \xsdb_reg_reg[0]_1 ,
    s_daddr_o,
    s_dwe_o,
    \xsdb_reg_reg[0]_2 ,
    \regSlaveDo_reg[3] ,
    \regSlaveDo_reg[14] ,
    Q,
    \regSlaveDo_reg[14]_0 ,
    \regSlaveDo_reg[14]_1 ,
    \regSlaveDo_reg[14]_2 ,
    \regSlaveDo_reg[14]_3 ,
    \regSlaveDo_reg[14]_4 ,
    \regSlaveDo_reg[3]_0 ,
    \regSlaveDo_reg[4] ,
    \regSlaveDo_reg[4]_0 ,
    \regSlaveDo_reg[8] ,
    \regSlaveDo_reg[14]_5 ,
    \regSlaveDo_reg[14]_6 ,
    \regSlaveDo_reg[9] ,
    \regSlaveDo_reg[10] ,
    \regSlaveDo_reg[11] ,
    \regSlaveDo_reg[12] ,
    \regSlaveDo_reg[13] ,
    \regSlaveDo_reg[14]_7 ,
    \regSlaveDo[14]_i_2_0 ,
    reg_rst_i,
    D,
    s_dclk_o);
  output \G_1PIPE_IFACE.s_daddr_r_reg[5] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[9] ;
  output \G_1PIPE_IFACE.s_dwe_r_reg ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[10] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[0] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[7] ;
  output ram_range00_in;
  output \xsdb_reg_reg[3]_0 ;
  output \xsdb_reg_reg[4]_0 ;
  output \xsdb_reg_reg[8]_0 ;
  output \xsdb_reg_reg[9]_0 ;
  output \xsdb_reg_reg[10]_0 ;
  output \xsdb_reg_reg[11]_0 ;
  output \xsdb_reg_reg[12]_0 ;
  output \xsdb_reg_reg[13]_0 ;
  output \xsdb_reg_reg[14]_0 ;
  output \xsdb_reg_reg[0]_0 ;
  output \xsdb_reg_reg[5]_0 ;
  output [4:0]\xsdb_reg_reg[15]_0 ;
  input \xsdb_reg_reg[0]_1 ;
  input [16:0]s_daddr_o;
  input s_dwe_o;
  input \xsdb_reg_reg[0]_2 ;
  input \regSlaveDo_reg[3] ;
  input \regSlaveDo_reg[14] ;
  input [8:0]Q;
  input \regSlaveDo_reg[14]_0 ;
  input [8:0]\regSlaveDo_reg[14]_1 ;
  input \regSlaveDo_reg[14]_2 ;
  input [9:0]\regSlaveDo_reg[14]_3 ;
  input \regSlaveDo_reg[14]_4 ;
  input \regSlaveDo_reg[3]_0 ;
  input \regSlaveDo_reg[4] ;
  input \regSlaveDo_reg[4]_0 ;
  input \regSlaveDo_reg[8] ;
  input [6:0]\regSlaveDo_reg[14]_5 ;
  input \regSlaveDo_reg[14]_6 ;
  input \regSlaveDo_reg[9] ;
  input \regSlaveDo_reg[10] ;
  input \regSlaveDo_reg[11] ;
  input \regSlaveDo_reg[12] ;
  input \regSlaveDo_reg[13] ;
  input \regSlaveDo_reg[14]_7 ;
  input [7:0]\regSlaveDo[14]_i_2_0 ;
  input reg_rst_i;
  input [15:0]D;
  input s_dclk_o;

  wire [15:0]D;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[0] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[10] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[5] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[7] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[9] ;
  wire \G_1PIPE_IFACE.s_dwe_r_reg ;
  wire [8:0]Q;
  wire ram_range00_in;
  wire \regSlaveDo[10]_i_2_n_0 ;
  wire \regSlaveDo[10]_i_4_n_0 ;
  wire \regSlaveDo[11]_i_2_n_0 ;
  wire \regSlaveDo[11]_i_4_n_0 ;
  wire \regSlaveDo[12]_i_2_n_0 ;
  wire \regSlaveDo[12]_i_4_n_0 ;
  wire \regSlaveDo[13]_i_2_n_0 ;
  wire \regSlaveDo[13]_i_4_n_0 ;
  wire [7:0]\regSlaveDo[14]_i_2_0 ;
  wire \regSlaveDo[14]_i_2_n_0 ;
  wire \regSlaveDo[14]_i_4_n_0 ;
  wire \regSlaveDo[3]_i_2_n_0 ;
  wire \regSlaveDo[4]_i_2_n_0 ;
  wire \regSlaveDo[8]_i_2_n_0 ;
  wire \regSlaveDo[8]_i_4_n_0 ;
  wire \regSlaveDo[9]_i_2_n_0 ;
  wire \regSlaveDo[9]_i_4_n_0 ;
  wire \regSlaveDo_reg[10] ;
  wire \regSlaveDo_reg[11] ;
  wire \regSlaveDo_reg[12] ;
  wire \regSlaveDo_reg[13] ;
  wire \regSlaveDo_reg[14] ;
  wire \regSlaveDo_reg[14]_0 ;
  wire [8:0]\regSlaveDo_reg[14]_1 ;
  wire \regSlaveDo_reg[14]_2 ;
  wire [9:0]\regSlaveDo_reg[14]_3 ;
  wire \regSlaveDo_reg[14]_4 ;
  wire [6:0]\regSlaveDo_reg[14]_5 ;
  wire \regSlaveDo_reg[14]_6 ;
  wire \regSlaveDo_reg[14]_7 ;
  wire \regSlaveDo_reg[3] ;
  wire \regSlaveDo_reg[3]_0 ;
  wire \regSlaveDo_reg[4] ;
  wire \regSlaveDo_reg[4]_0 ;
  wire \regSlaveDo_reg[8] ;
  wire \regSlaveDo_reg[9] ;
  wire reg_rst_i;
  wire [16:0]s_daddr_o;
  wire s_dclk_o;
  wire s_dwe_o;
  wire \xsdb_reg[1]_i_1_n_0 ;
  wire \xsdb_reg[1]_i_7_n_0 ;
  wire \xsdb_reg_reg[0]_0 ;
  wire \xsdb_reg_reg[0]_1 ;
  wire \xsdb_reg_reg[0]_2 ;
  wire \xsdb_reg_reg[10]_0 ;
  wire \xsdb_reg_reg[11]_0 ;
  wire \xsdb_reg_reg[12]_0 ;
  wire \xsdb_reg_reg[13]_0 ;
  wire \xsdb_reg_reg[14]_0 ;
  wire [4:0]\xsdb_reg_reg[15]_0 ;
  wire \xsdb_reg_reg[3]_0 ;
  wire \xsdb_reg_reg[4]_0 ;
  wire \xsdb_reg_reg[5]_0 ;
  wire \xsdb_reg_reg[8]_0 ;
  wire \xsdb_reg_reg[9]_0 ;
  wire \xsdb_reg_reg_n_0_[0] ;
  wire \xsdb_reg_reg_n_0_[10] ;
  wire \xsdb_reg_reg_n_0_[11] ;
  wire \xsdb_reg_reg_n_0_[12] ;
  wire \xsdb_reg_reg_n_0_[13] ;
  wire \xsdb_reg_reg_n_0_[14] ;
  wire \xsdb_reg_reg_n_0_[3] ;
  wire \xsdb_reg_reg_n_0_[4] ;
  wire \xsdb_reg_reg_n_0_[5] ;
  wire \xsdb_reg_reg_n_0_[8] ;
  wire \xsdb_reg_reg_n_0_[9] ;

  LUT5 #(
    .INIT(32'h00000CA0)) 
    \regSlaveDo[0]_i_7 
       (.I0(\xsdb_reg_reg_n_0_[0] ),
        .I1(\regSlaveDo_reg[14]_3 [0]),
        .I2(s_daddr_o[0]),
        .I3(s_daddr_o[1]),
        .I4(s_daddr_o[5]),
        .O(\xsdb_reg_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEEEFEEEFEEE)) 
    \regSlaveDo[10]_i_1 
       (.I0(\regSlaveDo[10]_i_2_n_0 ),
        .I1(\regSlaveDo_reg[10] ),
        .I2(\regSlaveDo_reg[14] ),
        .I3(Q[4]),
        .I4(\regSlaveDo_reg[14]_0 ),
        .I5(\regSlaveDo_reg[14]_1 [4]),
        .O(\xsdb_reg_reg[10]_0 ));
  LUT6 #(
    .INIT(64'hAAAAA888A888A888)) 
    \regSlaveDo[10]_i_2 
       (.I0(\regSlaveDo_reg[14]_2 ),
        .I1(\regSlaveDo[10]_i_4_n_0 ),
        .I2(\regSlaveDo_reg[14]_5 [2]),
        .I3(\regSlaveDo_reg[14]_6 ),
        .I4(\regSlaveDo_reg[14]_3 [5]),
        .I5(\regSlaveDo_reg[14]_4 ),
        .O(\regSlaveDo[10]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000A0C00)) 
    \regSlaveDo[10]_i_4 
       (.I0(\xsdb_reg_reg_n_0_[10] ),
        .I1(\regSlaveDo[14]_i_2_0 [3]),
        .I2(s_daddr_o[1]),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[0]),
        .O(\regSlaveDo[10]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEEEFEEEFEEE)) 
    \regSlaveDo[11]_i_1 
       (.I0(\regSlaveDo[11]_i_2_n_0 ),
        .I1(\regSlaveDo_reg[11] ),
        .I2(\regSlaveDo_reg[14] ),
        .I3(Q[5]),
        .I4(\regSlaveDo_reg[14]_0 ),
        .I5(\regSlaveDo_reg[14]_1 [5]),
        .O(\xsdb_reg_reg[11]_0 ));
  LUT6 #(
    .INIT(64'hAAAAA888A888A888)) 
    \regSlaveDo[11]_i_2 
       (.I0(\regSlaveDo_reg[14]_2 ),
        .I1(\regSlaveDo[11]_i_4_n_0 ),
        .I2(\regSlaveDo_reg[14]_5 [3]),
        .I3(\regSlaveDo_reg[14]_6 ),
        .I4(\regSlaveDo_reg[14]_3 [6]),
        .I5(\regSlaveDo_reg[14]_4 ),
        .O(\regSlaveDo[11]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000A0C00)) 
    \regSlaveDo[11]_i_4 
       (.I0(\xsdb_reg_reg_n_0_[11] ),
        .I1(\regSlaveDo[14]_i_2_0 [4]),
        .I2(s_daddr_o[1]),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[0]),
        .O(\regSlaveDo[11]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEEEFEEEFEEE)) 
    \regSlaveDo[12]_i_1 
       (.I0(\regSlaveDo[12]_i_2_n_0 ),
        .I1(\regSlaveDo_reg[12] ),
        .I2(\regSlaveDo_reg[14] ),
        .I3(Q[6]),
        .I4(\regSlaveDo_reg[14]_0 ),
        .I5(\regSlaveDo_reg[14]_1 [6]),
        .O(\xsdb_reg_reg[12]_0 ));
  LUT6 #(
    .INIT(64'hAAAAA888A888A888)) 
    \regSlaveDo[12]_i_2 
       (.I0(\regSlaveDo_reg[14]_2 ),
        .I1(\regSlaveDo[12]_i_4_n_0 ),
        .I2(\regSlaveDo_reg[14]_5 [4]),
        .I3(\regSlaveDo_reg[14]_6 ),
        .I4(\regSlaveDo_reg[14]_3 [7]),
        .I5(\regSlaveDo_reg[14]_4 ),
        .O(\regSlaveDo[12]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000A0C00)) 
    \regSlaveDo[12]_i_4 
       (.I0(\xsdb_reg_reg_n_0_[12] ),
        .I1(\regSlaveDo[14]_i_2_0 [5]),
        .I2(s_daddr_o[1]),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[0]),
        .O(\regSlaveDo[12]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEEEFEEEFEEE)) 
    \regSlaveDo[13]_i_1 
       (.I0(\regSlaveDo[13]_i_2_n_0 ),
        .I1(\regSlaveDo_reg[13] ),
        .I2(\regSlaveDo_reg[14] ),
        .I3(Q[7]),
        .I4(\regSlaveDo_reg[14]_0 ),
        .I5(\regSlaveDo_reg[14]_1 [7]),
        .O(\xsdb_reg_reg[13]_0 ));
  LUT6 #(
    .INIT(64'hAAAAA888A888A888)) 
    \regSlaveDo[13]_i_2 
       (.I0(\regSlaveDo_reg[14]_2 ),
        .I1(\regSlaveDo[13]_i_4_n_0 ),
        .I2(\regSlaveDo_reg[14]_5 [5]),
        .I3(\regSlaveDo_reg[14]_6 ),
        .I4(\regSlaveDo_reg[14]_3 [8]),
        .I5(\regSlaveDo_reg[14]_4 ),
        .O(\regSlaveDo[13]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000A0C00)) 
    \regSlaveDo[13]_i_4 
       (.I0(\xsdb_reg_reg_n_0_[13] ),
        .I1(\regSlaveDo[14]_i_2_0 [6]),
        .I2(s_daddr_o[1]),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[0]),
        .O(\regSlaveDo[13]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEEEFEEEFEEE)) 
    \regSlaveDo[14]_i_1 
       (.I0(\regSlaveDo[14]_i_2_n_0 ),
        .I1(\regSlaveDo_reg[14]_7 ),
        .I2(\regSlaveDo_reg[14] ),
        .I3(Q[8]),
        .I4(\regSlaveDo_reg[14]_0 ),
        .I5(\regSlaveDo_reg[14]_1 [8]),
        .O(\xsdb_reg_reg[14]_0 ));
  LUT6 #(
    .INIT(64'hAAAAA888A888A888)) 
    \regSlaveDo[14]_i_2 
       (.I0(\regSlaveDo_reg[14]_2 ),
        .I1(\regSlaveDo[14]_i_4_n_0 ),
        .I2(\regSlaveDo_reg[14]_5 [6]),
        .I3(\regSlaveDo_reg[14]_6 ),
        .I4(\regSlaveDo_reg[14]_3 [9]),
        .I5(\regSlaveDo_reg[14]_4 ),
        .O(\regSlaveDo[14]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000A0C00)) 
    \regSlaveDo[14]_i_4 
       (.I0(\xsdb_reg_reg_n_0_[14] ),
        .I1(\regSlaveDo[14]_i_2_0 [7]),
        .I2(s_daddr_o[1]),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[0]),
        .O(\regSlaveDo[14]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT4 #(
    .INIT(16'hFEFF)) 
    \regSlaveDo[15]_i_1 
       (.I0(s_daddr_o[9]),
        .I1(s_daddr_o[8]),
        .I2(s_daddr_o[7]),
        .I3(s_daddr_o[10]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[9] ));
  LUT6 #(
    .INIT(64'hFFFFFEEEFEEEFEEE)) 
    \regSlaveDo[3]_i_1 
       (.I0(\regSlaveDo[3]_i_2_n_0 ),
        .I1(\regSlaveDo_reg[3] ),
        .I2(\regSlaveDo_reg[14] ),
        .I3(Q[0]),
        .I4(\regSlaveDo_reg[14]_0 ),
        .I5(\regSlaveDo_reg[14]_1 [0]),
        .O(\xsdb_reg_reg[3]_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA808080)) 
    \regSlaveDo[3]_i_2 
       (.I0(\regSlaveDo_reg[14]_2 ),
        .I1(\xsdb_reg_reg_n_0_[3] ),
        .I2(\G_1PIPE_IFACE.s_daddr_r_reg[5] ),
        .I3(\regSlaveDo_reg[14]_3 [1]),
        .I4(\regSlaveDo_reg[14]_4 ),
        .I5(\regSlaveDo_reg[3]_0 ),
        .O(\regSlaveDo[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEEEFEEEFEEE)) 
    \regSlaveDo[4]_i_1 
       (.I0(\regSlaveDo[4]_i_2_n_0 ),
        .I1(\regSlaveDo_reg[4] ),
        .I2(\regSlaveDo_reg[14] ),
        .I3(Q[1]),
        .I4(\regSlaveDo_reg[14]_0 ),
        .I5(\regSlaveDo_reg[14]_1 [1]),
        .O(\xsdb_reg_reg[4]_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA808080)) 
    \regSlaveDo[4]_i_2 
       (.I0(\regSlaveDo_reg[14]_2 ),
        .I1(\xsdb_reg_reg_n_0_[4] ),
        .I2(\G_1PIPE_IFACE.s_daddr_r_reg[5] ),
        .I3(\regSlaveDo_reg[14]_3 [2]),
        .I4(\regSlaveDo_reg[14]_4 ),
        .I5(\regSlaveDo_reg[4]_0 ),
        .O(\regSlaveDo[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000A0C00)) 
    \regSlaveDo[5]_i_6 
       (.I0(\xsdb_reg_reg_n_0_[5] ),
        .I1(\regSlaveDo[14]_i_2_0 [0]),
        .I2(s_daddr_o[1]),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[0]),
        .O(\xsdb_reg_reg[5]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEEEFEEEFEEE)) 
    \regSlaveDo[8]_i_1 
       (.I0(\regSlaveDo[8]_i_2_n_0 ),
        .I1(\regSlaveDo_reg[8] ),
        .I2(\regSlaveDo_reg[14] ),
        .I3(Q[2]),
        .I4(\regSlaveDo_reg[14]_0 ),
        .I5(\regSlaveDo_reg[14]_1 [2]),
        .O(\xsdb_reg_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hAAAAA888A888A888)) 
    \regSlaveDo[8]_i_2 
       (.I0(\regSlaveDo_reg[14]_2 ),
        .I1(\regSlaveDo[8]_i_4_n_0 ),
        .I2(\regSlaveDo_reg[14]_5 [0]),
        .I3(\regSlaveDo_reg[14]_6 ),
        .I4(\regSlaveDo_reg[14]_3 [3]),
        .I5(\regSlaveDo_reg[14]_4 ),
        .O(\regSlaveDo[8]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT5 #(
    .INIT(32'h000A0C00)) 
    \regSlaveDo[8]_i_4 
       (.I0(\xsdb_reg_reg_n_0_[8] ),
        .I1(\regSlaveDo[14]_i_2_0 [1]),
        .I2(s_daddr_o[1]),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[0]),
        .O(\regSlaveDo[8]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEEEFEEEFEEE)) 
    \regSlaveDo[9]_i_1 
       (.I0(\regSlaveDo[9]_i_2_n_0 ),
        .I1(\regSlaveDo_reg[9] ),
        .I2(\regSlaveDo_reg[14] ),
        .I3(Q[3]),
        .I4(\regSlaveDo_reg[14]_0 ),
        .I5(\regSlaveDo_reg[14]_1 [3]),
        .O(\xsdb_reg_reg[9]_0 ));
  LUT6 #(
    .INIT(64'hAAAAA888A888A888)) 
    \regSlaveDo[9]_i_2 
       (.I0(\regSlaveDo_reg[14]_2 ),
        .I1(\regSlaveDo[9]_i_4_n_0 ),
        .I2(\regSlaveDo_reg[14]_5 [1]),
        .I3(\regSlaveDo_reg[14]_6 ),
        .I4(\regSlaveDo_reg[14]_3 [4]),
        .I5(\regSlaveDo_reg[14]_4 ),
        .O(\regSlaveDo[9]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000A0C00)) 
    \regSlaveDo[9]_i_4 
       (.I0(\xsdb_reg_reg_n_0_[9] ),
        .I1(\regSlaveDo[14]_i_2_0 [2]),
        .I2(s_daddr_o[1]),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[0]),
        .O(\regSlaveDo[9]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0400040004000000)) 
    \xsdb_reg[1]_i_1 
       (.I0(\xsdb_reg_reg[0]_1 ),
        .I1(\G_1PIPE_IFACE.s_daddr_r_reg[5] ),
        .I2(\G_1PIPE_IFACE.s_daddr_r_reg[9] ),
        .I3(\G_1PIPE_IFACE.s_dwe_r_reg ),
        .I4(\G_1PIPE_IFACE.s_daddr_r_reg[10] ),
        .I5(\G_1PIPE_IFACE.s_daddr_r_reg[0] ),
        .O(\xsdb_reg[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \xsdb_reg[1]_i_3 
       (.I0(s_daddr_o[5]),
        .I1(s_daddr_o[0]),
        .I2(s_daddr_o[1]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[5] ));
  LUT5 #(
    .INIT(32'h44040404)) 
    \xsdb_reg[1]_i_4 
       (.I0(ram_range00_in),
        .I1(s_dwe_o),
        .I2(s_daddr_o[10]),
        .I3(\xsdb_reg[1]_i_7_n_0 ),
        .I4(\xsdb_reg_reg[0]_2 ),
        .O(\G_1PIPE_IFACE.s_dwe_r_reg ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAAAAA8)) 
    \xsdb_reg[1]_i_5 
       (.I0(s_daddr_o[10]),
        .I1(s_daddr_o[6]),
        .I2(s_daddr_o[3]),
        .I3(s_daddr_o[4]),
        .I4(s_daddr_o[2]),
        .I5(ram_range00_in),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[10] ));
  LUT5 #(
    .INIT(32'hFF00FE00)) 
    \xsdb_reg[1]_i_6 
       (.I0(s_daddr_o[0]),
        .I1(s_daddr_o[5]),
        .I2(s_daddr_o[1]),
        .I3(s_daddr_o[10]),
        .I4(\G_1PIPE_IFACE.s_daddr_r_reg[7] ),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[0] ));
  LUT3 #(
    .INIT(8'h01)) 
    \xsdb_reg[1]_i_7 
       (.I0(s_daddr_o[9]),
        .I1(s_daddr_o[8]),
        .I2(s_daddr_o[7]),
        .O(\xsdb_reg[1]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \xsdb_reg[1]_i_9 
       (.I0(s_daddr_o[7]),
        .I1(s_daddr_o[8]),
        .I2(s_daddr_o[9]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[7] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \xsdb_reg[8]_i_4 
       (.I0(s_daddr_o[14]),
        .I1(s_daddr_o[15]),
        .I2(s_daddr_o[13]),
        .I3(s_daddr_o[12]),
        .I4(s_daddr_o[16]),
        .I5(s_daddr_o[11]),
        .O(ram_range00_in));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[0] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[0]),
        .Q(\xsdb_reg_reg_n_0_[0] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[10] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[10]),
        .Q(\xsdb_reg_reg_n_0_[10] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[11] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[11]),
        .Q(\xsdb_reg_reg_n_0_[11] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[12] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[12]),
        .Q(\xsdb_reg_reg_n_0_[12] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[13] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[13]),
        .Q(\xsdb_reg_reg_n_0_[13] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[14] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[14]),
        .Q(\xsdb_reg_reg_n_0_[14] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[15] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[15]),
        .Q(\xsdb_reg_reg[15]_0 [4]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[1] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[1]),
        .Q(\xsdb_reg_reg[15]_0 [0]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[2] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[2]),
        .Q(\xsdb_reg_reg[15]_0 [1]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[3] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[3]),
        .Q(\xsdb_reg_reg_n_0_[3] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[4] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[4]),
        .Q(\xsdb_reg_reg_n_0_[4] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[5] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[5]),
        .Q(\xsdb_reg_reg_n_0_[5] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[6] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[6]),
        .Q(\xsdb_reg_reg[15]_0 [2]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[7] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[7]),
        .Q(\xsdb_reg_reg[15]_0 [3]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[8] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[8]),
        .Q(\xsdb_reg_reg_n_0_[8] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[9] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[9]),
        .Q(\xsdb_reg_reg_n_0_[9] ),
        .R(reg_rst_i));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg_ctl" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_ctl_755
   (\G_1PIPE_IFACE.s_daddr_r_reg[0] ,
    \xsdb_reg_reg[15]_0 ,
    \xsdb_reg_reg[1]_0 ,
    \xsdb_reg_reg[2]_0 ,
    \xsdb_reg_reg[14]_0 ,
    \xsdb_reg_reg[0]_0 ,
    \xsdb_reg_reg[0]_1 ,
    \xsdb_reg_reg[0]_2 ,
    \xsdb_reg_reg[0]_3 ,
    \xsdb_reg_reg[0]_4 ,
    \regSlaveDo_reg[15] ,
    s_daddr_o,
    Q,
    reg_rst_i,
    s_di_o,
    s_dclk_o);
  output \G_1PIPE_IFACE.s_daddr_r_reg[0] ;
  output \xsdb_reg_reg[15]_0 ;
  output \xsdb_reg_reg[1]_0 ;
  output \xsdb_reg_reg[2]_0 ;
  output [12:0]\xsdb_reg_reg[14]_0 ;
  input \xsdb_reg_reg[0]_0 ;
  input \xsdb_reg_reg[0]_1 ;
  input \xsdb_reg_reg[0]_2 ;
  input \xsdb_reg_reg[0]_3 ;
  input \xsdb_reg_reg[0]_4 ;
  input \regSlaveDo_reg[15] ;
  input [2:0]s_daddr_o;
  input [2:0]Q;
  input reg_rst_i;
  input [15:0]s_di_o;
  input s_dclk_o;

  wire \G_1PIPE_IFACE.s_daddr_r_reg[0] ;
  wire [2:0]Q;
  wire \regSlaveDo_reg[15] ;
  wire reg_rst_i;
  wire [2:0]s_daddr_o;
  wire s_dclk_o;
  wire [15:0]s_di_o;
  wire \xsdb_reg[0]_i_1_n_0 ;
  wire \xsdb_reg_reg[0]_0 ;
  wire \xsdb_reg_reg[0]_1 ;
  wire \xsdb_reg_reg[0]_2 ;
  wire \xsdb_reg_reg[0]_3 ;
  wire \xsdb_reg_reg[0]_4 ;
  wire [12:0]\xsdb_reg_reg[14]_0 ;
  wire \xsdb_reg_reg[15]_0 ;
  wire \xsdb_reg_reg[1]_0 ;
  wire \xsdb_reg_reg[2]_0 ;
  wire \xsdb_reg_reg_n_0_[15] ;
  wire \xsdb_reg_reg_n_0_[1] ;
  wire \xsdb_reg_reg_n_0_[2] ;

  LUT6 #(
    .INIT(64'h00008C0000008000)) 
    \regSlaveDo[15]_i_5 
       (.I0(\xsdb_reg_reg_n_0_[15] ),
        .I1(\regSlaveDo_reg[15] ),
        .I2(s_daddr_o[2]),
        .I3(s_daddr_o[1]),
        .I4(s_daddr_o[0]),
        .I5(Q[2]),
        .O(\xsdb_reg_reg[15]_0 ));
  LUT5 #(
    .INIT(32'h0A000C00)) 
    \regSlaveDo[1]_i_7 
       (.I0(\xsdb_reg_reg_n_0_[1] ),
        .I1(Q[0]),
        .I2(s_daddr_o[0]),
        .I3(s_daddr_o[1]),
        .I4(s_daddr_o[2]),
        .O(\xsdb_reg_reg[1]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT5 #(
    .INIT(32'h0A000C00)) 
    \regSlaveDo[2]_i_5 
       (.I0(\xsdb_reg_reg_n_0_[2] ),
        .I1(Q[1]),
        .I2(s_daddr_o[0]),
        .I3(s_daddr_o[1]),
        .I4(s_daddr_o[2]),
        .O(\xsdb_reg_reg[2]_0 ));
  LUT6 #(
    .INIT(64'h0400040004000000)) 
    \xsdb_reg[0]_i_1 
       (.I0(\xsdb_reg_reg[0]_0 ),
        .I1(\G_1PIPE_IFACE.s_daddr_r_reg[0] ),
        .I2(\xsdb_reg_reg[0]_1 ),
        .I3(\xsdb_reg_reg[0]_2 ),
        .I4(\xsdb_reg_reg[0]_3 ),
        .I5(\xsdb_reg_reg[0]_4 ),
        .O(\xsdb_reg[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \xsdb_reg[0]_i_2 
       (.I0(s_daddr_o[0]),
        .I1(s_daddr_o[1]),
        .I2(s_daddr_o[2]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[0] ));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[0] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[0]),
        .Q(\xsdb_reg_reg[14]_0 [0]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[10] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[10]),
        .Q(\xsdb_reg_reg[14]_0 [8]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[11] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[11]),
        .Q(\xsdb_reg_reg[14]_0 [9]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[12] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[12]),
        .Q(\xsdb_reg_reg[14]_0 [10]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[13] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[13]),
        .Q(\xsdb_reg_reg[14]_0 [11]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[14] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[14]),
        .Q(\xsdb_reg_reg[14]_0 [12]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[15] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[15]),
        .Q(\xsdb_reg_reg_n_0_[15] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[1] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[1]),
        .Q(\xsdb_reg_reg_n_0_[1] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[2] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[2]),
        .Q(\xsdb_reg_reg_n_0_[2] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[3] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[3]),
        .Q(\xsdb_reg_reg[14]_0 [1]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[4] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[4]),
        .Q(\xsdb_reg_reg[14]_0 [2]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[5] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[5]),
        .Q(\xsdb_reg_reg[14]_0 [3]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[6] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[6]),
        .Q(\xsdb_reg_reg[14]_0 [4]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[7] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[7]),
        .Q(\xsdb_reg_reg[14]_0 [5]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[8] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[8]),
        .Q(\xsdb_reg_reg[14]_0 [6]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[9] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[0]_i_1_n_0 ),
        .D(s_di_o[9]),
        .Q(\xsdb_reg_reg[14]_0 [7]),
        .R(reg_rst_i));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg_ctl" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_ctl_758
   (\xsdb_reg_reg[0]_0 ,
    \xsdb_reg_reg[6]_0 ,
    \xsdb_reg_reg[7]_0 ,
    \xsdb_reg_reg[1]_0 ,
    Q,
    \xsdb_reg_reg[2]_0 ,
    \xsdb_reg_reg[5]_0 ,
    \xsdb_reg_reg[15]_0 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[5] ,
    \xsdb_reg_reg[0]_1 ,
    \xsdb_reg_reg[0]_2 ,
    s_dwe_o,
    ram_range00_in,
    isAddrRange01_in,
    \regSlaveDo_reg[0] ,
    \regSlaveDo_reg[0]_0 ,
    \regSlaveDo_reg[0]_1 ,
    \regSlaveDo_reg[7] ,
    \regSlaveDo_reg[6] ,
    \regSlaveDo_reg[6]_0 ,
    \regSlaveDo_reg[6]_1 ,
    \regSlaveDo_reg[7]_0 ,
    \regSlaveDo_reg[7]_1 ,
    \regSlaveDo_reg[7]_2 ,
    \regSlaveDo_reg[1] ,
    \regSlaveDo_reg[15] ,
    \regSlaveDo_reg[15]_0 ,
    \regSlaveDo_reg[15]_1 ,
    \regSlaveDo_reg[1]_0 ,
    \regSlaveDo_reg[2] ,
    \regSlaveDo_reg[2]_0 ,
    \regSlaveDo_reg[5] ,
    \regSlaveDo_reg[5]_0 ,
    \regSlaveDo_reg[5]_1 ,
    \regSlaveDo_reg[5]_2 ,
    txdiffctrl_out_o,
    \regSlaveDo_reg[15]_2 ,
    \regSlaveDo_reg[15]_3 ,
    s_daddr_o,
    \regSlaveDo_reg[7]_3 ,
    reg_rst_i,
    s_di_o,
    s_dclk_o);
  output \xsdb_reg_reg[0]_0 ;
  output \xsdb_reg_reg[6]_0 ;
  output \xsdb_reg_reg[7]_0 ;
  output \xsdb_reg_reg[1]_0 ;
  output [12:0]Q;
  output \xsdb_reg_reg[2]_0 ;
  output \xsdb_reg_reg[5]_0 ;
  output \xsdb_reg_reg[15]_0 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[5] ;
  input \xsdb_reg_reg[0]_1 ;
  input \xsdb_reg_reg[0]_2 ;
  input s_dwe_o;
  input ram_range00_in;
  input isAddrRange01_in;
  input \regSlaveDo_reg[0] ;
  input \regSlaveDo_reg[0]_0 ;
  input \regSlaveDo_reg[0]_1 ;
  input \regSlaveDo_reg[7] ;
  input \regSlaveDo_reg[6] ;
  input \regSlaveDo_reg[6]_0 ;
  input \regSlaveDo_reg[6]_1 ;
  input \regSlaveDo_reg[7]_0 ;
  input \regSlaveDo_reg[7]_1 ;
  input \regSlaveDo_reg[7]_2 ;
  input \regSlaveDo_reg[1] ;
  input \regSlaveDo_reg[15] ;
  input [6:0]\regSlaveDo_reg[15]_0 ;
  input \regSlaveDo_reg[15]_1 ;
  input \regSlaveDo_reg[1]_0 ;
  input \regSlaveDo_reg[2] ;
  input \regSlaveDo_reg[2]_0 ;
  input \regSlaveDo_reg[5] ;
  input \regSlaveDo_reg[5]_0 ;
  input \regSlaveDo_reg[5]_1 ;
  input \regSlaveDo_reg[5]_2 ;
  input [0:0]txdiffctrl_out_o;
  input \regSlaveDo_reg[15]_2 ;
  input \regSlaveDo_reg[15]_3 ;
  input [6:0]s_daddr_o;
  input \regSlaveDo_reg[7]_3 ;
  input reg_rst_i;
  input [15:0]s_di_o;
  input s_dclk_o;

  wire \G_1PIPE_IFACE.s_daddr_r_reg[5] ;
  wire [12:0]Q;
  wire isAddrRange01_in;
  wire ram_range00_in;
  wire \regSlaveDo[0]_i_2_n_0 ;
  wire \regSlaveDo[5]_i_2_n_0 ;
  wire \regSlaveDo[6]_i_2_n_0 ;
  wire \regSlaveDo[7]_i_2_n_0 ;
  wire \regSlaveDo_reg[0] ;
  wire \regSlaveDo_reg[0]_0 ;
  wire \regSlaveDo_reg[0]_1 ;
  wire \regSlaveDo_reg[15] ;
  wire [6:0]\regSlaveDo_reg[15]_0 ;
  wire \regSlaveDo_reg[15]_1 ;
  wire \regSlaveDo_reg[15]_2 ;
  wire \regSlaveDo_reg[15]_3 ;
  wire \regSlaveDo_reg[1] ;
  wire \regSlaveDo_reg[1]_0 ;
  wire \regSlaveDo_reg[2] ;
  wire \regSlaveDo_reg[2]_0 ;
  wire \regSlaveDo_reg[5] ;
  wire \regSlaveDo_reg[5]_0 ;
  wire \regSlaveDo_reg[5]_1 ;
  wire \regSlaveDo_reg[5]_2 ;
  wire \regSlaveDo_reg[6] ;
  wire \regSlaveDo_reg[6]_0 ;
  wire \regSlaveDo_reg[6]_1 ;
  wire \regSlaveDo_reg[7] ;
  wire \regSlaveDo_reg[7]_0 ;
  wire \regSlaveDo_reg[7]_1 ;
  wire \regSlaveDo_reg[7]_2 ;
  wire \regSlaveDo_reg[7]_3 ;
  wire reg_rst_i;
  wire [6:0]s_daddr_o;
  wire s_dclk_o;
  wire [15:0]s_di_o;
  wire s_dwe_o;
  wire [0:0]txdiffctrl_out_o;
  wire \xsdb_reg[4]_i_1_n_0 ;
  wire \xsdb_reg[4]_i_2_n_0 ;
  wire \xsdb_reg_reg[0]_0 ;
  wire \xsdb_reg_reg[0]_1 ;
  wire \xsdb_reg_reg[0]_2 ;
  wire \xsdb_reg_reg[15]_0 ;
  wire \xsdb_reg_reg[1]_0 ;
  wire \xsdb_reg_reg[2]_0 ;
  wire \xsdb_reg_reg[5]_0 ;
  wire \xsdb_reg_reg[6]_0 ;
  wire \xsdb_reg_reg[7]_0 ;
  wire \xsdb_reg_reg_n_0_[15] ;
  wire \xsdb_reg_reg_n_0_[6] ;
  wire \xsdb_reg_reg_n_0_[7] ;

  LUT5 #(
    .INIT(32'hFFFEAAAA)) 
    \regSlaveDo[0]_i_1 
       (.I0(\regSlaveDo[0]_i_2_n_0 ),
        .I1(\regSlaveDo_reg[0] ),
        .I2(\regSlaveDo_reg[0]_0 ),
        .I3(\regSlaveDo_reg[0]_1 ),
        .I4(\regSlaveDo_reg[7] ),
        .O(\xsdb_reg_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hA0A0A0C0A0C0A0C0)) 
    \regSlaveDo[0]_i_2 
       (.I0(Q[0]),
        .I1(\regSlaveDo_reg[15]_0 [0]),
        .I2(\regSlaveDo_reg[7]_3 ),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[0]),
        .I5(s_daddr_o[1]),
        .O(\regSlaveDo[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \regSlaveDo[15]_i_2 
       (.I0(\xsdb_reg_reg_n_0_[15] ),
        .I1(\regSlaveDo_reg[15] ),
        .I2(\regSlaveDo_reg[15]_0 [6]),
        .I3(\regSlaveDo_reg[15]_1 ),
        .I4(\regSlaveDo_reg[15]_2 ),
        .I5(\regSlaveDo_reg[15]_3 ),
        .O(\xsdb_reg_reg[15]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \regSlaveDo[1]_i_1 
       (.I0(\regSlaveDo_reg[1] ),
        .I1(Q[1]),
        .I2(\regSlaveDo_reg[15] ),
        .I3(\regSlaveDo_reg[15]_0 [1]),
        .I4(\regSlaveDo_reg[15]_1 ),
        .I5(\regSlaveDo_reg[1]_0 ),
        .O(\xsdb_reg_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \regSlaveDo[2]_i_1 
       (.I0(Q[2]),
        .I1(\regSlaveDo_reg[15] ),
        .I2(\regSlaveDo_reg[15]_0 [2]),
        .I3(\regSlaveDo_reg[15]_1 ),
        .I4(\regSlaveDo_reg[2] ),
        .I5(\regSlaveDo_reg[2]_0 ),
        .O(\xsdb_reg_reg[2]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFFFE)) 
    \regSlaveDo[5]_i_1 
       (.I0(\regSlaveDo[5]_i_2_n_0 ),
        .I1(\regSlaveDo_reg[5] ),
        .I2(\regSlaveDo_reg[5]_0 ),
        .I3(\regSlaveDo_reg[5]_1 ),
        .I4(\regSlaveDo_reg[5]_2 ),
        .I5(txdiffctrl_out_o),
        .O(\xsdb_reg_reg[5]_0 ));
  LUT6 #(
    .INIT(64'hA0A0A0C0A0C0A0C0)) 
    \regSlaveDo[5]_i_2 
       (.I0(Q[5]),
        .I1(\regSlaveDo_reg[15]_0 [3]),
        .I2(\regSlaveDo_reg[7]_3 ),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[0]),
        .I5(s_daddr_o[1]),
        .O(\regSlaveDo[5]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFEAAAA)) 
    \regSlaveDo[6]_i_1 
       (.I0(\regSlaveDo[6]_i_2_n_0 ),
        .I1(\regSlaveDo_reg[6] ),
        .I2(\regSlaveDo_reg[6]_0 ),
        .I3(\regSlaveDo_reg[6]_1 ),
        .I4(\regSlaveDo_reg[7] ),
        .O(\xsdb_reg_reg[6]_0 ));
  LUT6 #(
    .INIT(64'hA0A0A0C0A0C0A0C0)) 
    \regSlaveDo[6]_i_2 
       (.I0(\xsdb_reg_reg_n_0_[6] ),
        .I1(\regSlaveDo_reg[15]_0 [4]),
        .I2(\regSlaveDo_reg[7]_3 ),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[0]),
        .I5(s_daddr_o[1]),
        .O(\regSlaveDo[6]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFEAAAA)) 
    \regSlaveDo[7]_i_1 
       (.I0(\regSlaveDo[7]_i_2_n_0 ),
        .I1(\regSlaveDo_reg[7]_0 ),
        .I2(\regSlaveDo_reg[7]_1 ),
        .I3(\regSlaveDo_reg[7]_2 ),
        .I4(\regSlaveDo_reg[7] ),
        .O(\xsdb_reg_reg[7]_0 ));
  LUT6 #(
    .INIT(64'hA0A0A0C0A0C0A0C0)) 
    \regSlaveDo[7]_i_2 
       (.I0(\xsdb_reg_reg_n_0_[7] ),
        .I1(\regSlaveDo_reg[15]_0 [5]),
        .I2(\regSlaveDo_reg[7]_3 ),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[0]),
        .I5(s_daddr_o[1]),
        .O(\regSlaveDo[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000200000000000)) 
    \xsdb_reg[4]_i_1 
       (.I0(\xsdb_reg[4]_i_2_n_0 ),
        .I1(\xsdb_reg_reg[0]_1 ),
        .I2(\xsdb_reg_reg[0]_2 ),
        .I3(s_dwe_o),
        .I4(ram_range00_in),
        .I5(isAddrRange01_in),
        .O(\xsdb_reg[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00400000)) 
    \xsdb_reg[4]_i_2 
       (.I0(s_daddr_o[2]),
        .I1(s_daddr_o[3]),
        .I2(s_daddr_o[1]),
        .I3(s_daddr_o[6]),
        .I4(\G_1PIPE_IFACE.s_daddr_r_reg[5] ),
        .O(\xsdb_reg[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \xsdb_reg[8]_i_6 
       (.I0(s_daddr_o[5]),
        .I1(s_daddr_o[0]),
        .I2(s_daddr_o[4]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[5] ));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[0] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[0]),
        .Q(Q[0]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[10] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[10]),
        .Q(Q[8]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[11] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[11]),
        .Q(Q[9]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[12] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[12]),
        .Q(Q[10]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[13] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[13]),
        .Q(Q[11]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[14] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[14]),
        .Q(Q[12]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[15] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[15]),
        .Q(\xsdb_reg_reg_n_0_[15] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[1] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[1]),
        .Q(Q[1]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[2] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[2]),
        .Q(Q[2]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[3] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[3]),
        .Q(Q[3]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[4] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[4]),
        .Q(Q[4]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[5] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[5]),
        .Q(Q[5]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[6] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[6]),
        .Q(\xsdb_reg_reg_n_0_[6] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[7] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[7]),
        .Q(\xsdb_reg_reg_n_0_[7] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[8] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[8]),
        .Q(Q[6]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[9] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[4]_i_1_n_0 ),
        .D(s_di_o[9]),
        .Q(Q[7]),
        .R(reg_rst_i));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg_ctl" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_ctl_759
   (\G_1PIPE_IFACE.s_daddr_r_reg[0] ,
    Q,
    \xsdb_reg_reg[0]_0 ,
    \xsdb_reg_reg[0]_1 ,
    s_dwe_o,
    ram_range00_in,
    isAddrRange01_in,
    s_daddr_o,
    reg_rst_i,
    s_di_o,
    s_dclk_o);
  output \G_1PIPE_IFACE.s_daddr_r_reg[0] ;
  output [15:0]Q;
  input \xsdb_reg_reg[0]_0 ;
  input \xsdb_reg_reg[0]_1 ;
  input s_dwe_o;
  input ram_range00_in;
  input isAddrRange01_in;
  input [6:0]s_daddr_o;
  input reg_rst_i;
  input [15:0]s_di_o;
  input s_dclk_o;

  wire \G_1PIPE_IFACE.s_daddr_r_reg[0] ;
  wire [15:0]Q;
  wire isAddrRange01_in;
  wire ram_range00_in;
  wire reg_rst_i;
  wire [6:0]s_daddr_o;
  wire s_dclk_o;
  wire [15:0]s_di_o;
  wire s_dwe_o;
  wire \xsdb_reg[10]_i_1_n_0 ;
  wire \xsdb_reg[10]_i_2_n_0 ;
  wire \xsdb_reg_reg[0]_0 ;
  wire \xsdb_reg_reg[0]_1 ;

  LUT6 #(
    .INIT(64'h0000200000000000)) 
    \xsdb_reg[10]_i_1 
       (.I0(\xsdb_reg[10]_i_2_n_0 ),
        .I1(\xsdb_reg_reg[0]_0 ),
        .I2(\xsdb_reg_reg[0]_1 ),
        .I3(s_dwe_o),
        .I4(ram_range00_in),
        .I5(isAddrRange01_in),
        .O(\xsdb_reg[10]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00400000)) 
    \xsdb_reg[10]_i_2 
       (.I0(s_daddr_o[2]),
        .I1(s_daddr_o[3]),
        .I2(s_daddr_o[4]),
        .I3(s_daddr_o[6]),
        .I4(\G_1PIPE_IFACE.s_daddr_r_reg[0] ),
        .O(\xsdb_reg[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \xsdb_reg[5]_i_2 
       (.I0(s_daddr_o[0]),
        .I1(s_daddr_o[1]),
        .I2(s_daddr_o[5]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[0] ));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[0] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[0]),
        .Q(Q[0]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[10] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[10]),
        .Q(Q[10]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[11] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[11]),
        .Q(Q[11]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[12] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[12]),
        .Q(Q[12]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[13] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[13]),
        .Q(Q[13]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[14] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[14]),
        .Q(Q[14]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[15] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[15]),
        .Q(Q[15]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[1] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[1]),
        .Q(Q[1]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[2] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[2]),
        .Q(Q[2]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[3] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[3]),
        .Q(Q[3]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[4] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[4]),
        .Q(Q[4]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[5] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[5]),
        .Q(Q[5]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[6] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[6]),
        .Q(Q[6]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[7] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[7]),
        .Q(Q[7]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[8] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[8]),
        .Q(Q[8]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[9] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[10]_i_1_n_0 ),
        .D(s_di_o[9]),
        .Q(Q[9]),
        .R(reg_rst_i));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg_ctl" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_ctl_763
   (\xsdb_reg_reg[0]_0 ,
    Q,
    \xsdb_reg_reg[6]_0 ,
    \xsdb_reg_reg[7]_0 ,
    \xsdb_reg_reg[0]_1 ,
    \xsdb_reg_reg[0]_2 ,
    \xsdb_reg_reg[0]_3 ,
    \xsdb_reg_reg[0]_4 ,
    \xsdb_reg_reg[0]_5 ,
    \xsdb_reg_reg[0]_6 ,
    s_daddr_o,
    \regSlaveDo_reg[0] ,
    \regSlaveDo_reg[7] ,
    \regSlaveDo_reg[7]_0 ,
    reg_rst_i,
    D,
    s_dclk_o);
  output \xsdb_reg_reg[0]_0 ;
  output [14:0]Q;
  output \xsdb_reg_reg[6]_0 ;
  output \xsdb_reg_reg[7]_0 ;
  input \xsdb_reg_reg[0]_1 ;
  input \xsdb_reg_reg[0]_2 ;
  input \xsdb_reg_reg[0]_3 ;
  input \xsdb_reg_reg[0]_4 ;
  input \xsdb_reg_reg[0]_5 ;
  input \xsdb_reg_reg[0]_6 ;
  input [2:0]s_daddr_o;
  input [0:0]\regSlaveDo_reg[0] ;
  input \regSlaveDo_reg[7] ;
  input [1:0]\regSlaveDo_reg[7]_0 ;
  input reg_rst_i;
  input [15:0]D;
  input s_dclk_o;

  wire [15:0]D;
  wire [14:0]Q;
  wire [0:0]\regSlaveDo_reg[0] ;
  wire \regSlaveDo_reg[7] ;
  wire [1:0]\regSlaveDo_reg[7]_0 ;
  wire reg_rst_i;
  wire [2:0]s_daddr_o;
  wire s_dclk_o;
  wire \xsdb_reg[5]_i_1_n_0 ;
  wire \xsdb_reg_reg[0]_0 ;
  wire \xsdb_reg_reg[0]_1 ;
  wire \xsdb_reg_reg[0]_2 ;
  wire \xsdb_reg_reg[0]_3 ;
  wire \xsdb_reg_reg[0]_4 ;
  wire \xsdb_reg_reg[0]_5 ;
  wire \xsdb_reg_reg[0]_6 ;
  wire \xsdb_reg_reg[6]_0 ;
  wire \xsdb_reg_reg[7]_0 ;
  wire \xsdb_reg_reg_n_0_[7] ;

  LUT6 #(
    .INIT(64'h0000000030080008)) 
    \regSlaveDo[0]_i_4 
       (.I0(Q[0]),
        .I1(s_daddr_o[1]),
        .I2(s_daddr_o[2]),
        .I3(s_daddr_o[0]),
        .I4(\regSlaveDo_reg[0] ),
        .I5(\regSlaveDo_reg[7] ),
        .O(\xsdb_reg_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h0000000002300200)) 
    \regSlaveDo[6]_i_4 
       (.I0(Q[6]),
        .I1(s_daddr_o[2]),
        .I2(s_daddr_o[0]),
        .I3(s_daddr_o[1]),
        .I4(\regSlaveDo_reg[7]_0 [0]),
        .I5(\regSlaveDo_reg[7] ),
        .O(\xsdb_reg_reg[6]_0 ));
  LUT6 #(
    .INIT(64'h0000000002300200)) 
    \regSlaveDo[7]_i_4 
       (.I0(\xsdb_reg_reg_n_0_[7] ),
        .I1(s_daddr_o[2]),
        .I2(s_daddr_o[0]),
        .I3(s_daddr_o[1]),
        .I4(\regSlaveDo_reg[7]_0 [1]),
        .I5(\regSlaveDo_reg[7] ),
        .O(\xsdb_reg_reg[7]_0 ));
  LUT6 #(
    .INIT(64'h0400040004000000)) 
    \xsdb_reg[5]_i_1 
       (.I0(\xsdb_reg_reg[0]_1 ),
        .I1(\xsdb_reg_reg[0]_2 ),
        .I2(\xsdb_reg_reg[0]_3 ),
        .I3(\xsdb_reg_reg[0]_4 ),
        .I4(\xsdb_reg_reg[0]_5 ),
        .I5(\xsdb_reg_reg[0]_6 ),
        .O(\xsdb_reg[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[0] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[0]),
        .Q(Q[0]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[10] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[10]),
        .Q(Q[9]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[11] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[11]),
        .Q(Q[10]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[12] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[12]),
        .Q(Q[11]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[13] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[13]),
        .Q(Q[12]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[14] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[14]),
        .Q(Q[13]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[15] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[15]),
        .Q(Q[14]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[1] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[1]),
        .Q(Q[1]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[2] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[2]),
        .Q(Q[2]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[3] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[3]),
        .Q(Q[3]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[4] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[4]),
        .Q(Q[4]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[5] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[5]),
        .Q(Q[5]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[6] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[6]),
        .Q(Q[6]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[7] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[7]),
        .Q(\xsdb_reg_reg_n_0_[7] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[8] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[8]),
        .Q(Q[7]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[9] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[5]_i_1_n_0 ),
        .D(D[9]),
        .Q(Q[8]),
        .R(reg_rst_i));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg_ctl" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_ctl_764
   (\G_1PIPE_IFACE.s_daddr_r_reg[5] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[9] ,
    \G_1PIPE_IFACE.s_dwe_r_reg ,
    \G_1PIPE_IFACE.s_daddr_r_reg[10] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[0] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[7] ,
    ram_range00_in,
    \xsdb_reg_reg[3]_0 ,
    \xsdb_reg_reg[4]_0 ,
    \xsdb_reg_reg[5]_0 ,
    \xsdb_reg_reg[8]_0 ,
    \xsdb_reg_reg[9]_0 ,
    \xsdb_reg_reg[10]_0 ,
    \xsdb_reg_reg[11]_0 ,
    \xsdb_reg_reg[12]_0 ,
    \xsdb_reg_reg[13]_0 ,
    \xsdb_reg_reg[14]_0 ,
    \xsdb_reg_reg[15]_0 ,
    \xsdb_reg_reg[0]_0 ,
    s_daddr_o,
    s_dwe_o,
    \xsdb_reg_reg[0]_1 ,
    \regSlaveDo_reg[3] ,
    \regSlaveDo_reg[14] ,
    Q,
    \regSlaveDo_reg[14]_0 ,
    \regSlaveDo_reg[14]_1 ,
    \regSlaveDo_reg[14]_2 ,
    \regSlaveDo_reg[14]_3 ,
    \regSlaveDo_reg[14]_4 ,
    \regSlaveDo_reg[3]_0 ,
    \regSlaveDo_reg[4] ,
    \regSlaveDo_reg[4]_0 ,
    \regSlaveDo_reg[14]_5 ,
    \regSlaveDo_reg[14]_6 ,
    \regSlaveDo_reg[8] ,
    \regSlaveDo_reg[9] ,
    \regSlaveDo_reg[10] ,
    \regSlaveDo_reg[11] ,
    \regSlaveDo_reg[12] ,
    \regSlaveDo_reg[13] ,
    \regSlaveDo_reg[14]_7 ,
    \regSlaveDo[14]_i_2_0 ,
    reg_rst_i,
    D,
    s_dclk_o);
  output \G_1PIPE_IFACE.s_daddr_r_reg[5] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[9] ;
  output \G_1PIPE_IFACE.s_dwe_r_reg ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[10] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[0] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[7] ;
  output ram_range00_in;
  output \xsdb_reg_reg[3]_0 ;
  output \xsdb_reg_reg[4]_0 ;
  output \xsdb_reg_reg[5]_0 ;
  output \xsdb_reg_reg[8]_0 ;
  output \xsdb_reg_reg[9]_0 ;
  output \xsdb_reg_reg[10]_0 ;
  output \xsdb_reg_reg[11]_0 ;
  output \xsdb_reg_reg[12]_0 ;
  output \xsdb_reg_reg[13]_0 ;
  output \xsdb_reg_reg[14]_0 ;
  output [5:0]\xsdb_reg_reg[15]_0 ;
  input \xsdb_reg_reg[0]_0 ;
  input [16:0]s_daddr_o;
  input s_dwe_o;
  input \xsdb_reg_reg[0]_1 ;
  input \regSlaveDo_reg[3] ;
  input \regSlaveDo_reg[14] ;
  input [8:0]Q;
  input \regSlaveDo_reg[14]_0 ;
  input [8:0]\regSlaveDo_reg[14]_1 ;
  input \regSlaveDo_reg[14]_2 ;
  input [9:0]\regSlaveDo_reg[14]_3 ;
  input \regSlaveDo_reg[14]_4 ;
  input \regSlaveDo_reg[3]_0 ;
  input \regSlaveDo_reg[4] ;
  input \regSlaveDo_reg[4]_0 ;
  input [7:0]\regSlaveDo_reg[14]_5 ;
  input \regSlaveDo_reg[14]_6 ;
  input \regSlaveDo_reg[8] ;
  input \regSlaveDo_reg[9] ;
  input \regSlaveDo_reg[10] ;
  input \regSlaveDo_reg[11] ;
  input \regSlaveDo_reg[12] ;
  input \regSlaveDo_reg[13] ;
  input \regSlaveDo_reg[14]_7 ;
  input [7:0]\regSlaveDo[14]_i_2_0 ;
  input reg_rst_i;
  input [15:0]D;
  input s_dclk_o;

  wire [15:0]D;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[0] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[10] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[5] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[7] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[9] ;
  wire \G_1PIPE_IFACE.s_dwe_r_reg ;
  wire [8:0]Q;
  wire ram_range00_in;
  wire \regSlaveDo[10]_i_2_n_0 ;
  wire \regSlaveDo[10]_i_4_n_0 ;
  wire \regSlaveDo[11]_i_2_n_0 ;
  wire \regSlaveDo[11]_i_4_n_0 ;
  wire \regSlaveDo[12]_i_2_n_0 ;
  wire \regSlaveDo[12]_i_4_n_0 ;
  wire \regSlaveDo[13]_i_2_n_0 ;
  wire \regSlaveDo[13]_i_4_n_0 ;
  wire [7:0]\regSlaveDo[14]_i_2_0 ;
  wire \regSlaveDo[14]_i_2_n_0 ;
  wire \regSlaveDo[14]_i_4_n_0 ;
  wire \regSlaveDo[3]_i_2_n_0 ;
  wire \regSlaveDo[4]_i_2_n_0 ;
  wire \regSlaveDo[5]_i_8_n_0 ;
  wire \regSlaveDo[8]_i_2_n_0 ;
  wire \regSlaveDo[8]_i_4_n_0 ;
  wire \regSlaveDo[9]_i_2_n_0 ;
  wire \regSlaveDo[9]_i_4_n_0 ;
  wire \regSlaveDo_reg[10] ;
  wire \regSlaveDo_reg[11] ;
  wire \regSlaveDo_reg[12] ;
  wire \regSlaveDo_reg[13] ;
  wire \regSlaveDo_reg[14] ;
  wire \regSlaveDo_reg[14]_0 ;
  wire [8:0]\regSlaveDo_reg[14]_1 ;
  wire \regSlaveDo_reg[14]_2 ;
  wire [9:0]\regSlaveDo_reg[14]_3 ;
  wire \regSlaveDo_reg[14]_4 ;
  wire [7:0]\regSlaveDo_reg[14]_5 ;
  wire \regSlaveDo_reg[14]_6 ;
  wire \regSlaveDo_reg[14]_7 ;
  wire \regSlaveDo_reg[3] ;
  wire \regSlaveDo_reg[3]_0 ;
  wire \regSlaveDo_reg[4] ;
  wire \regSlaveDo_reg[4]_0 ;
  wire \regSlaveDo_reg[8] ;
  wire \regSlaveDo_reg[9] ;
  wire reg_rst_i;
  wire [16:0]s_daddr_o;
  wire s_dclk_o;
  wire s_dwe_o;
  wire \xsdb_reg[1]_i_1_n_0 ;
  wire \xsdb_reg[1]_i_7_n_0 ;
  wire \xsdb_reg_reg[0]_0 ;
  wire \xsdb_reg_reg[0]_1 ;
  wire \xsdb_reg_reg[10]_0 ;
  wire \xsdb_reg_reg[11]_0 ;
  wire \xsdb_reg_reg[12]_0 ;
  wire \xsdb_reg_reg[13]_0 ;
  wire \xsdb_reg_reg[14]_0 ;
  wire [5:0]\xsdb_reg_reg[15]_0 ;
  wire \xsdb_reg_reg[3]_0 ;
  wire \xsdb_reg_reg[4]_0 ;
  wire \xsdb_reg_reg[5]_0 ;
  wire \xsdb_reg_reg[8]_0 ;
  wire \xsdb_reg_reg[9]_0 ;
  wire \xsdb_reg_reg_n_0_[10] ;
  wire \xsdb_reg_reg_n_0_[11] ;
  wire \xsdb_reg_reg_n_0_[12] ;
  wire \xsdb_reg_reg_n_0_[13] ;
  wire \xsdb_reg_reg_n_0_[14] ;
  wire \xsdb_reg_reg_n_0_[3] ;
  wire \xsdb_reg_reg_n_0_[4] ;
  wire \xsdb_reg_reg_n_0_[5] ;
  wire \xsdb_reg_reg_n_0_[8] ;
  wire \xsdb_reg_reg_n_0_[9] ;

  LUT6 #(
    .INIT(64'hFFFFFEEEFEEEFEEE)) 
    \regSlaveDo[10]_i_1 
       (.I0(\regSlaveDo[10]_i_2_n_0 ),
        .I1(\regSlaveDo_reg[10] ),
        .I2(\regSlaveDo_reg[14] ),
        .I3(Q[4]),
        .I4(\regSlaveDo_reg[14]_0 ),
        .I5(\regSlaveDo_reg[14]_1 [4]),
        .O(\xsdb_reg_reg[10]_0 ));
  LUT6 #(
    .INIT(64'hAAAAA888A888A888)) 
    \regSlaveDo[10]_i_2 
       (.I0(\regSlaveDo_reg[14]_2 ),
        .I1(\regSlaveDo[10]_i_4_n_0 ),
        .I2(\regSlaveDo_reg[14]_5 [3]),
        .I3(\regSlaveDo_reg[14]_6 ),
        .I4(\regSlaveDo_reg[14]_3 [5]),
        .I5(\regSlaveDo_reg[14]_4 ),
        .O(\regSlaveDo[10]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000A0C00)) 
    \regSlaveDo[10]_i_4 
       (.I0(\xsdb_reg_reg_n_0_[10] ),
        .I1(\regSlaveDo[14]_i_2_0 [3]),
        .I2(s_daddr_o[1]),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[0]),
        .O(\regSlaveDo[10]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEEEFEEEFEEE)) 
    \regSlaveDo[11]_i_1 
       (.I0(\regSlaveDo[11]_i_2_n_0 ),
        .I1(\regSlaveDo_reg[11] ),
        .I2(\regSlaveDo_reg[14] ),
        .I3(Q[5]),
        .I4(\regSlaveDo_reg[14]_0 ),
        .I5(\regSlaveDo_reg[14]_1 [5]),
        .O(\xsdb_reg_reg[11]_0 ));
  LUT6 #(
    .INIT(64'hAAAAA888A888A888)) 
    \regSlaveDo[11]_i_2 
       (.I0(\regSlaveDo_reg[14]_2 ),
        .I1(\regSlaveDo[11]_i_4_n_0 ),
        .I2(\regSlaveDo_reg[14]_5 [4]),
        .I3(\regSlaveDo_reg[14]_6 ),
        .I4(\regSlaveDo_reg[14]_3 [6]),
        .I5(\regSlaveDo_reg[14]_4 ),
        .O(\regSlaveDo[11]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000A0C00)) 
    \regSlaveDo[11]_i_4 
       (.I0(\xsdb_reg_reg_n_0_[11] ),
        .I1(\regSlaveDo[14]_i_2_0 [4]),
        .I2(s_daddr_o[1]),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[0]),
        .O(\regSlaveDo[11]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEEEFEEEFEEE)) 
    \regSlaveDo[12]_i_1 
       (.I0(\regSlaveDo[12]_i_2_n_0 ),
        .I1(\regSlaveDo_reg[12] ),
        .I2(\regSlaveDo_reg[14] ),
        .I3(Q[6]),
        .I4(\regSlaveDo_reg[14]_0 ),
        .I5(\regSlaveDo_reg[14]_1 [6]),
        .O(\xsdb_reg_reg[12]_0 ));
  LUT6 #(
    .INIT(64'hAAAAA888A888A888)) 
    \regSlaveDo[12]_i_2 
       (.I0(\regSlaveDo_reg[14]_2 ),
        .I1(\regSlaveDo[12]_i_4_n_0 ),
        .I2(\regSlaveDo_reg[14]_5 [5]),
        .I3(\regSlaveDo_reg[14]_6 ),
        .I4(\regSlaveDo_reg[14]_3 [7]),
        .I5(\regSlaveDo_reg[14]_4 ),
        .O(\regSlaveDo[12]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000A0C00)) 
    \regSlaveDo[12]_i_4 
       (.I0(\xsdb_reg_reg_n_0_[12] ),
        .I1(\regSlaveDo[14]_i_2_0 [5]),
        .I2(s_daddr_o[1]),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[0]),
        .O(\regSlaveDo[12]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEEEFEEEFEEE)) 
    \regSlaveDo[13]_i_1 
       (.I0(\regSlaveDo[13]_i_2_n_0 ),
        .I1(\regSlaveDo_reg[13] ),
        .I2(\regSlaveDo_reg[14] ),
        .I3(Q[7]),
        .I4(\regSlaveDo_reg[14]_0 ),
        .I5(\regSlaveDo_reg[14]_1 [7]),
        .O(\xsdb_reg_reg[13]_0 ));
  LUT6 #(
    .INIT(64'hAAAAA888A888A888)) 
    \regSlaveDo[13]_i_2 
       (.I0(\regSlaveDo_reg[14]_2 ),
        .I1(\regSlaveDo[13]_i_4_n_0 ),
        .I2(\regSlaveDo_reg[14]_5 [6]),
        .I3(\regSlaveDo_reg[14]_6 ),
        .I4(\regSlaveDo_reg[14]_3 [8]),
        .I5(\regSlaveDo_reg[14]_4 ),
        .O(\regSlaveDo[13]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000A0C00)) 
    \regSlaveDo[13]_i_4 
       (.I0(\xsdb_reg_reg_n_0_[13] ),
        .I1(\regSlaveDo[14]_i_2_0 [6]),
        .I2(s_daddr_o[1]),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[0]),
        .O(\regSlaveDo[13]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEEEFEEEFEEE)) 
    \regSlaveDo[14]_i_1 
       (.I0(\regSlaveDo[14]_i_2_n_0 ),
        .I1(\regSlaveDo_reg[14]_7 ),
        .I2(\regSlaveDo_reg[14] ),
        .I3(Q[8]),
        .I4(\regSlaveDo_reg[14]_0 ),
        .I5(\regSlaveDo_reg[14]_1 [8]),
        .O(\xsdb_reg_reg[14]_0 ));
  LUT6 #(
    .INIT(64'hAAAAA888A888A888)) 
    \regSlaveDo[14]_i_2 
       (.I0(\regSlaveDo_reg[14]_2 ),
        .I1(\regSlaveDo[14]_i_4_n_0 ),
        .I2(\regSlaveDo_reg[14]_5 [7]),
        .I3(\regSlaveDo_reg[14]_6 ),
        .I4(\regSlaveDo_reg[14]_3 [9]),
        .I5(\regSlaveDo_reg[14]_4 ),
        .O(\regSlaveDo[14]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000A0C00)) 
    \regSlaveDo[14]_i_4 
       (.I0(\xsdb_reg_reg_n_0_[14] ),
        .I1(\regSlaveDo[14]_i_2_0 [7]),
        .I2(s_daddr_o[1]),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[0]),
        .O(\regSlaveDo[14]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT4 #(
    .INIT(16'hFEFF)) 
    \regSlaveDo[15]_i_1 
       (.I0(s_daddr_o[9]),
        .I1(s_daddr_o[8]),
        .I2(s_daddr_o[7]),
        .I3(s_daddr_o[10]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[9] ));
  LUT6 #(
    .INIT(64'hFFFFFEEEFEEEFEEE)) 
    \regSlaveDo[3]_i_1 
       (.I0(\regSlaveDo[3]_i_2_n_0 ),
        .I1(\regSlaveDo_reg[3] ),
        .I2(\regSlaveDo_reg[14] ),
        .I3(Q[0]),
        .I4(\regSlaveDo_reg[14]_0 ),
        .I5(\regSlaveDo_reg[14]_1 [0]),
        .O(\xsdb_reg_reg[3]_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA808080)) 
    \regSlaveDo[3]_i_2 
       (.I0(\regSlaveDo_reg[14]_2 ),
        .I1(\xsdb_reg_reg_n_0_[3] ),
        .I2(\G_1PIPE_IFACE.s_daddr_r_reg[5] ),
        .I3(\regSlaveDo_reg[14]_3 [0]),
        .I4(\regSlaveDo_reg[14]_4 ),
        .I5(\regSlaveDo_reg[3]_0 ),
        .O(\regSlaveDo[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEEEFEEEFEEE)) 
    \regSlaveDo[4]_i_1 
       (.I0(\regSlaveDo[4]_i_2_n_0 ),
        .I1(\regSlaveDo_reg[4] ),
        .I2(\regSlaveDo_reg[14] ),
        .I3(Q[1]),
        .I4(\regSlaveDo_reg[14]_0 ),
        .I5(\regSlaveDo_reg[14]_1 [1]),
        .O(\xsdb_reg_reg[4]_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA808080)) 
    \regSlaveDo[4]_i_2 
       (.I0(\regSlaveDo_reg[14]_2 ),
        .I1(\xsdb_reg_reg_n_0_[4] ),
        .I2(\G_1PIPE_IFACE.s_daddr_r_reg[5] ),
        .I3(\regSlaveDo_reg[14]_3 [1]),
        .I4(\regSlaveDo_reg[14]_4 ),
        .I5(\regSlaveDo_reg[4]_0 ),
        .O(\regSlaveDo[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA888A888A888)) 
    \regSlaveDo[5]_i_4 
       (.I0(\regSlaveDo_reg[14]_2 ),
        .I1(\regSlaveDo[5]_i_8_n_0 ),
        .I2(\regSlaveDo_reg[14]_5 [0]),
        .I3(\regSlaveDo_reg[14]_6 ),
        .I4(\regSlaveDo_reg[14]_3 [2]),
        .I5(\regSlaveDo_reg[14]_4 ),
        .O(\xsdb_reg_reg[5]_0 ));
  LUT5 #(
    .INIT(32'h000A0C00)) 
    \regSlaveDo[5]_i_8 
       (.I0(\xsdb_reg_reg_n_0_[5] ),
        .I1(\regSlaveDo[14]_i_2_0 [0]),
        .I2(s_daddr_o[1]),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[0]),
        .O(\regSlaveDo[5]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEEEFEEEFEEE)) 
    \regSlaveDo[8]_i_1 
       (.I0(\regSlaveDo[8]_i_2_n_0 ),
        .I1(\regSlaveDo_reg[8] ),
        .I2(\regSlaveDo_reg[14] ),
        .I3(Q[2]),
        .I4(\regSlaveDo_reg[14]_0 ),
        .I5(\regSlaveDo_reg[14]_1 [2]),
        .O(\xsdb_reg_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hAAAAA888A888A888)) 
    \regSlaveDo[8]_i_2 
       (.I0(\regSlaveDo_reg[14]_2 ),
        .I1(\regSlaveDo[8]_i_4_n_0 ),
        .I2(\regSlaveDo_reg[14]_5 [1]),
        .I3(\regSlaveDo_reg[14]_6 ),
        .I4(\regSlaveDo_reg[14]_3 [3]),
        .I5(\regSlaveDo_reg[14]_4 ),
        .O(\regSlaveDo[8]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT5 #(
    .INIT(32'h000A0C00)) 
    \regSlaveDo[8]_i_4 
       (.I0(\xsdb_reg_reg_n_0_[8] ),
        .I1(\regSlaveDo[14]_i_2_0 [1]),
        .I2(s_daddr_o[1]),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[0]),
        .O(\regSlaveDo[8]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEEEFEEEFEEE)) 
    \regSlaveDo[9]_i_1 
       (.I0(\regSlaveDo[9]_i_2_n_0 ),
        .I1(\regSlaveDo_reg[9] ),
        .I2(\regSlaveDo_reg[14] ),
        .I3(Q[3]),
        .I4(\regSlaveDo_reg[14]_0 ),
        .I5(\regSlaveDo_reg[14]_1 [3]),
        .O(\xsdb_reg_reg[9]_0 ));
  LUT6 #(
    .INIT(64'hAAAAA888A888A888)) 
    \regSlaveDo[9]_i_2 
       (.I0(\regSlaveDo_reg[14]_2 ),
        .I1(\regSlaveDo[9]_i_4_n_0 ),
        .I2(\regSlaveDo_reg[14]_5 [2]),
        .I3(\regSlaveDo_reg[14]_6 ),
        .I4(\regSlaveDo_reg[14]_3 [4]),
        .I5(\regSlaveDo_reg[14]_4 ),
        .O(\regSlaveDo[9]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000A0C00)) 
    \regSlaveDo[9]_i_4 
       (.I0(\xsdb_reg_reg_n_0_[9] ),
        .I1(\regSlaveDo[14]_i_2_0 [2]),
        .I2(s_daddr_o[1]),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[0]),
        .O(\regSlaveDo[9]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0400040004000000)) 
    \xsdb_reg[1]_i_1 
       (.I0(\xsdb_reg_reg[0]_0 ),
        .I1(\G_1PIPE_IFACE.s_daddr_r_reg[5] ),
        .I2(\G_1PIPE_IFACE.s_daddr_r_reg[9] ),
        .I3(\G_1PIPE_IFACE.s_dwe_r_reg ),
        .I4(\G_1PIPE_IFACE.s_daddr_r_reg[10] ),
        .I5(\G_1PIPE_IFACE.s_daddr_r_reg[0] ),
        .O(\xsdb_reg[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \xsdb_reg[1]_i_3 
       (.I0(s_daddr_o[5]),
        .I1(s_daddr_o[0]),
        .I2(s_daddr_o[1]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[5] ));
  LUT5 #(
    .INIT(32'h44040404)) 
    \xsdb_reg[1]_i_4 
       (.I0(ram_range00_in),
        .I1(s_dwe_o),
        .I2(s_daddr_o[10]),
        .I3(\xsdb_reg[1]_i_7_n_0 ),
        .I4(\xsdb_reg_reg[0]_1 ),
        .O(\G_1PIPE_IFACE.s_dwe_r_reg ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAAAAA8)) 
    \xsdb_reg[1]_i_5 
       (.I0(s_daddr_o[10]),
        .I1(s_daddr_o[6]),
        .I2(s_daddr_o[3]),
        .I3(s_daddr_o[4]),
        .I4(s_daddr_o[2]),
        .I5(ram_range00_in),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[10] ));
  LUT5 #(
    .INIT(32'hFF00FE00)) 
    \xsdb_reg[1]_i_6 
       (.I0(s_daddr_o[0]),
        .I1(s_daddr_o[5]),
        .I2(s_daddr_o[1]),
        .I3(s_daddr_o[10]),
        .I4(\G_1PIPE_IFACE.s_daddr_r_reg[7] ),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[0] ));
  LUT3 #(
    .INIT(8'h01)) 
    \xsdb_reg[1]_i_7 
       (.I0(s_daddr_o[9]),
        .I1(s_daddr_o[8]),
        .I2(s_daddr_o[7]),
        .O(\xsdb_reg[1]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \xsdb_reg[1]_i_9 
       (.I0(s_daddr_o[7]),
        .I1(s_daddr_o[8]),
        .I2(s_daddr_o[9]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[7] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \xsdb_reg[8]_i_4 
       (.I0(s_daddr_o[14]),
        .I1(s_daddr_o[15]),
        .I2(s_daddr_o[13]),
        .I3(s_daddr_o[12]),
        .I4(s_daddr_o[16]),
        .I5(s_daddr_o[11]),
        .O(ram_range00_in));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[0] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[0]),
        .Q(\xsdb_reg_reg[15]_0 [0]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[10] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[10]),
        .Q(\xsdb_reg_reg_n_0_[10] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[11] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[11]),
        .Q(\xsdb_reg_reg_n_0_[11] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[12] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[12]),
        .Q(\xsdb_reg_reg_n_0_[12] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[13] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[13]),
        .Q(\xsdb_reg_reg_n_0_[13] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[14] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[14]),
        .Q(\xsdb_reg_reg_n_0_[14] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[15] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[15]),
        .Q(\xsdb_reg_reg[15]_0 [5]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[1] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[1]),
        .Q(\xsdb_reg_reg[15]_0 [1]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[2] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[2]),
        .Q(\xsdb_reg_reg[15]_0 [2]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[3] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[3]),
        .Q(\xsdb_reg_reg_n_0_[3] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[4] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[4]),
        .Q(\xsdb_reg_reg_n_0_[4] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[5] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[5]),
        .Q(\xsdb_reg_reg_n_0_[5] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[6] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[6]),
        .Q(\xsdb_reg_reg[15]_0 [3]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[7] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[7]),
        .Q(\xsdb_reg_reg[15]_0 [4]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[8] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[8]),
        .Q(\xsdb_reg_reg_n_0_[8] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[9] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[1]_i_1_n_0 ),
        .D(D[9]),
        .Q(\xsdb_reg_reg_n_0_[9] ),
        .R(reg_rst_i));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg_ctl" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_ctl__parameterized0
   (\G_1PIPE_IFACE.s_daddr_r_reg[9] ,
    isAddrRange01_in,
    \G_1PIPE_IFACE.s_daddr_r_reg[6] ,
    \xsdb_reg_reg[6]_0 ,
    Q,
    \xsdb_reg_reg[7]_0 ,
    \xsdb_reg_reg[0]_0 ,
    \xsdb_reg_reg[15]_0 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[5] ,
    \xsdb_reg_reg[2]_0 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[4] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[4]_0 ,
    \xsdb_reg_reg[5]_0 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[4]_1 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[4]_2 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[4]_3 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[4]_4 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[4]_5 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[4]_6 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[4]_7 ,
    \xsdb_reg_reg[0]_1 ,
    s_dwe_o,
    ram_range00_in,
    \xsdb_reg_reg[0]_2 ,
    s_daddr_o,
    \regSlaveDo_reg[5] ,
    \regSlaveDo_reg[7] ,
    \regSlaveDo_reg[7]_0 ,
    \regSlaveDo_reg[0] ,
    \regSlaveDo_reg[0]_0 ,
    \regSlaveDo_reg[0]_1 ,
    \regSlaveDo_reg[0]_2 ,
    \regSlaveDo_reg[0]_3 ,
    \regSlaveDo_reg[14] ,
    \regSlaveDo_reg[15] ,
    \regSlaveDo_reg[15]_0 ,
    \regSlaveDo_reg[2] ,
    \regSlaveDo_reg[2]_0 ,
    \regSlaveDo_reg[5]_0 ,
    \regSlaveDo_reg[5]_1 ,
    reg_rst_i,
    D,
    s_dclk_o);
  output \G_1PIPE_IFACE.s_daddr_r_reg[9] ;
  output isAddrRange01_in;
  output \G_1PIPE_IFACE.s_daddr_r_reg[6] ;
  output \xsdb_reg_reg[6]_0 ;
  output [6:0]Q;
  output \xsdb_reg_reg[7]_0 ;
  output \xsdb_reg_reg[0]_0 ;
  output \xsdb_reg_reg[15]_0 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[5] ;
  output \xsdb_reg_reg[2]_0 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[4] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[4]_0 ;
  output \xsdb_reg_reg[5]_0 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[4]_1 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[4]_2 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[4]_3 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[4]_4 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[4]_5 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[4]_6 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[4]_7 ;
  input \xsdb_reg_reg[0]_1 ;
  input s_dwe_o;
  input ram_range00_in;
  input \xsdb_reg_reg[0]_2 ;
  input [10:0]s_daddr_o;
  input \regSlaveDo_reg[5] ;
  input \regSlaveDo_reg[7] ;
  input [1:0]\regSlaveDo_reg[7]_0 ;
  input \regSlaveDo_reg[0] ;
  input \regSlaveDo_reg[0]_0 ;
  input \regSlaveDo_reg[0]_1 ;
  input \regSlaveDo_reg[0]_2 ;
  input \regSlaveDo_reg[0]_3 ;
  input \regSlaveDo_reg[14] ;
  input \regSlaveDo_reg[15] ;
  input [0:0]\regSlaveDo_reg[15]_0 ;
  input [0:0]\regSlaveDo_reg[2] ;
  input \regSlaveDo_reg[2]_0 ;
  input \regSlaveDo_reg[5]_0 ;
  input \regSlaveDo_reg[5]_1 ;
  input reg_rst_i;
  input [15:0]D;
  input s_dclk_o;

  wire [15:0]D;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[4] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[4]_0 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[4]_1 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[4]_2 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[4]_3 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[4]_4 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[4]_5 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[4]_6 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[4]_7 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[5] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[6] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[9] ;
  wire [6:0]Q;
  wire isAddrRange01_in;
  wire ram_range00_in;
  wire \regSlaveDo_reg[0] ;
  wire \regSlaveDo_reg[0]_0 ;
  wire \regSlaveDo_reg[0]_1 ;
  wire \regSlaveDo_reg[0]_2 ;
  wire \regSlaveDo_reg[0]_3 ;
  wire \regSlaveDo_reg[14] ;
  wire \regSlaveDo_reg[15] ;
  wire [0:0]\regSlaveDo_reg[15]_0 ;
  wire [0:0]\regSlaveDo_reg[2] ;
  wire \regSlaveDo_reg[2]_0 ;
  wire \regSlaveDo_reg[5] ;
  wire \regSlaveDo_reg[5]_0 ;
  wire \regSlaveDo_reg[5]_1 ;
  wire \regSlaveDo_reg[7] ;
  wire [1:0]\regSlaveDo_reg[7]_0 ;
  wire reg_rst_i;
  wire [10:0]s_daddr_o;
  wire s_dclk_o;
  wire s_dwe_o;
  wire \xsdb_reg[8]_i_1_n_0 ;
  wire \xsdb_reg[8]_i_2_n_0 ;
  wire \xsdb_reg[8]_i_7_n_0 ;
  wire \xsdb_reg_reg[0]_0 ;
  wire \xsdb_reg_reg[0]_1 ;
  wire \xsdb_reg_reg[0]_2 ;
  wire \xsdb_reg_reg[15]_0 ;
  wire \xsdb_reg_reg[2]_0 ;
  wire \xsdb_reg_reg[5]_0 ;
  wire \xsdb_reg_reg[6]_0 ;
  wire \xsdb_reg_reg[7]_0 ;
  wire \xsdb_reg_reg_n_0_[0] ;
  wire \xsdb_reg_reg_n_0_[10] ;
  wire \xsdb_reg_reg_n_0_[11] ;
  wire \xsdb_reg_reg_n_0_[12] ;
  wire \xsdb_reg_reg_n_0_[13] ;
  wire \xsdb_reg_reg_n_0_[14] ;
  wire \xsdb_reg_reg_n_0_[15] ;
  wire \xsdb_reg_reg_n_0_[2] ;
  wire \xsdb_reg_reg_n_0_[3] ;

  LUT6 #(
    .INIT(64'hFFFFFFFFFFF8F8F8)) 
    \regSlaveDo[0]_i_1 
       (.I0(\regSlaveDo_reg[0] ),
        .I1(\xsdb_reg_reg_n_0_[0] ),
        .I2(\regSlaveDo_reg[0]_0 ),
        .I3(\regSlaveDo_reg[0]_1 ),
        .I4(\regSlaveDo_reg[0]_2 ),
        .I5(\regSlaveDo_reg[0]_3 ),
        .O(\xsdb_reg_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    \regSlaveDo[10]_i_3 
       (.I0(\regSlaveDo_reg[14] ),
        .I1(s_daddr_o[4]),
        .I2(s_daddr_o[0]),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[1]),
        .I5(\xsdb_reg_reg_n_0_[10] ),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[4]_3 ));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    \regSlaveDo[11]_i_3 
       (.I0(\regSlaveDo_reg[14] ),
        .I1(s_daddr_o[4]),
        .I2(s_daddr_o[0]),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[1]),
        .I5(\xsdb_reg_reg_n_0_[11] ),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[4]_4 ));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    \regSlaveDo[12]_i_3 
       (.I0(\regSlaveDo_reg[14] ),
        .I1(s_daddr_o[4]),
        .I2(s_daddr_o[0]),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[1]),
        .I5(\xsdb_reg_reg_n_0_[12] ),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[4]_5 ));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    \regSlaveDo[13]_i_3 
       (.I0(\regSlaveDo_reg[14] ),
        .I1(s_daddr_o[4]),
        .I2(s_daddr_o[0]),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[1]),
        .I5(\xsdb_reg_reg_n_0_[13] ),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[4]_6 ));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    \regSlaveDo[14]_i_3 
       (.I0(\regSlaveDo_reg[14] ),
        .I1(s_daddr_o[4]),
        .I2(s_daddr_o[0]),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[1]),
        .I5(\xsdb_reg_reg_n_0_[14] ),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[4]_7 ));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \regSlaveDo[15]_i_6 
       (.I0(\xsdb_reg_reg_n_0_[15] ),
        .I1(\regSlaveDo_reg[5] ),
        .I2(\regSlaveDo_reg[14] ),
        .I3(\regSlaveDo_reg[0]_1 ),
        .I4(\regSlaveDo_reg[15] ),
        .I5(\regSlaveDo_reg[15]_0 ),
        .O(\xsdb_reg_reg[15]_0 ));
  LUT5 #(
    .INIT(32'h8C800000)) 
    \regSlaveDo[2]_i_3 
       (.I0(\xsdb_reg_reg_n_0_[2] ),
        .I1(\regSlaveDo_reg[14] ),
        .I2(s_daddr_o[1]),
        .I3(\regSlaveDo_reg[2] ),
        .I4(\regSlaveDo_reg[2]_0 ),
        .O(\xsdb_reg_reg[2]_0 ));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    \regSlaveDo[3]_i_3 
       (.I0(\regSlaveDo_reg[14] ),
        .I1(s_daddr_o[4]),
        .I2(s_daddr_o[0]),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[1]),
        .I5(\xsdb_reg_reg_n_0_[3] ),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[4] ));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    \regSlaveDo[4]_i_3 
       (.I0(\regSlaveDo_reg[14] ),
        .I1(s_daddr_o[4]),
        .I2(s_daddr_o[0]),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[1]),
        .I5(Q[1]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[4]_0 ));
  LUT6 #(
    .INIT(64'h80F0808080808080)) 
    \regSlaveDo[5]_i_3 
       (.I0(Q[2]),
        .I1(\regSlaveDo_reg[5] ),
        .I2(\regSlaveDo_reg[14] ),
        .I3(s_daddr_o[4]),
        .I4(\regSlaveDo_reg[5]_0 ),
        .I5(\regSlaveDo_reg[5]_1 ),
        .O(\xsdb_reg_reg[5]_0 ));
  LUT6 #(
    .INIT(64'h888888880000F000)) 
    \regSlaveDo[6]_i_5 
       (.I0(\regSlaveDo_reg[5] ),
        .I1(Q[3]),
        .I2(\regSlaveDo_reg[7] ),
        .I3(\regSlaveDo_reg[7]_0 [0]),
        .I4(s_daddr_o[4]),
        .I5(s_daddr_o[2]),
        .O(\xsdb_reg_reg[6]_0 ));
  LUT6 #(
    .INIT(64'h888888880000F000)) 
    \regSlaveDo[7]_i_5 
       (.I0(\regSlaveDo_reg[5] ),
        .I1(Q[4]),
        .I2(\regSlaveDo_reg[7] ),
        .I3(\regSlaveDo_reg[7]_0 [1]),
        .I4(s_daddr_o[4]),
        .I5(s_daddr_o[2]),
        .O(\xsdb_reg_reg[7]_0 ));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    \regSlaveDo[8]_i_3 
       (.I0(\regSlaveDo_reg[14] ),
        .I1(s_daddr_o[4]),
        .I2(s_daddr_o[0]),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[1]),
        .I5(Q[5]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[4]_1 ));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    \regSlaveDo[9]_i_3 
       (.I0(\regSlaveDo_reg[14] ),
        .I1(s_daddr_o[4]),
        .I2(s_daddr_o[0]),
        .I3(s_daddr_o[5]),
        .I4(s_daddr_o[1]),
        .I5(Q[6]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[4]_2 ));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \xsdb_reg[1]_i_2 
       (.I0(s_daddr_o[6]),
        .I1(s_daddr_o[3]),
        .I2(s_daddr_o[4]),
        .I3(s_daddr_o[2]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[6] ));
  LUT6 #(
    .INIT(64'h7F7F7F7F7F7F7FFF)) 
    \xsdb_reg[1]_i_8 
       (.I0(s_daddr_o[5]),
        .I1(s_daddr_o[4]),
        .I2(s_daddr_o[6]),
        .I3(s_daddr_o[1]),
        .I4(s_daddr_o[2]),
        .I5(s_daddr_o[3]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[5] ));
  LUT6 #(
    .INIT(64'h0000200000000000)) 
    \xsdb_reg[8]_i_1 
       (.I0(\xsdb_reg[8]_i_2_n_0 ),
        .I1(\xsdb_reg_reg[0]_1 ),
        .I2(\G_1PIPE_IFACE.s_daddr_r_reg[9] ),
        .I3(s_dwe_o),
        .I4(ram_range00_in),
        .I5(isAddrRange01_in),
        .O(\xsdb_reg[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \xsdb_reg[8]_i_2 
       (.I0(s_daddr_o[3]),
        .I1(s_daddr_o[6]),
        .I2(s_daddr_o[2]),
        .I3(\regSlaveDo_reg[5] ),
        .O(\xsdb_reg[8]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0002FFFF)) 
    \xsdb_reg[8]_i_3 
       (.I0(\G_1PIPE_IFACE.s_daddr_r_reg[5] ),
        .I1(s_daddr_o[9]),
        .I2(s_daddr_o[8]),
        .I3(s_daddr_o[7]),
        .I4(s_daddr_o[10]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[9] ));
  LUT5 #(
    .INIT(32'hFFFEFCFC)) 
    \xsdb_reg[8]_i_5 
       (.I0(\xsdb_reg_reg[0]_2 ),
        .I1(\xsdb_reg[8]_i_7_n_0 ),
        .I2(ram_range00_in),
        .I3(\G_1PIPE_IFACE.s_daddr_r_reg[6] ),
        .I4(s_daddr_o[10]),
        .O(isAddrRange01_in));
  LUT4 #(
    .INIT(16'hF0E0)) 
    \xsdb_reg[8]_i_7 
       (.I0(s_daddr_o[1]),
        .I1(s_daddr_o[5]),
        .I2(s_daddr_o[10]),
        .I3(s_daddr_o[0]),
        .O(\xsdb_reg[8]_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[0] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[0]),
        .Q(\xsdb_reg_reg_n_0_[0] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[10] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[10]),
        .Q(\xsdb_reg_reg_n_0_[10] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[11] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[11]),
        .Q(\xsdb_reg_reg_n_0_[11] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[12] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[12]),
        .Q(\xsdb_reg_reg_n_0_[12] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[13] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[13]),
        .Q(\xsdb_reg_reg_n_0_[13] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[14] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[14]),
        .Q(\xsdb_reg_reg_n_0_[14] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[15] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[15]),
        .Q(\xsdb_reg_reg_n_0_[15] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[1] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[1]),
        .Q(Q[0]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[2] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[2]),
        .Q(\xsdb_reg_reg_n_0_[2] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[3] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[3]),
        .Q(\xsdb_reg_reg_n_0_[3] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[4] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[4]),
        .Q(Q[1]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[5] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[5]),
        .Q(Q[2]),
        .R(reg_rst_i));
  FDSE #(
    .INIT(1'b1)) 
    \xsdb_reg_reg[6] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[6]),
        .Q(Q[3]),
        .S(reg_rst_i));
  FDSE #(
    .INIT(1'b1)) 
    \xsdb_reg_reg[7] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[7]),
        .Q(Q[4]),
        .S(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[8] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[8]),
        .Q(Q[5]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[9] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[9]),
        .Q(Q[6]),
        .R(reg_rst_i));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg_ctl" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_ctl__parameterized0_760
   (\G_1PIPE_IFACE.s_daddr_r_reg[9] ,
    isAddrRange01_in,
    \G_1PIPE_IFACE.s_daddr_r_reg[6] ,
    \xsdb_reg_reg[0]_0 ,
    \xsdb_reg_reg[6]_0 ,
    \xsdb_reg_reg[9]_0 ,
    \xsdb_reg_reg[7]_0 ,
    \xsdb_reg_reg[15]_0 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[5] ,
    \xsdb_reg_reg[2]_0 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[6]_0 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[6]_1 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[6]_2 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[6]_3 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[6]_4 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[6]_5 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[6]_6 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[6]_7 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[6]_8 ,
    \xsdb_reg_reg[0]_1 ,
    s_dwe_o,
    ram_range00_in,
    \xsdb_reg_reg[0]_2 ,
    s_daddr_o,
    \regSlaveDo_reg[14] ,
    \regSlaveDo_reg[7] ,
    Q,
    \regSlaveDo_reg[2] ,
    \regSlaveDo_reg[15] ,
    \regSlaveDo_reg[15]_0 ,
    \regSlaveDo_reg[15]_1 ,
    \regSlaveDo_reg[2]_0 ,
    \regSlaveDo_reg[2]_1 ,
    reg_rst_i,
    D,
    s_dclk_o);
  output \G_1PIPE_IFACE.s_daddr_r_reg[9] ;
  output isAddrRange01_in;
  output \G_1PIPE_IFACE.s_daddr_r_reg[6] ;
  output \xsdb_reg_reg[0]_0 ;
  output \xsdb_reg_reg[6]_0 ;
  output [6:0]\xsdb_reg_reg[9]_0 ;
  output \xsdb_reg_reg[7]_0 ;
  output \xsdb_reg_reg[15]_0 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[5] ;
  output \xsdb_reg_reg[2]_0 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[6]_0 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[6]_1 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[6]_2 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[6]_3 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[6]_4 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[6]_5 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[6]_6 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[6]_7 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[6]_8 ;
  input \xsdb_reg_reg[0]_1 ;
  input s_dwe_o;
  input ram_range00_in;
  input \xsdb_reg_reg[0]_2 ;
  input [10:0]s_daddr_o;
  input \regSlaveDo_reg[14] ;
  input \regSlaveDo_reg[7] ;
  input [2:0]Q;
  input \regSlaveDo_reg[2] ;
  input \regSlaveDo_reg[15] ;
  input \regSlaveDo_reg[15]_0 ;
  input [0:0]\regSlaveDo_reg[15]_1 ;
  input \regSlaveDo_reg[2]_0 ;
  input [0:0]\regSlaveDo_reg[2]_1 ;
  input reg_rst_i;
  input [15:0]D;
  input s_dclk_o;

  wire [15:0]D;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[5] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[6] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[6]_0 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[6]_1 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[6]_2 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[6]_3 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[6]_4 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[6]_5 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[6]_6 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[6]_7 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[6]_8 ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[9] ;
  wire [2:0]Q;
  wire isAddrRange01_in;
  wire ram_range00_in;
  wire \regSlaveDo_reg[14] ;
  wire \regSlaveDo_reg[15] ;
  wire \regSlaveDo_reg[15]_0 ;
  wire [0:0]\regSlaveDo_reg[15]_1 ;
  wire \regSlaveDo_reg[2] ;
  wire \regSlaveDo_reg[2]_0 ;
  wire [0:0]\regSlaveDo_reg[2]_1 ;
  wire \regSlaveDo_reg[7] ;
  wire reg_rst_i;
  wire [10:0]s_daddr_o;
  wire s_dclk_o;
  wire s_dwe_o;
  wire \xsdb_reg[8]_i_1_n_0 ;
  wire \xsdb_reg[8]_i_2_n_0 ;
  wire \xsdb_reg[8]_i_7_n_0 ;
  wire \xsdb_reg_reg[0]_0 ;
  wire \xsdb_reg_reg[0]_1 ;
  wire \xsdb_reg_reg[0]_2 ;
  wire \xsdb_reg_reg[15]_0 ;
  wire \xsdb_reg_reg[2]_0 ;
  wire \xsdb_reg_reg[6]_0 ;
  wire \xsdb_reg_reg[7]_0 ;
  wire [6:0]\xsdb_reg_reg[9]_0 ;
  wire \xsdb_reg_reg_n_0_[0] ;
  wire \xsdb_reg_reg_n_0_[10] ;
  wire \xsdb_reg_reg_n_0_[11] ;
  wire \xsdb_reg_reg_n_0_[12] ;
  wire \xsdb_reg_reg_n_0_[13] ;
  wire \xsdb_reg_reg_n_0_[14] ;
  wire \xsdb_reg_reg_n_0_[15] ;
  wire \xsdb_reg_reg_n_0_[2] ;
  wire \xsdb_reg_reg_n_0_[3] ;

  LUT6 #(
    .INIT(64'h888888888888F888)) 
    \regSlaveDo[0]_i_5 
       (.I0(\xsdb_reg_reg_n_0_[0] ),
        .I1(\regSlaveDo_reg[14] ),
        .I2(\regSlaveDo_reg[7] ),
        .I3(Q[0]),
        .I4(s_daddr_o[4]),
        .I5(s_daddr_o[2]),
        .O(\xsdb_reg_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \regSlaveDo[10]_i_3 
       (.I0(s_daddr_o[6]),
        .I1(s_daddr_o[3]),
        .I2(\regSlaveDo_reg[14] ),
        .I3(\xsdb_reg_reg_n_0_[10] ),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[6]_4 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \regSlaveDo[11]_i_3 
       (.I0(s_daddr_o[6]),
        .I1(s_daddr_o[3]),
        .I2(\regSlaveDo_reg[14] ),
        .I3(\xsdb_reg_reg_n_0_[11] ),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[6]_5 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \regSlaveDo[12]_i_3 
       (.I0(s_daddr_o[6]),
        .I1(s_daddr_o[3]),
        .I2(\regSlaveDo_reg[14] ),
        .I3(\xsdb_reg_reg_n_0_[12] ),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[6]_6 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \regSlaveDo[13]_i_3 
       (.I0(s_daddr_o[6]),
        .I1(s_daddr_o[3]),
        .I2(\regSlaveDo_reg[14] ),
        .I3(\xsdb_reg_reg_n_0_[13] ),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[6]_7 ));
  LUT4 #(
    .INIT(16'h1000)) 
    \regSlaveDo[14]_i_3 
       (.I0(s_daddr_o[6]),
        .I1(s_daddr_o[3]),
        .I2(\regSlaveDo_reg[14] ),
        .I3(\xsdb_reg_reg_n_0_[14] ),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[6]_8 ));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \regSlaveDo[15]_i_6 
       (.I0(\xsdb_reg_reg_n_0_[15] ),
        .I1(\regSlaveDo_reg[14] ),
        .I2(\regSlaveDo_reg[2] ),
        .I3(\regSlaveDo_reg[15] ),
        .I4(\regSlaveDo_reg[15]_0 ),
        .I5(\regSlaveDo_reg[15]_1 ),
        .O(\xsdb_reg_reg[15]_0 ));
  LUT6 #(
    .INIT(64'h80C0800000000000)) 
    \regSlaveDo[2]_i_3 
       (.I0(\xsdb_reg_reg_n_0_[2] ),
        .I1(\regSlaveDo_reg[2] ),
        .I2(s_daddr_o[2]),
        .I3(s_daddr_o[1]),
        .I4(\regSlaveDo_reg[2]_1 ),
        .I5(\regSlaveDo_reg[2]_0 ),
        .O(\xsdb_reg_reg[2]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \regSlaveDo[3]_i_3 
       (.I0(s_daddr_o[6]),
        .I1(s_daddr_o[3]),
        .I2(\regSlaveDo_reg[14] ),
        .I3(\xsdb_reg_reg_n_0_[3] ),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[6]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \regSlaveDo[4]_i_3 
       (.I0(s_daddr_o[6]),
        .I1(s_daddr_o[3]),
        .I2(\regSlaveDo_reg[14] ),
        .I3(\xsdb_reg_reg[9]_0 [1]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[6]_1 ));
  LUT6 #(
    .INIT(64'h888888888888F888)) 
    \regSlaveDo[6]_i_5 
       (.I0(\xsdb_reg_reg[9]_0 [3]),
        .I1(\regSlaveDo_reg[14] ),
        .I2(\regSlaveDo_reg[7] ),
        .I3(Q[1]),
        .I4(s_daddr_o[4]),
        .I5(s_daddr_o[2]),
        .O(\xsdb_reg_reg[6]_0 ));
  LUT6 #(
    .INIT(64'h888888888888F888)) 
    \regSlaveDo[7]_i_5 
       (.I0(\xsdb_reg_reg[9]_0 [4]),
        .I1(\regSlaveDo_reg[14] ),
        .I2(\regSlaveDo_reg[7] ),
        .I3(Q[2]),
        .I4(s_daddr_o[4]),
        .I5(s_daddr_o[2]),
        .O(\xsdb_reg_reg[7]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \regSlaveDo[8]_i_3 
       (.I0(s_daddr_o[6]),
        .I1(s_daddr_o[3]),
        .I2(\regSlaveDo_reg[14] ),
        .I3(\xsdb_reg_reg[9]_0 [5]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[6]_2 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \regSlaveDo[9]_i_3 
       (.I0(s_daddr_o[6]),
        .I1(s_daddr_o[3]),
        .I2(\regSlaveDo_reg[14] ),
        .I3(\xsdb_reg_reg[9]_0 [6]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[6]_3 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \xsdb_reg[1]_i_2 
       (.I0(s_daddr_o[6]),
        .I1(s_daddr_o[3]),
        .I2(s_daddr_o[4]),
        .I3(s_daddr_o[2]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[6] ));
  LUT6 #(
    .INIT(64'h7F7F7F7F7F7F7FFF)) 
    \xsdb_reg[1]_i_8 
       (.I0(s_daddr_o[5]),
        .I1(s_daddr_o[4]),
        .I2(s_daddr_o[6]),
        .I3(s_daddr_o[1]),
        .I4(s_daddr_o[2]),
        .I5(s_daddr_o[3]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[5] ));
  LUT6 #(
    .INIT(64'h0000200000000000)) 
    \xsdb_reg[8]_i_1 
       (.I0(\xsdb_reg[8]_i_2_n_0 ),
        .I1(\xsdb_reg_reg[0]_1 ),
        .I2(\G_1PIPE_IFACE.s_daddr_r_reg[9] ),
        .I3(s_dwe_o),
        .I4(ram_range00_in),
        .I5(isAddrRange01_in),
        .O(\xsdb_reg[8]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000080)) 
    \xsdb_reg[8]_i_2 
       (.I0(s_daddr_o[1]),
        .I1(s_daddr_o[2]),
        .I2(\regSlaveDo_reg[2]_0 ),
        .I3(s_daddr_o[6]),
        .I4(s_daddr_o[3]),
        .O(\xsdb_reg[8]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0002FFFF)) 
    \xsdb_reg[8]_i_3 
       (.I0(\G_1PIPE_IFACE.s_daddr_r_reg[5] ),
        .I1(s_daddr_o[9]),
        .I2(s_daddr_o[8]),
        .I3(s_daddr_o[7]),
        .I4(s_daddr_o[10]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[9] ));
  LUT5 #(
    .INIT(32'hFFFEFCFC)) 
    \xsdb_reg[8]_i_5 
       (.I0(\xsdb_reg_reg[0]_2 ),
        .I1(\xsdb_reg[8]_i_7_n_0 ),
        .I2(ram_range00_in),
        .I3(\G_1PIPE_IFACE.s_daddr_r_reg[6] ),
        .I4(s_daddr_o[10]),
        .O(isAddrRange01_in));
  LUT4 #(
    .INIT(16'hF0E0)) 
    \xsdb_reg[8]_i_7 
       (.I0(s_daddr_o[1]),
        .I1(s_daddr_o[5]),
        .I2(s_daddr_o[10]),
        .I3(s_daddr_o[0]),
        .O(\xsdb_reg[8]_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[0] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[0]),
        .Q(\xsdb_reg_reg_n_0_[0] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[10] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[10]),
        .Q(\xsdb_reg_reg_n_0_[10] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[11] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[11]),
        .Q(\xsdb_reg_reg_n_0_[11] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[12] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[12]),
        .Q(\xsdb_reg_reg_n_0_[12] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[13] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[13]),
        .Q(\xsdb_reg_reg_n_0_[13] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[14] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[14]),
        .Q(\xsdb_reg_reg_n_0_[14] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[15] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[15]),
        .Q(\xsdb_reg_reg_n_0_[15] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[1] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[1]),
        .Q(\xsdb_reg_reg[9]_0 [0]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[2] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[2]),
        .Q(\xsdb_reg_reg_n_0_[2] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[3] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[3]),
        .Q(\xsdb_reg_reg_n_0_[3] ),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[4] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[4]),
        .Q(\xsdb_reg_reg[9]_0 [1]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[5] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[5]),
        .Q(\xsdb_reg_reg[9]_0 [2]),
        .R(reg_rst_i));
  FDSE #(
    .INIT(1'b1)) 
    \xsdb_reg_reg[6] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[6]),
        .Q(\xsdb_reg_reg[9]_0 [3]),
        .S(reg_rst_i));
  FDSE #(
    .INIT(1'b1)) 
    \xsdb_reg_reg[7] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[7]),
        .Q(\xsdb_reg_reg[9]_0 [4]),
        .S(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[8] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[8]),
        .Q(\xsdb_reg_reg[9]_0 [5]),
        .R(reg_rst_i));
  FDRE #(
    .INIT(1'b0)) 
    \xsdb_reg_reg[9] 
       (.C(s_dclk_o),
        .CE(\xsdb_reg[8]_i_1_n_0 ),
        .D(D[9]),
        .Q(\xsdb_reg_reg[9]_0 [6]),
        .R(reg_rst_i));
endmodule

module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_stat
   (\G_1PIPE_IFACE.s_daddr_r_reg[4] ,
    \xsdb_reg_reg[1]_0 ,
    \xsdb_reg_reg[3]_0 ,
    \xsdb_reg_reg[4]_0 ,
    \xsdb_reg_reg[0]_0 ,
    \regSlaveDo_reg[2] ,
    \regSlaveDo_reg[2]_0 ,
    s_daddr_o,
    \regSlaveDo_reg[2]_1 ,
    \regSlaveDo_reg[2]_2 ,
    \regSlaveDo[2]_i_2_0 ,
    Q,
    txprecursor_i,
    s_dclk_o);
  output \G_1PIPE_IFACE.s_daddr_r_reg[4] ;
  output \xsdb_reg_reg[1]_0 ;
  output \xsdb_reg_reg[3]_0 ;
  output \xsdb_reg_reg[4]_0 ;
  output [0:0]\xsdb_reg_reg[0]_0 ;
  input \regSlaveDo_reg[2] ;
  input \regSlaveDo_reg[2]_0 ;
  input [3:0]s_daddr_o;
  input \regSlaveDo_reg[2]_1 ;
  input \regSlaveDo_reg[2]_2 ;
  input [1:0]\regSlaveDo[2]_i_2_0 ;
  input [1:0]Q;
  input [4:0]txprecursor_i;
  input s_dclk_o;

  wire \G_1PIPE_IFACE.s_daddr_r_reg[4] ;
  wire [1:0]Q;
  wire [1:0]\regSlaveDo[2]_i_2_0 ;
  wire \regSlaveDo[2]_i_4_n_0 ;
  wire \regSlaveDo_reg[2] ;
  wire \regSlaveDo_reg[2]_0 ;
  wire \regSlaveDo_reg[2]_1 ;
  wire \regSlaveDo_reg[2]_2 ;
  wire [3:0]s_daddr_o;
  wire s_dclk_o;
  wire [4:0]txprecursor_i;
  wire [0:0]\xsdb_reg_reg[0]_0 ;
  wire \xsdb_reg_reg[1]_0 ;
  wire \xsdb_reg_reg[3]_0 ;
  wire \xsdb_reg_reg[4]_0 ;
  wire \xsdb_reg_reg_n_0_[1] ;
  wire \xsdb_reg_reg_n_0_[2] ;
  wire \xsdb_reg_reg_n_0_[3] ;
  wire \xsdb_reg_reg_n_0_[4] ;

  LUT5 #(
    .INIT(32'h0000AC00)) 
    \regSlaveDo[1]_i_6 
       (.I0(\xsdb_reg_reg_n_0_[1] ),
        .I1(\regSlaveDo[2]_i_2_0 [0]),
        .I2(s_daddr_o[3]),
        .I3(s_daddr_o[0]),
        .I4(s_daddr_o[1]),
        .O(\xsdb_reg_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF0808080808)) 
    \regSlaveDo[2]_i_2 
       (.I0(\regSlaveDo_reg[2] ),
        .I1(\regSlaveDo_reg[2]_0 ),
        .I2(s_daddr_o[2]),
        .I3(\regSlaveDo[2]_i_4_n_0 ),
        .I4(\regSlaveDo_reg[2]_1 ),
        .I5(\regSlaveDo_reg[2]_2 ),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[4] ));
  LUT5 #(
    .INIT(32'h0000AC00)) 
    \regSlaveDo[2]_i_4 
       (.I0(\xsdb_reg_reg_n_0_[2] ),
        .I1(\regSlaveDo[2]_i_2_0 [1]),
        .I2(s_daddr_o[3]),
        .I3(s_daddr_o[0]),
        .I4(s_daddr_o[1]),
        .O(\regSlaveDo[2]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFAC00000)) 
    \regSlaveDo[3]_i_4 
       (.I0(\xsdb_reg_reg_n_0_[3] ),
        .I1(Q[0]),
        .I2(s_daddr_o[1]),
        .I3(s_daddr_o[0]),
        .I4(s_daddr_o[3]),
        .O(\xsdb_reg_reg[3]_0 ));
  LUT5 #(
    .INIT(32'hFAC00000)) 
    \regSlaveDo[4]_i_4 
       (.I0(\xsdb_reg_reg_n_0_[4] ),
        .I1(Q[1]),
        .I2(s_daddr_o[1]),
        .I3(s_daddr_o[0]),
        .I4(s_daddr_o[3]),
        .O(\xsdb_reg_reg[4]_0 ));
  FDRE \xsdb_reg_reg[0] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(txprecursor_i[0]),
        .Q(\xsdb_reg_reg[0]_0 ),
        .R(1'b0));
  FDRE \xsdb_reg_reg[1] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(txprecursor_i[1]),
        .Q(\xsdb_reg_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \xsdb_reg_reg[2] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(txprecursor_i[2]),
        .Q(\xsdb_reg_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \xsdb_reg_reg[3] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(txprecursor_i[3]),
        .Q(\xsdb_reg_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \xsdb_reg_reg[4] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(txprecursor_i[4]),
        .Q(\xsdb_reg_reg_n_0_[4] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg_stat" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_stat_731
   (\G_1PIPE_IFACE.s_daddr_r_reg[2] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[2]_0 ,
    Q,
    s_daddr_o,
    D,
    s_dclk_o);
  output \G_1PIPE_IFACE.s_daddr_r_reg[2] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[2]_0 ;
  output [7:0]Q;
  input [4:0]s_daddr_o;
  input [9:0]D;
  input s_dclk_o;

  wire [9:0]D;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[2] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[2]_0 ;
  wire [7:0]Q;
  wire [4:0]s_daddr_o;
  wire s_dclk_o;
  wire \xsdb_reg_reg_n_0_[6] ;
  wire \xsdb_reg_reg_n_0_[7] ;

  LUT6 #(
    .INIT(64'h0000000000000E00)) 
    \regSlaveDo[6]_i_3 
       (.I0(s_daddr_o[2]),
        .I1(\xsdb_reg_reg_n_0_[6] ),
        .I2(s_daddr_o[0]),
        .I3(s_daddr_o[4]),
        .I4(s_daddr_o[1]),
        .I5(s_daddr_o[3]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[2] ));
  LUT6 #(
    .INIT(64'h0000000000000E00)) 
    \regSlaveDo[7]_i_3 
       (.I0(s_daddr_o[2]),
        .I1(\xsdb_reg_reg_n_0_[7] ),
        .I2(s_daddr_o[0]),
        .I3(s_daddr_o[4]),
        .I4(s_daddr_o[1]),
        .I5(s_daddr_o[3]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[2]_0 ));
  FDRE \xsdb_reg_reg[10] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \xsdb_reg_reg[11] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \xsdb_reg_reg[12] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[5]),
        .R(1'b0));
  FDRE \xsdb_reg_reg[13] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[6]),
        .R(1'b0));
  FDRE \xsdb_reg_reg[14] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(D[9]),
        .Q(Q[7]),
        .R(1'b0));
  FDRE \xsdb_reg_reg[5] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \xsdb_reg_reg[6] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(D[1]),
        .Q(\xsdb_reg_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \xsdb_reg_reg[7] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(D[2]),
        .Q(\xsdb_reg_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \xsdb_reg_reg[8] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \xsdb_reg_reg[9] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg_stat" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_stat_734
   (\xsdb_reg_reg[1]_0 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[5] ,
    \xsdb_reg_reg[2]_0 ,
    \regSlaveDo_reg[0] ,
    \regSlaveDo_reg[1] ,
    \regSlaveDo_reg[1]_0 ,
    \regSlaveDo_reg[1]_1 ,
    s_daddr_o,
    Q,
    rxrate_i,
    s_dclk_o);
  output \xsdb_reg_reg[1]_0 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[5] ;
  output [0:0]\xsdb_reg_reg[2]_0 ;
  input \regSlaveDo_reg[0] ;
  input \regSlaveDo_reg[1] ;
  input \regSlaveDo_reg[1]_0 ;
  input \regSlaveDo_reg[1]_1 ;
  input [3:0]s_daddr_o;
  input [0:0]Q;
  input [2:0]rxrate_i;
  input s_dclk_o;

  wire \G_1PIPE_IFACE.s_daddr_r_reg[5] ;
  wire [0:0]Q;
  wire \regSlaveDo[1]_i_5_n_0 ;
  wire \regSlaveDo_reg[0] ;
  wire \regSlaveDo_reg[1] ;
  wire \regSlaveDo_reg[1]_0 ;
  wire \regSlaveDo_reg[1]_1 ;
  wire [2:0]rxrate_i;
  wire [3:0]s_daddr_o;
  wire s_dclk_o;
  wire \xsdb_reg_reg[1]_0 ;
  wire [0:0]\xsdb_reg_reg[2]_0 ;
  wire \xsdb_reg_reg_n_0_[0] ;
  wire \xsdb_reg_reg_n_0_[1] ;

  LUT6 #(
    .INIT(64'h0000400000000000)) 
    \regSlaveDo[0]_i_6 
       (.I0(s_daddr_o[3]),
        .I1(s_daddr_o[0]),
        .I2(s_daddr_o[2]),
        .I3(\xsdb_reg_reg_n_0_[0] ),
        .I4(s_daddr_o[1]),
        .I5(\regSlaveDo_reg[0] ),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[5] ));
  LUT5 #(
    .INIT(32'hFFF88888)) 
    \regSlaveDo[1]_i_3 
       (.I0(\regSlaveDo[1]_i_5_n_0 ),
        .I1(\regSlaveDo_reg[0] ),
        .I2(\regSlaveDo_reg[1] ),
        .I3(\regSlaveDo_reg[1]_0 ),
        .I4(\regSlaveDo_reg[1]_1 ),
        .O(\xsdb_reg_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h0000C000000FA000)) 
    \regSlaveDo[1]_i_5 
       (.I0(\xsdb_reg_reg_n_0_[1] ),
        .I1(Q),
        .I2(s_daddr_o[2]),
        .I3(s_daddr_o[0]),
        .I4(s_daddr_o[3]),
        .I5(s_daddr_o[1]),
        .O(\regSlaveDo[1]_i_5_n_0 ));
  FDRE \xsdb_reg_reg[0] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(rxrate_i[0]),
        .Q(\xsdb_reg_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \xsdb_reg_reg[1] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(rxrate_i[1]),
        .Q(\xsdb_reg_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \xsdb_reg_reg[2] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(rxrate_i[2]),
        .Q(\xsdb_reg_reg[2]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg_stat" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_stat_735
   (\xsdb_reg_reg[5]_0 ,
    rxlpmen_i,
    s_dclk_o);
  output \xsdb_reg_reg[5]_0 ;
  input rxlpmen_i;
  input s_dclk_o;

  wire rxlpmen_i;
  wire s_dclk_o;
  wire \xsdb_reg_reg[5]_0 ;

  FDRE \xsdb_reg_reg[5] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(rxlpmen_i),
        .Q(\xsdb_reg_reg[5]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg_stat" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_stat_756
   (\G_1PIPE_IFACE.s_daddr_r_reg[4] ,
    \xsdb_reg_reg[1]_0 ,
    \xsdb_reg_reg[3]_0 ,
    \xsdb_reg_reg[4]_0 ,
    \xsdb_reg_reg[0]_0 ,
    \regSlaveDo_reg[2] ,
    \regSlaveDo_reg[2]_0 ,
    \regSlaveDo_reg[2]_1 ,
    s_daddr_o,
    \regSlaveDo[2]_i_2_0 ,
    Q,
    txprecursor_i,
    s_dclk_o);
  output \G_1PIPE_IFACE.s_daddr_r_reg[4] ;
  output \xsdb_reg_reg[1]_0 ;
  output \xsdb_reg_reg[3]_0 ;
  output \xsdb_reg_reg[4]_0 ;
  output [0:0]\xsdb_reg_reg[0]_0 ;
  input \regSlaveDo_reg[2] ;
  input \regSlaveDo_reg[2]_0 ;
  input \regSlaveDo_reg[2]_1 ;
  input [4:0]s_daddr_o;
  input [1:0]\regSlaveDo[2]_i_2_0 ;
  input [1:0]Q;
  input [4:0]txprecursor_i;
  input s_dclk_o;

  wire \G_1PIPE_IFACE.s_daddr_r_reg[4] ;
  wire [1:0]Q;
  wire [1:0]\regSlaveDo[2]_i_2_0 ;
  wire \regSlaveDo[2]_i_4_n_0 ;
  wire \regSlaveDo_reg[2] ;
  wire \regSlaveDo_reg[2]_0 ;
  wire \regSlaveDo_reg[2]_1 ;
  wire [4:0]s_daddr_o;
  wire s_dclk_o;
  wire [4:0]txprecursor_i;
  wire [0:0]\xsdb_reg_reg[0]_0 ;
  wire \xsdb_reg_reg[1]_0 ;
  wire \xsdb_reg_reg[3]_0 ;
  wire \xsdb_reg_reg[4]_0 ;
  wire \xsdb_reg_reg_n_0_[1] ;
  wire \xsdb_reg_reg_n_0_[2] ;
  wire \xsdb_reg_reg_n_0_[3] ;
  wire \xsdb_reg_reg_n_0_[4] ;

  LUT5 #(
    .INIT(32'h0000AC00)) 
    \regSlaveDo[1]_i_6 
       (.I0(\xsdb_reg_reg_n_0_[1] ),
        .I1(\regSlaveDo[2]_i_2_0 [0]),
        .I2(s_daddr_o[4]),
        .I3(s_daddr_o[0]),
        .I4(s_daddr_o[1]),
        .O(\xsdb_reg_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h0000AA000000FC00)) 
    \regSlaveDo[2]_i_2 
       (.I0(\regSlaveDo_reg[2] ),
        .I1(\regSlaveDo[2]_i_4_n_0 ),
        .I2(\regSlaveDo_reg[2]_0 ),
        .I3(\regSlaveDo_reg[2]_1 ),
        .I4(s_daddr_o[3]),
        .I5(s_daddr_o[2]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[4] ));
  LUT5 #(
    .INIT(32'h0000AC00)) 
    \regSlaveDo[2]_i_4 
       (.I0(\xsdb_reg_reg_n_0_[2] ),
        .I1(\regSlaveDo[2]_i_2_0 [1]),
        .I2(s_daddr_o[4]),
        .I3(s_daddr_o[0]),
        .I4(s_daddr_o[1]),
        .O(\regSlaveDo[2]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFAC00000)) 
    \regSlaveDo[3]_i_4 
       (.I0(\xsdb_reg_reg_n_0_[3] ),
        .I1(Q[0]),
        .I2(s_daddr_o[1]),
        .I3(s_daddr_o[0]),
        .I4(s_daddr_o[4]),
        .O(\xsdb_reg_reg[3]_0 ));
  LUT5 #(
    .INIT(32'hFAC00000)) 
    \regSlaveDo[4]_i_4 
       (.I0(\xsdb_reg_reg_n_0_[4] ),
        .I1(Q[1]),
        .I2(s_daddr_o[1]),
        .I3(s_daddr_o[0]),
        .I4(s_daddr_o[4]),
        .O(\xsdb_reg_reg[4]_0 ));
  FDRE \xsdb_reg_reg[0] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(txprecursor_i[0]),
        .Q(\xsdb_reg_reg[0]_0 ),
        .R(1'b0));
  FDRE \xsdb_reg_reg[1] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(txprecursor_i[1]),
        .Q(\xsdb_reg_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \xsdb_reg_reg[2] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(txprecursor_i[2]),
        .Q(\xsdb_reg_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \xsdb_reg_reg[3] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(txprecursor_i[3]),
        .Q(\xsdb_reg_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \xsdb_reg_reg[4] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(txprecursor_i[4]),
        .Q(\xsdb_reg_reg_n_0_[4] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg_stat" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_stat_757
   (\G_1PIPE_IFACE.s_daddr_r_reg[2] ,
    \G_1PIPE_IFACE.s_daddr_r_reg[2]_0 ,
    Q,
    s_daddr_o,
    D,
    s_dclk_o);
  output \G_1PIPE_IFACE.s_daddr_r_reg[2] ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[2]_0 ;
  output [7:0]Q;
  input [4:0]s_daddr_o;
  input [9:0]D;
  input s_dclk_o;

  wire [9:0]D;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[2] ;
  wire \G_1PIPE_IFACE.s_daddr_r_reg[2]_0 ;
  wire [7:0]Q;
  wire [4:0]s_daddr_o;
  wire s_dclk_o;
  wire \xsdb_reg_reg_n_0_[6] ;
  wire \xsdb_reg_reg_n_0_[7] ;

  LUT6 #(
    .INIT(64'h0000000000000E00)) 
    \regSlaveDo[6]_i_3 
       (.I0(s_daddr_o[2]),
        .I1(\xsdb_reg_reg_n_0_[6] ),
        .I2(s_daddr_o[0]),
        .I3(s_daddr_o[4]),
        .I4(s_daddr_o[1]),
        .I5(s_daddr_o[3]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[2] ));
  LUT6 #(
    .INIT(64'h0000000000000E00)) 
    \regSlaveDo[7]_i_3 
       (.I0(s_daddr_o[2]),
        .I1(\xsdb_reg_reg_n_0_[7] ),
        .I2(s_daddr_o[0]),
        .I3(s_daddr_o[4]),
        .I4(s_daddr_o[1]),
        .I5(s_daddr_o[3]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[2]_0 ));
  FDRE \xsdb_reg_reg[10] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \xsdb_reg_reg[11] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \xsdb_reg_reg[12] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[5]),
        .R(1'b0));
  FDRE \xsdb_reg_reg[13] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[6]),
        .R(1'b0));
  FDRE \xsdb_reg_reg[14] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(D[9]),
        .Q(Q[7]),
        .R(1'b0));
  FDRE \xsdb_reg_reg[5] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \xsdb_reg_reg[6] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(D[1]),
        .Q(\xsdb_reg_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \xsdb_reg_reg[7] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(D[2]),
        .Q(\xsdb_reg_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \xsdb_reg_reg[8] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \xsdb_reg_reg[9] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg_stat" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_stat_761
   (\xsdb_reg_reg[0]_0 ,
    \G_1PIPE_IFACE.s_daddr_r_reg[4] ,
    \xsdb_reg_reg[2]_0 ,
    \regSlaveDo_reg[0] ,
    s_daddr_o,
    \regSlaveDo_reg[0]_0 ,
    \regSlaveDo_reg[1] ,
    \regSlaveDo_reg[1]_0 ,
    \regSlaveDo_reg[1]_1 ,
    Q,
    rxrate_i,
    s_dclk_o);
  output \xsdb_reg_reg[0]_0 ;
  output \G_1PIPE_IFACE.s_daddr_r_reg[4] ;
  output [0:0]\xsdb_reg_reg[2]_0 ;
  input \regSlaveDo_reg[0] ;
  input [4:0]s_daddr_o;
  input [0:0]\regSlaveDo_reg[0]_0 ;
  input \regSlaveDo_reg[1] ;
  input \regSlaveDo_reg[1]_0 ;
  input \regSlaveDo_reg[1]_1 ;
  input [0:0]Q;
  input [2:0]rxrate_i;
  input s_dclk_o;

  wire \G_1PIPE_IFACE.s_daddr_r_reg[4] ;
  wire [0:0]Q;
  wire \regSlaveDo[1]_i_5_n_0 ;
  wire \regSlaveDo_reg[0] ;
  wire [0:0]\regSlaveDo_reg[0]_0 ;
  wire \regSlaveDo_reg[1] ;
  wire \regSlaveDo_reg[1]_0 ;
  wire \regSlaveDo_reg[1]_1 ;
  wire [2:0]rxrate_i;
  wire [4:0]s_daddr_o;
  wire s_dclk_o;
  wire \xsdb_reg_reg[0]_0 ;
  wire [0:0]\xsdb_reg_reg[2]_0 ;
  wire \xsdb_reg_reg_n_0_[0] ;
  wire \xsdb_reg_reg_n_0_[1] ;

  LUT6 #(
    .INIT(64'h0808000000000C00)) 
    \regSlaveDo[0]_i_3 
       (.I0(\xsdb_reg_reg_n_0_[0] ),
        .I1(\regSlaveDo_reg[0] ),
        .I2(s_daddr_o[1]),
        .I3(\regSlaveDo_reg[0]_0 ),
        .I4(s_daddr_o[3]),
        .I5(s_daddr_o[2]),
        .O(\xsdb_reg_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hAA00AA000000FC00)) 
    \regSlaveDo[1]_i_3 
       (.I0(\regSlaveDo[1]_i_5_n_0 ),
        .I1(\regSlaveDo_reg[1] ),
        .I2(\regSlaveDo_reg[1]_0 ),
        .I3(\regSlaveDo_reg[1]_1 ),
        .I4(s_daddr_o[3]),
        .I5(s_daddr_o[2]),
        .O(\G_1PIPE_IFACE.s_daddr_r_reg[4] ));
  LUT6 #(
    .INIT(64'h3000200C0000200C)) 
    \regSlaveDo[1]_i_5 
       (.I0(\xsdb_reg_reg_n_0_[1] ),
        .I1(s_daddr_o[4]),
        .I2(s_daddr_o[0]),
        .I3(s_daddr_o[3]),
        .I4(s_daddr_o[1]),
        .I5(Q),
        .O(\regSlaveDo[1]_i_5_n_0 ));
  FDRE \xsdb_reg_reg[0] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(rxrate_i[0]),
        .Q(\xsdb_reg_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \xsdb_reg_reg[1] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(rxrate_i[1]),
        .Q(\xsdb_reg_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \xsdb_reg_reg[2] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(rxrate_i[2]),
        .Q(\xsdb_reg_reg[2]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xsdbs_v1_0_2_reg_stat" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_reg_stat_762
   (\xsdb_reg_reg[5]_0 ,
    rxlpmen_i,
    s_dclk_o,
    \regSlaveDo_reg[5] ,
    s_daddr_o);
  output \xsdb_reg_reg[5]_0 ;
  input rxlpmen_i;
  input s_dclk_o;
  input \regSlaveDo_reg[5] ;
  input [3:0]s_daddr_o;

  wire \regSlaveDo_reg[5] ;
  wire rxlpmen_i;
  wire [3:0]s_daddr_o;
  wire s_dclk_o;
  wire \xsdb_reg_reg[5]_0 ;
  wire \xsdb_reg_reg_n_0_[5] ;

  LUT6 #(
    .INIT(64'h0000000000000080)) 
    \regSlaveDo[5]_i_5 
       (.I0(\regSlaveDo_reg[5] ),
        .I1(\xsdb_reg_reg_n_0_[5] ),
        .I2(s_daddr_o[0]),
        .I3(s_daddr_o[3]),
        .I4(s_daddr_o[2]),
        .I5(s_daddr_o[1]),
        .O(\xsdb_reg_reg[5]_0 ));
  FDRE \xsdb_reg_reg[5] 
       (.C(s_dclk_o),
        .CE(1'b1),
        .D(rxlpmen_i),
        .Q(\xsdb_reg_reg_n_0_[5] ),
        .R(1'b0));
endmodule

(* C_BUILD_REVISION = "0" *) (* C_CORE_INFO1 = "128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) (* C_CORE_INFO2 = "128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
(* C_CORE_MAJOR_VER = "3" *) (* C_CORE_MINOR_VER = "0" *) (* C_CORE_TYPE = "16'b0000000000000100" *) 
(* C_CSE_DRV_VER = "16'b0000000000000001" *) (* C_MAJOR_VERSION = "2013" *) (* C_MINOR_VERSION = "3" *) 
(* C_NEXT_SLAVE = "1" *) (* C_PIPE_IFACE = "1" *) (* C_USE_TEST_REG = "1" *) 
(* C_XDEVICEFAMILY = "virtex7" *) (* C_XSDB_SLAVE_TYPE = "16'b0000010000010010" *) (* dont_touch = "true" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_xsdbs
   (s_rst_o,
    s_dclk_o,
    s_den_o,
    s_dwe_o,
    s_daddr_o,
    s_di_o,
    sl_oport_o,
    s_do_i,
    sl_iport_i,
    s_drdy_i);
  output s_rst_o;
  output s_dclk_o;
  output s_den_o;
  output s_dwe_o;
  output [16:0]s_daddr_o;
  output [15:0]s_di_o;
  output [16:0]sl_oport_o;
  input [15:0]s_do_i;
  input [36:0]sl_iport_i;
  input s_drdy_i;

  wire \G_1PIPE_IFACE.s_den_r0 ;
  wire \G_1PIPE_IFACE.s_den_r_i_2_n_0 ;
  wire \G_1PIPE_IFACE.s_drdy_r_i_1_n_0 ;
  wire [15:0]p_0_in;
  wire [15:0]reg_do;
  wire \reg_do[0]_i_2_n_0 ;
  wire \reg_do[0]_i_3_n_0 ;
  wire \reg_do[0]_i_4_n_0 ;
  wire \reg_do[10]_i_2_n_0 ;
  wire \reg_do[10]_i_3_n_0 ;
  wire \reg_do[10]_i_4_n_0 ;
  wire \reg_do[10]_i_5_n_0 ;
  wire \reg_do[10]_i_6_n_0 ;
  wire \reg_do[10]_i_7_n_0 ;
  wire \reg_do[10]_i_8_n_0 ;
  wire \reg_do[11]_i_2_n_0 ;
  wire \reg_do[11]_i_3_n_0 ;
  wire \reg_do[12]_i_2_n_0 ;
  wire \reg_do[12]_i_3_n_0 ;
  wire \reg_do[13]_i_2_n_0 ;
  wire \reg_do[13]_i_3_n_0 ;
  wire \reg_do[14]_i_2_n_0 ;
  wire \reg_do[14]_i_3_n_0 ;
  wire \reg_do[15]_i_2_n_0 ;
  wire \reg_do[15]_i_3_n_0 ;
  wire \reg_do[15]_i_4_n_0 ;
  wire \reg_do[15]_i_5_n_0 ;
  wire \reg_do[15]_i_6_n_0 ;
  wire \reg_do[1]_i_2_n_0 ;
  wire \reg_do[1]_i_3_n_0 ;
  wire \reg_do[1]_i_4_n_0 ;
  wire \reg_do[1]_i_5_n_0 ;
  wire \reg_do[2]_i_2_n_0 ;
  wire \reg_do[2]_i_3_n_0 ;
  wire \reg_do[2]_i_4_n_0 ;
  wire \reg_do[3]_i_2_n_0 ;
  wire \reg_do[3]_i_3_n_0 ;
  wire \reg_do[3]_i_4_n_0 ;
  wire \reg_do[4]_i_2_n_0 ;
  wire \reg_do[4]_i_3_n_0 ;
  wire \reg_do[4]_i_4_n_0 ;
  wire \reg_do[4]_i_5_n_0 ;
  wire \reg_do[5]_i_2_n_0 ;
  wire \reg_do[5]_i_3_n_0 ;
  wire \reg_do[6]_i_2_n_0 ;
  wire \reg_do[6]_i_3_n_0 ;
  wire \reg_do[6]_i_4_n_0 ;
  wire \reg_do[7]_i_2_n_0 ;
  wire \reg_do[7]_i_3_n_0 ;
  wire \reg_do[7]_i_4_n_0 ;
  wire \reg_do[8]_i_2_n_0 ;
  wire \reg_do[8]_i_3_n_0 ;
  wire \reg_do[8]_i_4_n_0 ;
  wire \reg_do[9]_i_2_n_0 ;
  wire \reg_do[9]_i_3_n_0 ;
  wire \reg_do[9]_i_4_n_0 ;
  wire \reg_do[9]_i_5_n_0 ;
  wire \reg_do_reg_n_0_[0] ;
  wire \reg_do_reg_n_0_[10] ;
  wire \reg_do_reg_n_0_[11] ;
  wire \reg_do_reg_n_0_[12] ;
  wire \reg_do_reg_n_0_[13] ;
  wire \reg_do_reg_n_0_[14] ;
  wire \reg_do_reg_n_0_[15] ;
  wire \reg_do_reg_n_0_[1] ;
  wire \reg_do_reg_n_0_[2] ;
  wire \reg_do_reg_n_0_[3] ;
  wire \reg_do_reg_n_0_[4] ;
  wire \reg_do_reg_n_0_[5] ;
  wire \reg_do_reg_n_0_[6] ;
  wire \reg_do_reg_n_0_[7] ;
  wire \reg_do_reg_n_0_[8] ;
  wire \reg_do_reg_n_0_[9] ;
  wire reg_drdy;
  wire reg_drdy0;
  wire [15:0]reg_test;
  wire reg_test0;
  wire [16:0]s_daddr_o;
  wire s_den_o;
  wire [15:0]s_di_o;
  wire [15:0]s_do_i;
  wire s_drdy_i;
  wire s_dwe_o;
  wire [36:0]sl_iport_i;
  wire [16:0]sl_oport_o;
  (* DONT_TOUCH *) (* UUID = "1" *) wire [127:0]uuid_stamp;

  assign s_dclk_o = sl_iport_i[1];
  assign s_rst_o = sl_iport_i[0];
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[0] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[4]),
        .Q(s_daddr_o[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[10] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[14]),
        .Q(s_daddr_o[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[11] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[15]),
        .Q(s_daddr_o[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[12] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[16]),
        .Q(s_daddr_o[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[13] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[17]),
        .Q(s_daddr_o[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[14] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[18]),
        .Q(s_daddr_o[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[15] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[19]),
        .Q(s_daddr_o[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[16] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[20]),
        .Q(s_daddr_o[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[1] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[5]),
        .Q(s_daddr_o[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[2] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[6]),
        .Q(s_daddr_o[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[3] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[7]),
        .Q(s_daddr_o[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[4] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[8]),
        .Q(s_daddr_o[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[5] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[9]),
        .Q(s_daddr_o[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[6] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[10]),
        .Q(s_daddr_o[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[7] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[11]),
        .Q(s_daddr_o[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[8] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[12]),
        .Q(s_daddr_o[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[9] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[13]),
        .Q(s_daddr_o[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT5 #(
    .INIT(32'h7FFF0000)) 
    \G_1PIPE_IFACE.s_den_r_i_1 
       (.I0(\G_1PIPE_IFACE.s_den_r_i_2_n_0 ),
        .I1(sl_iport_i[12]),
        .I2(sl_iport_i[13]),
        .I3(sl_iport_i[14]),
        .I4(sl_iport_i[2]),
        .O(\G_1PIPE_IFACE.s_den_r0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \G_1PIPE_IFACE.s_den_r_i_2 
       (.I0(sl_iport_i[15]),
        .I1(sl_iport_i[16]),
        .I2(sl_iport_i[17]),
        .I3(sl_iport_i[18]),
        .I4(sl_iport_i[20]),
        .I5(sl_iport_i[19]),
        .O(\G_1PIPE_IFACE.s_den_r_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_den_r_reg 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(\G_1PIPE_IFACE.s_den_r0 ),
        .Q(s_den_o),
        .R(sl_iport_i[0]));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[0] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[21]),
        .Q(s_di_o[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[10] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[31]),
        .Q(s_di_o[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[11] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[32]),
        .Q(s_di_o[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[12] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[33]),
        .Q(s_di_o[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[13] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[34]),
        .Q(s_di_o[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[14] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[35]),
        .Q(s_di_o[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[15] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[36]),
        .Q(s_di_o[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[1] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[22]),
        .Q(s_di_o[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[2] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[23]),
        .Q(s_di_o[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[3] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[24]),
        .Q(s_di_o[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[4] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[25]),
        .Q(s_di_o[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[5] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[26]),
        .Q(s_di_o[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[6] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[27]),
        .Q(s_di_o[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[7] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[28]),
        .Q(s_di_o[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[8] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[29]),
        .Q(s_di_o[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[9] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[30]),
        .Q(s_di_o[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[0]_i_1 
       (.I0(\reg_do_reg_n_0_[0] ),
        .I1(s_do_i[0]),
        .I2(reg_drdy),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[10]_i_1 
       (.I0(\reg_do_reg_n_0_[10] ),
        .I1(s_do_i[10]),
        .I2(reg_drdy),
        .O(p_0_in[10]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[11]_i_1 
       (.I0(\reg_do_reg_n_0_[11] ),
        .I1(s_do_i[11]),
        .I2(reg_drdy),
        .O(p_0_in[11]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[12]_i_1 
       (.I0(\reg_do_reg_n_0_[12] ),
        .I1(s_do_i[12]),
        .I2(reg_drdy),
        .O(p_0_in[12]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[13]_i_1 
       (.I0(\reg_do_reg_n_0_[13] ),
        .I1(s_do_i[13]),
        .I2(reg_drdy),
        .O(p_0_in[13]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[14]_i_1 
       (.I0(\reg_do_reg_n_0_[14] ),
        .I1(s_do_i[14]),
        .I2(reg_drdy),
        .O(p_0_in[14]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[15]_i_1 
       (.I0(\reg_do_reg_n_0_[15] ),
        .I1(s_do_i[15]),
        .I2(reg_drdy),
        .O(p_0_in[15]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[1]_i_1 
       (.I0(\reg_do_reg_n_0_[1] ),
        .I1(s_do_i[1]),
        .I2(reg_drdy),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[2]_i_1 
       (.I0(\reg_do_reg_n_0_[2] ),
        .I1(s_do_i[2]),
        .I2(reg_drdy),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[3]_i_1 
       (.I0(\reg_do_reg_n_0_[3] ),
        .I1(s_do_i[3]),
        .I2(reg_drdy),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[4]_i_1 
       (.I0(\reg_do_reg_n_0_[4] ),
        .I1(s_do_i[4]),
        .I2(reg_drdy),
        .O(p_0_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[5]_i_1 
       (.I0(\reg_do_reg_n_0_[5] ),
        .I1(s_do_i[5]),
        .I2(reg_drdy),
        .O(p_0_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[6]_i_1 
       (.I0(\reg_do_reg_n_0_[6] ),
        .I1(s_do_i[6]),
        .I2(reg_drdy),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[7]_i_1 
       (.I0(\reg_do_reg_n_0_[7] ),
        .I1(s_do_i[7]),
        .I2(reg_drdy),
        .O(p_0_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[8]_i_1 
       (.I0(\reg_do_reg_n_0_[8] ),
        .I1(s_do_i[8]),
        .I2(reg_drdy),
        .O(p_0_in[8]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[9]_i_1 
       (.I0(\reg_do_reg_n_0_[9] ),
        .I1(s_do_i[9]),
        .I2(reg_drdy),
        .O(p_0_in[9]));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[0] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[0]),
        .Q(sl_oport_o[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[10] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[10]),
        .Q(sl_oport_o[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[11] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[11]),
        .Q(sl_oport_o[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[12] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[12]),
        .Q(sl_oport_o[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[13] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[13]),
        .Q(sl_oport_o[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[14] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[14]),
        .Q(sl_oport_o[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[15] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[15]),
        .Q(sl_oport_o[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[1] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[1]),
        .Q(sl_oport_o[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[2] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[2]),
        .Q(sl_oport_o[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[3] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[3]),
        .Q(sl_oport_o[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[4] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[4]),
        .Q(sl_oport_o[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[5] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[5]),
        .Q(sl_oport_o[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[6] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[6]),
        .Q(sl_oport_o[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[7] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[7]),
        .Q(sl_oport_o[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[8] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[8]),
        .Q(sl_oport_o[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[9] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[9]),
        .Q(sl_oport_o[10]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    \G_1PIPE_IFACE.s_drdy_r_i_1 
       (.I0(s_drdy_i),
        .I1(reg_drdy),
        .O(\G_1PIPE_IFACE.s_drdy_r_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_drdy_r_reg 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(\G_1PIPE_IFACE.s_drdy_r_i_1_n_0 ),
        .Q(sl_oport_o[0]),
        .R(sl_iport_i[0]));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_dwe_r_reg 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[3]),
        .Q(s_dwe_o),
        .R(sl_iport_i[0]));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \reg_do[0]_i_1 
       (.I0(\reg_do[0]_i_2_n_0 ),
        .I1(\reg_do[15]_i_2_n_0 ),
        .I2(\reg_do[0]_i_3_n_0 ),
        .I3(\reg_do[15]_i_4_n_0 ),
        .I4(\reg_do[0]_i_4_n_0 ),
        .O(reg_do[0]));
  LUT5 #(
    .INIT(32'hCC8C0C00)) 
    \reg_do[0]_i_2 
       (.I0(reg_test[0]),
        .I1(\reg_do[9]_i_5_n_0 ),
        .I2(sl_iport_i[5]),
        .I3(sl_iport_i[4]),
        .I4(\reg_do[10]_i_8_n_0 ),
        .O(\reg_do[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[0]_i_3 
       (.I0(uuid_stamp[16]),
        .I1(uuid_stamp[48]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[0]),
        .I5(uuid_stamp[32]),
        .O(\reg_do[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[0]_i_4 
       (.I0(uuid_stamp[80]),
        .I1(uuid_stamp[112]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[64]),
        .I5(uuid_stamp[96]),
        .O(\reg_do[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFAFAEAAAAAAAE)) 
    \reg_do[10]_i_2 
       (.I0(\reg_do[10]_i_4_n_0 ),
        .I1(\reg_do[10]_i_5_n_0 ),
        .I2(sl_iport_i[7]),
        .I3(sl_iport_i[6]),
        .I4(sl_iport_i[8]),
        .I5(\reg_do[10]_i_6_n_0 ),
        .O(\reg_do[10]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAAEEEABB)) 
    \reg_do[10]_i_3 
       (.I0(\reg_do[10]_i_7_n_0 ),
        .I1(\reg_do[10]_i_8_n_0 ),
        .I2(reg_test[10]),
        .I3(sl_iport_i[5]),
        .I4(sl_iport_i[4]),
        .O(\reg_do[10]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \reg_do[10]_i_4 
       (.I0(sl_iport_i[8]),
        .I1(sl_iport_i[9]),
        .I2(sl_iport_i[10]),
        .O(\reg_do[10]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[10]_i_5 
       (.I0(uuid_stamp[26]),
        .I1(uuid_stamp[58]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[10]),
        .I5(uuid_stamp[42]),
        .O(\reg_do[10]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[10]_i_6 
       (.I0(uuid_stamp[90]),
        .I1(uuid_stamp[122]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[74]),
        .I5(uuid_stamp[106]),
        .O(\reg_do[10]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT4 #(
    .INIT(16'hDFFF)) 
    \reg_do[10]_i_7 
       (.I0(sl_iport_i[9]),
        .I1(sl_iport_i[7]),
        .I2(sl_iport_i[8]),
        .I3(sl_iport_i[10]),
        .O(\reg_do[10]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \reg_do[10]_i_8 
       (.I0(sl_iport_i[7]),
        .I1(sl_iport_i[6]),
        .I2(sl_iport_i[8]),
        .O(\reg_do[10]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \reg_do[11]_i_1 
       (.I0(\reg_do[15]_i_2_n_0 ),
        .I1(\reg_do[11]_i_2_n_0 ),
        .I2(\reg_do[15]_i_4_n_0 ),
        .I3(\reg_do[11]_i_3_n_0 ),
        .I4(reg_test[11]),
        .I5(\reg_do[15]_i_6_n_0 ),
        .O(reg_do[11]));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[11]_i_2 
       (.I0(uuid_stamp[27]),
        .I1(uuid_stamp[59]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[11]),
        .I5(uuid_stamp[43]),
        .O(\reg_do[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[11]_i_3 
       (.I0(uuid_stamp[91]),
        .I1(uuid_stamp[123]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[75]),
        .I5(uuid_stamp[107]),
        .O(\reg_do[11]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \reg_do[12]_i_1 
       (.I0(\reg_do[15]_i_2_n_0 ),
        .I1(\reg_do[12]_i_2_n_0 ),
        .I2(\reg_do[15]_i_4_n_0 ),
        .I3(\reg_do[12]_i_3_n_0 ),
        .I4(reg_test[12]),
        .I5(\reg_do[15]_i_6_n_0 ),
        .O(reg_do[12]));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[12]_i_2 
       (.I0(uuid_stamp[28]),
        .I1(uuid_stamp[60]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[12]),
        .I5(uuid_stamp[44]),
        .O(\reg_do[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[12]_i_3 
       (.I0(uuid_stamp[92]),
        .I1(uuid_stamp[124]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[76]),
        .I5(uuid_stamp[108]),
        .O(\reg_do[12]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \reg_do[13]_i_1 
       (.I0(\reg_do[15]_i_2_n_0 ),
        .I1(\reg_do[13]_i_2_n_0 ),
        .I2(\reg_do[15]_i_4_n_0 ),
        .I3(\reg_do[13]_i_3_n_0 ),
        .I4(reg_test[13]),
        .I5(\reg_do[15]_i_6_n_0 ),
        .O(reg_do[13]));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[13]_i_2 
       (.I0(uuid_stamp[29]),
        .I1(uuid_stamp[61]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[13]),
        .I5(uuid_stamp[45]),
        .O(\reg_do[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[13]_i_3 
       (.I0(uuid_stamp[93]),
        .I1(uuid_stamp[125]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[77]),
        .I5(uuid_stamp[109]),
        .O(\reg_do[13]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \reg_do[14]_i_1 
       (.I0(\reg_do[15]_i_2_n_0 ),
        .I1(\reg_do[14]_i_2_n_0 ),
        .I2(\reg_do[15]_i_4_n_0 ),
        .I3(\reg_do[14]_i_3_n_0 ),
        .I4(reg_test[14]),
        .I5(\reg_do[15]_i_6_n_0 ),
        .O(reg_do[14]));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[14]_i_2 
       (.I0(uuid_stamp[30]),
        .I1(uuid_stamp[62]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[14]),
        .I5(uuid_stamp[46]),
        .O(\reg_do[14]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[14]_i_3 
       (.I0(uuid_stamp[94]),
        .I1(uuid_stamp[126]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[78]),
        .I5(uuid_stamp[110]),
        .O(\reg_do[14]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \reg_do[15]_i_1 
       (.I0(\reg_do[15]_i_2_n_0 ),
        .I1(\reg_do[15]_i_3_n_0 ),
        .I2(\reg_do[15]_i_4_n_0 ),
        .I3(\reg_do[15]_i_5_n_0 ),
        .I4(reg_test[15]),
        .I5(\reg_do[15]_i_6_n_0 ),
        .O(reg_do[15]));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \reg_do[15]_i_2 
       (.I0(sl_iport_i[10]),
        .I1(sl_iport_i[9]),
        .I2(sl_iport_i[11]),
        .I3(sl_iport_i[8]),
        .I4(sl_iport_i[6]),
        .I5(sl_iport_i[7]),
        .O(\reg_do[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[15]_i_3 
       (.I0(uuid_stamp[31]),
        .I1(uuid_stamp[63]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[15]),
        .I5(uuid_stamp[47]),
        .O(\reg_do[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    \reg_do[15]_i_4 
       (.I0(sl_iport_i[10]),
        .I1(sl_iport_i[9]),
        .I2(sl_iport_i[11]),
        .I3(sl_iport_i[8]),
        .I4(sl_iport_i[6]),
        .I5(sl_iport_i[7]),
        .O(\reg_do[15]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[15]_i_5 
       (.I0(uuid_stamp[95]),
        .I1(uuid_stamp[127]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[79]),
        .I5(uuid_stamp[111]),
        .O(\reg_do[15]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h000000004F000000)) 
    \reg_do[15]_i_6 
       (.I0(sl_iport_i[7]),
        .I1(sl_iport_i[6]),
        .I2(sl_iport_i[8]),
        .I3(\reg_do[9]_i_5_n_0 ),
        .I4(sl_iport_i[5]),
        .I5(sl_iport_i[4]),
        .O(\reg_do[15]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFAFAEAAAAAAAE)) 
    \reg_do[1]_i_2 
       (.I0(\reg_do[10]_i_4_n_0 ),
        .I1(\reg_do[1]_i_4_n_0 ),
        .I2(sl_iport_i[7]),
        .I3(sl_iport_i[6]),
        .I4(sl_iport_i[8]),
        .I5(\reg_do[1]_i_5_n_0 ),
        .O(\reg_do[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAAAAEAFF)) 
    \reg_do[1]_i_3 
       (.I0(\reg_do[10]_i_7_n_0 ),
        .I1(reg_test[1]),
        .I2(\reg_do[10]_i_8_n_0 ),
        .I3(sl_iport_i[5]),
        .I4(sl_iport_i[4]),
        .O(\reg_do[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[1]_i_4 
       (.I0(uuid_stamp[17]),
        .I1(uuid_stamp[49]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[1]),
        .I5(uuid_stamp[33]),
        .O(\reg_do[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[1]_i_5 
       (.I0(uuid_stamp[81]),
        .I1(uuid_stamp[113]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[65]),
        .I5(uuid_stamp[97]),
        .O(\reg_do[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \reg_do[2]_i_1 
       (.I0(\reg_do[15]_i_2_n_0 ),
        .I1(\reg_do[2]_i_2_n_0 ),
        .I2(\reg_do[15]_i_4_n_0 ),
        .I3(\reg_do[2]_i_3_n_0 ),
        .I4(\reg_do[2]_i_4_n_0 ),
        .I5(\reg_do[9]_i_5_n_0 ),
        .O(reg_do[2]));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[2]_i_2 
       (.I0(uuid_stamp[18]),
        .I1(uuid_stamp[50]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[2]),
        .I5(uuid_stamp[34]),
        .O(\reg_do[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[2]_i_3 
       (.I0(uuid_stamp[82]),
        .I1(uuid_stamp[114]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[66]),
        .I5(uuid_stamp[98]),
        .O(\reg_do[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000EFAA30FF0000)) 
    \reg_do[2]_i_4 
       (.I0(reg_test[2]),
        .I1(sl_iport_i[7]),
        .I2(sl_iport_i[6]),
        .I3(sl_iport_i[8]),
        .I4(sl_iport_i[4]),
        .I5(sl_iport_i[5]),
        .O(\reg_do[2]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \reg_do[3]_i_1 
       (.I0(\reg_do[3]_i_2_n_0 ),
        .I1(\reg_do[15]_i_2_n_0 ),
        .I2(\reg_do[3]_i_3_n_0 ),
        .I3(\reg_do[15]_i_4_n_0 ),
        .I4(\reg_do[3]_i_4_n_0 ),
        .O(reg_do[3]));
  LUT5 #(
    .INIT(32'h00C08000)) 
    \reg_do[3]_i_2 
       (.I0(reg_test[3]),
        .I1(\reg_do[10]_i_8_n_0 ),
        .I2(\reg_do[9]_i_5_n_0 ),
        .I3(sl_iport_i[5]),
        .I4(sl_iport_i[4]),
        .O(\reg_do[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[3]_i_3 
       (.I0(uuid_stamp[19]),
        .I1(uuid_stamp[51]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[3]),
        .I5(uuid_stamp[35]),
        .O(\reg_do[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[3]_i_4 
       (.I0(uuid_stamp[83]),
        .I1(uuid_stamp[115]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[67]),
        .I5(uuid_stamp[99]),
        .O(\reg_do[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFAFAEAAAAAAAE)) 
    \reg_do[4]_i_2 
       (.I0(\reg_do[10]_i_4_n_0 ),
        .I1(\reg_do[4]_i_4_n_0 ),
        .I2(sl_iport_i[7]),
        .I3(sl_iport_i[6]),
        .I4(sl_iport_i[8]),
        .I5(\reg_do[4]_i_5_n_0 ),
        .O(\reg_do[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAAEEEABB)) 
    \reg_do[4]_i_3 
       (.I0(\reg_do[10]_i_7_n_0 ),
        .I1(\reg_do[10]_i_8_n_0 ),
        .I2(reg_test[4]),
        .I3(sl_iport_i[5]),
        .I4(sl_iport_i[4]),
        .O(\reg_do[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[4]_i_4 
       (.I0(uuid_stamp[20]),
        .I1(uuid_stamp[52]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[4]),
        .I5(uuid_stamp[36]),
        .O(\reg_do[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[4]_i_5 
       (.I0(uuid_stamp[84]),
        .I1(uuid_stamp[116]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[68]),
        .I5(uuid_stamp[100]),
        .O(\reg_do[4]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \reg_do[5]_i_1 
       (.I0(\reg_do[15]_i_2_n_0 ),
        .I1(\reg_do[5]_i_2_n_0 ),
        .I2(\reg_do[15]_i_4_n_0 ),
        .I3(\reg_do[5]_i_3_n_0 ),
        .I4(reg_test[5]),
        .I5(\reg_do[15]_i_6_n_0 ),
        .O(reg_do[5]));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[5]_i_2 
       (.I0(uuid_stamp[21]),
        .I1(uuid_stamp[53]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[5]),
        .I5(uuid_stamp[37]),
        .O(\reg_do[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[5]_i_3 
       (.I0(uuid_stamp[85]),
        .I1(uuid_stamp[117]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[69]),
        .I5(uuid_stamp[101]),
        .O(\reg_do[5]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \reg_do[6]_i_1 
       (.I0(\reg_do[6]_i_2_n_0 ),
        .I1(\reg_do[15]_i_2_n_0 ),
        .I2(\reg_do[6]_i_3_n_0 ),
        .I3(\reg_do[15]_i_4_n_0 ),
        .I4(\reg_do[6]_i_4_n_0 ),
        .O(reg_do[6]));
  LUT5 #(
    .INIT(32'h00C08000)) 
    \reg_do[6]_i_2 
       (.I0(reg_test[6]),
        .I1(\reg_do[10]_i_8_n_0 ),
        .I2(\reg_do[9]_i_5_n_0 ),
        .I3(sl_iport_i[5]),
        .I4(sl_iport_i[4]),
        .O(\reg_do[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[6]_i_3 
       (.I0(uuid_stamp[22]),
        .I1(uuid_stamp[54]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[6]),
        .I5(uuid_stamp[38]),
        .O(\reg_do[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[6]_i_4 
       (.I0(uuid_stamp[86]),
        .I1(uuid_stamp[118]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[70]),
        .I5(uuid_stamp[102]),
        .O(\reg_do[6]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \reg_do[7]_i_1 
       (.I0(\reg_do[7]_i_2_n_0 ),
        .I1(\reg_do[15]_i_2_n_0 ),
        .I2(\reg_do[7]_i_3_n_0 ),
        .I3(\reg_do[15]_i_4_n_0 ),
        .I4(\reg_do[7]_i_4_n_0 ),
        .O(reg_do[7]));
  LUT5 #(
    .INIT(32'h00C08000)) 
    \reg_do[7]_i_2 
       (.I0(reg_test[7]),
        .I1(\reg_do[10]_i_8_n_0 ),
        .I2(\reg_do[9]_i_5_n_0 ),
        .I3(sl_iport_i[5]),
        .I4(sl_iport_i[4]),
        .O(\reg_do[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[7]_i_3 
       (.I0(uuid_stamp[23]),
        .I1(uuid_stamp[55]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[7]),
        .I5(uuid_stamp[39]),
        .O(\reg_do[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[7]_i_4 
       (.I0(uuid_stamp[87]),
        .I1(uuid_stamp[119]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[71]),
        .I5(uuid_stamp[103]),
        .O(\reg_do[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \reg_do[8]_i_1 
       (.I0(\reg_do[15]_i_2_n_0 ),
        .I1(\reg_do[8]_i_2_n_0 ),
        .I2(\reg_do[15]_i_4_n_0 ),
        .I3(\reg_do[8]_i_3_n_0 ),
        .I4(\reg_do[8]_i_4_n_0 ),
        .I5(\reg_do[9]_i_5_n_0 ),
        .O(reg_do[8]));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[8]_i_2 
       (.I0(uuid_stamp[24]),
        .I1(uuid_stamp[56]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[8]),
        .I5(uuid_stamp[40]),
        .O(\reg_do[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[8]_i_3 
       (.I0(uuid_stamp[88]),
        .I1(uuid_stamp[120]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[72]),
        .I5(uuid_stamp[104]),
        .O(\reg_do[8]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9A559A5530FF1055)) 
    \reg_do[8]_i_4 
       (.I0(sl_iport_i[5]),
        .I1(sl_iport_i[7]),
        .I2(sl_iport_i[6]),
        .I3(sl_iport_i[8]),
        .I4(reg_test[8]),
        .I5(sl_iport_i[4]),
        .O(\reg_do[8]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \reg_do[9]_i_1 
       (.I0(\reg_do[15]_i_2_n_0 ),
        .I1(\reg_do[9]_i_2_n_0 ),
        .I2(\reg_do[15]_i_4_n_0 ),
        .I3(\reg_do[9]_i_3_n_0 ),
        .I4(\reg_do[9]_i_4_n_0 ),
        .I5(\reg_do[9]_i_5_n_0 ),
        .O(reg_do[9]));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[9]_i_2 
       (.I0(uuid_stamp[25]),
        .I1(uuid_stamp[57]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[9]),
        .I5(uuid_stamp[41]),
        .O(\reg_do[9]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[9]_i_3 
       (.I0(uuid_stamp[89]),
        .I1(uuid_stamp[121]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[73]),
        .I5(uuid_stamp[105]),
        .O(\reg_do[9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hCF0030FF20AA0000)) 
    \reg_do[9]_i_4 
       (.I0(reg_test[9]),
        .I1(sl_iport_i[7]),
        .I2(sl_iport_i[6]),
        .I3(sl_iport_i[8]),
        .I4(sl_iport_i[5]),
        .I5(sl_iport_i[4]),
        .O(\reg_do[9]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    \reg_do[9]_i_5 
       (.I0(sl_iport_i[11]),
        .I1(sl_iport_i[10]),
        .I2(sl_iport_i[8]),
        .I3(sl_iport_i[7]),
        .I4(sl_iport_i[9]),
        .O(\reg_do[9]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[0] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[0]),
        .Q(\reg_do_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[10] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[10]),
        .Q(\reg_do_reg_n_0_[10] ),
        .R(1'b0));
  MUXF7 \reg_do_reg[10]_i_1 
       (.I0(\reg_do[10]_i_2_n_0 ),
        .I1(\reg_do[10]_i_3_n_0 ),
        .O(reg_do[10]),
        .S(sl_iport_i[11]));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[11] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[11]),
        .Q(\reg_do_reg_n_0_[11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[12] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[12]),
        .Q(\reg_do_reg_n_0_[12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[13] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[13]),
        .Q(\reg_do_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[14] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[14]),
        .Q(\reg_do_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[15] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[15]),
        .Q(\reg_do_reg_n_0_[15] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[1] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[1]),
        .Q(\reg_do_reg_n_0_[1] ),
        .R(1'b0));
  MUXF7 \reg_do_reg[1]_i_1 
       (.I0(\reg_do[1]_i_2_n_0 ),
        .I1(\reg_do[1]_i_3_n_0 ),
        .O(reg_do[1]),
        .S(sl_iport_i[11]));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[2] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[2]),
        .Q(\reg_do_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[3] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[3]),
        .Q(\reg_do_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[4] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[4]),
        .Q(\reg_do_reg_n_0_[4] ),
        .R(1'b0));
  MUXF7 \reg_do_reg[4]_i_1 
       (.I0(\reg_do[4]_i_2_n_0 ),
        .I1(\reg_do[4]_i_3_n_0 ),
        .O(reg_do[4]),
        .S(sl_iport_i[11]));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[5] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[5]),
        .Q(\reg_do_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[6] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[6]),
        .Q(\reg_do_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[7] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[7]),
        .Q(\reg_do_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[8] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[8]),
        .Q(\reg_do_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[9] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[9]),
        .Q(\reg_do_reg_n_0_[9] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    reg_drdy_i_1
       (.I0(\G_1PIPE_IFACE.s_den_r_i_2_n_0 ),
        .I1(sl_iport_i[12]),
        .I2(sl_iport_i[13]),
        .I3(sl_iport_i[14]),
        .I4(sl_iport_i[2]),
        .O(reg_drdy0));
  FDRE #(
    .INIT(1'b0)) 
    reg_drdy_reg
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_drdy0),
        .Q(reg_drdy),
        .R(sl_iport_i[0]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \reg_test[15]_i_1 
       (.I0(\G_1PIPE_IFACE.s_den_r_i_2_n_0 ),
        .I1(sl_iport_i[12]),
        .I2(sl_iport_i[13]),
        .I3(sl_iport_i[14]),
        .I4(sl_iport_i[3]),
        .I5(sl_iport_i[2]),
        .O(reg_test0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[0] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[21]),
        .Q(reg_test[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[10] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[31]),
        .Q(reg_test[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[11] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[32]),
        .Q(reg_test[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[12] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[33]),
        .Q(reg_test[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[13] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[34]),
        .Q(reg_test[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[14] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[35]),
        .Q(reg_test[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[15] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[36]),
        .Q(reg_test[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[1] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[22]),
        .Q(reg_test[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[2] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[23]),
        .Q(reg_test[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[3] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[24]),
        .Q(reg_test[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[4] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[25]),
        .Q(reg_test[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[5] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[26]),
        .Q(reg_test[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[6] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[27]),
        .Q(reg_test[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[7] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[28]),
        .Q(reg_test[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[8] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[29]),
        .Q(reg_test[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[9] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[30]),
        .Q(reg_test[9]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[0] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[0]),
        .Q(uuid_stamp[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[100] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[100]),
        .Q(uuid_stamp[100]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[101] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[101]),
        .Q(uuid_stamp[101]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[102] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[102]),
        .Q(uuid_stamp[102]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[103] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[103]),
        .Q(uuid_stamp[103]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[104] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[104]),
        .Q(uuid_stamp[104]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[105] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[105]),
        .Q(uuid_stamp[105]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[106] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[106]),
        .Q(uuid_stamp[106]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[107] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[107]),
        .Q(uuid_stamp[107]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[108] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[108]),
        .Q(uuid_stamp[108]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[109] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[109]),
        .Q(uuid_stamp[109]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[10] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[10]),
        .Q(uuid_stamp[10]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[110] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[110]),
        .Q(uuid_stamp[110]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[111] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[111]),
        .Q(uuid_stamp[111]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[112] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[112]),
        .Q(uuid_stamp[112]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[113] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[113]),
        .Q(uuid_stamp[113]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[114] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[114]),
        .Q(uuid_stamp[114]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[115] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[115]),
        .Q(uuid_stamp[115]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[116] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[116]),
        .Q(uuid_stamp[116]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[117] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[117]),
        .Q(uuid_stamp[117]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[118] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[118]),
        .Q(uuid_stamp[118]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[119] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[119]),
        .Q(uuid_stamp[119]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[11] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[11]),
        .Q(uuid_stamp[11]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[120] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[120]),
        .Q(uuid_stamp[120]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[121] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[121]),
        .Q(uuid_stamp[121]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[122] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[122]),
        .Q(uuid_stamp[122]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[123] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[123]),
        .Q(uuid_stamp[123]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[124] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[124]),
        .Q(uuid_stamp[124]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[125] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[125]),
        .Q(uuid_stamp[125]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[126] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[126]),
        .Q(uuid_stamp[126]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[127] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[127]),
        .Q(uuid_stamp[127]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[12] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[12]),
        .Q(uuid_stamp[12]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[13] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[13]),
        .Q(uuid_stamp[13]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[14] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[14]),
        .Q(uuid_stamp[14]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[15] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[15]),
        .Q(uuid_stamp[15]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[16] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[16]),
        .Q(uuid_stamp[16]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[17] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[17]),
        .Q(uuid_stamp[17]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[18] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[18]),
        .Q(uuid_stamp[18]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[19] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[19]),
        .Q(uuid_stamp[19]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[1] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[1]),
        .Q(uuid_stamp[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[20] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[20]),
        .Q(uuid_stamp[20]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[21] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[21]),
        .Q(uuid_stamp[21]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[22] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[22]),
        .Q(uuid_stamp[22]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[23] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[23]),
        .Q(uuid_stamp[23]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[24] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[24]),
        .Q(uuid_stamp[24]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[25] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[25]),
        .Q(uuid_stamp[25]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[26] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[26]),
        .Q(uuid_stamp[26]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[27] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[27]),
        .Q(uuid_stamp[27]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[28] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[28]),
        .Q(uuid_stamp[28]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[29] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[29]),
        .Q(uuid_stamp[29]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[2] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[2]),
        .Q(uuid_stamp[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[30] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[30]),
        .Q(uuid_stamp[30]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[31] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[31]),
        .Q(uuid_stamp[31]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[32] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[32]),
        .Q(uuid_stamp[32]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[33] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[33]),
        .Q(uuid_stamp[33]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[34] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[34]),
        .Q(uuid_stamp[34]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[35] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[35]),
        .Q(uuid_stamp[35]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[36] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[36]),
        .Q(uuid_stamp[36]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[37] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[37]),
        .Q(uuid_stamp[37]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[38] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[38]),
        .Q(uuid_stamp[38]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[39] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[39]),
        .Q(uuid_stamp[39]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[3] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[3]),
        .Q(uuid_stamp[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[40] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[40]),
        .Q(uuid_stamp[40]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[41] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[41]),
        .Q(uuid_stamp[41]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[42] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[42]),
        .Q(uuid_stamp[42]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[43] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[43]),
        .Q(uuid_stamp[43]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[44] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[44]),
        .Q(uuid_stamp[44]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[45] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[45]),
        .Q(uuid_stamp[45]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[46] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[46]),
        .Q(uuid_stamp[46]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[47] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[47]),
        .Q(uuid_stamp[47]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[48] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[48]),
        .Q(uuid_stamp[48]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[49] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[49]),
        .Q(uuid_stamp[49]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[4] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[4]),
        .Q(uuid_stamp[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[50] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[50]),
        .Q(uuid_stamp[50]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[51] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[51]),
        .Q(uuid_stamp[51]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[52] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[52]),
        .Q(uuid_stamp[52]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[53] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[53]),
        .Q(uuid_stamp[53]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[54] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[54]),
        .Q(uuid_stamp[54]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[55] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[55]),
        .Q(uuid_stamp[55]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[56] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[56]),
        .Q(uuid_stamp[56]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[57] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[57]),
        .Q(uuid_stamp[57]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[58] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[58]),
        .Q(uuid_stamp[58]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[59] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[59]),
        .Q(uuid_stamp[59]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[5] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[5]),
        .Q(uuid_stamp[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[60] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[60]),
        .Q(uuid_stamp[60]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[61] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[61]),
        .Q(uuid_stamp[61]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[62] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[62]),
        .Q(uuid_stamp[62]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[63] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[63]),
        .Q(uuid_stamp[63]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[64] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[64]),
        .Q(uuid_stamp[64]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[65] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[65]),
        .Q(uuid_stamp[65]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[66] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[66]),
        .Q(uuid_stamp[66]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[67] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[67]),
        .Q(uuid_stamp[67]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[68] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[68]),
        .Q(uuid_stamp[68]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[69] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[69]),
        .Q(uuid_stamp[69]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[6] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[6]),
        .Q(uuid_stamp[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[70] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[70]),
        .Q(uuid_stamp[70]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[71] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[71]),
        .Q(uuid_stamp[71]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[72] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[72]),
        .Q(uuid_stamp[72]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[73] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[73]),
        .Q(uuid_stamp[73]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[74] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[74]),
        .Q(uuid_stamp[74]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[75] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[75]),
        .Q(uuid_stamp[75]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[76] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[76]),
        .Q(uuid_stamp[76]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[77] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[77]),
        .Q(uuid_stamp[77]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[78] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[78]),
        .Q(uuid_stamp[78]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[79] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[79]),
        .Q(uuid_stamp[79]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[7] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[7]),
        .Q(uuid_stamp[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[80] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[80]),
        .Q(uuid_stamp[80]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[81] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[81]),
        .Q(uuid_stamp[81]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[82] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[82]),
        .Q(uuid_stamp[82]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[83] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[83]),
        .Q(uuid_stamp[83]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[84] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[84]),
        .Q(uuid_stamp[84]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[85] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[85]),
        .Q(uuid_stamp[85]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[86] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[86]),
        .Q(uuid_stamp[86]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[87] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[87]),
        .Q(uuid_stamp[87]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[88] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[88]),
        .Q(uuid_stamp[88]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[89] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[89]),
        .Q(uuid_stamp[89]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[8] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[8]),
        .Q(uuid_stamp[8]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[90] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[90]),
        .Q(uuid_stamp[90]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[91] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[91]),
        .Q(uuid_stamp[91]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[92] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[92]),
        .Q(uuid_stamp[92]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[93] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[93]),
        .Q(uuid_stamp[93]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[94] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[94]),
        .Q(uuid_stamp[94]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[95] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[95]),
        .Q(uuid_stamp[95]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[96] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[96]),
        .Q(uuid_stamp[96]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[97] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[97]),
        .Q(uuid_stamp[97]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[98] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[98]),
        .Q(uuid_stamp[98]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[99] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[99]),
        .Q(uuid_stamp[99]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[9] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[9]),
        .Q(uuid_stamp[9]),
        .R(1'b0));
endmodule

(* C_BUILD_REVISION = "0" *) (* C_CORE_INFO1 = "128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) (* C_CORE_INFO2 = "128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
(* C_CORE_MAJOR_VER = "3" *) (* C_CORE_MINOR_VER = "0" *) (* C_CORE_TYPE = "16'b0000000000000100" *) 
(* C_CSE_DRV_VER = "16'b0000000000000001" *) (* C_MAJOR_VERSION = "2013" *) (* C_MINOR_VERSION = "3" *) 
(* C_NEXT_SLAVE = "0" *) (* C_PIPE_IFACE = "1" *) (* C_USE_TEST_REG = "1" *) 
(* C_XDEVICEFAMILY = "virtex7" *) (* C_XSDB_SLAVE_TYPE = "16'b0000010000010010" *) (* ORIG_REF_NAME = "xsdbs_v1_0_2_xsdbs" *) 
(* dont_touch = "true" *) 
module c2c_gth_in_system_ibert_0_xsdbs_v1_0_2_xsdbs__parameterized0
   (s_rst_o,
    s_dclk_o,
    s_den_o,
    s_dwe_o,
    s_daddr_o,
    s_di_o,
    sl_oport_o,
    s_do_i,
    sl_iport_i,
    s_drdy_i);
  output s_rst_o;
  output s_dclk_o;
  output s_den_o;
  output s_dwe_o;
  output [16:0]s_daddr_o;
  output [15:0]s_di_o;
  output [16:0]sl_oport_o;
  input [15:0]s_do_i;
  input [36:0]sl_iport_i;
  input s_drdy_i;

  wire \G_1PIPE_IFACE.s_den_r0 ;
  wire \G_1PIPE_IFACE.s_den_r_i_2_n_0 ;
  wire \G_1PIPE_IFACE.s_drdy_r_i_1_n_0 ;
  wire [15:0]p_0_in;
  wire [15:0]reg_do;
  wire \reg_do[0]_i_2_n_0 ;
  wire \reg_do[0]_i_3_n_0 ;
  wire \reg_do[0]_i_4_n_0 ;
  wire \reg_do[10]_i_2_n_0 ;
  wire \reg_do[10]_i_3_n_0 ;
  wire \reg_do[10]_i_4_n_0 ;
  wire \reg_do[10]_i_5_n_0 ;
  wire \reg_do[10]_i_6_n_0 ;
  wire \reg_do[10]_i_7_n_0 ;
  wire \reg_do[10]_i_8_n_0 ;
  wire \reg_do[11]_i_2_n_0 ;
  wire \reg_do[11]_i_3_n_0 ;
  wire \reg_do[12]_i_2_n_0 ;
  wire \reg_do[12]_i_3_n_0 ;
  wire \reg_do[13]_i_2_n_0 ;
  wire \reg_do[13]_i_3_n_0 ;
  wire \reg_do[14]_i_2_n_0 ;
  wire \reg_do[14]_i_3_n_0 ;
  wire \reg_do[15]_i_2_n_0 ;
  wire \reg_do[15]_i_3_n_0 ;
  wire \reg_do[15]_i_4_n_0 ;
  wire \reg_do[15]_i_5_n_0 ;
  wire \reg_do[15]_i_6_n_0 ;
  wire \reg_do[1]_i_2_n_0 ;
  wire \reg_do[1]_i_3_n_0 ;
  wire \reg_do[1]_i_4_n_0 ;
  wire \reg_do[1]_i_5_n_0 ;
  wire \reg_do[2]_i_2_n_0 ;
  wire \reg_do[2]_i_3_n_0 ;
  wire \reg_do[2]_i_4_n_0 ;
  wire \reg_do[3]_i_2_n_0 ;
  wire \reg_do[3]_i_3_n_0 ;
  wire \reg_do[3]_i_4_n_0 ;
  wire \reg_do[4]_i_2_n_0 ;
  wire \reg_do[4]_i_3_n_0 ;
  wire \reg_do[4]_i_4_n_0 ;
  wire \reg_do[4]_i_5_n_0 ;
  wire \reg_do[5]_i_2_n_0 ;
  wire \reg_do[5]_i_3_n_0 ;
  wire \reg_do[6]_i_2_n_0 ;
  wire \reg_do[6]_i_3_n_0 ;
  wire \reg_do[6]_i_4_n_0 ;
  wire \reg_do[7]_i_2_n_0 ;
  wire \reg_do[7]_i_3_n_0 ;
  wire \reg_do[7]_i_4_n_0 ;
  wire \reg_do[8]_i_2_n_0 ;
  wire \reg_do[8]_i_3_n_0 ;
  wire \reg_do[8]_i_4_n_0 ;
  wire \reg_do[9]_i_2_n_0 ;
  wire \reg_do[9]_i_3_n_0 ;
  wire \reg_do[9]_i_4_n_0 ;
  wire \reg_do[9]_i_5_n_0 ;
  wire \reg_do_reg_n_0_[0] ;
  wire \reg_do_reg_n_0_[10] ;
  wire \reg_do_reg_n_0_[11] ;
  wire \reg_do_reg_n_0_[12] ;
  wire \reg_do_reg_n_0_[13] ;
  wire \reg_do_reg_n_0_[14] ;
  wire \reg_do_reg_n_0_[15] ;
  wire \reg_do_reg_n_0_[1] ;
  wire \reg_do_reg_n_0_[2] ;
  wire \reg_do_reg_n_0_[3] ;
  wire \reg_do_reg_n_0_[4] ;
  wire \reg_do_reg_n_0_[5] ;
  wire \reg_do_reg_n_0_[6] ;
  wire \reg_do_reg_n_0_[7] ;
  wire \reg_do_reg_n_0_[8] ;
  wire \reg_do_reg_n_0_[9] ;
  wire reg_drdy;
  wire reg_drdy0;
  wire [15:0]reg_test;
  wire reg_test0;
  wire [16:0]s_daddr_o;
  wire s_den_o;
  wire [15:0]s_di_o;
  wire [15:0]s_do_i;
  wire s_drdy_i;
  wire s_dwe_o;
  wire [36:0]sl_iport_i;
  wire [16:0]sl_oport_o;
  (* DONT_TOUCH *) (* UUID = "1" *) wire [127:0]uuid_stamp;

  assign s_dclk_o = sl_iport_i[1];
  assign s_rst_o = sl_iport_i[0];
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[0] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[4]),
        .Q(s_daddr_o[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[10] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[14]),
        .Q(s_daddr_o[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[11] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[15]),
        .Q(s_daddr_o[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[12] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[16]),
        .Q(s_daddr_o[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[13] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[17]),
        .Q(s_daddr_o[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[14] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[18]),
        .Q(s_daddr_o[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[15] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[19]),
        .Q(s_daddr_o[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[16] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[20]),
        .Q(s_daddr_o[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[1] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[5]),
        .Q(s_daddr_o[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[2] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[6]),
        .Q(s_daddr_o[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[3] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[7]),
        .Q(s_daddr_o[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[4] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[8]),
        .Q(s_daddr_o[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[5] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[9]),
        .Q(s_daddr_o[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[6] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[10]),
        .Q(s_daddr_o[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[7] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[11]),
        .Q(s_daddr_o[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[8] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[12]),
        .Q(s_daddr_o[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_daddr_r_reg[9] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[13]),
        .Q(s_daddr_o[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT5 #(
    .INIT(32'h7FFF0000)) 
    \G_1PIPE_IFACE.s_den_r_i_1 
       (.I0(\G_1PIPE_IFACE.s_den_r_i_2_n_0 ),
        .I1(sl_iport_i[12]),
        .I2(sl_iport_i[13]),
        .I3(sl_iport_i[14]),
        .I4(sl_iport_i[2]),
        .O(\G_1PIPE_IFACE.s_den_r0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \G_1PIPE_IFACE.s_den_r_i_2 
       (.I0(sl_iport_i[15]),
        .I1(sl_iport_i[16]),
        .I2(sl_iport_i[17]),
        .I3(sl_iport_i[18]),
        .I4(sl_iport_i[20]),
        .I5(sl_iport_i[19]),
        .O(\G_1PIPE_IFACE.s_den_r_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_den_r_reg 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(\G_1PIPE_IFACE.s_den_r0 ),
        .Q(s_den_o),
        .R(sl_iport_i[0]));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[0] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[21]),
        .Q(s_di_o[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[10] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[31]),
        .Q(s_di_o[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[11] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[32]),
        .Q(s_di_o[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[12] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[33]),
        .Q(s_di_o[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[13] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[34]),
        .Q(s_di_o[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[14] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[35]),
        .Q(s_di_o[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[15] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[36]),
        .Q(s_di_o[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[1] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[22]),
        .Q(s_di_o[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[2] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[23]),
        .Q(s_di_o[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[3] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[24]),
        .Q(s_di_o[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[4] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[25]),
        .Q(s_di_o[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[5] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[26]),
        .Q(s_di_o[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[6] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[27]),
        .Q(s_di_o[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[7] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[28]),
        .Q(s_di_o[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[8] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[29]),
        .Q(s_di_o[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_di_r_reg[9] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[30]),
        .Q(s_di_o[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[0]_i_1 
       (.I0(\reg_do_reg_n_0_[0] ),
        .I1(s_do_i[0]),
        .I2(reg_drdy),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[10]_i_1 
       (.I0(\reg_do_reg_n_0_[10] ),
        .I1(s_do_i[10]),
        .I2(reg_drdy),
        .O(p_0_in[10]));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[11]_i_1 
       (.I0(\reg_do_reg_n_0_[11] ),
        .I1(s_do_i[11]),
        .I2(reg_drdy),
        .O(p_0_in[11]));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[12]_i_1 
       (.I0(\reg_do_reg_n_0_[12] ),
        .I1(s_do_i[12]),
        .I2(reg_drdy),
        .O(p_0_in[12]));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[13]_i_1 
       (.I0(\reg_do_reg_n_0_[13] ),
        .I1(s_do_i[13]),
        .I2(reg_drdy),
        .O(p_0_in[13]));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[14]_i_1 
       (.I0(\reg_do_reg_n_0_[14] ),
        .I1(s_do_i[14]),
        .I2(reg_drdy),
        .O(p_0_in[14]));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[15]_i_1 
       (.I0(\reg_do_reg_n_0_[15] ),
        .I1(s_do_i[15]),
        .I2(reg_drdy),
        .O(p_0_in[15]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[1]_i_1 
       (.I0(\reg_do_reg_n_0_[1] ),
        .I1(s_do_i[1]),
        .I2(reg_drdy),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[2]_i_1 
       (.I0(\reg_do_reg_n_0_[2] ),
        .I1(s_do_i[2]),
        .I2(reg_drdy),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[3]_i_1 
       (.I0(\reg_do_reg_n_0_[3] ),
        .I1(s_do_i[3]),
        .I2(reg_drdy),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[4]_i_1 
       (.I0(\reg_do_reg_n_0_[4] ),
        .I1(s_do_i[4]),
        .I2(reg_drdy),
        .O(p_0_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[5]_i_1 
       (.I0(\reg_do_reg_n_0_[5] ),
        .I1(s_do_i[5]),
        .I2(reg_drdy),
        .O(p_0_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[6]_i_1 
       (.I0(\reg_do_reg_n_0_[6] ),
        .I1(s_do_i[6]),
        .I2(reg_drdy),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[7]_i_1 
       (.I0(\reg_do_reg_n_0_[7] ),
        .I1(s_do_i[7]),
        .I2(reg_drdy),
        .O(p_0_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[8]_i_1 
       (.I0(\reg_do_reg_n_0_[8] ),
        .I1(s_do_i[8]),
        .I2(reg_drdy),
        .O(p_0_in[8]));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \G_1PIPE_IFACE.s_do_r[9]_i_1 
       (.I0(\reg_do_reg_n_0_[9] ),
        .I1(s_do_i[9]),
        .I2(reg_drdy),
        .O(p_0_in[9]));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[0] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[0]),
        .Q(sl_oport_o[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[10] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[10]),
        .Q(sl_oport_o[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[11] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[11]),
        .Q(sl_oport_o[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[12] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[12]),
        .Q(sl_oport_o[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[13] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[13]),
        .Q(sl_oport_o[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[14] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[14]),
        .Q(sl_oport_o[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[15] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[15]),
        .Q(sl_oport_o[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[1] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[1]),
        .Q(sl_oport_o[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[2] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[2]),
        .Q(sl_oport_o[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[3] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[3]),
        .Q(sl_oport_o[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[4] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[4]),
        .Q(sl_oport_o[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[5] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[5]),
        .Q(sl_oport_o[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[6] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[6]),
        .Q(sl_oport_o[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[7] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[7]),
        .Q(sl_oport_o[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[8] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[8]),
        .Q(sl_oport_o[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_do_r_reg[9] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(p_0_in[9]),
        .Q(sl_oport_o[10]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    \G_1PIPE_IFACE.s_drdy_r_i_1 
       (.I0(s_drdy_i),
        .I1(reg_drdy),
        .O(\G_1PIPE_IFACE.s_drdy_r_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_drdy_r_reg 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(\G_1PIPE_IFACE.s_drdy_r_i_1_n_0 ),
        .Q(sl_oport_o[0]),
        .R(sl_iport_i[0]));
  FDRE #(
    .INIT(1'b0)) 
    \G_1PIPE_IFACE.s_dwe_r_reg 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(sl_iport_i[3]),
        .Q(s_dwe_o),
        .R(sl_iport_i[0]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \reg_do[0]_i_1 
       (.I0(\reg_do[15]_i_2_n_0 ),
        .I1(\reg_do[0]_i_2_n_0 ),
        .I2(\reg_do[15]_i_4_n_0 ),
        .I3(\reg_do[0]_i_3_n_0 ),
        .I4(\reg_do[0]_i_4_n_0 ),
        .I5(\reg_do[9]_i_5_n_0 ),
        .O(reg_do[0]));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[0]_i_2 
       (.I0(uuid_stamp[16]),
        .I1(uuid_stamp[48]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[0]),
        .I5(uuid_stamp[32]),
        .O(\reg_do[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[0]_i_3 
       (.I0(uuid_stamp[80]),
        .I1(uuid_stamp[112]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[64]),
        .I5(uuid_stamp[96]),
        .O(\reg_do[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h5555555530FF1055)) 
    \reg_do[0]_i_4 
       (.I0(sl_iport_i[5]),
        .I1(sl_iport_i[7]),
        .I2(sl_iport_i[6]),
        .I3(sl_iport_i[8]),
        .I4(reg_test[0]),
        .I5(sl_iport_i[4]),
        .O(\reg_do[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFAFAEAAAAAAAE)) 
    \reg_do[10]_i_2 
       (.I0(\reg_do[10]_i_4_n_0 ),
        .I1(\reg_do[10]_i_5_n_0 ),
        .I2(sl_iport_i[7]),
        .I3(sl_iport_i[6]),
        .I4(sl_iport_i[8]),
        .I5(\reg_do[10]_i_6_n_0 ),
        .O(\reg_do[10]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAEFAAAAF)) 
    \reg_do[10]_i_3 
       (.I0(\reg_do[10]_i_7_n_0 ),
        .I1(reg_test[10]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(\reg_do[10]_i_8_n_0 ),
        .O(\reg_do[10]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \reg_do[10]_i_4 
       (.I0(sl_iport_i[8]),
        .I1(sl_iport_i[9]),
        .I2(sl_iport_i[10]),
        .O(\reg_do[10]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[10]_i_5 
       (.I0(uuid_stamp[26]),
        .I1(uuid_stamp[58]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[10]),
        .I5(uuid_stamp[42]),
        .O(\reg_do[10]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[10]_i_6 
       (.I0(uuid_stamp[90]),
        .I1(uuid_stamp[122]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[74]),
        .I5(uuid_stamp[106]),
        .O(\reg_do[10]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT4 #(
    .INIT(16'hDFFF)) 
    \reg_do[10]_i_7 
       (.I0(sl_iport_i[9]),
        .I1(sl_iport_i[7]),
        .I2(sl_iport_i[8]),
        .I3(sl_iport_i[10]),
        .O(\reg_do[10]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \reg_do[10]_i_8 
       (.I0(sl_iport_i[7]),
        .I1(sl_iport_i[6]),
        .I2(sl_iport_i[8]),
        .O(\reg_do[10]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \reg_do[11]_i_1 
       (.I0(\reg_do[15]_i_2_n_0 ),
        .I1(\reg_do[11]_i_2_n_0 ),
        .I2(\reg_do[15]_i_4_n_0 ),
        .I3(\reg_do[11]_i_3_n_0 ),
        .I4(reg_test[11]),
        .I5(\reg_do[15]_i_6_n_0 ),
        .O(reg_do[11]));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[11]_i_2 
       (.I0(uuid_stamp[27]),
        .I1(uuid_stamp[59]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[11]),
        .I5(uuid_stamp[43]),
        .O(\reg_do[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[11]_i_3 
       (.I0(uuid_stamp[91]),
        .I1(uuid_stamp[123]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[75]),
        .I5(uuid_stamp[107]),
        .O(\reg_do[11]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \reg_do[12]_i_1 
       (.I0(\reg_do[15]_i_2_n_0 ),
        .I1(\reg_do[12]_i_2_n_0 ),
        .I2(\reg_do[15]_i_4_n_0 ),
        .I3(\reg_do[12]_i_3_n_0 ),
        .I4(reg_test[12]),
        .I5(\reg_do[15]_i_6_n_0 ),
        .O(reg_do[12]));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[12]_i_2 
       (.I0(uuid_stamp[28]),
        .I1(uuid_stamp[60]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[12]),
        .I5(uuid_stamp[44]),
        .O(\reg_do[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[12]_i_3 
       (.I0(uuid_stamp[92]),
        .I1(uuid_stamp[124]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[76]),
        .I5(uuid_stamp[108]),
        .O(\reg_do[12]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \reg_do[13]_i_1 
       (.I0(\reg_do[15]_i_2_n_0 ),
        .I1(\reg_do[13]_i_2_n_0 ),
        .I2(\reg_do[15]_i_4_n_0 ),
        .I3(\reg_do[13]_i_3_n_0 ),
        .I4(reg_test[13]),
        .I5(\reg_do[15]_i_6_n_0 ),
        .O(reg_do[13]));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[13]_i_2 
       (.I0(uuid_stamp[29]),
        .I1(uuid_stamp[61]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[13]),
        .I5(uuid_stamp[45]),
        .O(\reg_do[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[13]_i_3 
       (.I0(uuid_stamp[93]),
        .I1(uuid_stamp[125]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[77]),
        .I5(uuid_stamp[109]),
        .O(\reg_do[13]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \reg_do[14]_i_1 
       (.I0(\reg_do[15]_i_2_n_0 ),
        .I1(\reg_do[14]_i_2_n_0 ),
        .I2(\reg_do[15]_i_4_n_0 ),
        .I3(\reg_do[14]_i_3_n_0 ),
        .I4(reg_test[14]),
        .I5(\reg_do[15]_i_6_n_0 ),
        .O(reg_do[14]));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[14]_i_2 
       (.I0(uuid_stamp[30]),
        .I1(uuid_stamp[62]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[14]),
        .I5(uuid_stamp[46]),
        .O(\reg_do[14]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[14]_i_3 
       (.I0(uuid_stamp[94]),
        .I1(uuid_stamp[126]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[78]),
        .I5(uuid_stamp[110]),
        .O(\reg_do[14]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \reg_do[15]_i_1 
       (.I0(\reg_do[15]_i_2_n_0 ),
        .I1(\reg_do[15]_i_3_n_0 ),
        .I2(\reg_do[15]_i_4_n_0 ),
        .I3(\reg_do[15]_i_5_n_0 ),
        .I4(reg_test[15]),
        .I5(\reg_do[15]_i_6_n_0 ),
        .O(reg_do[15]));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \reg_do[15]_i_2 
       (.I0(sl_iport_i[10]),
        .I1(sl_iport_i[9]),
        .I2(sl_iport_i[11]),
        .I3(sl_iport_i[8]),
        .I4(sl_iport_i[6]),
        .I5(sl_iport_i[7]),
        .O(\reg_do[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[15]_i_3 
       (.I0(uuid_stamp[31]),
        .I1(uuid_stamp[63]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[15]),
        .I5(uuid_stamp[47]),
        .O(\reg_do[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    \reg_do[15]_i_4 
       (.I0(sl_iport_i[10]),
        .I1(sl_iport_i[9]),
        .I2(sl_iport_i[11]),
        .I3(sl_iport_i[8]),
        .I4(sl_iport_i[6]),
        .I5(sl_iport_i[7]),
        .O(\reg_do[15]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[15]_i_5 
       (.I0(uuid_stamp[95]),
        .I1(uuid_stamp[127]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[79]),
        .I5(uuid_stamp[111]),
        .O(\reg_do[15]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00004F0000000000)) 
    \reg_do[15]_i_6 
       (.I0(sl_iport_i[7]),
        .I1(sl_iport_i[6]),
        .I2(sl_iport_i[8]),
        .I3(sl_iport_i[5]),
        .I4(sl_iport_i[4]),
        .I5(\reg_do[9]_i_5_n_0 ),
        .O(\reg_do[15]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFAFAEAAAAAAAE)) 
    \reg_do[1]_i_2 
       (.I0(\reg_do[10]_i_4_n_0 ),
        .I1(\reg_do[1]_i_4_n_0 ),
        .I2(sl_iport_i[7]),
        .I3(sl_iport_i[6]),
        .I4(sl_iport_i[8]),
        .I5(\reg_do[1]_i_5_n_0 ),
        .O(\reg_do[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAAAAEAFF)) 
    \reg_do[1]_i_3 
       (.I0(\reg_do[10]_i_7_n_0 ),
        .I1(reg_test[1]),
        .I2(\reg_do[10]_i_8_n_0 ),
        .I3(sl_iport_i[5]),
        .I4(sl_iport_i[4]),
        .O(\reg_do[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[1]_i_4 
       (.I0(uuid_stamp[17]),
        .I1(uuid_stamp[49]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[1]),
        .I5(uuid_stamp[33]),
        .O(\reg_do[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[1]_i_5 
       (.I0(uuid_stamp[81]),
        .I1(uuid_stamp[113]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[65]),
        .I5(uuid_stamp[97]),
        .O(\reg_do[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \reg_do[2]_i_1 
       (.I0(\reg_do[15]_i_2_n_0 ),
        .I1(\reg_do[2]_i_2_n_0 ),
        .I2(\reg_do[15]_i_4_n_0 ),
        .I3(\reg_do[2]_i_3_n_0 ),
        .I4(\reg_do[2]_i_4_n_0 ),
        .I5(\reg_do[9]_i_5_n_0 ),
        .O(reg_do[2]));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[2]_i_2 
       (.I0(uuid_stamp[18]),
        .I1(uuid_stamp[50]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[2]),
        .I5(uuid_stamp[34]),
        .O(\reg_do[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[2]_i_3 
       (.I0(uuid_stamp[82]),
        .I1(uuid_stamp[114]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[66]),
        .I5(uuid_stamp[98]),
        .O(\reg_do[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h000030FFEFAA0000)) 
    \reg_do[2]_i_4 
       (.I0(reg_test[2]),
        .I1(sl_iport_i[7]),
        .I2(sl_iport_i[6]),
        .I3(sl_iport_i[8]),
        .I4(sl_iport_i[5]),
        .I5(sl_iport_i[4]),
        .O(\reg_do[2]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \reg_do[3]_i_1 
       (.I0(\reg_do[3]_i_2_n_0 ),
        .I1(\reg_do[15]_i_2_n_0 ),
        .I2(\reg_do[3]_i_3_n_0 ),
        .I3(\reg_do[15]_i_4_n_0 ),
        .I4(\reg_do[3]_i_4_n_0 ),
        .O(reg_do[3]));
  LUT5 #(
    .INIT(32'h0C800000)) 
    \reg_do[3]_i_2 
       (.I0(reg_test[3]),
        .I1(\reg_do[10]_i_8_n_0 ),
        .I2(sl_iport_i[5]),
        .I3(sl_iport_i[4]),
        .I4(\reg_do[9]_i_5_n_0 ),
        .O(\reg_do[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[3]_i_3 
       (.I0(uuid_stamp[19]),
        .I1(uuid_stamp[51]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[3]),
        .I5(uuid_stamp[35]),
        .O(\reg_do[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[3]_i_4 
       (.I0(uuid_stamp[83]),
        .I1(uuid_stamp[115]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[67]),
        .I5(uuid_stamp[99]),
        .O(\reg_do[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFAFAEAAAAAAAE)) 
    \reg_do[4]_i_2 
       (.I0(\reg_do[10]_i_4_n_0 ),
        .I1(\reg_do[4]_i_4_n_0 ),
        .I2(sl_iport_i[7]),
        .I3(sl_iport_i[6]),
        .I4(sl_iport_i[8]),
        .I5(\reg_do[4]_i_5_n_0 ),
        .O(\reg_do[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAEFAAAAF)) 
    \reg_do[4]_i_3 
       (.I0(\reg_do[10]_i_7_n_0 ),
        .I1(reg_test[4]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(\reg_do[10]_i_8_n_0 ),
        .O(\reg_do[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[4]_i_4 
       (.I0(uuid_stamp[20]),
        .I1(uuid_stamp[52]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[4]),
        .I5(uuid_stamp[36]),
        .O(\reg_do[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[4]_i_5 
       (.I0(uuid_stamp[84]),
        .I1(uuid_stamp[116]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[68]),
        .I5(uuid_stamp[100]),
        .O(\reg_do[4]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \reg_do[5]_i_1 
       (.I0(\reg_do[15]_i_2_n_0 ),
        .I1(\reg_do[5]_i_2_n_0 ),
        .I2(\reg_do[15]_i_4_n_0 ),
        .I3(\reg_do[5]_i_3_n_0 ),
        .I4(reg_test[5]),
        .I5(\reg_do[15]_i_6_n_0 ),
        .O(reg_do[5]));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[5]_i_2 
       (.I0(uuid_stamp[21]),
        .I1(uuid_stamp[53]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[5]),
        .I5(uuid_stamp[37]),
        .O(\reg_do[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[5]_i_3 
       (.I0(uuid_stamp[85]),
        .I1(uuid_stamp[117]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[69]),
        .I5(uuid_stamp[101]),
        .O(\reg_do[5]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \reg_do[6]_i_1 
       (.I0(\reg_do[6]_i_2_n_0 ),
        .I1(\reg_do[15]_i_2_n_0 ),
        .I2(\reg_do[6]_i_3_n_0 ),
        .I3(\reg_do[15]_i_4_n_0 ),
        .I4(\reg_do[6]_i_4_n_0 ),
        .O(reg_do[6]));
  LUT5 #(
    .INIT(32'h0C800000)) 
    \reg_do[6]_i_2 
       (.I0(reg_test[6]),
        .I1(\reg_do[10]_i_8_n_0 ),
        .I2(sl_iport_i[5]),
        .I3(sl_iport_i[4]),
        .I4(\reg_do[9]_i_5_n_0 ),
        .O(\reg_do[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[6]_i_3 
       (.I0(uuid_stamp[22]),
        .I1(uuid_stamp[54]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[6]),
        .I5(uuid_stamp[38]),
        .O(\reg_do[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[6]_i_4 
       (.I0(uuid_stamp[86]),
        .I1(uuid_stamp[118]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[70]),
        .I5(uuid_stamp[102]),
        .O(\reg_do[6]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \reg_do[7]_i_1 
       (.I0(\reg_do[7]_i_2_n_0 ),
        .I1(\reg_do[15]_i_2_n_0 ),
        .I2(\reg_do[7]_i_3_n_0 ),
        .I3(\reg_do[15]_i_4_n_0 ),
        .I4(\reg_do[7]_i_4_n_0 ),
        .O(reg_do[7]));
  LUT5 #(
    .INIT(32'h0C800000)) 
    \reg_do[7]_i_2 
       (.I0(reg_test[7]),
        .I1(\reg_do[10]_i_8_n_0 ),
        .I2(sl_iport_i[5]),
        .I3(sl_iport_i[4]),
        .I4(\reg_do[9]_i_5_n_0 ),
        .O(\reg_do[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[7]_i_3 
       (.I0(uuid_stamp[23]),
        .I1(uuid_stamp[55]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[7]),
        .I5(uuid_stamp[39]),
        .O(\reg_do[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[7]_i_4 
       (.I0(uuid_stamp[87]),
        .I1(uuid_stamp[119]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[71]),
        .I5(uuid_stamp[103]),
        .O(\reg_do[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \reg_do[8]_i_1 
       (.I0(\reg_do[15]_i_2_n_0 ),
        .I1(\reg_do[8]_i_2_n_0 ),
        .I2(\reg_do[15]_i_4_n_0 ),
        .I3(\reg_do[8]_i_3_n_0 ),
        .I4(\reg_do[8]_i_4_n_0 ),
        .I5(\reg_do[9]_i_5_n_0 ),
        .O(reg_do[8]));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[8]_i_2 
       (.I0(uuid_stamp[24]),
        .I1(uuid_stamp[56]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[8]),
        .I5(uuid_stamp[40]),
        .O(\reg_do[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[8]_i_3 
       (.I0(uuid_stamp[88]),
        .I1(uuid_stamp[120]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[72]),
        .I5(uuid_stamp[104]),
        .O(\reg_do[8]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9A559A5530FF1055)) 
    \reg_do[8]_i_4 
       (.I0(sl_iport_i[5]),
        .I1(sl_iport_i[7]),
        .I2(sl_iport_i[6]),
        .I3(sl_iport_i[8]),
        .I4(reg_test[8]),
        .I5(sl_iport_i[4]),
        .O(\reg_do[8]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \reg_do[9]_i_1 
       (.I0(\reg_do[15]_i_2_n_0 ),
        .I1(\reg_do[9]_i_2_n_0 ),
        .I2(\reg_do[15]_i_4_n_0 ),
        .I3(\reg_do[9]_i_3_n_0 ),
        .I4(\reg_do[9]_i_4_n_0 ),
        .I5(\reg_do[9]_i_5_n_0 ),
        .O(reg_do[9]));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[9]_i_2 
       (.I0(uuid_stamp[25]),
        .I1(uuid_stamp[57]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[9]),
        .I5(uuid_stamp[41]),
        .O(\reg_do[9]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \reg_do[9]_i_3 
       (.I0(uuid_stamp[89]),
        .I1(uuid_stamp[121]),
        .I2(sl_iport_i[4]),
        .I3(sl_iport_i[5]),
        .I4(uuid_stamp[73]),
        .I5(uuid_stamp[105]),
        .O(\reg_do[9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hCF0030FF20AA0000)) 
    \reg_do[9]_i_4 
       (.I0(reg_test[9]),
        .I1(sl_iport_i[7]),
        .I2(sl_iport_i[6]),
        .I3(sl_iport_i[8]),
        .I4(sl_iport_i[5]),
        .I5(sl_iport_i[4]),
        .O(\reg_do[9]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    \reg_do[9]_i_5 
       (.I0(sl_iport_i[11]),
        .I1(sl_iport_i[10]),
        .I2(sl_iport_i[8]),
        .I3(sl_iport_i[7]),
        .I4(sl_iport_i[9]),
        .O(\reg_do[9]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[0] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[0]),
        .Q(\reg_do_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[10] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[10]),
        .Q(\reg_do_reg_n_0_[10] ),
        .R(1'b0));
  MUXF7 \reg_do_reg[10]_i_1 
       (.I0(\reg_do[10]_i_2_n_0 ),
        .I1(\reg_do[10]_i_3_n_0 ),
        .O(reg_do[10]),
        .S(sl_iport_i[11]));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[11] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[11]),
        .Q(\reg_do_reg_n_0_[11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[12] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[12]),
        .Q(\reg_do_reg_n_0_[12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[13] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[13]),
        .Q(\reg_do_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[14] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[14]),
        .Q(\reg_do_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[15] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[15]),
        .Q(\reg_do_reg_n_0_[15] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[1] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[1]),
        .Q(\reg_do_reg_n_0_[1] ),
        .R(1'b0));
  MUXF7 \reg_do_reg[1]_i_1 
       (.I0(\reg_do[1]_i_2_n_0 ),
        .I1(\reg_do[1]_i_3_n_0 ),
        .O(reg_do[1]),
        .S(sl_iport_i[11]));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[2] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[2]),
        .Q(\reg_do_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[3] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[3]),
        .Q(\reg_do_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[4] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[4]),
        .Q(\reg_do_reg_n_0_[4] ),
        .R(1'b0));
  MUXF7 \reg_do_reg[4]_i_1 
       (.I0(\reg_do[4]_i_2_n_0 ),
        .I1(\reg_do[4]_i_3_n_0 ),
        .O(reg_do[4]),
        .S(sl_iport_i[11]));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[5] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[5]),
        .Q(\reg_do_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[6] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[6]),
        .Q(\reg_do_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[7] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[7]),
        .Q(\reg_do_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[8] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[8]),
        .Q(\reg_do_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_do_reg[9] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_do[9]),
        .Q(\reg_do_reg_n_0_[9] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    reg_drdy_i_1
       (.I0(\G_1PIPE_IFACE.s_den_r_i_2_n_0 ),
        .I1(sl_iport_i[12]),
        .I2(sl_iport_i[13]),
        .I3(sl_iport_i[14]),
        .I4(sl_iport_i[2]),
        .O(reg_drdy0));
  FDRE #(
    .INIT(1'b0)) 
    reg_drdy_reg
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(reg_drdy0),
        .Q(reg_drdy),
        .R(sl_iport_i[0]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \reg_test[15]_i_1 
       (.I0(\G_1PIPE_IFACE.s_den_r_i_2_n_0 ),
        .I1(sl_iport_i[12]),
        .I2(sl_iport_i[13]),
        .I3(sl_iport_i[14]),
        .I4(sl_iport_i[3]),
        .I5(sl_iport_i[2]),
        .O(reg_test0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[0] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[21]),
        .Q(reg_test[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[10] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[31]),
        .Q(reg_test[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[11] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[32]),
        .Q(reg_test[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[12] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[33]),
        .Q(reg_test[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[13] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[34]),
        .Q(reg_test[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[14] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[35]),
        .Q(reg_test[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[15] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[36]),
        .Q(reg_test[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[1] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[22]),
        .Q(reg_test[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[2] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[23]),
        .Q(reg_test[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[3] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[24]),
        .Q(reg_test[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[4] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[25]),
        .Q(reg_test[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[5] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[26]),
        .Q(reg_test[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[6] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[27]),
        .Q(reg_test[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[7] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[28]),
        .Q(reg_test[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[8] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[29]),
        .Q(reg_test[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reg_test_reg[9] 
       (.C(sl_iport_i[1]),
        .CE(reg_test0),
        .D(sl_iport_i[30]),
        .Q(reg_test[9]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[0] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[0]),
        .Q(uuid_stamp[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[100] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[100]),
        .Q(uuid_stamp[100]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[101] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[101]),
        .Q(uuid_stamp[101]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[102] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[102]),
        .Q(uuid_stamp[102]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[103] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[103]),
        .Q(uuid_stamp[103]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[104] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[104]),
        .Q(uuid_stamp[104]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[105] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[105]),
        .Q(uuid_stamp[105]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[106] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[106]),
        .Q(uuid_stamp[106]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[107] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[107]),
        .Q(uuid_stamp[107]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[108] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[108]),
        .Q(uuid_stamp[108]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[109] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[109]),
        .Q(uuid_stamp[109]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[10] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[10]),
        .Q(uuid_stamp[10]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[110] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[110]),
        .Q(uuid_stamp[110]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[111] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[111]),
        .Q(uuid_stamp[111]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[112] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[112]),
        .Q(uuid_stamp[112]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[113] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[113]),
        .Q(uuid_stamp[113]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[114] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[114]),
        .Q(uuid_stamp[114]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[115] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[115]),
        .Q(uuid_stamp[115]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[116] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[116]),
        .Q(uuid_stamp[116]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[117] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[117]),
        .Q(uuid_stamp[117]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[118] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[118]),
        .Q(uuid_stamp[118]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[119] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[119]),
        .Q(uuid_stamp[119]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[11] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[11]),
        .Q(uuid_stamp[11]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[120] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[120]),
        .Q(uuid_stamp[120]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[121] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[121]),
        .Q(uuid_stamp[121]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[122] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[122]),
        .Q(uuid_stamp[122]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[123] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[123]),
        .Q(uuid_stamp[123]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[124] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[124]),
        .Q(uuid_stamp[124]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[125] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[125]),
        .Q(uuid_stamp[125]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[126] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[126]),
        .Q(uuid_stamp[126]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[127] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[127]),
        .Q(uuid_stamp[127]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[12] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[12]),
        .Q(uuid_stamp[12]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[13] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[13]),
        .Q(uuid_stamp[13]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[14] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[14]),
        .Q(uuid_stamp[14]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[15] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[15]),
        .Q(uuid_stamp[15]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[16] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[16]),
        .Q(uuid_stamp[16]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[17] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[17]),
        .Q(uuid_stamp[17]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[18] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[18]),
        .Q(uuid_stamp[18]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[19] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[19]),
        .Q(uuid_stamp[19]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[1] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[1]),
        .Q(uuid_stamp[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[20] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[20]),
        .Q(uuid_stamp[20]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[21] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[21]),
        .Q(uuid_stamp[21]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[22] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[22]),
        .Q(uuid_stamp[22]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[23] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[23]),
        .Q(uuid_stamp[23]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[24] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[24]),
        .Q(uuid_stamp[24]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[25] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[25]),
        .Q(uuid_stamp[25]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[26] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[26]),
        .Q(uuid_stamp[26]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[27] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[27]),
        .Q(uuid_stamp[27]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[28] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[28]),
        .Q(uuid_stamp[28]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[29] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[29]),
        .Q(uuid_stamp[29]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[2] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[2]),
        .Q(uuid_stamp[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[30] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[30]),
        .Q(uuid_stamp[30]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[31] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[31]),
        .Q(uuid_stamp[31]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[32] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[32]),
        .Q(uuid_stamp[32]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[33] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[33]),
        .Q(uuid_stamp[33]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[34] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[34]),
        .Q(uuid_stamp[34]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[35] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[35]),
        .Q(uuid_stamp[35]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[36] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[36]),
        .Q(uuid_stamp[36]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[37] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[37]),
        .Q(uuid_stamp[37]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[38] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[38]),
        .Q(uuid_stamp[38]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[39] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[39]),
        .Q(uuid_stamp[39]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[3] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[3]),
        .Q(uuid_stamp[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[40] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[40]),
        .Q(uuid_stamp[40]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[41] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[41]),
        .Q(uuid_stamp[41]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[42] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[42]),
        .Q(uuid_stamp[42]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[43] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[43]),
        .Q(uuid_stamp[43]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[44] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[44]),
        .Q(uuid_stamp[44]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[45] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[45]),
        .Q(uuid_stamp[45]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[46] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[46]),
        .Q(uuid_stamp[46]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[47] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[47]),
        .Q(uuid_stamp[47]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[48] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[48]),
        .Q(uuid_stamp[48]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[49] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[49]),
        .Q(uuid_stamp[49]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[4] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[4]),
        .Q(uuid_stamp[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[50] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[50]),
        .Q(uuid_stamp[50]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[51] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[51]),
        .Q(uuid_stamp[51]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[52] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[52]),
        .Q(uuid_stamp[52]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[53] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[53]),
        .Q(uuid_stamp[53]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[54] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[54]),
        .Q(uuid_stamp[54]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[55] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[55]),
        .Q(uuid_stamp[55]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[56] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[56]),
        .Q(uuid_stamp[56]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[57] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[57]),
        .Q(uuid_stamp[57]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[58] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[58]),
        .Q(uuid_stamp[58]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[59] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[59]),
        .Q(uuid_stamp[59]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[5] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[5]),
        .Q(uuid_stamp[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[60] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[60]),
        .Q(uuid_stamp[60]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[61] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[61]),
        .Q(uuid_stamp[61]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[62] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[62]),
        .Q(uuid_stamp[62]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[63] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[63]),
        .Q(uuid_stamp[63]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[64] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[64]),
        .Q(uuid_stamp[64]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[65] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[65]),
        .Q(uuid_stamp[65]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[66] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[66]),
        .Q(uuid_stamp[66]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[67] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[67]),
        .Q(uuid_stamp[67]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[68] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[68]),
        .Q(uuid_stamp[68]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[69] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[69]),
        .Q(uuid_stamp[69]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[6] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[6]),
        .Q(uuid_stamp[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[70] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[70]),
        .Q(uuid_stamp[70]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[71] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[71]),
        .Q(uuid_stamp[71]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[72] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[72]),
        .Q(uuid_stamp[72]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[73] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[73]),
        .Q(uuid_stamp[73]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[74] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[74]),
        .Q(uuid_stamp[74]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[75] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[75]),
        .Q(uuid_stamp[75]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[76] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[76]),
        .Q(uuid_stamp[76]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[77] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[77]),
        .Q(uuid_stamp[77]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[78] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[78]),
        .Q(uuid_stamp[78]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[79] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[79]),
        .Q(uuid_stamp[79]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[7] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[7]),
        .Q(uuid_stamp[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[80] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[80]),
        .Q(uuid_stamp[80]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[81] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[81]),
        .Q(uuid_stamp[81]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[82] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[82]),
        .Q(uuid_stamp[82]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[83] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[83]),
        .Q(uuid_stamp[83]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[84] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[84]),
        .Q(uuid_stamp[84]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[85] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[85]),
        .Q(uuid_stamp[85]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[86] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[86]),
        .Q(uuid_stamp[86]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[87] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[87]),
        .Q(uuid_stamp[87]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[88] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[88]),
        .Q(uuid_stamp[88]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[89] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[89]),
        .Q(uuid_stamp[89]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[8] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[8]),
        .Q(uuid_stamp[8]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[90] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[90]),
        .Q(uuid_stamp[90]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[91] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[91]),
        .Q(uuid_stamp[91]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[92] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[92]),
        .Q(uuid_stamp[92]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[93] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[93]),
        .Q(uuid_stamp[93]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[94] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[94]),
        .Q(uuid_stamp[94]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[95] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[95]),
        .Q(uuid_stamp[95]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[96] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[96]),
        .Q(uuid_stamp[96]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[97] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[97]),
        .Q(uuid_stamp[97]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[98] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[98]),
        .Q(uuid_stamp[98]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[99] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[99]),
        .Q(uuid_stamp[99]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* UUID = "1" *) 
  FDRE \uuid_stamp_reg[9] 
       (.C(sl_iport_i[1]),
        .CE(1'b1),
        .D(uuid_stamp[9]),
        .Q(uuid_stamp[9]),
        .R(1'b0));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;
    parameter GRES_WIDTH = 10000;
    parameter GRES_START = 10000;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    wire GRESTORE;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;
    reg GRESTORE_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;
    assign (strong1, weak0) GRESTORE = GRESTORE_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

    initial begin 
	GRESTORE_int = 1'b0;
	#(GRES_START);
	GRESTORE_int = 1'b1;
	#(GRES_WIDTH);
	GRESTORE_int = 1'b0;
    end

endmodule
`endif
