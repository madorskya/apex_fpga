-- Address decode logic for ipbus fabric
-- 
-- This file has been AUTOGENERATED from the address table - do not hand edit
-- 
-- We assume the synthesis tool is clever enough to recognise exclusive conditions
-- in the if statement.
-- 
-- Dave Newbold, February 2011

library IEEE;
use IEEE.STD_LOGIC_1164.all;
use ieee.numeric_std.all;

package ipbus_decode_partition_manager is

  constant IPBUS_SEL_WIDTH: positive := 3;
  subtype ipbus_sel_t is std_logic_vector(IPBUS_SEL_WIDTH - 1 downto 0);
  function ipbus_sel_partition_manager(addr : in std_logic_vector(31 downto 0)) return ipbus_sel_t;

-- START automatically generated VHDL (Sat Jan 30 14:53:18 2021)
  constant N_SLV_CSR_MAIN: integer := 0;
  constant N_SLV_CSR_TTS2: integer := 1;
  constant N_SLV_SPY_TTC2: integer := 2;
  constant N_SLV_SPY_TTS2: integer := 3;
  constant N_SLAVES: integer := 4;
-- END automatically generated VHDL

    
end ipbus_decode_partition_manager;

package body ipbus_decode_partition_manager is

  function ipbus_sel_partition_manager(addr : in std_logic_vector(31 downto 0)) return ipbus_sel_t is
    variable sel: ipbus_sel_t;
  begin

-- START automatically generated VHDL (Sat Jan 30 14:53:18 2021)
    if    std_match(addr, "-------------------------000----") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_CSR_MAIN, IPBUS_SEL_WIDTH)); -- csr_main / base 0x00000000 / mask 0x00000070
    elsif std_match(addr, "-------------------------01-----") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_CSR_TTS2, IPBUS_SEL_WIDTH)); -- csr_tts2 / base 0x00000020 / mask 0x00000060
    elsif std_match(addr, "-------------------------101----") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_SPY_TTC2, IPBUS_SEL_WIDTH)); -- spy_ttc2 / base 0x00000050 / mask 0x00000070
    elsif std_match(addr, "-------------------------110----") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_SPY_TTS2, IPBUS_SEL_WIDTH)); -- spy_tts2 / base 0x00000060 / mask 0x00000070
-- END automatically generated VHDL

    else
        sel := ipbus_sel_t(to_unsigned(N_SLAVES, IPBUS_SEL_WIDTH));
    end if;

    return sel;

  end function ipbus_sel_partition_manager;

end ipbus_decode_partition_manager;

